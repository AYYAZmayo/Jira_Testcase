/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.05
Build    : 1.0.45
Hash     : c0750e5
Date     : May  2 2024
Type     : Engineering
Log Time   : Thu May  2 07:08:12 2024 GMT

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 24ed610c2, gcc 11.2.1 -fPIC -Os)


-- Executing script file `design122_12_5_top.ys' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../../../../.././rtl/full_adder_top.v
Parsing Verilog input from `../../../../.././rtl/full_adder_top.v' to AST representation.
Generating RTLIL representation for module `\full_adder_top'.
Generating RTLIL representation for module `\full_adder'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../../../../.././rtl/large_mux.v
Parsing Verilog input from `../../../../.././rtl/large_mux.v' to AST representation.
Generating RTLIL representation for module `\large_mux'.
Note: Assuming pure combinatorial block at ../../../../.././rtl/large_mux.v:11.1-35.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../../../../.././rtl/register.v
Parsing Verilog input from `../../../../.././rtl/register.v' to AST representation.
Generating RTLIL representation for module `\register'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../../../../.././rtl/memory_cntrl.v
Parsing Verilog input from `../../../../.././rtl/memory_cntrl.v' to AST representation.
Warning: Encountered `full_case' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using the Verilog `full_case' attribute or the SystemVerilog `unique' or `unique0' keywords is recommended!
Generating RTLIL representation for module `\memory_cntrl'.
Generating RTLIL representation for module `\memory'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../../../../.././rtl/encoder.v
Parsing Verilog input from `../../../../.././rtl/encoder.v' to AST representation.
Generating RTLIL representation for module `\encoder'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v' to AST representation.
Generating RTLIL representation for module `\design122_12_5_top'.
Generating RTLIL representation for module `\design122_12_5'.
Successfully finished Verilog frontend.

8. Executing HIERARCHY pass (managing design hierarchy).

8.1. Analyzing design hierarchy..
Top module:  \design122_12_5_top
Used module:     \design122_12_5
Used module:         \memory_cntrl
Used module:             \memory
Used module:         \register
Used module:         \encoder
Used module:         \full_adder_top
Used module:             \full_adder
Used module:         \large_mux
Parameter \WIDTH = 32

8.2. Executing AST frontend in derive mode using pre-parsed AST for module `\full_adder'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

8.3. Executing AST frontend in derive mode using pre-parsed AST for module `\design122_12_5'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\design122_12_5\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

8.4. Executing AST frontend in derive mode using pre-parsed AST for module `\memory_cntrl'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

8.5. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

8.6. Executing AST frontend in derive mode using pre-parsed AST for module `\encoder'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

8.7. Executing AST frontend in derive mode using pre-parsed AST for module `\full_adder_top'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

8.8. Executing AST frontend in derive mode using pre-parsed AST for module `\large_mux'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Note: Assuming pure combinatorial block at ../../../../.././rtl/large_mux.v:11.1-35.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.

8.9. Analyzing design hierarchy..
Top module:  \design122_12_5_top
Used module:     $paramod\design122_12_5\WIDTH=s32'00000000000000000000000000100000
Used module:         \memory_cntrl
Used module:             \memory
Used module:         \register
Used module:         \encoder
Used module:         \full_adder_top
Used module:             $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         \large_mux
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.

8.10. Analyzing design hierarchy..
Top module:  \design122_12_5_top
Used module:     $paramod\design122_12_5\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000
Used module:             \memory
Used module:         $paramod\register\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\encoder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             \full_adder
Used module:         $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000'.

8.11. Analyzing design hierarchy..
Top module:  \design122_12_5_top
Used module:     $paramod\design122_12_5\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000
Used module:             \memory
Used module:         $paramod\register\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\encoder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000

8.12. Analyzing design hierarchy..
Top module:  \design122_12_5_top
Used module:     $paramod\design122_12_5\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000
Used module:             \memory
Used module:         $paramod\register\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\encoder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000
Removing unused module `\design122_12_5'.
Removing unused module `\encoder'.
Removing unused module `\memory_cntrl'.
Removing unused module `\register'.
Removing unused module `\large_mux'.
Removing unused module `\full_adder'.
Removing unused module `\full_adder_top'.
Removed 7 unused modules.

9. Executing synth_rs pass: v0.4.218

9.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

9.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v' to AST representation.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v:10.1-19.10.
Generating RTLIL representation for module `\CARRY'.
Successfully finished Verilog frontend.

9.3. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:20.1-34.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:48.1-62.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:81.1-97.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:115.1-131.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:150.1-166.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:184.1-200.10.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

9.4. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v' to AST representation.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFRE'.
Successfully finished Verilog frontend.

9.5. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v' to AST representation.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFNRE'.
Successfully finished Verilog frontend.

9.6. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v' to AST representation.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v:10.1-20.10.
Generating RTLIL representation for module `\LUT1'.
Successfully finished Verilog frontend.

9.7. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v' to AST representation.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v:10.1-21.10.
Generating RTLIL representation for module `\LUT2'.
Successfully finished Verilog frontend.

9.8. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v' to AST representation.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v:10.1-22.10.
Generating RTLIL representation for module `\LUT3'.
Successfully finished Verilog frontend.

9.9. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v' to AST representation.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v:11.1-25.10.
Generating RTLIL representation for module `\LUT4'.
Successfully finished Verilog frontend.

9.10. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v' to AST representation.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v:10.1-24.10.
Generating RTLIL representation for module `\LUT5'.
Successfully finished Verilog frontend.

9.11. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v' to AST representation.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v:10.1-25.10.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

9.12. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v' to AST representation.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v:10.1-17.10.
Generating RTLIL representation for module `\CLK_BUF'.
Successfully finished Verilog frontend.

9.13. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v' to AST representation.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v:10.1-22.10.
Generating RTLIL representation for module `\O_BUF'.
Successfully finished Verilog frontend.

9.14. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v' to AST representation.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:10.1-324.10.
Generating RTLIL representation for module `\DSP38'.
Successfully finished Verilog frontend.

9.15. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v' to AST representation.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:2.1-29.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:33.1-84.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\RS_DSP3'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:116.1-149.10.
Generating RTLIL representation for module `\DSP19X2'.
Successfully finished Verilog frontend.

9.16. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:112.1-540.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:542.1-951.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:953.1-1356.10.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

9.17. Executing HIERARCHY pass (managing design hierarchy).

9.17.1. Analyzing design hierarchy..
Top module:  \design122_12_5_top
Used module:     $paramod\design122_12_5\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000
Used module:             \memory
Used module:         $paramod\register\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\encoder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000

9.17.2. Analyzing design hierarchy..
Top module:  \design122_12_5_top
Used module:     $paramod\design122_12_5\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000
Used module:             \memory
Used module:         $paramod\register\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\encoder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000
Removed 0 unused modules.

9.18. Executing PROC pass (convert processes to netlists).

9.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/large_mux.v:11$69 in module $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:41$34 in module design122_12_5_top.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/full_adder_top.v:12$67 in module $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/memory_cntrl.v:102$25 in module memory.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/memory_cntrl.v:96$18 in module memory.
Marked 5 switch rules as full_case in process $proc$../../../../.././rtl/encoder.v:20$61 in module $paramod\encoder\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/encoder.v:11$60 in module $paramod\encoder\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/register.v:10$59 in module $paramod\register\WIDTH=s32'00000000000000000000000000100000.
Marked 2 switch rules as full_case in process $proc$../../../../.././rtl/memory_cntrl.v:21$55 in module $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/full_adder_top.v:38$47 in module $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.
Removed a total of 0 dead cases.

9.18.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 10 redundant assignments.
Promoted 17 assignments to connections.

9.18.4. Executing PROC_INIT pass (extract init attributes).

9.18.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:41$34'.

9.18.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~16 debug messages>

9.18.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_mux.v:11$69'.
     1/1: $1\data_out[31:0]
Creating decoders for process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:48$35'.
Creating decoders for process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:41$34'.
     1/1: $0\tmp[383:0]
Creating decoders for process `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:12$67'.
     1/1: $0\cin[0:0]
Creating decoders for process `\memory.$proc$../../../../.././rtl/memory_cntrl.v:102$25'.
     1/1: $0\rd_data_out[31:0]
Creating decoders for process `\memory.$proc$../../../../.././rtl/memory_cntrl.v:96$18'.
     1/3: $1$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$24
     2/3: $1$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_DATA[31:0]$23
     3/3: $1$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_ADDR[9:0]$22
Creating decoders for process `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:20$61'.
     1/5: $5\data_out_wire[31:0]
     2/5: $4\data_out_wire[31:0]
     3/5: $3\data_out_wire[31:0]
     4/5: $2\data_out_wire[31:0]
     5/5: $1\data_out_wire[31:0]
Creating decoders for process `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:11$60'.
     1/1: $0\data_out[31:0]
Creating decoders for process `$paramod\register\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/register.v:10$59'.
     1/2: $0\data_out[31:0] [31:24]
     2/2: $0\data_out[31:0] [23:0]
Creating decoders for process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$55'.
     1/7: $0\state[1:0]
     2/7: $0\wr_en[0:0]
     3/7: $0\rd_en[0:0]
     4/7: $0\wr_data_mem[31:0]
     5/7: $0\rd_addr[9:0]
     6/7: $0\wr_addr[9:0]
     7/7: $0\reset_mem[0:0]
Creating decoders for process `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$47'.
     1/5: $0\data_out[31:0]
     2/5: $0\cout[0:0]
     3/5: $0\c[0:0]
     4/5: $0\b[15:0]
     5/5: $0\a[15:0]

9.18.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.\data_out' from process `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_mux.v:11$69'.
No latch inferred for signal `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.\data_out_wire' from process `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:20$61'.

9.18.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\design122_12_5_top.\d_in0' using process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:48$35'.
  created $dff cell `$procdff$239' with positive edge clock.
Creating register for signal `\design122_12_5_top.\d_in1' using process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:48$35'.
  created $dff cell `$procdff$240' with positive edge clock.
Creating register for signal `\design122_12_5_top.\d_in2' using process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:48$35'.
  created $dff cell `$procdff$241' with positive edge clock.
Creating register for signal `\design122_12_5_top.\d_in3' using process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:48$35'.
  created $dff cell `$procdff$242' with positive edge clock.
Creating register for signal `\design122_12_5_top.\d_in4' using process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:48$35'.
  created $dff cell `$procdff$243' with positive edge clock.
Creating register for signal `\design122_12_5_top.\d_in5' using process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:48$35'.
  created $dff cell `$procdff$244' with positive edge clock.
Creating register for signal `\design122_12_5_top.\d_in6' using process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:48$35'.
  created $dff cell `$procdff$245' with positive edge clock.
Creating register for signal `\design122_12_5_top.\d_in7' using process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:48$35'.
  created $dff cell `$procdff$246' with positive edge clock.
Creating register for signal `\design122_12_5_top.\d_in8' using process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:48$35'.
  created $dff cell `$procdff$247' with positive edge clock.
Creating register for signal `\design122_12_5_top.\d_in9' using process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:48$35'.
  created $dff cell `$procdff$248' with positive edge clock.
Creating register for signal `\design122_12_5_top.\d_in10' using process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:48$35'.
  created $dff cell `$procdff$249' with positive edge clock.
Creating register for signal `\design122_12_5_top.\d_in11' using process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:48$35'.
  created $dff cell `$procdff$250' with positive edge clock.
Creating register for signal `\design122_12_5_top.\tmp' using process `\design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:41$34'.
  created $adff cell `$procdff$251' with positive edge clock and positive level reset.
Creating register for signal `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.\cin' using process `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:12$67'.
  created $dff cell `$procdff$252' with positive edge clock.
Creating register for signal `\memory.\rd_data_out' using process `\memory.$proc$../../../../.././rtl/memory_cntrl.v:102$25'.
  created $dff cell `$procdff$253' with positive edge clock.
Creating register for signal `\memory.$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_ADDR' using process `\memory.$proc$../../../../.././rtl/memory_cntrl.v:96$18'.
  created $dff cell `$procdff$254' with positive edge clock.
Creating register for signal `\memory.$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_DATA' using process `\memory.$proc$../../../../.././rtl/memory_cntrl.v:96$18'.
  created $dff cell `$procdff$255' with positive edge clock.
Creating register for signal `\memory.$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN' using process `\memory.$proc$../../../../.././rtl/memory_cntrl.v:96$18'.
  created $dff cell `$procdff$256' with positive edge clock.
Creating register for signal `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.\data_out' using process `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:11$60'.
  created $dff cell `$procdff$257' with positive edge clock.
Creating register for signal `$paramod\register\WIDTH=s32'00000000000000000000000000100000.\data_out' using process `$paramod\register\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/register.v:10$59'.
  created $dff cell `$procdff$258' with positive edge clock.
Creating register for signal `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.\state' using process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$55'.
  created $dff cell `$procdff$259' with positive edge clock.
Creating register for signal `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.\reset_mem' using process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$55'.
  created $dff cell `$procdff$260' with positive edge clock.
Creating register for signal `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.\wr_addr' using process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$55'.
  created $dff cell `$procdff$261' with positive edge clock.
Creating register for signal `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.\rd_addr' using process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$55'.
  created $dff cell `$procdff$262' with positive edge clock.
Creating register for signal `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.\wr_data_mem' using process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$55'.
  created $dff cell `$procdff$263' with positive edge clock.
Creating register for signal `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.\rd_en' using process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$55'.
  created $dff cell `$procdff$264' with positive edge clock.
Creating register for signal `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.\wr_en' using process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$55'.
  created $dff cell `$procdff$265' with positive edge clock.
Creating register for signal `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.\data_out' using process `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$47'.
  created $dff cell `$procdff$266' with positive edge clock.
Creating register for signal `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.\cout' using process `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$47'.
  created $dff cell `$procdff$267' with positive edge clock.
Creating register for signal `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.\a' using process `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$47'.
  created $dff cell `$procdff$268' with positive edge clock.
Creating register for signal `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.\b' using process `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$47'.
  created $dff cell `$procdff$269' with positive edge clock.
Creating register for signal `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.\c' using process `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$47'.
  created $dff cell `$procdff$270' with positive edge clock.

9.18.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

9.18.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_mux.v:11$69'.
Removing empty process `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_mux.v:11$69'.
Removing empty process `design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:48$35'.
Removing empty process `design122_12_5_top.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:41$34'.
Found and cleaned up 1 empty switch in `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:12$67'.
Removing empty process `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:12$67'.
Found and cleaned up 2 empty switches in `\memory.$proc$../../../../.././rtl/memory_cntrl.v:102$25'.
Removing empty process `memory.$proc$../../../../.././rtl/memory_cntrl.v:102$25'.
Found and cleaned up 1 empty switch in `\memory.$proc$../../../../.././rtl/memory_cntrl.v:96$18'.
Removing empty process `memory.$proc$../../../../.././rtl/memory_cntrl.v:96$18'.
Found and cleaned up 5 empty switches in `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:20$61'.
Removing empty process `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:20$61'.
Found and cleaned up 1 empty switch in `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:11$60'.
Removing empty process `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:11$60'.
Found and cleaned up 1 empty switch in `$paramod\register\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/register.v:10$59'.
Removing empty process `$paramod\register\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/register.v:10$59'.
Found and cleaned up 3 empty switches in `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$55'.
Removing empty process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$55'.
Found and cleaned up 1 empty switch in `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$47'.
Removing empty process `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$47'.
Cleaned up 16 empty switches.

9.18.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.
<suppressed ~4 debug messages>
Optimizing module design122_12_5_top.
Optimizing module $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.
<suppressed ~1 debug messages>
Optimizing module memory.
Optimizing module $paramod\encoder\WIDTH=s32'00000000000000000000000000100000.
<suppressed ~1 debug messages>
Optimizing module $paramod\register\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.
<suppressed ~5 debug messages>
Optimizing module $paramod\design122_12_5\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.

9.19. Executing SPLITNETS pass (splitting up multi-bit signals).

9.20. Executing DEMUXMAP pass.

9.21. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\design122_12_5\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\encoder\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\register\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module memory.
<suppressed ~63 debug messages>

9.22. Executing DEMUXMAP pass.

9.23. Executing TRIBUF pass.

9.24. Executing TRIBUF pass.

9.25. Executing DEMINOUT pass (demote inout ports to input or output).

9.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 132 unused cells and 1046 unused wires.
<suppressed ~157 debug messages>

9.28. Executing CHECK pass (checking for obvious problems).
Checking module design122_12_5_top...
Found and reported 0 problems.

9.29. Printing statistics.

=== design122_12_5_top ===

   Number of wires:               1661
   Number of wire bits:          25468
   Number of public wires:         655
   Number of public wire bits:   11204
   Number of memories:              12
   Number of memory bits:       393216
   Number of processes:              0
   Number of cells:               1248
     $add                           24
     $adff                           1
     $dff                          192
     $eq                           240
     $logic_not                    120
     $memrd_v2                      12
     $memwr_v2                      12
     $mux                          552
     $pmux                          60
     $xor                           35

9.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.31. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~216 debug messages>
Removed a total of 72 cells.

9.32. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance120112.$procmux$112.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance120112.$procmux$115.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance120112.$procmux$118.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance120112.$procmux$121.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance120112.$procmux$127.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance120112.$procmux$130.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance120112.$procmux$133.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance120112.$procmux$139.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance120112.$procmux$142.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance120112.$procmux$148.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance211.$procmux$112.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance211.$procmux$115.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance211.$procmux$118.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance211.$procmux$121.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance211.$procmux$127.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance211.$procmux$130.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance211.$procmux$133.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance211.$procmux$139.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance211.$procmux$142.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance211.$procmux$148.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance322.$procmux$112.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance322.$procmux$115.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance322.$procmux$118.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance322.$procmux$121.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance322.$procmux$127.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance322.$procmux$130.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance322.$procmux$133.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance322.$procmux$139.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance322.$procmux$142.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance322.$procmux$148.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance434.$procmux$112.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance434.$procmux$115.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance434.$procmux$118.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance434.$procmux$121.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance434.$procmux$127.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance434.$procmux$130.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance434.$procmux$133.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance434.$procmux$139.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance434.$procmux$142.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance434.$procmux$148.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance541.$procmux$112.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance541.$procmux$115.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance541.$procmux$118.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance541.$procmux$121.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance541.$procmux$127.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance541.$procmux$130.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance541.$procmux$133.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance541.$procmux$139.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance541.$procmux$142.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance541.$procmux$148.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance652.$procmux$112.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance652.$procmux$115.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance652.$procmux$118.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance652.$procmux$121.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance652.$procmux$127.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance652.$procmux$130.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance652.$procmux$133.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance652.$procmux$139.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance652.$procmux$142.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance652.$procmux$148.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance763.$procmux$112.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance763.$procmux$115.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance763.$procmux$118.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance763.$procmux$121.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance763.$procmux$127.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance763.$procmux$130.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance763.$procmux$133.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance763.$procmux$139.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance763.$procmux$142.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance763.$procmux$148.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance874.$procmux$112.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance874.$procmux$115.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance874.$procmux$118.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance874.$procmux$121.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance874.$procmux$127.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance874.$procmux$130.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance874.$procmux$133.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance874.$procmux$139.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance874.$procmux$142.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance874.$procmux$148.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance981.$procmux$112.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance981.$procmux$115.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance981.$procmux$118.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance981.$procmux$121.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance981.$procmux$127.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance981.$procmux$130.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance981.$procmux$133.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance981.$procmux$139.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance981.$procmux$142.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance981.$procmux$148.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance100.$procmux$112.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance100.$procmux$115.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance100.$procmux$118.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance100.$procmux$121.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance100.$procmux$127.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance100.$procmux$130.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance100.$procmux$133.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance100.$procmux$139.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance100.$procmux$142.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance100.$procmux$148.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance10090.$procmux$112.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance10090.$procmux$115.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance10090.$procmux$118.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance10090.$procmux$121.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance10090.$procmux$127.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance10090.$procmux$130.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance10090.$procmux$133.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance10090.$procmux$139.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance10090.$procmux$142.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance10090.$procmux$148.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance110100.$procmux$112.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance110100.$procmux$115.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance110100.$procmux$118.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance110100.$procmux$121.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance110100.$procmux$127.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance110100.$procmux$130.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance110100.$procmux$133.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance110100.$procmux$139.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance110100.$procmux$142.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\encoder_instance110100.$procmux$148.
Removed 120 multiplexer ports.
<suppressed ~236 debug messages>

9.33. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
    Consolidated identical input bits for $mux cell $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$procmux$100:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21
      New ports: A=1'0, B=1'1, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0]
      New connections: $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [31:1] = { $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] }
    Consolidated identical input bits for $mux cell $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$procmux$100:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21
      New ports: A=1'0, B=1'1, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0]
      New connections: $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [31:1] = { $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] }
    Consolidated identical input bits for $mux cell $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$procmux$100:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21
      New ports: A=1'0, B=1'1, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0]
      New connections: $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [31:1] = { $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] }
    Consolidated identical input bits for $mux cell $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$procmux$100:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21
      New ports: A=1'0, B=1'1, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0]
      New connections: $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [31:1] = { $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] }
    Consolidated identical input bits for $mux cell $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$procmux$100:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21
      New ports: A=1'0, B=1'1, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0]
      New connections: $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [31:1] = { $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] }
    Consolidated identical input bits for $mux cell $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$procmux$100:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21
      New ports: A=1'0, B=1'1, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0]
      New connections: $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [31:1] = { $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] }
    Consolidated identical input bits for $mux cell $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$procmux$100:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21
      New ports: A=1'0, B=1'1, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0]
      New connections: $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [31:1] = { $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] }
    Consolidated identical input bits for $mux cell $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$procmux$100:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21
      New ports: A=1'0, B=1'1, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0]
      New connections: $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [31:1] = { $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] }
    Consolidated identical input bits for $mux cell $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$procmux$100:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21
      New ports: A=1'0, B=1'1, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0]
      New connections: $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [31:1] = { $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] }
    Consolidated identical input bits for $mux cell $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$procmux$100:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21
      New ports: A=1'0, B=1'1, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0]
      New connections: $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [31:1] = { $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] }
    Consolidated identical input bits for $mux cell $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$procmux$100:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21
      New ports: A=1'0, B=1'1, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0]
      New connections: $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [31:1] = { $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] }
    Consolidated identical input bits for $mux cell $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$procmux$100:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21
      New ports: A=1'0, B=1'1, Y=$flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0]
      New connections: $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [31:1] = { $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:98$17_EN[31:0]$21 [0] }
  Optimizing cells in module \design122_12_5_top.
Performed a total of 12 changes.

9.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~165 debug messages>
Removed a total of 55 cells.

9.35. Executing OPT_SHARE pass.

9.36. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=171, #solve=0, #remove=0, time=0.03 sec.]

9.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 214 unused wires.
<suppressed ~1 debug messages>

9.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.39. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

9.40. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.41. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.42. Executing OPT_SHARE pass.

9.43. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=171, #solve=0, #remove=0, time=0.03 sec.]

9.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.45. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 2

9.46. Executing FSM pass (extract and optimize FSM).

9.46.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking design122_12_5_top.design122_12_5_inst.encoder_instance100.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking design122_12_5_top.design122_12_5_inst.encoder_instance10090.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking design122_12_5_top.design122_12_5_inst.encoder_instance110100.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking design122_12_5_top.design122_12_5_inst.encoder_instance120112.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking design122_12_5_top.design122_12_5_inst.encoder_instance211.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking design122_12_5_top.design122_12_5_inst.encoder_instance322.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking design122_12_5_top.design122_12_5_inst.encoder_instance434.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking design122_12_5_top.design122_12_5_inst.encoder_instance541.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking design122_12_5_top.design122_12_5_inst.encoder_instance652.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking design122_12_5_top.design122_12_5_inst.encoder_instance763.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking design122_12_5_top.design122_12_5_inst.encoder_instance874.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking design122_12_5_top.design122_12_5_inst.encoder_instance981.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register design122_12_5_top.design122_12_5_inst.memory_cntrl_instance10092.state.
Found FSM state register design122_12_5_top.design122_12_5_inst.memory_cntrl_instance102.state.
Found FSM state register design122_12_5_top.design122_12_5_inst.memory_cntrl_instance110101.state.
Found FSM state register design122_12_5_top.design122_12_5_inst.memory_cntrl_instance120114.state.
Found FSM state register design122_12_5_top.design122_12_5_inst.memory_cntrl_instance210.state.
Found FSM state register design122_12_5_top.design122_12_5_inst.memory_cntrl_instance324.state.
Found FSM state register design122_12_5_top.design122_12_5_inst.memory_cntrl_instance433.state.
Found FSM state register design122_12_5_top.design122_12_5_inst.memory_cntrl_instance542.state.
Found FSM state register design122_12_5_top.design122_12_5_inst.memory_cntrl_instance653.state.
Found FSM state register design122_12_5_top.design122_12_5_inst.memory_cntrl_instance761.state.
Found FSM state register design122_12_5_top.design122_12_5_inst.memory_cntrl_instance873.state.
Found FSM state register design122_12_5_top.design122_12_5_inst.memory_cntrl_instance980.state.

9.46.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\design122_12_5_inst.memory_cntrl_instance10092.state' from module `\design122_12_5_top'.
  found $dff cell for state register: $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procdff$259
  root of input selection tree: $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$0\state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \rst
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$164_CMP
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$168_CMP
  found state code: 2'00
  found state code: 2'01
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$168_CMP
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$164_CMP
  ctrl inputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y \rst }
  ctrl outputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$168_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$164_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$0\state[1:0] }
  transition:       2'00 2'00 ->       2'00 4'1000
  transition:       2'00 2'10 ->       2'01 4'1001
  transition:       2'00 2'-1 ->       2'00 4'1000
  transition:       2'01 2'-0 ->       2'01 4'0101
  transition:       2'01 2'-1 ->       2'00 4'0100
Extracting FSM `\design122_12_5_inst.memory_cntrl_instance102.state' from module `\design122_12_5_top'.
  found $dff cell for state register: $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procdff$259
  root of input selection tree: $flatten\design122_12_5_inst.\memory_cntrl_instance102.$0\state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \rst
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$164_CMP
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$168_CMP
  found state code: 2'00
  found state code: 2'01
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance102.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$168_CMP
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$164_CMP
  ctrl inputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance102.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y \rst }
  ctrl outputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$168_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$164_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance102.$0\state[1:0] }
  transition:       2'00 2'00 ->       2'00 4'1000
  transition:       2'00 2'10 ->       2'01 4'1001
  transition:       2'00 2'-1 ->       2'00 4'1000
  transition:       2'01 2'-0 ->       2'01 4'0101
  transition:       2'01 2'-1 ->       2'00 4'0100
Extracting FSM `\design122_12_5_inst.memory_cntrl_instance110101.state' from module `\design122_12_5_top'.
  found $dff cell for state register: $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procdff$259
  root of input selection tree: $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$0\state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \rst
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$164_CMP
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$168_CMP
  found state code: 2'00
  found state code: 2'01
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$168_CMP
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$164_CMP
  ctrl inputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y \rst }
  ctrl outputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$168_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$164_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$0\state[1:0] }
  transition:       2'00 2'00 ->       2'00 4'1000
  transition:       2'00 2'10 ->       2'01 4'1001
  transition:       2'00 2'-1 ->       2'00 4'1000
  transition:       2'01 2'-0 ->       2'01 4'0101
  transition:       2'01 2'-1 ->       2'00 4'0100
Extracting FSM `\design122_12_5_inst.memory_cntrl_instance120114.state' from module `\design122_12_5_top'.
  found $dff cell for state register: $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procdff$259
  root of input selection tree: $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$0\state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \rst
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$164_CMP
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$168_CMP
  found state code: 2'00
  found state code: 2'01
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$168_CMP
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$164_CMP
  ctrl inputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y \rst }
  ctrl outputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$168_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$164_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$0\state[1:0] }
  transition:       2'00 2'00 ->       2'00 4'1000
  transition:       2'00 2'10 ->       2'01 4'1001
  transition:       2'00 2'-1 ->       2'00 4'1000
  transition:       2'01 2'-0 ->       2'01 4'0101
  transition:       2'01 2'-1 ->       2'00 4'0100
Extracting FSM `\design122_12_5_inst.memory_cntrl_instance210.state' from module `\design122_12_5_top'.
  found $dff cell for state register: $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procdff$259
  root of input selection tree: $flatten\design122_12_5_inst.\memory_cntrl_instance210.$0\state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \rst
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$164_CMP
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$168_CMP
  found state code: 2'00
  found state code: 2'01
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance210.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$168_CMP
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$164_CMP
  ctrl inputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance210.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y \rst }
  ctrl outputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$168_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$164_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance210.$0\state[1:0] }
  transition:       2'00 2'00 ->       2'00 4'1000
  transition:       2'00 2'10 ->       2'01 4'1001
  transition:       2'00 2'-1 ->       2'00 4'1000
  transition:       2'01 2'-0 ->       2'01 4'0101
  transition:       2'01 2'-1 ->       2'00 4'0100
Extracting FSM `\design122_12_5_inst.memory_cntrl_instance324.state' from module `\design122_12_5_top'.
  found $dff cell for state register: $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procdff$259
  root of input selection tree: $flatten\design122_12_5_inst.\memory_cntrl_instance324.$0\state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \rst
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$164_CMP
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$168_CMP
  found state code: 2'00
  found state code: 2'01
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance324.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$168_CMP
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$164_CMP
  ctrl inputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance324.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y \rst }
  ctrl outputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$168_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$164_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance324.$0\state[1:0] }
  transition:       2'00 2'00 ->       2'00 4'1000
  transition:       2'00 2'10 ->       2'01 4'1001
  transition:       2'00 2'-1 ->       2'00 4'1000
  transition:       2'01 2'-0 ->       2'01 4'0101
  transition:       2'01 2'-1 ->       2'00 4'0100
Extracting FSM `\design122_12_5_inst.memory_cntrl_instance433.state' from module `\design122_12_5_top'.
  found $dff cell for state register: $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procdff$259
  root of input selection tree: $flatten\design122_12_5_inst.\memory_cntrl_instance433.$0\state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \rst
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$164_CMP
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$168_CMP
  found state code: 2'00
  found state code: 2'01
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance433.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$168_CMP
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$164_CMP
  ctrl inputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance433.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y \rst }
  ctrl outputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance433.$0\state[1:0] $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$164_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$168_CMP }
  transition:       2'00 2'00 ->       2'00 4'0001
  transition:       2'00 2'10 ->       2'01 4'0101
  transition:       2'00 2'-1 ->       2'00 4'0001
  transition:       2'01 2'-0 ->       2'01 4'0110
  transition:       2'01 2'-1 ->       2'00 4'0010
Extracting FSM `\design122_12_5_inst.memory_cntrl_instance542.state' from module `\design122_12_5_top'.
  found $dff cell for state register: $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procdff$259
  root of input selection tree: $flatten\design122_12_5_inst.\memory_cntrl_instance542.$0\state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \rst
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$164_CMP
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$168_CMP
  found state code: 2'00
  found state code: 2'01
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance542.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$168_CMP
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$164_CMP
  ctrl inputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance542.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y \rst }
  ctrl outputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance542.$0\state[1:0] $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$164_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$168_CMP }
  transition:       2'00 2'00 ->       2'00 4'0001
  transition:       2'00 2'10 ->       2'01 4'0101
  transition:       2'00 2'-1 ->       2'00 4'0001
  transition:       2'01 2'-0 ->       2'01 4'0110
  transition:       2'01 2'-1 ->       2'00 4'0010
Extracting FSM `\design122_12_5_inst.memory_cntrl_instance653.state' from module `\design122_12_5_top'.
  found $dff cell for state register: $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procdff$259
  root of input selection tree: $flatten\design122_12_5_inst.\memory_cntrl_instance653.$0\state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \rst
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$164_CMP
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$168_CMP
  found state code: 2'00
  found state code: 2'01
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance653.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$168_CMP
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$164_CMP
  ctrl inputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance653.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y \rst }
  ctrl outputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance653.$0\state[1:0] $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$164_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$168_CMP }
  transition:       2'00 2'00 ->       2'00 4'0001
  transition:       2'00 2'10 ->       2'01 4'0101
  transition:       2'00 2'-1 ->       2'00 4'0001
  transition:       2'01 2'-0 ->       2'01 4'0110
  transition:       2'01 2'-1 ->       2'00 4'0010
Extracting FSM `\design122_12_5_inst.memory_cntrl_instance761.state' from module `\design122_12_5_top'.
  found $dff cell for state register: $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procdff$259
  root of input selection tree: $flatten\design122_12_5_inst.\memory_cntrl_instance761.$0\state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \rst
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$164_CMP
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$168_CMP
  found state code: 2'00
  found state code: 2'01
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance761.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$168_CMP
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$164_CMP
  ctrl inputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance761.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y \rst }
  ctrl outputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance761.$0\state[1:0] $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$164_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$168_CMP }
  transition:       2'00 2'00 ->       2'00 4'0001
  transition:       2'00 2'10 ->       2'01 4'0101
  transition:       2'00 2'-1 ->       2'00 4'0001
  transition:       2'01 2'-0 ->       2'01 4'0110
  transition:       2'01 2'-1 ->       2'00 4'0010
Extracting FSM `\design122_12_5_inst.memory_cntrl_instance873.state' from module `\design122_12_5_top'.
  found $dff cell for state register: $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procdff$259
  root of input selection tree: $flatten\design122_12_5_inst.\memory_cntrl_instance873.$0\state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \rst
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$164_CMP
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$168_CMP
  found state code: 2'00
  found state code: 2'01
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance873.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$168_CMP
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$164_CMP
  ctrl inputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance873.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y \rst }
  ctrl outputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance873.$0\state[1:0] $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$164_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$168_CMP }
  transition:       2'00 2'00 ->       2'00 4'0001
  transition:       2'00 2'10 ->       2'01 4'0101
  transition:       2'00 2'-1 ->       2'00 4'0001
  transition:       2'01 2'-0 ->       2'01 4'0110
  transition:       2'01 2'-1 ->       2'00 4'0010
Extracting FSM `\design122_12_5_inst.memory_cntrl_instance980.state' from module `\design122_12_5_top'.
  found $dff cell for state register: $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procdff$259
  root of input selection tree: $flatten\design122_12_5_inst.\memory_cntrl_instance980.$0\state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \rst
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$164_CMP
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$168_CMP
  found state code: 2'00
  found state code: 2'01
  found ctrl input: $flatten\design122_12_5_inst.\memory_cntrl_instance980.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$168_CMP
  found ctrl output: $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$164_CMP
  ctrl inputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance980.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y \rst }
  ctrl outputs: { $flatten\design122_12_5_inst.\memory_cntrl_instance980.$0\state[1:0] $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$164_CMP $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$168_CMP }
  transition:       2'00 2'00 ->       2'00 4'0001
  transition:       2'00 2'10 ->       2'01 4'0101
  transition:       2'00 2'-1 ->       2'00 4'0001
  transition:       2'01 2'-0 ->       2'01 4'0110
  transition:       2'01 2'-1 ->       2'00 4'0010

9.46.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance980.state$316' from module `\design122_12_5_top'.
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance873.state$312' from module `\design122_12_5_top'.
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance761.state$308' from module `\design122_12_5_top'.
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance653.state$304' from module `\design122_12_5_top'.
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance542.state$300' from module `\design122_12_5_top'.
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance433.state$296' from module `\design122_12_5_top'.
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance324.state$292' from module `\design122_12_5_top'.
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance210.state$288' from module `\design122_12_5_top'.
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance120114.state$284' from module `\design122_12_5_top'.
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance110101.state$280' from module `\design122_12_5_top'.
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance102.state$276' from module `\design122_12_5_top'.
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance10092.state$272' from module `\design122_12_5_top'.

9.46.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 72 unused cells and 72 unused wires.
<suppressed ~73 debug messages>

9.46.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance10092.state$272' from module `\design122_12_5_top'.
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$0\state[1:0] [0].
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$0\state[1:0] [1].
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance102.state$276' from module `\design122_12_5_top'.
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance102.$0\state[1:0] [0].
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance102.$0\state[1:0] [1].
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance110101.state$280' from module `\design122_12_5_top'.
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$0\state[1:0] [0].
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$0\state[1:0] [1].
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance120114.state$284' from module `\design122_12_5_top'.
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$0\state[1:0] [0].
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$0\state[1:0] [1].
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance210.state$288' from module `\design122_12_5_top'.
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance210.$0\state[1:0] [0].
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance210.$0\state[1:0] [1].
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance324.state$292' from module `\design122_12_5_top'.
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance324.$0\state[1:0] [0].
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance324.$0\state[1:0] [1].
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance433.state$296' from module `\design122_12_5_top'.
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance433.$0\state[1:0] [0].
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance433.$0\state[1:0] [1].
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance542.state$300' from module `\design122_12_5_top'.
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance542.$0\state[1:0] [0].
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance542.$0\state[1:0] [1].
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance653.state$304' from module `\design122_12_5_top'.
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance653.$0\state[1:0] [0].
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance653.$0\state[1:0] [1].
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance761.state$308' from module `\design122_12_5_top'.
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance761.$0\state[1:0] [0].
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance761.$0\state[1:0] [1].
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance873.state$312' from module `\design122_12_5_top'.
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance873.$0\state[1:0] [0].
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance873.$0\state[1:0] [1].
Optimizing FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance980.state$316' from module `\design122_12_5_top'.
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance980.$0\state[1:0] [0].
  Removing unused output signal $flatten\design122_12_5_inst.\memory_cntrl_instance980.$0\state[1:0] [1].

9.46.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance10092.state$272' from module `\design122_12_5_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> -1
  01 -> 1-
Recoding FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance102.state$276' from module `\design122_12_5_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> -1
  01 -> 1-
Recoding FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance110101.state$280' from module `\design122_12_5_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> -1
  01 -> 1-
Recoding FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance120114.state$284' from module `\design122_12_5_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> -1
  01 -> 1-
Recoding FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance210.state$288' from module `\design122_12_5_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> -1
  01 -> 1-
Recoding FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance324.state$292' from module `\design122_12_5_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> -1
  01 -> 1-
Recoding FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance433.state$296' from module `\design122_12_5_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> -1
  01 -> 1-
Recoding FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance542.state$300' from module `\design122_12_5_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> -1
  01 -> 1-
Recoding FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance653.state$304' from module `\design122_12_5_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> -1
  01 -> 1-
Recoding FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance761.state$308' from module `\design122_12_5_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> -1
  01 -> 1-
Recoding FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance873.state$312' from module `\design122_12_5_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> -1
  01 -> 1-
Recoding FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance980.state$316' from module `\design122_12_5_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> -1
  01 -> 1-

9.46.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance10092.state$272' from module `design122_12_5_top':
-------------------------------------

  Information on FSM $fsm$\design122_12_5_inst.memory_cntrl_instance10092.state$272 (\design122_12_5_inst.memory_cntrl_instance10092.state):

  Number of input signals:    2
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \rst
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y

  Output signals:
    0: $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$164_CMP
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$168_CMP

  State encoding:
    0:       2'-1  <RESET STATE>
    1:       2'1-

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'00   ->     0 2'10
      1:     0 2'-1   ->     0 2'10
      2:     0 2'10   ->     1 2'10
      3:     1 2'-1   ->     0 2'01
      4:     1 2'-0   ->     1 2'01

-------------------------------------

FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance102.state$276' from module `design122_12_5_top':
-------------------------------------

  Information on FSM $fsm$\design122_12_5_inst.memory_cntrl_instance102.state$276 (\design122_12_5_inst.memory_cntrl_instance102.state):

  Number of input signals:    2
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \rst
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance102.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y

  Output signals:
    0: $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$164_CMP
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$168_CMP

  State encoding:
    0:       2'-1  <RESET STATE>
    1:       2'1-

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'00   ->     0 2'10
      1:     0 2'-1   ->     0 2'10
      2:     0 2'10   ->     1 2'10
      3:     1 2'-1   ->     0 2'01
      4:     1 2'-0   ->     1 2'01

-------------------------------------

FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance110101.state$280' from module `design122_12_5_top':
-------------------------------------

  Information on FSM $fsm$\design122_12_5_inst.memory_cntrl_instance110101.state$280 (\design122_12_5_inst.memory_cntrl_instance110101.state):

  Number of input signals:    2
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \rst
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y

  Output signals:
    0: $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$164_CMP
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$168_CMP

  State encoding:
    0:       2'-1  <RESET STATE>
    1:       2'1-

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'00   ->     0 2'10
      1:     0 2'-1   ->     0 2'10
      2:     0 2'10   ->     1 2'10
      3:     1 2'-1   ->     0 2'01
      4:     1 2'-0   ->     1 2'01

-------------------------------------

FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance120114.state$284' from module `design122_12_5_top':
-------------------------------------

  Information on FSM $fsm$\design122_12_5_inst.memory_cntrl_instance120114.state$284 (\design122_12_5_inst.memory_cntrl_instance120114.state):

  Number of input signals:    2
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \rst
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y

  Output signals:
    0: $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$164_CMP
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$168_CMP

  State encoding:
    0:       2'-1  <RESET STATE>
    1:       2'1-

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'00   ->     0 2'10
      1:     0 2'-1   ->     0 2'10
      2:     0 2'10   ->     1 2'10
      3:     1 2'-1   ->     0 2'01
      4:     1 2'-0   ->     1 2'01

-------------------------------------

FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance210.state$288' from module `design122_12_5_top':
-------------------------------------

  Information on FSM $fsm$\design122_12_5_inst.memory_cntrl_instance210.state$288 (\design122_12_5_inst.memory_cntrl_instance210.state):

  Number of input signals:    2
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \rst
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance210.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y

  Output signals:
    0: $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$164_CMP
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$168_CMP

  State encoding:
    0:       2'-1  <RESET STATE>
    1:       2'1-

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'00   ->     0 2'10
      1:     0 2'-1   ->     0 2'10
      2:     0 2'10   ->     1 2'10
      3:     1 2'-1   ->     0 2'01
      4:     1 2'-0   ->     1 2'01

-------------------------------------

FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance324.state$292' from module `design122_12_5_top':
-------------------------------------

  Information on FSM $fsm$\design122_12_5_inst.memory_cntrl_instance324.state$292 (\design122_12_5_inst.memory_cntrl_instance324.state):

  Number of input signals:    2
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \rst
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance324.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y

  Output signals:
    0: $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$164_CMP
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$168_CMP

  State encoding:
    0:       2'-1  <RESET STATE>
    1:       2'1-

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'00   ->     0 2'10
      1:     0 2'-1   ->     0 2'10
      2:     0 2'10   ->     1 2'10
      3:     1 2'-1   ->     0 2'01
      4:     1 2'-0   ->     1 2'01

-------------------------------------

FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance433.state$296' from module `design122_12_5_top':
-------------------------------------

  Information on FSM $fsm$\design122_12_5_inst.memory_cntrl_instance433.state$296 (\design122_12_5_inst.memory_cntrl_instance433.state):

  Number of input signals:    2
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \rst
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance433.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y

  Output signals:
    0: $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$168_CMP
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$164_CMP

  State encoding:
    0:       2'-1  <RESET STATE>
    1:       2'1-

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'00   ->     0 2'01
      1:     0 2'-1   ->     0 2'01
      2:     0 2'10   ->     1 2'01
      3:     1 2'-1   ->     0 2'10
      4:     1 2'-0   ->     1 2'10

-------------------------------------

FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance542.state$300' from module `design122_12_5_top':
-------------------------------------

  Information on FSM $fsm$\design122_12_5_inst.memory_cntrl_instance542.state$300 (\design122_12_5_inst.memory_cntrl_instance542.state):

  Number of input signals:    2
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \rst
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance542.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y

  Output signals:
    0: $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$168_CMP
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$164_CMP

  State encoding:
    0:       2'-1  <RESET STATE>
    1:       2'1-

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'00   ->     0 2'01
      1:     0 2'-1   ->     0 2'01
      2:     0 2'10   ->     1 2'01
      3:     1 2'-1   ->     0 2'10
      4:     1 2'-0   ->     1 2'10

-------------------------------------

FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance653.state$304' from module `design122_12_5_top':
-------------------------------------

  Information on FSM $fsm$\design122_12_5_inst.memory_cntrl_instance653.state$304 (\design122_12_5_inst.memory_cntrl_instance653.state):

  Number of input signals:    2
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \rst
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance653.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y

  Output signals:
    0: $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$168_CMP
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$164_CMP

  State encoding:
    0:       2'-1  <RESET STATE>
    1:       2'1-

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'00   ->     0 2'01
      1:     0 2'-1   ->     0 2'01
      2:     0 2'10   ->     1 2'01
      3:     1 2'-1   ->     0 2'10
      4:     1 2'-0   ->     1 2'10

-------------------------------------

FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance761.state$308' from module `design122_12_5_top':
-------------------------------------

  Information on FSM $fsm$\design122_12_5_inst.memory_cntrl_instance761.state$308 (\design122_12_5_inst.memory_cntrl_instance761.state):

  Number of input signals:    2
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \rst
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance761.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y

  Output signals:
    0: $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$168_CMP
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$164_CMP

  State encoding:
    0:       2'-1  <RESET STATE>
    1:       2'1-

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'00   ->     0 2'01
      1:     0 2'-1   ->     0 2'01
      2:     0 2'10   ->     1 2'01
      3:     1 2'-1   ->     0 2'10
      4:     1 2'-0   ->     1 2'10

-------------------------------------

FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance873.state$312' from module `design122_12_5_top':
-------------------------------------

  Information on FSM $fsm$\design122_12_5_inst.memory_cntrl_instance873.state$312 (\design122_12_5_inst.memory_cntrl_instance873.state):

  Number of input signals:    2
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \rst
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance873.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y

  Output signals:
    0: $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$168_CMP
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$164_CMP

  State encoding:
    0:       2'-1  <RESET STATE>
    1:       2'1-

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'00   ->     0 2'01
      1:     0 2'-1   ->     0 2'01
      2:     0 2'10   ->     1 2'01
      3:     1 2'-1   ->     0 2'10
      4:     1 2'-0   ->     1 2'10

-------------------------------------

FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance980.state$316' from module `design122_12_5_top':
-------------------------------------

  Information on FSM $fsm$\design122_12_5_inst.memory_cntrl_instance980.state$316 (\design122_12_5_inst.memory_cntrl_instance980.state):

  Number of input signals:    2
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \rst
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance980.$eq$../../../../.././rtl/memory_cntrl.v:36$56_Y

  Output signals:
    0: $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$168_CMP
    1: $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$164_CMP

  State encoding:
    0:       2'-1  <RESET STATE>
    1:       2'1-

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'00   ->     0 2'01
      1:     0 2'-1   ->     0 2'01
      2:     0 2'10   ->     1 2'01
      3:     1 2'-1   ->     0 2'10
      4:     1 2'-0   ->     1 2'10

-------------------------------------

9.46.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance10092.state$272' from module `\design122_12_5_top'.
Mapping FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance102.state$276' from module `\design122_12_5_top'.
Mapping FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance110101.state$280' from module `\design122_12_5_top'.
Mapping FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance120114.state$284' from module `\design122_12_5_top'.
Mapping FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance210.state$288' from module `\design122_12_5_top'.
Mapping FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance324.state$292' from module `\design122_12_5_top'.
Mapping FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance433.state$296' from module `\design122_12_5_top'.
Mapping FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance542.state$300' from module `\design122_12_5_top'.
Mapping FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance653.state$304' from module `\design122_12_5_top'.
Mapping FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance761.state$308' from module `\design122_12_5_top'.
Mapping FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance873.state$312' from module `\design122_12_5_top'.
Mapping FSM `$fsm$\design122_12_5_inst.memory_cntrl_instance980.state$316' from module `\design122_12_5_top'.

9.47. Executing WREDUCE pass (reducing word size of cells).
Removed top 8 bits (of 32) from FF cell design122_12_5_top.$procdff$246 ($dff).
Removed top 1 bits (of 2) from port B of cell design122_12_5_top.$auto$fsm_map.cc:77:implement_pattern_cache$361 ($eq).
Removed top 1 bits (of 2) from port B of cell design122_12_5_top.$auto$fsm_map.cc:77:implement_pattern_cache$523 ($eq).
Removed top 1 bits (of 2) from port B of cell design122_12_5_top.$auto$fsm_map.cc:77:implement_pattern_cache$505 ($eq).
Removed top 1 bits (of 2) from port B of cell design122_12_5_top.$auto$fsm_map.cc:77:implement_pattern_cache$487 ($eq).
Removed top 1 bits (of 2) from port B of cell design122_12_5_top.$auto$fsm_map.cc:77:implement_pattern_cache$469 ($eq).
Removed top 1 bits (of 2) from port B of cell design122_12_5_top.$auto$fsm_map.cc:77:implement_pattern_cache$325 ($eq).
Removed top 1 bits (of 2) from port B of cell design122_12_5_top.$auto$fsm_map.cc:77:implement_pattern_cache$343 ($eq).
Removed top 1 bits (of 2) from port B of cell design122_12_5_top.$auto$fsm_map.cc:77:implement_pattern_cache$379 ($eq).
Removed top 8 bits (of 32) from FF cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$procdff$257 ($dff).
Removed top 19 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$eq$../../../../.././rtl/encoder.v:35$66 ($eq).
Removed top 18 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$eq$../../../../.././rtl/encoder.v:32$65 ($eq).
Removed top 22 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$eq$../../../../.././rtl/encoder.v:29$64 ($eq).
Removed top 25 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$eq$../../../../.././rtl/encoder.v:26$63 ($eq).
Removed top 19 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance10090.$eq$../../../../.././rtl/encoder.v:35$66 ($eq).
Removed top 18 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance10090.$eq$../../../../.././rtl/encoder.v:32$65 ($eq).
Removed top 22 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance10090.$eq$../../../../.././rtl/encoder.v:29$64 ($eq).
Removed top 25 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance10090.$eq$../../../../.././rtl/encoder.v:26$63 ($eq).
Removed top 19 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance110100.$eq$../../../../.././rtl/encoder.v:35$66 ($eq).
Removed top 18 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance110100.$eq$../../../../.././rtl/encoder.v:32$65 ($eq).
Removed top 22 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance110100.$eq$../../../../.././rtl/encoder.v:29$64 ($eq).
Removed top 25 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance110100.$eq$../../../../.././rtl/encoder.v:26$63 ($eq).
Removed top 8 bits (of 32) from FF cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$procdff$257 ($dff).
Removed top 19 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$eq$../../../../.././rtl/encoder.v:35$66 ($eq).
Removed top 18 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$eq$../../../../.././rtl/encoder.v:32$65 ($eq).
Removed top 22 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$eq$../../../../.././rtl/encoder.v:29$64 ($eq).
Removed top 25 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$eq$../../../../.././rtl/encoder.v:26$63 ($eq).
Removed top 8 bits (of 32) from FF cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$procdff$257 ($dff).
Removed top 19 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$eq$../../../../.././rtl/encoder.v:35$66 ($eq).
Removed top 18 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$eq$../../../../.././rtl/encoder.v:32$65 ($eq).
Removed top 22 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$eq$../../../../.././rtl/encoder.v:29$64 ($eq).
Removed top 25 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$eq$../../../../.././rtl/encoder.v:26$63 ($eq).
Removed top 8 bits (of 32) from FF cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$procdff$257 ($dff).
Removed top 19 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:35$66 ($eq).
Removed top 18 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:32$65 ($eq).
Removed top 22 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:29$64 ($eq).
Removed top 25 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:26$63 ($eq).
Removed top 19 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance434.$eq$../../../../.././rtl/encoder.v:35$66 ($eq).
Removed top 18 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance434.$eq$../../../../.././rtl/encoder.v:32$65 ($eq).
Removed top 22 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance434.$eq$../../../../.././rtl/encoder.v:29$64 ($eq).
Removed top 25 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance434.$eq$../../../../.././rtl/encoder.v:26$63 ($eq).
Removed top 19 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance541.$eq$../../../../.././rtl/encoder.v:35$66 ($eq).
Removed top 18 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance541.$eq$../../../../.././rtl/encoder.v:32$65 ($eq).
Removed top 22 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance541.$eq$../../../../.././rtl/encoder.v:29$64 ($eq).
Removed top 25 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance541.$eq$../../../../.././rtl/encoder.v:26$63 ($eq).
Removed top 19 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance652.$eq$../../../../.././rtl/encoder.v:35$66 ($eq).
Removed top 18 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance652.$eq$../../../../.././rtl/encoder.v:32$65 ($eq).
Removed top 22 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance652.$eq$../../../../.././rtl/encoder.v:29$64 ($eq).
Removed top 25 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance652.$eq$../../../../.././rtl/encoder.v:26$63 ($eq).
Removed top 19 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance763.$eq$../../../../.././rtl/encoder.v:35$66 ($eq).
Removed top 18 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance763.$eq$../../../../.././rtl/encoder.v:32$65 ($eq).
Removed top 22 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance763.$eq$../../../../.././rtl/encoder.v:29$64 ($eq).
Removed top 25 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance763.$eq$../../../../.././rtl/encoder.v:26$63 ($eq).
Removed top 19 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance874.$eq$../../../../.././rtl/encoder.v:35$66 ($eq).
Removed top 18 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance874.$eq$../../../../.././rtl/encoder.v:32$65 ($eq).
Removed top 22 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance874.$eq$../../../../.././rtl/encoder.v:29$64 ($eq).
Removed top 25 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance874.$eq$../../../../.././rtl/encoder.v:26$63 ($eq).
Removed top 8 bits (of 32) from FF cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$procdff$257 ($dff).
Removed top 19 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$eq$../../../../.././rtl/encoder.v:35$66 ($eq).
Removed top 18 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$eq$../../../../.././rtl/encoder.v:32$65 ($eq).
Removed top 22 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$eq$../../../../.././rtl/encoder.v:29$64 ($eq).
Removed top 25 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$eq$../../../../.././rtl/encoder.v:26$63 ($eq).
Removed top 8 bits (of 32) from FF cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance10093.\full_adder_inst.$procdff$266 ($dff).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance10093.\full_adder_inst.$procmux$225 ($mux).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance10093.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance104.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance110102.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance120111.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance214.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance321.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance432.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance540.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance654.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance760.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance872.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance983.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48 ($xor).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance10091.$procmux$89_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance10091.$procmux$88_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance10091.$procmux$87_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance10091.$procmux$84_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance10091.$procmux$83_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance10091.$procmux$82_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance10091.$procmux$79_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance10091.$procmux$78_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance10091.$procmux$77_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance10091.$procmux$74_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance10091.$procmux$73_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance10091.$procmux$72_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance103.$procmux$89_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance103.$procmux$88_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance103.$procmux$87_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance103.$procmux$84_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance103.$procmux$83_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance103.$procmux$82_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance103.$procmux$79_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance103.$procmux$78_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance103.$procmux$77_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance103.$procmux$74_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance103.$procmux$73_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance103.$procmux$72_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$89_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$88_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$87_CMP0 ($eq).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$86 ($pmux).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$84_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$83_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$82_CMP0 ($eq).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$81 ($pmux).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$79_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$78_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$77_CMP0 ($eq).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$76 ($pmux).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$74_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$73_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$72_CMP0 ($eq).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$71 ($pmux).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance120110.$procmux$89_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance120110.$procmux$88_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance120110.$procmux$87_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance120110.$procmux$84_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance120110.$procmux$83_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance120110.$procmux$82_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance120110.$procmux$79_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance120110.$procmux$78_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance120110.$procmux$77_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance120110.$procmux$74_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance120110.$procmux$73_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance120110.$procmux$72_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance213.$procmux$89_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance213.$procmux$88_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance213.$procmux$87_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance213.$procmux$84_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance213.$procmux$83_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance213.$procmux$82_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance213.$procmux$79_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance213.$procmux$78_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance213.$procmux$77_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance213.$procmux$74_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance213.$procmux$73_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance213.$procmux$72_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance320.$procmux$89_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance320.$procmux$88_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance320.$procmux$87_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance320.$procmux$84_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance320.$procmux$83_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance320.$procmux$82_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance320.$procmux$79_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance320.$procmux$78_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance320.$procmux$77_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance320.$procmux$74_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance320.$procmux$73_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance320.$procmux$72_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$89_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$88_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$87_CMP0 ($eq).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$86 ($pmux).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$84_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$83_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$82_CMP0 ($eq).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$81 ($pmux).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$79_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$78_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$77_CMP0 ($eq).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$76 ($pmux).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$74_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$73_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$72_CMP0 ($eq).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$71 ($pmux).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance544.$procmux$89_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance544.$procmux$88_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance544.$procmux$87_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance544.$procmux$84_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance544.$procmux$83_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance544.$procmux$82_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance544.$procmux$79_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance544.$procmux$78_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance544.$procmux$77_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance544.$procmux$74_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance544.$procmux$73_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance544.$procmux$72_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$89_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$88_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$87_CMP0 ($eq).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$86 ($pmux).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$84_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$83_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$82_CMP0 ($eq).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$81 ($pmux).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$79_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$78_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$77_CMP0 ($eq).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$76 ($pmux).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$74_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$73_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$72_CMP0 ($eq).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$71 ($pmux).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance764.$procmux$89_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance764.$procmux$88_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance764.$procmux$87_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance764.$procmux$84_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance764.$procmux$83_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance764.$procmux$82_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance764.$procmux$79_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance764.$procmux$78_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance764.$procmux$77_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance764.$procmux$74_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance764.$procmux$73_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance764.$procmux$72_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance871.$procmux$89_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance871.$procmux$88_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance871.$procmux$87_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance871.$procmux$84_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance871.$procmux$83_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance871.$procmux$82_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance871.$procmux$79_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance871.$procmux$78_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance871.$procmux$77_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance871.$procmux$74_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance871.$procmux$73_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance871.$procmux$72_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance984.$procmux$89_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance984.$procmux$88_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance984.$procmux$87_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance984.$procmux$84_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance984.$procmux$83_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance984.$procmux$82_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance984.$procmux$79_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance984.$procmux$78_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance984.$procmux$77_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance984.$procmux$74_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance984.$procmux$73_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance984.$procmux$72_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance10092.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance10092.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance10092.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance10092.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 1 bits (of 2) from port B of cell design122_12_5_top.$auto$fsm_map.cc:77:implement_pattern_cache$451 ($eq).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance102.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance102.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance102.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance102.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance110101.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance110101.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance110101.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance110101.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance120114.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance120114.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance120114.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance120114.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 1 bits (of 2) from port B of cell design122_12_5_top.$auto$fsm_map.cc:77:implement_pattern_cache$433 ($eq).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance210.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance210.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance210.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance210.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance324.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance324.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance324.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance324.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance433.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance433.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance433.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance433.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 1 bits (of 2) from port B of cell design122_12_5_top.$auto$fsm_map.cc:77:implement_pattern_cache$415 ($eq).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance542.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance542.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance542.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance542.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance653.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance653.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance653.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance653.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance761.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance761.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance761.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance761.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 1 bits (of 2) from port B of cell design122_12_5_top.$auto$fsm_map.cc:77:implement_pattern_cache$397 ($eq).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance873.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance873.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance873.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance873.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance980.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance980.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
Removed top 31 bits (of 32) from port B of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance980.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 22 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance980.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$procmux$154 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$procmux$154 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$procmux$154 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$procmux$154 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$procmux$154 ($mux).
Removed top 16 bits (of 32) from port A of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance10093.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance10093.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port A of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance104.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance104.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port A of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance110102.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance110102.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port A of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance120111.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance120111.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port A of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance214.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance214.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port A of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance321.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance321.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port A of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance432.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance432.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port A of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance540.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance540.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port A of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance654.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance654.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port A of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance760.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance760.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port A of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance872.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance872.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port A of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance983.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 16 bits (of 32) from port Y of cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance983.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49 ($xor).
Removed top 8 bits (of 32) from FF cell design122_12_5_top.$procdff$242 ($dff).
Removed top 8 bits (of 32) from FF cell design122_12_5_top.$procdff$244 ($dff).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$procmux$151 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$procmux$151 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$procmux$151 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$procmux$151 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$procmux$151 ($mux).
Removed top 8 bits (of 24) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance10093.\full_adder_inst.$procmux$225 ($mux).
Removed top 8 bits (of 32) from FF cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance110102.\full_adder_inst.$procdff$266 ($dff).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$procmux$145 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$procmux$145 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$procmux$145 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$procmux$145 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$procmux$145 ($mux).
Removed top 16 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance110102.\full_adder_inst.$procmux$225 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$procmux$136 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$procmux$136 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$procmux$136 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$procmux$136 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$procmux$136 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$procmux$124 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$procmux$124 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$procmux$124 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$procmux$124 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$procmux$124 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$procmux$109 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$procmux$109 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$procmux$109 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$procmux$109 ($mux).
Removed top 8 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$procmux$109 ($mux).
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$0\data_out[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$2\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$3\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$4\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$5\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$0\data_out[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$2\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$3\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$4\data_out_wire[31:0].
Removed top 10 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$5\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$0\data_out[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$2\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$3\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$4\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$5\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$0\data_out[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$2\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$3\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$4\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$5\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$0\data_out[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$2\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$3\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$4\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$5\data_out_wire[31:0].
Removed top 19 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance10093.\full_adder_inst.$0\data_out[31:0].
Removed top 19 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance10093.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48_Y.
Removed top 16 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance10093.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49_Y.
Removed top 16 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance104.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48_Y.
Removed top 19 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance104.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49_Y.
Removed top 16 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance110102.\full_adder_inst.$0\data_out[31:0].
Removed top 19 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance110102.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48_Y.
Removed top 19 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance110102.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49_Y.
Removed top 16 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance120111.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48_Y.
Removed top 19 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance120111.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49_Y.
Removed top 16 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance214.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48_Y.
Removed top 19 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance214.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49_Y.
Removed top 16 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance321.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48_Y.
Removed top 19 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance321.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49_Y.
Removed top 16 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance432.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48_Y.
Removed top 19 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance432.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49_Y.
Removed top 16 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance540.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48_Y.
Removed top 19 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance540.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49_Y.
Removed top 16 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance654.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48_Y.
Removed top 19 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance654.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49_Y.
Removed top 16 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance760.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48_Y.
Removed top 19 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance760.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49_Y.
Removed top 16 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance872.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48_Y.
Removed top 16 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance872.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49_Y.
Removed top 16 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance983.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$48_Y.
Removed top 16 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance983.\full_adder_inst.$xor$../../../../.././rtl/full_adder_top.v:49$49_Y.
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$71_Y.
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$76_Y.
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$81_Y.
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$71_Y.
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$76_Y.
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance430.$procmux$81_Y.
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$71_Y.
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$76_Y.
Removed top 8 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance650.$procmux$81_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance10092.$add$../../../../.././rtl/memory_cntrl.v:45$57_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance10092.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance102.$add$../../../../.././rtl/memory_cntrl.v:45$57_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance102.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance110101.$add$../../../../.././rtl/memory_cntrl.v:45$57_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance110101.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance120114.$add$../../../../.././rtl/memory_cntrl.v:45$57_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance210.$add$../../../../.././rtl/memory_cntrl.v:45$57_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance324.$add$../../../../.././rtl/memory_cntrl.v:45$57_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance433.$add$../../../../.././rtl/memory_cntrl.v:45$57_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance433.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance542.$add$../../../../.././rtl/memory_cntrl.v:45$57_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance542.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance653.$add$../../../../.././rtl/memory_cntrl.v:45$57_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance761.$add$../../../../.././rtl/memory_cntrl.v:45$57_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance761.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance873.$add$../../../../.././rtl/memory_cntrl.v:45$57_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance873.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance980.$add$../../../../.././rtl/memory_cntrl.v:45$57_Y.
Removed top 8 bits (of 32) from wire design122_12_5_top.d_in3.
Removed top 8 bits (of 32) from wire design122_12_5_top.d_in5.
Removed top 8 bits (of 32) from wire design122_12_5_top.d_in7.

9.48. Executing PEEPOPT pass (run peephole optimizers).

9.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 142 unused wires.
<suppressed ~1 debug messages>

9.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.
<suppressed ~36 debug messages>

9.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

9.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~191 debug messages>

9.53. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
    New ctrl vector for $pmux cell $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$71: { $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$74_CMP $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$73_CMP $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$72_CMP }
    New ctrl vector for $pmux cell $flatten\design122_12_5_inst.\large_mux_instance430.$procmux$71: { $flatten\design122_12_5_inst.\large_mux_instance430.$procmux$74_CMP $flatten\design122_12_5_inst.\large_mux_instance430.$procmux$73_CMP $flatten\design122_12_5_inst.\large_mux_instance430.$procmux$72_CMP }
    New ctrl vector for $pmux cell $flatten\design122_12_5_inst.\large_mux_instance650.$procmux$71: { $flatten\design122_12_5_inst.\large_mux_instance650.$procmux$74_CMP $flatten\design122_12_5_inst.\large_mux_instance650.$procmux$73_CMP $flatten\design122_12_5_inst.\large_mux_instance650.$procmux$72_CMP }
  Optimizing cells in module \design122_12_5_top.
Performed a total of 3 changes.

9.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.55. Executing OPT_SHARE pass.

9.56. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\design122_12_5_inst.\register_instance982.$procdff$258 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.encoder_instance981.data_out [23:0], Q = \design122_12_5_inst.register_instance982.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\register_instance870.$procdff$258 ($dff) from module design122_12_5_top (D = \d_in7, Q = \design122_12_5_inst.register_instance870.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\register_instance762.$procdff$258 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.memory_cntrl_instance761.mem.rd_data_out [23:0], Q = \design122_12_5_inst.register_instance762.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\register_instance651.$procdff$258 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.register_instance651.data_in [23:0], Q = \design122_12_5_inst.register_instance651.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\register_instance543.$procdff$258 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.memory_cntrl_instance542.mem.rd_data_out [23:0], Q = \design122_12_5_inst.register_instance543.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\register_instance431.$procdff$258 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.register_instance431.data_in [23:0], Q = \design122_12_5_inst.register_instance431.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\register_instance323.$procdff$258 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.encoder_instance322.data_out [23:0], Q = \design122_12_5_inst.register_instance323.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\register_instance212.$procdff$258 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.encoder_instance211.data_out [23:0], Q = \design122_12_5_inst.register_instance212.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\register_instance120113.$procdff$258 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.encoder_instance120112.data_out [23:0], Q = \design122_12_5_inst.register_instance120113.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\register_instance110104.$procdff$258 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.register_instance110104.data_in [23:0], Q = \design122_12_5_inst.register_instance110104.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\register_instance101.$procdff$258 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.encoder_instance100.data_out [23:0], Q = \design122_12_5_inst.register_instance101.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\register_instance10094.$procdff$258 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance10093.full_adder_inst.data_out [23:0], Q = \design122_12_5_inst.register_instance10094.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$procdff$253 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$procmux$94_Y, Q = \design122_12_5_inst.memory_cntrl_instance980.mem.rd_data_out, rval = 0).
Adding EN signal on $auto$ff.cc:298:slice$642 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:107$26_DATA, Q = \design122_12_5_inst.memory_cntrl_instance980.mem.rd_data_out).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procdff$265 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$177_Y, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance980.wr_en_644 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$175_Y, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_en).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procdff$264 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$183_Y, Q = \design122_12_5_inst.memory_cntrl_instance980.rd_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance980.rd_en_646 ($sdff) from module design122_12_5_top (D = 1'1, Q = \design122_12_5_inst.memory_cntrl_instance980.rd_en).
Adding EN signal on $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procdff$263 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$191_Y, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem).
Adding SRST signal on $auto$ff.cc:298:slice$648 ($dffe) from module design122_12_5_top (D = \d_in8, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procdff$262 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$199_Y, Q = \design122_12_5_inst.memory_cntrl_instance980.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$654 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance980.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y [9:0], Q = \design122_12_5_inst.memory_cntrl_instance980.rd_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procdff$261 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$209_Y, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$656 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$207_Y, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procdff$260 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance980.$procmux$219_Y, Q = \design122_12_5_inst.memory_cntrl_instance980.reset_mem, rval = 1'1).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance980.reset_mem_658 ($sdff) from module design122_12_5_top (D = 1'0, Q = \design122_12_5_inst.memory_cntrl_instance980.reset_mem).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$procdff$253 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$procmux$94_Y, Q = \design122_12_5_inst.memory_cntrl_instance873.mem.rd_data_out, rval = 0).
Adding EN signal on $auto$ff.cc:298:slice$662 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:107$26_DATA, Q = \design122_12_5_inst.memory_cntrl_instance873.mem.rd_data_out).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procdff$265 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$177_Y, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance873.wr_en_664 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$175_Y, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_en).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procdff$264 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$183_Y, Q = \design122_12_5_inst.memory_cntrl_instance873.rd_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance873.rd_en_666 ($sdff) from module design122_12_5_top (D = 1'1, Q = \design122_12_5_inst.memory_cntrl_instance873.rd_en).
Adding EN signal on $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procdff$263 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$191_Y, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem).
Adding SRST signal on $auto$ff.cc:298:slice$668 ($dffe) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance872.full_adder_inst.data_out, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procdff$262 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$199_Y, Q = \design122_12_5_inst.memory_cntrl_instance873.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$674 ($sdff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$613 [9:0], Q = \design122_12_5_inst.memory_cntrl_instance873.rd_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procdff$261 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$209_Y, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$676 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$207_Y, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procdff$260 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance873.$procmux$219_Y, Q = \design122_12_5_inst.memory_cntrl_instance873.reset_mem, rval = 1'1).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance873.reset_mem_678 ($sdff) from module design122_12_5_top (D = 1'0, Q = \design122_12_5_inst.memory_cntrl_instance873.reset_mem).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$procdff$253 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$procmux$94_Y, Q = \design122_12_5_inst.memory_cntrl_instance761.mem.rd_data_out, rval = 0).
Adding EN signal on $auto$ff.cc:298:slice$682 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:107$26_DATA, Q = \design122_12_5_inst.memory_cntrl_instance761.mem.rd_data_out).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procdff$265 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$177_Y, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance761.wr_en_684 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$175_Y, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_en).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procdff$264 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$183_Y, Q = \design122_12_5_inst.memory_cntrl_instance761.rd_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance761.rd_en_686 ($sdff) from module design122_12_5_top (D = 1'1, Q = \design122_12_5_inst.memory_cntrl_instance761.rd_en).
Adding EN signal on $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procdff$263 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$191_Y, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem).
Adding SRST signal on $auto$ff.cc:298:slice$688 ($dffe) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance760.full_adder_inst.data_out, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procdff$262 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$199_Y, Q = \design122_12_5_inst.memory_cntrl_instance761.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$694 ($sdff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$611 [9:0], Q = \design122_12_5_inst.memory_cntrl_instance761.rd_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procdff$261 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$209_Y, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$696 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$207_Y, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procdff$260 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$219_Y, Q = \design122_12_5_inst.memory_cntrl_instance761.reset_mem, rval = 1'1).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance761.reset_mem_698 ($sdff) from module design122_12_5_top (D = 1'0, Q = \design122_12_5_inst.memory_cntrl_instance761.reset_mem).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$procdff$253 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$procmux$94_Y, Q = \design122_12_5_inst.memory_cntrl_instance653.mem.rd_data_out, rval = 0).
Adding EN signal on $auto$ff.cc:298:slice$702 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:107$26_DATA, Q = \design122_12_5_inst.memory_cntrl_instance653.mem.rd_data_out).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procdff$265 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$177_Y, Q = \design122_12_5_inst.memory_cntrl_instance653.wr_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance653.wr_en_704 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$175_Y, Q = \design122_12_5_inst.memory_cntrl_instance653.wr_en).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procdff$264 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$183_Y, Q = \design122_12_5_inst.memory_cntrl_instance653.rd_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance653.rd_en_706 ($sdff) from module design122_12_5_top (D = 1'1, Q = \design122_12_5_inst.memory_cntrl_instance653.rd_en).
Adding EN signal on $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procdff$263 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$191_Y, Q = \design122_12_5_inst.memory_cntrl_instance653.wr_data_mem).
Adding SRST signal on $auto$ff.cc:298:slice$708 ($dffe) from module design122_12_5_top (D = \design122_12_5_inst.encoder_instance652.data_out, Q = \design122_12_5_inst.memory_cntrl_instance653.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procdff$262 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$199_Y, Q = \design122_12_5_inst.memory_cntrl_instance653.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$714 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance653.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y [9:0], Q = \design122_12_5_inst.memory_cntrl_instance653.rd_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procdff$261 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$209_Y, Q = \design122_12_5_inst.memory_cntrl_instance653.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$716 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$207_Y, Q = \design122_12_5_inst.memory_cntrl_instance653.wr_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procdff$260 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance653.$procmux$219_Y, Q = \design122_12_5_inst.memory_cntrl_instance653.reset_mem, rval = 1'1).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance653.reset_mem_718 ($sdff) from module design122_12_5_top (D = 1'0, Q = \design122_12_5_inst.memory_cntrl_instance653.reset_mem).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$procdff$253 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$procmux$94_Y, Q = \design122_12_5_inst.memory_cntrl_instance542.mem.rd_data_out, rval = 0).
Adding EN signal on $auto$ff.cc:298:slice$722 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:107$26_DATA, Q = \design122_12_5_inst.memory_cntrl_instance542.mem.rd_data_out).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procdff$265 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$177_Y, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance542.wr_en_724 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$175_Y, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_en).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procdff$264 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$183_Y, Q = \design122_12_5_inst.memory_cntrl_instance542.rd_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance542.rd_en_726 ($sdff) from module design122_12_5_top (D = 1'1, Q = \design122_12_5_inst.memory_cntrl_instance542.rd_en).
Adding EN signal on $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procdff$263 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$191_Y, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_data_mem).
Adding SRST signal on $auto$ff.cc:298:slice$728 ($dffe) from module design122_12_5_top (D = \design122_12_5_inst.encoder_instance541.data_out, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procdff$262 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$199_Y, Q = \design122_12_5_inst.memory_cntrl_instance542.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$734 ($sdff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$608 [9:0], Q = \design122_12_5_inst.memory_cntrl_instance542.rd_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procdff$261 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$209_Y, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$736 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$207_Y, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procdff$260 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$219_Y, Q = \design122_12_5_inst.memory_cntrl_instance542.reset_mem, rval = 1'1).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance542.reset_mem_738 ($sdff) from module design122_12_5_top (D = 1'0, Q = \design122_12_5_inst.memory_cntrl_instance542.reset_mem).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$procdff$253 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$procmux$94_Y, Q = \design122_12_5_inst.memory_cntrl_instance433.mem.rd_data_out, rval = 0).
Adding EN signal on $auto$ff.cc:298:slice$742 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:107$26_DATA, Q = \design122_12_5_inst.memory_cntrl_instance433.mem.rd_data_out).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procdff$265 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$177_Y, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance433.wr_en_744 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$175_Y, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_en).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procdff$264 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$183_Y, Q = \design122_12_5_inst.memory_cntrl_instance433.rd_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance433.rd_en_746 ($sdff) from module design122_12_5_top (D = 1'1, Q = \design122_12_5_inst.memory_cntrl_instance433.rd_en).
Adding EN signal on $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procdff$263 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$191_Y, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem).
Adding SRST signal on $auto$ff.cc:298:slice$748 ($dffe) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance432.full_adder_inst.data_out, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procdff$262 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$199_Y, Q = \design122_12_5_inst.memory_cntrl_instance433.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$754 ($sdff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$606 [9:0], Q = \design122_12_5_inst.memory_cntrl_instance433.rd_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procdff$261 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$209_Y, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$756 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$207_Y, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procdff$260 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance433.$procmux$219_Y, Q = \design122_12_5_inst.memory_cntrl_instance433.reset_mem, rval = 1'1).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance433.reset_mem_758 ($sdff) from module design122_12_5_top (D = 1'0, Q = \design122_12_5_inst.memory_cntrl_instance433.reset_mem).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$procdff$253 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$procmux$94_Y, Q = \design122_12_5_inst.memory_cntrl_instance324.mem.rd_data_out, rval = 0).
Adding EN signal on $auto$ff.cc:298:slice$762 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:107$26_DATA, Q = \design122_12_5_inst.memory_cntrl_instance324.mem.rd_data_out).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procdff$265 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$177_Y, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance324.wr_en_764 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$175_Y, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_en).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procdff$264 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$183_Y, Q = \design122_12_5_inst.memory_cntrl_instance324.rd_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance324.rd_en_766 ($sdff) from module design122_12_5_top (D = 1'1, Q = \design122_12_5_inst.memory_cntrl_instance324.rd_en).
Adding EN signal on $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procdff$263 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$191_Y, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_data_mem).
Adding SRST signal on $auto$ff.cc:298:slice$768 ($dffe) from module design122_12_5_top (D = \design122_12_5_inst.register_instance323.data_out, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procdff$262 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$199_Y, Q = \design122_12_5_inst.memory_cntrl_instance324.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$774 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance324.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y [9:0], Q = \design122_12_5_inst.memory_cntrl_instance324.rd_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procdff$261 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$209_Y, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$776 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$207_Y, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procdff$260 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance324.$procmux$219_Y, Q = \design122_12_5_inst.memory_cntrl_instance324.reset_mem, rval = 1'1).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance324.reset_mem_778 ($sdff) from module design122_12_5_top (D = 1'0, Q = \design122_12_5_inst.memory_cntrl_instance324.reset_mem).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$procdff$253 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$procmux$94_Y, Q = \design122_12_5_inst.memory_cntrl_instance210.mem.rd_data_out, rval = 0).
Adding EN signal on $auto$ff.cc:298:slice$782 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:107$26_DATA, Q = \design122_12_5_inst.memory_cntrl_instance210.mem.rd_data_out).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procdff$265 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$177_Y, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance210.wr_en_784 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$175_Y, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_en).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procdff$264 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$183_Y, Q = \design122_12_5_inst.memory_cntrl_instance210.rd_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance210.rd_en_786 ($sdff) from module design122_12_5_top (D = 1'1, Q = \design122_12_5_inst.memory_cntrl_instance210.rd_en).
Adding EN signal on $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procdff$263 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$191_Y, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem).
Adding SRST signal on $auto$ff.cc:298:slice$788 ($dffe) from module design122_12_5_top (D = \d_in1, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procdff$262 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$199_Y, Q = \design122_12_5_inst.memory_cntrl_instance210.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$794 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance210.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y [9:0], Q = \design122_12_5_inst.memory_cntrl_instance210.rd_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procdff$261 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$209_Y, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$796 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$207_Y, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procdff$260 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance210.$procmux$219_Y, Q = \design122_12_5_inst.memory_cntrl_instance210.reset_mem, rval = 1'1).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance210.reset_mem_798 ($sdff) from module design122_12_5_top (D = 1'0, Q = \design122_12_5_inst.memory_cntrl_instance210.reset_mem).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$procdff$253 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$procmux$94_Y, Q = \design122_12_5_inst.memory_cntrl_instance120114.mem.rd_data_out, rval = 0).
Adding EN signal on $auto$ff.cc:298:slice$802 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:107$26_DATA, Q = \design122_12_5_inst.memory_cntrl_instance120114.mem.rd_data_out).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procdff$265 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$177_Y, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance120114.wr_en_804 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$175_Y, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_en).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procdff$264 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$183_Y, Q = \design122_12_5_inst.memory_cntrl_instance120114.rd_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance120114.rd_en_806 ($sdff) from module design122_12_5_top (D = 1'1, Q = \design122_12_5_inst.memory_cntrl_instance120114.rd_en).
Adding EN signal on $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procdff$263 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$191_Y, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_data_mem).
Adding SRST signal on $auto$ff.cc:298:slice$808 ($dffe) from module design122_12_5_top (D = \design122_12_5_inst.register_instance120113.data_out, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procdff$262 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$199_Y, Q = \design122_12_5_inst.memory_cntrl_instance120114.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$814 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y [9:0], Q = \design122_12_5_inst.memory_cntrl_instance120114.rd_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procdff$261 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$209_Y, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$816 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$207_Y, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procdff$260 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$procmux$219_Y, Q = \design122_12_5_inst.memory_cntrl_instance120114.reset_mem, rval = 1'1).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance120114.reset_mem_818 ($sdff) from module design122_12_5_top (D = 1'0, Q = \design122_12_5_inst.memory_cntrl_instance120114.reset_mem).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$procdff$253 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$procmux$94_Y, Q = \design122_12_5_inst.memory_cntrl_instance110101.mem.rd_data_out, rval = 0).
Adding EN signal on $auto$ff.cc:298:slice$822 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:107$26_DATA, Q = \design122_12_5_inst.memory_cntrl_instance110101.mem.rd_data_out).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procdff$265 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$177_Y, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance110101.wr_en_824 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$175_Y, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_en).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procdff$264 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$183_Y, Q = \design122_12_5_inst.memory_cntrl_instance110101.rd_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance110101.rd_en_826 ($sdff) from module design122_12_5_top (D = 1'1, Q = \design122_12_5_inst.memory_cntrl_instance110101.rd_en).
Adding EN signal on $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procdff$263 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$191_Y, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_data_mem).
Adding SRST signal on $auto$ff.cc:298:slice$828 ($dffe) from module design122_12_5_top (D = \design122_12_5_inst.encoder_instance110100.data_out, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procdff$262 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$199_Y, Q = \design122_12_5_inst.memory_cntrl_instance110101.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$834 ($sdff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$601 [9:0], Q = \design122_12_5_inst.memory_cntrl_instance110101.rd_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procdff$261 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$209_Y, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$836 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$207_Y, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procdff$260 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$procmux$219_Y, Q = \design122_12_5_inst.memory_cntrl_instance110101.reset_mem, rval = 1'1).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance110101.reset_mem_838 ($sdff) from module design122_12_5_top (D = 1'0, Q = \design122_12_5_inst.memory_cntrl_instance110101.reset_mem).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$procdff$253 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$procmux$94_Y, Q = \design122_12_5_inst.memory_cntrl_instance102.mem.rd_data_out, rval = 0).
Adding EN signal on $auto$ff.cc:298:slice$842 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:107$26_DATA, Q = \design122_12_5_inst.memory_cntrl_instance102.mem.rd_data_out).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procdff$265 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$177_Y, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance102.wr_en_844 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$175_Y, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_en).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procdff$264 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$183_Y, Q = \design122_12_5_inst.memory_cntrl_instance102.rd_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance102.rd_en_846 ($sdff) from module design122_12_5_top (D = 1'1, Q = \design122_12_5_inst.memory_cntrl_instance102.rd_en).
Adding EN signal on $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procdff$263 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$191_Y, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_data_mem).
Adding SRST signal on $auto$ff.cc:298:slice$848 ($dffe) from module design122_12_5_top (D = \design122_12_5_inst.register_instance101.data_out, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procdff$262 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$199_Y, Q = \design122_12_5_inst.memory_cntrl_instance102.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$854 ($sdff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$599 [9:0], Q = \design122_12_5_inst.memory_cntrl_instance102.rd_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procdff$261 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$209_Y, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$856 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$207_Y, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procdff$260 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance102.$procmux$219_Y, Q = \design122_12_5_inst.memory_cntrl_instance102.reset_mem, rval = 1'1).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance102.reset_mem_858 ($sdff) from module design122_12_5_top (D = 1'0, Q = \design122_12_5_inst.memory_cntrl_instance102.reset_mem).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$procdff$253 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$procmux$94_Y, Q = \design122_12_5_inst.memory_cntrl_instance10092.mem.rd_data_out, rval = 0).
Adding EN signal on $auto$ff.cc:298:slice$862 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:107$26_DATA, Q = \design122_12_5_inst.memory_cntrl_instance10092.mem.rd_data_out).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procdff$265 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$177_Y, Q = \design122_12_5_inst.memory_cntrl_instance10092.wr_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance10092.wr_en_864 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$175_Y, Q = \design122_12_5_inst.memory_cntrl_instance10092.wr_en).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procdff$264 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$183_Y, Q = \design122_12_5_inst.memory_cntrl_instance10092.rd_en, rval = 1'0).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance10092.rd_en_866 ($sdff) from module design122_12_5_top (D = 1'1, Q = \design122_12_5_inst.memory_cntrl_instance10092.rd_en).
Adding EN signal on $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procdff$263 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$191_Y, Q = \design122_12_5_inst.memory_cntrl_instance10092.wr_data_mem).
Adding SRST signal on $auto$ff.cc:298:slice$868 ($dffe) from module design122_12_5_top (D = \design122_12_5_inst.memory_cntrl_instance10092.data_in, Q = \design122_12_5_inst.memory_cntrl_instance10092.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procdff$262 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$199_Y, Q = \design122_12_5_inst.memory_cntrl_instance10092.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$874 ($sdff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$597 [9:0], Q = \design122_12_5_inst.memory_cntrl_instance10092.rd_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procdff$261 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$209_Y, Q = \design122_12_5_inst.memory_cntrl_instance10092.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:298:slice$876 ($sdff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$207_Y, Q = \design122_12_5_inst.memory_cntrl_instance10092.wr_addr).
Adding SRST signal on $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procdff$260 ($dff) from module design122_12_5_top (D = $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$procmux$219_Y, Q = \design122_12_5_inst.memory_cntrl_instance10092.reset_mem, rval = 1'1).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance10092.reset_mem_878 ($sdff) from module design122_12_5_top (D = 1'0, Q = \design122_12_5_inst.memory_cntrl_instance10092.reset_mem).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance983.\full_adder_inst.$procdff$269 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.register_instance982.data_out [31:16], Q = \design122_12_5_inst.full_adder_instance983.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance983.\full_adder_inst.$procdff$268 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.register_instance982.data_out [15:0], Q = \design122_12_5_inst.full_adder_instance983.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance983.\full_adder_inst.$procdff$266 ($dff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$586 [15:0], Q = \design122_12_5_inst.full_adder_instance983.full_adder_inst.data_out [15:0], rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance872.\full_adder_inst.$procdff$269 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance872.full_adder_inst.data_in [31:16], Q = \design122_12_5_inst.full_adder_instance872.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance872.\full_adder_inst.$procdff$268 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance872.full_adder_inst.data_in [15:0], Q = \design122_12_5_inst.full_adder_instance872.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance872.\full_adder_inst.$procdff$266 ($dff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$584 [15:0], Q = \design122_12_5_inst.full_adder_instance872.full_adder_inst.data_out [15:0], rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance760.\full_adder_inst.$procdff$269 ($dff) from module design122_12_5_top (D = \d_in6 [31:16], Q = \design122_12_5_inst.full_adder_instance760.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance760.\full_adder_inst.$procdff$268 ($dff) from module design122_12_5_top (D = \d_in6 [15:0], Q = \design122_12_5_inst.full_adder_instance760.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance760.\full_adder_inst.$procdff$266 ($dff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$582 [15:0], Q = \design122_12_5_inst.full_adder_instance760.full_adder_inst.data_out [15:0], rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance654.\full_adder_inst.$procdff$269 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.memory_cntrl_instance653.mem.rd_data_out [31:16], Q = \design122_12_5_inst.full_adder_instance654.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance654.\full_adder_inst.$procdff$268 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.memory_cntrl_instance653.mem.rd_data_out [15:0], Q = \design122_12_5_inst.full_adder_instance654.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance654.\full_adder_inst.$procdff$266 ($dff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$580 [15:0], Q = \design122_12_5_inst.full_adder_instance654.full_adder_inst.data_out [15:0], rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance540.\full_adder_inst.$procdff$269 ($dff) from module design122_12_5_top (D = \d_in4 [31:16], Q = \design122_12_5_inst.full_adder_instance540.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance540.\full_adder_inst.$procdff$268 ($dff) from module design122_12_5_top (D = \d_in4 [15:0], Q = \design122_12_5_inst.full_adder_instance540.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance540.\full_adder_inst.$procdff$266 ($dff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$578 [15:0], Q = \design122_12_5_inst.full_adder_instance540.full_adder_inst.data_out [15:0], rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance432.\full_adder_inst.$procdff$269 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.register_instance431.data_out [31:16], Q = \design122_12_5_inst.full_adder_instance432.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance432.\full_adder_inst.$procdff$268 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.register_instance431.data_out [15:0], Q = \design122_12_5_inst.full_adder_instance432.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance432.\full_adder_inst.$procdff$266 ($dff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$576 [15:0], Q = \design122_12_5_inst.full_adder_instance432.full_adder_inst.data_out [15:0], rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance321.\full_adder_inst.$procdff$269 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance321.full_adder_inst.data_in [31:16], Q = \design122_12_5_inst.full_adder_instance321.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance321.\full_adder_inst.$procdff$268 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance321.full_adder_inst.data_in [15:0], Q = \design122_12_5_inst.full_adder_instance321.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance321.\full_adder_inst.$procdff$266 ($dff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$574 [15:0], Q = \design122_12_5_inst.full_adder_instance321.full_adder_inst.data_out [15:0], rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance214.\full_adder_inst.$procdff$269 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance214.full_adder_inst.data_in [31:16], Q = \design122_12_5_inst.full_adder_instance214.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance214.\full_adder_inst.$procdff$268 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance214.full_adder_inst.data_in [15:0], Q = \design122_12_5_inst.full_adder_instance214.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance214.\full_adder_inst.$procdff$266 ($dff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$572 [15:0], Q = \design122_12_5_inst.full_adder_instance214.full_adder_inst.data_out [15:0], rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance120111.\full_adder_inst.$procdff$269 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance120111.full_adder_inst.data_in [31:16], Q = \design122_12_5_inst.full_adder_instance120111.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance120111.\full_adder_inst.$procdff$268 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance120111.full_adder_inst.data_in [15:0], Q = \design122_12_5_inst.full_adder_instance120111.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance120111.\full_adder_inst.$procdff$266 ($dff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$570 [15:0], Q = \design122_12_5_inst.full_adder_instance120111.full_adder_inst.data_out [15:0], rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance110102.\full_adder_inst.$procdff$269 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.memory_cntrl_instance110101.mem.rd_data_out [31:16], Q = \design122_12_5_inst.full_adder_instance110102.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance110102.\full_adder_inst.$procdff$268 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.memory_cntrl_instance110101.mem.rd_data_out [15:0], Q = \design122_12_5_inst.full_adder_instance110102.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance110102.\full_adder_inst.$procdff$266 ($dff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$568 [15:0], Q = \design122_12_5_inst.full_adder_instance110102.full_adder_inst.data_out [15:0], rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance104.\full_adder_inst.$procdff$269 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance104.full_adder_inst.data_in [31:16], Q = \design122_12_5_inst.full_adder_instance104.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance104.\full_adder_inst.$procdff$268 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance104.full_adder_inst.data_in [15:0], Q = \design122_12_5_inst.full_adder_instance104.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance104.\full_adder_inst.$procdff$266 ($dff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$565 [15:0], Q = \design122_12_5_inst.full_adder_instance104.full_adder_inst.data_out [15:0], rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance10093.\full_adder_inst.$procdff$270 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.full_adder_instance10093.cin, Q = \design122_12_5_inst.full_adder_instance10093.full_adder_inst.c, rval = 1'0).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance10093.\full_adder_inst.$procdff$269 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.memory_cntrl_instance10092.mem.rd_data_out [31:16], Q = \design122_12_5_inst.full_adder_instance10093.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance10093.\full_adder_inst.$procdff$268 ($dff) from module design122_12_5_top (D = \design122_12_5_inst.memory_cntrl_instance10092.mem.rd_data_out [15:0], Q = \design122_12_5_inst.full_adder_instance10093.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\full_adder_instance10093.\full_adder_inst.$procdff$266 ($dff) from module design122_12_5_top (D = $auto$wreduce.cc:461:run$563 [15:0], Q = \design122_12_5_inst.full_adder_instance10093.full_adder_inst.data_out [15:0], rval = 16'0000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance981.$procdff$257 ($dff) from module design122_12_5_top (D = { \design122_12_5_inst.encoder_instance981.data_out_wire [10] \design122_12_5_inst.encoder_instance981.data_out_wire [8:7] \design122_12_5_inst.encoder_instance981.data_out_wire [3:0] }, Q = { \design122_12_5_inst.encoder_instance981.data_out [10] \design122_12_5_inst.encoder_instance981.data_out [8:7] \design122_12_5_inst.encoder_instance981.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance981.$procdff$257 ($dff) from module design122_12_5_top (D = { $auto$wreduce.cc:461:run$557 [23:11] $auto$wreduce.cc:461:run$557 [9] $auto$wreduce.cc:461:run$557 [6:4] }, Q = { \design122_12_5_inst.encoder_instance981.data_out [23:11] \design122_12_5_inst.encoder_instance981.data_out [9] \design122_12_5_inst.encoder_instance981.data_out [6:4] }, rval = 17'00000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance874.$procdff$257 ($dff) from module design122_12_5_top (D = { \design122_12_5_inst.encoder_instance874.data_out_wire [10] \design122_12_5_inst.encoder_instance874.data_out_wire [8:7] \design122_12_5_inst.encoder_instance874.data_out_wire [3:0] }, Q = { \design122_12_5_inst.encoder_instance874.data_out [10] \design122_12_5_inst.encoder_instance874.data_out [8:7] \design122_12_5_inst.encoder_instance874.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance874.$procdff$257 ($dff) from module design122_12_5_top (D = { $flatten\design122_12_5_inst.\encoder_instance874.$2\data_out_wire[31:0] [31:11] $flatten\design122_12_5_inst.\encoder_instance874.$2\data_out_wire[31:0] [9] $flatten\design122_12_5_inst.\encoder_instance874.$2\data_out_wire[31:0] [6:4] }, Q = { \design122_12_5_inst.encoder_instance874.data_out [31:11] \design122_12_5_inst.encoder_instance874.data_out [9] \design122_12_5_inst.encoder_instance874.data_out [6:4] }, rval = 25'0000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance763.$procdff$257 ($dff) from module design122_12_5_top (D = { \design122_12_5_inst.encoder_instance763.data_out_wire [10] \design122_12_5_inst.encoder_instance763.data_out_wire [8:7] \design122_12_5_inst.encoder_instance763.data_out_wire [3:0] }, Q = { \design122_12_5_inst.encoder_instance763.data_out [10] \design122_12_5_inst.encoder_instance763.data_out [8:7] \design122_12_5_inst.encoder_instance763.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance763.$procdff$257 ($dff) from module design122_12_5_top (D = { $flatten\design122_12_5_inst.\encoder_instance763.$2\data_out_wire[31:0] [31:11] $flatten\design122_12_5_inst.\encoder_instance763.$2\data_out_wire[31:0] [9] $flatten\design122_12_5_inst.\encoder_instance763.$2\data_out_wire[31:0] [6:4] }, Q = { \design122_12_5_inst.encoder_instance763.data_out [31:11] \design122_12_5_inst.encoder_instance763.data_out [9] \design122_12_5_inst.encoder_instance763.data_out [6:4] }, rval = 25'0000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance652.$procdff$257 ($dff) from module design122_12_5_top (D = { \design122_12_5_inst.encoder_instance652.data_out_wire [10] \design122_12_5_inst.encoder_instance652.data_out_wire [8:7] \design122_12_5_inst.encoder_instance652.data_out_wire [3:0] }, Q = { \design122_12_5_inst.encoder_instance652.data_out [10] \design122_12_5_inst.encoder_instance652.data_out [8:7] \design122_12_5_inst.encoder_instance652.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance652.$procdff$257 ($dff) from module design122_12_5_top (D = { $flatten\design122_12_5_inst.\encoder_instance652.$2\data_out_wire[31:0] [31:11] $flatten\design122_12_5_inst.\encoder_instance652.$2\data_out_wire[31:0] [9] $flatten\design122_12_5_inst.\encoder_instance652.$2\data_out_wire[31:0] [6:4] }, Q = { \design122_12_5_inst.encoder_instance652.data_out [31:11] \design122_12_5_inst.encoder_instance652.data_out [9] \design122_12_5_inst.encoder_instance652.data_out [6:4] }, rval = 25'0000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance541.$procdff$257 ($dff) from module design122_12_5_top (D = { \design122_12_5_inst.encoder_instance541.data_out_wire [10] \design122_12_5_inst.encoder_instance541.data_out_wire [8:7] \design122_12_5_inst.encoder_instance541.data_out_wire [3:0] }, Q = { \design122_12_5_inst.encoder_instance541.data_out [10] \design122_12_5_inst.encoder_instance541.data_out [8:7] \design122_12_5_inst.encoder_instance541.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance541.$procdff$257 ($dff) from module design122_12_5_top (D = { $flatten\design122_12_5_inst.\encoder_instance541.$2\data_out_wire[31:0] [31:11] $flatten\design122_12_5_inst.\encoder_instance541.$2\data_out_wire[31:0] [9] $flatten\design122_12_5_inst.\encoder_instance541.$2\data_out_wire[31:0] [6:4] }, Q = { \design122_12_5_inst.encoder_instance541.data_out [31:11] \design122_12_5_inst.encoder_instance541.data_out [9] \design122_12_5_inst.encoder_instance541.data_out [6:4] }, rval = 25'0000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance434.$procdff$257 ($dff) from module design122_12_5_top (D = { \design122_12_5_inst.encoder_instance434.data_out_wire [10] \design122_12_5_inst.encoder_instance434.data_out_wire [8:7] \design122_12_5_inst.encoder_instance434.data_out_wire [3:0] }, Q = { \design122_12_5_inst.encoder_instance434.data_out [10] \design122_12_5_inst.encoder_instance434.data_out [8:7] \design122_12_5_inst.encoder_instance434.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance434.$procdff$257 ($dff) from module design122_12_5_top (D = { $flatten\design122_12_5_inst.\encoder_instance434.$2\data_out_wire[31:0] [31:11] $flatten\design122_12_5_inst.\encoder_instance434.$2\data_out_wire[31:0] [9] $flatten\design122_12_5_inst.\encoder_instance434.$2\data_out_wire[31:0] [6:4] }, Q = { \design122_12_5_inst.encoder_instance434.data_out [31:11] \design122_12_5_inst.encoder_instance434.data_out [9] \design122_12_5_inst.encoder_instance434.data_out [6:4] }, rval = 25'0000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance322.$procdff$257 ($dff) from module design122_12_5_top (D = { \design122_12_5_inst.encoder_instance322.data_out_wire [10] \design122_12_5_inst.encoder_instance322.data_out_wire [8:7] \design122_12_5_inst.encoder_instance322.data_out_wire [3:0] }, Q = { \design122_12_5_inst.encoder_instance322.data_out [10] \design122_12_5_inst.encoder_instance322.data_out [8:7] \design122_12_5_inst.encoder_instance322.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance322.$procdff$257 ($dff) from module design122_12_5_top (D = { $auto$wreduce.cc:461:run$552 [23:11] $auto$wreduce.cc:461:run$552 [9] $auto$wreduce.cc:461:run$552 [6:4] }, Q = { \design122_12_5_inst.encoder_instance322.data_out [23:11] \design122_12_5_inst.encoder_instance322.data_out [9] \design122_12_5_inst.encoder_instance322.data_out [6:4] }, rval = 17'00000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance211.$procdff$257 ($dff) from module design122_12_5_top (D = { \design122_12_5_inst.encoder_instance211.data_out_wire [10] \design122_12_5_inst.encoder_instance211.data_out_wire [8:7] \design122_12_5_inst.encoder_instance211.data_out_wire [3:0] }, Q = { \design122_12_5_inst.encoder_instance211.data_out [10] \design122_12_5_inst.encoder_instance211.data_out [8:7] \design122_12_5_inst.encoder_instance211.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance211.$procdff$257 ($dff) from module design122_12_5_top (D = { $auto$wreduce.cc:461:run$547 [23:11] $auto$wreduce.cc:461:run$547 [9] $auto$wreduce.cc:461:run$547 [6:4] }, Q = { \design122_12_5_inst.encoder_instance211.data_out [23:11] \design122_12_5_inst.encoder_instance211.data_out [9] \design122_12_5_inst.encoder_instance211.data_out [6:4] }, rval = 17'00000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance120112.$procdff$257 ($dff) from module design122_12_5_top (D = { \design122_12_5_inst.encoder_instance120112.data_out_wire [10] \design122_12_5_inst.encoder_instance120112.data_out_wire [8:7] \design122_12_5_inst.encoder_instance120112.data_out_wire [3:0] }, Q = { \design122_12_5_inst.encoder_instance120112.data_out [10] \design122_12_5_inst.encoder_instance120112.data_out [8:7] \design122_12_5_inst.encoder_instance120112.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance120112.$procdff$257 ($dff) from module design122_12_5_top (D = { $auto$wreduce.cc:461:run$542 [23:11] $auto$wreduce.cc:461:run$542 [9] $auto$wreduce.cc:461:run$542 [6:4] }, Q = { \design122_12_5_inst.encoder_instance120112.data_out [23:11] \design122_12_5_inst.encoder_instance120112.data_out [9] \design122_12_5_inst.encoder_instance120112.data_out [6:4] }, rval = 17'00000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance110100.$procdff$257 ($dff) from module design122_12_5_top (D = { \design122_12_5_inst.encoder_instance110100.data_out_wire [10] \design122_12_5_inst.encoder_instance110100.data_out_wire [8:7] \design122_12_5_inst.encoder_instance110100.data_out_wire [3:0] }, Q = { \design122_12_5_inst.encoder_instance110100.data_out [10] \design122_12_5_inst.encoder_instance110100.data_out [8:7] \design122_12_5_inst.encoder_instance110100.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance110100.$procdff$257 ($dff) from module design122_12_5_top (D = { $flatten\design122_12_5_inst.\encoder_instance110100.$2\data_out_wire[31:0] [31:11] $flatten\design122_12_5_inst.\encoder_instance110100.$2\data_out_wire[31:0] [9] $flatten\design122_12_5_inst.\encoder_instance110100.$2\data_out_wire[31:0] [6:4] }, Q = { \design122_12_5_inst.encoder_instance110100.data_out [31:11] \design122_12_5_inst.encoder_instance110100.data_out [9] \design122_12_5_inst.encoder_instance110100.data_out [6:4] }, rval = 25'0000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance10090.$procdff$257 ($dff) from module design122_12_5_top (D = { \design122_12_5_inst.encoder_instance10090.data_out_wire [10] \design122_12_5_inst.encoder_instance10090.data_out_wire [8:7] \design122_12_5_inst.encoder_instance10090.data_out_wire [3:0] }, Q = { \design122_12_5_inst.encoder_instance10090.data_out [10] \design122_12_5_inst.encoder_instance10090.data_out [8:7] \design122_12_5_inst.encoder_instance10090.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance10090.$procdff$257 ($dff) from module design122_12_5_top (D = { $flatten\design122_12_5_inst.\encoder_instance10090.$2\data_out_wire[31:0] [31:11] $flatten\design122_12_5_inst.\encoder_instance10090.$2\data_out_wire[31:0] [9] $flatten\design122_12_5_inst.\encoder_instance10090.$2\data_out_wire[31:0] [6:4] }, Q = { \design122_12_5_inst.encoder_instance10090.data_out [31:11] \design122_12_5_inst.encoder_instance10090.data_out [9] \design122_12_5_inst.encoder_instance10090.data_out [6:4] }, rval = 25'0000000000000000000000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance100.$procdff$257 ($dff) from module design122_12_5_top (D = { \design122_12_5_inst.encoder_instance100.data_out_wire [10] \design122_12_5_inst.encoder_instance100.data_out_wire [8:7] \design122_12_5_inst.encoder_instance100.data_out_wire [3:0] }, Q = { \design122_12_5_inst.encoder_instance100.data_out [10] \design122_12_5_inst.encoder_instance100.data_out [8:7] \design122_12_5_inst.encoder_instance100.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design122_12_5_inst.\encoder_instance100.$procdff$257 ($dff) from module design122_12_5_top (D = { $auto$wreduce.cc:461:run$537 [23:11] $auto$wreduce.cc:461:run$537 [9] $auto$wreduce.cc:461:run$537 [6:4] }, Q = { \design122_12_5_inst.encoder_instance100.data_out [23:11] \design122_12_5_inst.encoder_instance100.data_out [9] \design122_12_5_inst.encoder_instance100.data_out [6:4] }, rval = 17'00000000000000000).
Setting constant 0-bit at position 0 on $auto$ff.cc:298:slice$930 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:298:slice$930 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:298:slice$930 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:298:slice$930 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:298:slice$930 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:298:slice$930 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:298:slice$930 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:298:slice$930 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:298:slice$921 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:298:slice$921 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:298:slice$921 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:298:slice$921 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:298:slice$921 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:298:slice$921 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:298:slice$921 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:298:slice$921 ($dff) from module design122_12_5_top.
[#visit=207, #solve=0, #remove=16, time=0.03 sec.]

9.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 246 unused cells and 268 unused wires.
<suppressed ~247 debug messages>

9.58. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.59. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~108 debug messages>

9.60. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
    New ctrl vector for $pmux cell $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$71: { $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$74_CMP $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$73_CMP }
    New ctrl vector for $pmux cell $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$76: { $auto$opt_reduce.cc:134:opt_pmux$980 $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$78_CMP $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$77_CMP }
    New ctrl vector for $pmux cell $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$81: { $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$85_CMP $auto$opt_reduce.cc:134:opt_pmux$982 $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$82_CMP }
    New ctrl vector for $pmux cell $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$86: { $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$90_CMP $flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$89_CMP $auto$opt_reduce.cc:134:opt_pmux$984 }
  Optimizing cells in module \design122_12_5_top.
Performed a total of 4 changes.

9.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~69 debug messages>
Removed a total of 23 cells.

9.62. Executing OPT_SHARE pass.

9.63. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 16 on $auto$ff.cc:298:slice$640 ($sdff) from module design122_12_5_top.
Setting constant 0-bit at position 17 on $auto$ff.cc:298:slice$640 ($sdff) from module design122_12_5_top.
Setting constant 0-bit at position 18 on $auto$ff.cc:298:slice$640 ($sdff) from module design122_12_5_top.
Setting constant 0-bit at position 19 on $auto$ff.cc:298:slice$640 ($sdff) from module design122_12_5_top.
Setting constant 0-bit at position 20 on $auto$ff.cc:298:slice$640 ($sdff) from module design122_12_5_top.
Setting constant 0-bit at position 21 on $auto$ff.cc:298:slice$640 ($sdff) from module design122_12_5_top.
Setting constant 0-bit at position 22 on $auto$ff.cc:298:slice$640 ($sdff) from module design122_12_5_top.
Setting constant 0-bit at position 23 on $auto$ff.cc:298:slice$640 ($sdff) from module design122_12_5_top.
[#visit=194, #solve=0, #remove=8, time=0.02 sec.]

9.64. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 1 unused cells and 13 unused wires.
<suppressed ~2 debug messages>

9.65. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.66. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~108 debug messages>

9.67. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.68. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.69. Executing OPT_SHARE pass.

9.70. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=194, #solve=0, #remove=0, time=0.02 sec.]

9.71. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.72. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 3

9.73. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.74. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.75. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~108 debug messages>

9.76. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.77. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.78. Executing OPT_SHARE pass.

9.79. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=194, #solve=0, #remove=0, time=0.02 sec.]

9.80. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.81. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

9.82. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.84. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~108 debug messages>

9.85. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.86. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.87. Executing OPT_SHARE pass.

9.88. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=194, #solve=0, #remove=0, time=0.02 sec.]

9.89. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=194, #solve=2573, #remove=0, time=2.52 sec.]

9.90. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.91. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

9.92. Executing WREDUCE pass (reducing word size of cells).
Removed top 13 bits (of 24) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$procmux$151 ($mux).
Removed top 21 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance10090.$procmux$151 ($mux).
Removed top 21 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance110100.$procmux$151 ($mux).
Removed top 13 bits (of 24) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance120112.$procmux$151 ($mux).
Removed top 13 bits (of 24) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance211.$procmux$151 ($mux).
Removed top 13 bits (of 24) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance322.$procmux$151 ($mux).
Removed top 21 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance434.$procmux$151 ($mux).
Removed top 21 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance541.$procmux$151 ($mux).
Removed top 21 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance652.$procmux$151 ($mux).
Removed top 21 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance763.$procmux$151 ($mux).
Removed top 21 bits (of 32) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance874.$procmux$151 ($mux).
Removed top 13 bits (of 24) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance981.$procmux$151 ($mux).
Removed cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance104.\full_adder_inst.$procmux$225 ($mux).
Removed cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance120111.\full_adder_inst.$procmux$225 ($mux).
Removed cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance214.\full_adder_inst.$procmux$225 ($mux).
Removed cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance321.\full_adder_inst.$procmux$225 ($mux).
Removed cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance432.\full_adder_inst.$procmux$225 ($mux).
Removed cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance540.\full_adder_inst.$procmux$225 ($mux).
Removed cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance654.\full_adder_inst.$procmux$225 ($mux).
Removed cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance760.\full_adder_inst.$procmux$225 ($mux).
Removed cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance872.\full_adder_inst.$procmux$225 ($mux).
Removed cell design122_12_5_top.$flatten\design122_12_5_inst.\full_adder_instance983.\full_adder_inst.$procmux$225 ($mux).
Removed top 8 bits (of 24) from mux cell design122_12_5_top.$flatten\design122_12_5_inst.\large_mux_instance110103.$procmux$71 ($pmux).
Removed top 8 bits (of 32) from FF cell design122_12_5_top.$auto$ff.cc:298:slice$723 ($sdffe).
Removed top 8 bits (of 32) from FF cell design122_12_5_top.$auto$ff.cc:298:slice$683 ($sdffe).
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$537.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$538.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$539.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$540.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$542.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$543.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$544.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$545.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$547.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$548.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$549.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$550.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$552.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$553.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$554.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$555.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$557.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$558.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$559.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$560.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$562.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$563.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$564.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$565.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$570.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$571.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$574.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$575.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$576.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$577.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$578.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$582.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$583.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$584.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$585.
Removed top 16 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$586.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$588.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$589.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$590.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$594.
Removed top 8 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$595.
Removed top 26 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$597.
Removed top 22 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$598.
Removed top 22 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$599.
Removed top 22 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$600.
Removed top 22 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$601.
Removed top 25 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$602.
Removed top 25 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$603.
Removed top 22 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$604.
Removed top 22 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$605.
Removed top 22 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$606.
Removed top 22 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$607.
Removed top 22 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$608.
Removed top 22 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$609.
Removed top 22 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$610.
Removed top 22 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$611.
Removed top 22 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$612.
Removed top 25 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$613.
Removed top 25 bits (of 32) from wire design122_12_5_top.$auto$wreduce.cc:461:run$614.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance120114.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance210.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance324.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y.
Removed top 1 bits (of 10) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance542.$procmux$207_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance653.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y.
Removed top 1 bits (of 10) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance761.$procmux$207_Y.
Removed top 22 bits (of 32) from wire design122_12_5_top.$flatten\design122_12_5_inst.\memory_cntrl_instance980.$add$../../../../.././rtl/memory_cntrl.v:53$58_Y.

9.93. Executing PEEPOPT pass (run peephole optimizers).

9.94. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 76 unused wires.
<suppressed ~1 debug messages>

9.95. Executing DEMUXMAP pass.

9.96. Executing SPLITNETS pass (splitting up multi-bit signals).

9.97. Printing statistics.

=== design122_12_5_top ===

   Number of wires:               1231
   Number of wire bits:          17421
   Number of public wires:         655
   Number of public wire bits:   11180
   Number of memories:              12
   Number of memory bits:       393216
   Number of processes:              0
   Number of cells:                819
     $add                           24
     $adff                           1
     $and                           24
     $dff                           36
     $eq                           215
     $logic_not                     69
     $memrd_v2                      12
     $memwr_v2                      12
     $mux                          122
     $not                            1
     $pmux                          48
     $reduce_and                    24
     $reduce_or                     39
     $sdff                          73
     $sdffce                        12
     $sdffe                         72
     $xor                           35

9.98. Executing RS_DSP_MULTADD pass.

9.99. Executing WREDUCE pass (reducing word size of cells).

9.100. Executing RS_DSP_MACC pass.
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$877 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:202.32-202.120"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$875 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:202.32-202.120"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$857 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:148.32-148.118"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$855 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:148.32-148.118"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$837 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:207.32-207.123"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$835 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:207.32-207.123"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$817 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:216.32-216.120"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$815 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:216.32-216.120"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$797 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:152.32-152.114"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$795 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:152.32-152.114"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$777 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:162.32-162.115"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$775 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:162.32-162.115"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$757 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:167.32-167.118"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$755 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:167.32-167.118"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$737 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:172.32-172.118"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$735 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:172.32-172.118"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$717 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:179.32-179.118"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$715 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:179.32-179.118"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$697 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:183.32-183.118"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$695 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:183.32-183.118"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$677 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:191.32-191.118"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$675 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:191.32-191.118"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$657 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:194.32-194.114"
Warning: The synchronous register element Generic DFF $auto$ff.cc:298:slice$655 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:63.34-63.442|../../../../.././rtl/memory_cntrl.v:21.1-60.7|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/28apr/Validation/RTL_testcases/verilog_random_designs/design122_12_5_top/results_dir/.././rtl/design122_12_5_top.v:194.32-194.114"

9.101. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.102. Executing TECHMAP pass (map to technology primitives).

9.102.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

9.102.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

9.103. Printing statistics.

=== design122_12_5_top ===

   Number of wires:               1231
   Number of wire bits:          17421
   Number of public wires:         655
   Number of public wire bits:   11180
   Number of memories:              12
   Number of memory bits:       393216
   Number of processes:              0
   Number of cells:                819
     $add                           24
     $adff                           1
     $and                           24
     $dff                           36
     $eq                           215
     $logic_not                     69
     $memrd_v2                      12
     $memwr_v2                      12
     $mux                          122
     $not                            1
     $pmux                          48
     $reduce_and                    24
     $reduce_or                     39
     $sdff                          73
     $sdffce                        12
     $sdffe                         72
     $xor                           35

9.104. Executing TECHMAP pass (map to technology primitives).

9.104.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

9.104.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

9.105. Printing statistics.

=== design122_12_5_top ===

   Number of wires:               1231
   Number of wire bits:          17421
   Number of public wires:         655
   Number of public wire bits:   11180
   Number of memories:              12
   Number of memory bits:       393216
   Number of processes:              0
   Number of cells:                819
     $add                           24
     $adff                           1
     $and                           24
     $dff                           36
     $eq                           215
     $logic_not                     69
     $memrd_v2                      12
     $memwr_v2                      12
     $mux                          122
     $not                            1
     $pmux                          48
     $reduce_and                    24
     $reduce_or                     39
     $sdff                          73
     $sdffce                        12
     $sdffe                         72
     $xor                           35

9.106. Executing TECHMAP pass (map to technology primitives).

9.106.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

9.106.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

9.107. Executing TECHMAP pass (map to technology primitives).

9.107.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

9.107.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

9.108. Executing TECHMAP pass (map to technology primitives).

9.108.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

9.108.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

9.109. Executing RS_DSP_SIMD pass.

9.110. Executing TECHMAP pass (map to technology primitives).

9.110.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

9.110.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

9.111. Executing TECHMAP pass (map to technology primitives).

9.111.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

9.111.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

9.112. Executing rs_pack_dsp_regs pass.

9.113. Executing RS_DSP_IO_REGS pass.

9.114. Executing TECHMAP pass (map to technology primitives).

9.114.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Successfully finished Verilog frontend.

9.114.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~14 debug messages>

9.115. Executing TECHMAP pass (map to technology primitives).

9.115.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

9.115.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

9.116. Printing statistics.

=== design122_12_5_top ===

   Number of wires:               1231
   Number of wire bits:          17421
   Number of public wires:         655
   Number of public wire bits:   11180
   Number of memories:              12
   Number of memory bits:       393216
   Number of processes:              0
   Number of cells:                819
     $add                           24
     $adff                           1
     $and                           24
     $dff                           36
     $eq                           215
     $logic_not                     69
     $memrd_v2                      12
     $memwr_v2                      12
     $mux                          122
     $not                            1
     $pmux                          48
     $reduce_and                    24
     $reduce_or                     39
     $sdff                          73
     $sdffce                        12
     $sdffe                         72
     $xor                           35

9.117. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module design122_12_5_top:
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance102.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance102.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance210.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance210.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance324.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance324.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance433.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance433.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance542.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance542.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance653.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance653.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance761.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance761.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance873.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance873.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance980.$add$../../../../.././rtl/memory_cntrl.v:45$57 ($add).
  creating $macc model for $flatten\design122_12_5_inst.\memory_cntrl_instance980.$add$../../../../.././rtl/memory_cntrl.v:53$58 ($add).
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance980.$add$../../../../.././rtl/memory_cntrl.v:53$58.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance980.$add$../../../../.././rtl/memory_cntrl.v:45$57.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance873.$add$../../../../.././rtl/memory_cntrl.v:53$58.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance873.$add$../../../../.././rtl/memory_cntrl.v:45$57.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance761.$add$../../../../.././rtl/memory_cntrl.v:53$58.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance761.$add$../../../../.././rtl/memory_cntrl.v:45$57.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance653.$add$../../../../.././rtl/memory_cntrl.v:53$58.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance653.$add$../../../../.././rtl/memory_cntrl.v:45$57.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance542.$add$../../../../.././rtl/memory_cntrl.v:53$58.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance542.$add$../../../../.././rtl/memory_cntrl.v:45$57.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance433.$add$../../../../.././rtl/memory_cntrl.v:53$58.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance433.$add$../../../../.././rtl/memory_cntrl.v:45$57.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance324.$add$../../../../.././rtl/memory_cntrl.v:53$58.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance324.$add$../../../../.././rtl/memory_cntrl.v:45$57.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance210.$add$../../../../.././rtl/memory_cntrl.v:53$58.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance210.$add$../../../../.././rtl/memory_cntrl.v:45$57.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$add$../../../../.././rtl/memory_cntrl.v:53$58.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$add$../../../../.././rtl/memory_cntrl.v:45$57.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$add$../../../../.././rtl/memory_cntrl.v:53$58.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$add$../../../../.././rtl/memory_cntrl.v:45$57.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance102.$add$../../../../.././rtl/memory_cntrl.v:53$58.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance102.$add$../../../../.././rtl/memory_cntrl.v:45$57.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$add$../../../../.././rtl/memory_cntrl.v:53$58.
  creating $alu model for $macc $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$add$../../../../.././rtl/memory_cntrl.v:45$57.
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$add$../../../../.././rtl/memory_cntrl.v:45$57: $auto$alumacc.cc:485:replace_alu$1052
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance10092.$add$../../../../.././rtl/memory_cntrl.v:53$58: $auto$alumacc.cc:485:replace_alu$1055
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance102.$add$../../../../.././rtl/memory_cntrl.v:45$57: $auto$alumacc.cc:485:replace_alu$1058
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance102.$add$../../../../.././rtl/memory_cntrl.v:53$58: $auto$alumacc.cc:485:replace_alu$1061
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$add$../../../../.././rtl/memory_cntrl.v:45$57: $auto$alumacc.cc:485:replace_alu$1064
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance110101.$add$../../../../.././rtl/memory_cntrl.v:53$58: $auto$alumacc.cc:485:replace_alu$1067
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$add$../../../../.././rtl/memory_cntrl.v:45$57: $auto$alumacc.cc:485:replace_alu$1070
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance120114.$add$../../../../.././rtl/memory_cntrl.v:53$58: $auto$alumacc.cc:485:replace_alu$1073
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance210.$add$../../../../.././rtl/memory_cntrl.v:45$57: $auto$alumacc.cc:485:replace_alu$1076
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance210.$add$../../../../.././rtl/memory_cntrl.v:53$58: $auto$alumacc.cc:485:replace_alu$1079
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance324.$add$../../../../.././rtl/memory_cntrl.v:45$57: $auto$alumacc.cc:485:replace_alu$1082
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance324.$add$../../../../.././rtl/memory_cntrl.v:53$58: $auto$alumacc.cc:485:replace_alu$1085
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance433.$add$../../../../.././rtl/memory_cntrl.v:45$57: $auto$alumacc.cc:485:replace_alu$1088
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance433.$add$../../../../.././rtl/memory_cntrl.v:53$58: $auto$alumacc.cc:485:replace_alu$1091
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance542.$add$../../../../.././rtl/memory_cntrl.v:45$57: $auto$alumacc.cc:485:replace_alu$1094
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance542.$add$../../../../.././rtl/memory_cntrl.v:53$58: $auto$alumacc.cc:485:replace_alu$1097
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance653.$add$../../../../.././rtl/memory_cntrl.v:45$57: $auto$alumacc.cc:485:replace_alu$1100
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance653.$add$../../../../.././rtl/memory_cntrl.v:53$58: $auto$alumacc.cc:485:replace_alu$1103
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance761.$add$../../../../.././rtl/memory_cntrl.v:45$57: $auto$alumacc.cc:485:replace_alu$1106
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance761.$add$../../../../.././rtl/memory_cntrl.v:53$58: $auto$alumacc.cc:485:replace_alu$1109
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance873.$add$../../../../.././rtl/memory_cntrl.v:45$57: $auto$alumacc.cc:485:replace_alu$1112
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance873.$add$../../../../.././rtl/memory_cntrl.v:53$58: $auto$alumacc.cc:485:replace_alu$1115
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance980.$add$../../../../.././rtl/memory_cntrl.v:45$57: $auto$alumacc.cc:485:replace_alu$1118
  creating $alu cell for $flatten\design122_12_5_inst.\memory_cntrl_instance980.$add$../../../../.././rtl/memory_cntrl.v:53$58: $auto$alumacc.cc:485:replace_alu$1121
  created 24 $alu and 0 $macc cells.

9.118. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.119. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

9.120. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~98 debug messages>

9.121. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.123. Executing OPT_SHARE pass.

9.124. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 8 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 9 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 10 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 11 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 12 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 13 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 14 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
Setting constant 0-bit at position 15 on $auto$ff.cc:298:slice$885 ($dff) from module design122_12_5_top.
[#visit=185, #solve=0, #remove=16, time=0.02 sec.]

9.125. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.127. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~98 debug messages>

9.128. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
    New ctrl vector for $pmux cell $flatten\design122_12_5_inst.\large_mux_instance984.$procmux$71: { $flatten\design122_12_5_inst.\large_mux_instance984.$procmux$74_CMP $flatten\design122_12_5_inst.\large_mux_instance984.$procmux$73_CMP }
    New ctrl vector for $pmux cell $flatten\design122_12_5_inst.\large_mux_instance984.$procmux$76: { $auto$opt_reduce.cc:134:opt_pmux$1125 $flatten\design122_12_5_inst.\large_mux_instance984.$procmux$78_CMP $flatten\design122_12_5_inst.\large_mux_instance984.$procmux$77_CMP }
    New ctrl vector for $pmux cell $flatten\design122_12_5_inst.\large_mux_instance984.$procmux$81: { $flatten\design122_12_5_inst.\large_mux_instance984.$procmux$85_CMP $auto$opt_reduce.cc:134:opt_pmux$1127 $flatten\design122_12_5_inst.\large_mux_instance984.$procmux$82_CMP }
    New ctrl vector for $pmux cell $flatten\design122_12_5_inst.\large_mux_instance984.$procmux$86: { $flatten\design122_12_5_inst.\large_mux_instance984.$procmux$90_CMP $flatten\design122_12_5_inst.\large_mux_instance984.$procmux$89_CMP $auto$opt_reduce.cc:134:opt_pmux$1129 }
  Optimizing cells in module \design122_12_5_top.
Performed a total of 4 changes.

9.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.130. Executing OPT_SHARE pass.

9.131. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 16 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 17 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 18 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 19 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 20 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 21 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 22 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 23 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 24 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 25 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 26 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 27 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 28 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 29 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 30 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 31 on $auto$ff.cc:298:slice$673 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 16 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 17 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 18 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 19 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 20 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 21 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 22 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 23 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 24 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 25 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 26 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 27 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 28 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 29 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 30 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 31 on $auto$ff.cc:298:slice$693 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 16 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 17 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 18 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 19 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 20 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 21 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 22 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 23 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 24 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 25 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 26 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 27 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 28 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 29 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 30 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
Setting constant 0-bit at position 31 on $auto$ff.cc:298:slice$753 ($sdffce) from module design122_12_5_top.
[#visit=184, #solve=0, #remove=48, time=0.03 sec.]

9.132. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

9.133. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.134. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~98 debug messages>

9.135. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.136. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.137. Executing OPT_SHARE pass.

9.138. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=184, #solve=0, #remove=0, time=0.02 sec.]

9.139. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 3

9.141. Printing statistics.

=== design122_12_5_top ===

   Number of wires:               1280
   Number of wire bits:          17902
   Number of public wires:         655
   Number of public wire bits:   11180
   Number of memories:              12
   Number of memory bits:       393216
   Number of processes:              0
   Number of cells:                810
     $adff                           1
     $alu                           24
     $and                           24
     $dff                           26
     $eq                           214
     $logic_not                     68
     $memrd_v2                      12
     $memwr_v2                      12
     $mux                          122
     $not                            1
     $pmux                          48
     $reduce_and                    24
     $reduce_or                     42
     $sdff                          73
     $sdffce                        12
     $sdffe                         72
     $xor                           35

9.142. Executing MEMORY pass.

9.142.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

9.142.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

9.142.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing design122_12_5_top.design122_12_5_inst.memory_cntrl_instance10092.mem.mem write port 0.
  Analyzing design122_12_5_top.design122_12_5_inst.memory_cntrl_instance102.mem.mem write port 0.
  Analyzing design122_12_5_top.design122_12_5_inst.memory_cntrl_instance110101.mem.mem write port 0.
  Analyzing design122_12_5_top.design122_12_5_inst.memory_cntrl_instance120114.mem.mem write port 0.
  Analyzing design122_12_5_top.design122_12_5_inst.memory_cntrl_instance210.mem.mem write port 0.
  Analyzing design122_12_5_top.design122_12_5_inst.memory_cntrl_instance324.mem.mem write port 0.
  Analyzing design122_12_5_top.design122_12_5_inst.memory_cntrl_instance433.mem.mem write port 0.
  Analyzing design122_12_5_top.design122_12_5_inst.memory_cntrl_instance542.mem.mem write port 0.
  Analyzing design122_12_5_top.design122_12_5_inst.memory_cntrl_instance653.mem.mem write port 0.
  Analyzing design122_12_5_top.design122_12_5_inst.memory_cntrl_instance761.mem.mem write port 0.
  Analyzing design122_12_5_top.design122_12_5_inst.memory_cntrl_instance873.mem.mem write port 0.
  Analyzing design122_12_5_top.design122_12_5_inst.memory_cntrl_instance980.mem.mem write port 0.

9.142.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

9.142.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\design122_12_5_inst.memory_cntrl_instance10092.mem.mem'[0] in module `\design122_12_5_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design122_12_5_inst.memory_cntrl_instance102.mem.mem'[0] in module `\design122_12_5_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design122_12_5_inst.memory_cntrl_instance110101.mem.mem'[0] in module `\design122_12_5_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design122_12_5_inst.memory_cntrl_instance120114.mem.mem'[0] in module `\design122_12_5_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design122_12_5_inst.memory_cntrl_instance210.mem.mem'[0] in module `\design122_12_5_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design122_12_5_inst.memory_cntrl_instance324.mem.mem'[0] in module `\design122_12_5_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design122_12_5_inst.memory_cntrl_instance433.mem.mem'[0] in module `\design122_12_5_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design122_12_5_inst.memory_cntrl_instance542.mem.mem'[0] in module `\design122_12_5_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design122_12_5_inst.memory_cntrl_instance653.mem.mem'[0] in module `\design122_12_5_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design122_12_5_inst.memory_cntrl_instance761.mem.mem'[0] in module `\design122_12_5_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design122_12_5_inst.memory_cntrl_instance873.mem.mem'[0] in module `\design122_12_5_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design122_12_5_inst.memory_cntrl_instance980.mem.mem'[0] in module `\design122_12_5_top': merging output FF to cell.
    Write port 0: non-transparent.

9.142.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 12 unused cells and 378 unused wires.
<suppressed ~13 debug messages>

9.142.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

9.142.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

9.142.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.142.10. Executing MEMORY_COLLECT pass (generating $mem cells).

9.143. Printing statistics.

=== design122_12_5_top ===

   Number of wires:               1270
   Number of wire bits:          17582
   Number of public wires:         655
   Number of public wire bits:   11180
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                786
     $adff                           1
     $alu                           24
     $and                           24
     $dff                           26
     $eq                           214
     $logic_not                     68
     $mem_v2                        12
     $mux                          122
     $not                            1
     $pmux                          48
     $reduce_and                    24
     $reduce_or                     42
     $sdff                          73
     $sdffce                        12
     $sdffe                         60
     $xor                           35

9.144. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$procmux$109 ... design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance100.$procmux$145 to a pmux with 4 cases.
Converting design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance10090.$procmux$109 ... design122_12_5_top.$flatten\design122_12_5_inst.\encoder_instance10090.$procmux$145 to a pmux with 4 cases.
Converted 8 (p)mux cells into 2 pmux cells.
<suppressed ~125 debug messages>

9.145. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

9.146. Executing MEMORY_LIBMAP pass (mapping memories to cells).

9.147. Executing MEMORY_LIBMAP pass (mapping memories to cells).
mapping memory design122_12_5_top.design122_12_5_inst.memory_cntrl_instance10092.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design122_12_5_top.design122_12_5_inst.memory_cntrl_instance102.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design122_12_5_top.design122_12_5_inst.memory_cntrl_instance110101.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design122_12_5_top.design122_12_5_inst.memory_cntrl_instance120114.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design122_12_5_top.design122_12_5_inst.memory_cntrl_instance210.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design122_12_5_top.design122_12_5_inst.memory_cntrl_instance324.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design122_12_5_top.design122_12_5_inst.memory_cntrl_instance433.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design122_12_5_top.design122_12_5_inst.memory_cntrl_instance542.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design122_12_5_top.design122_12_5_inst.memory_cntrl_instance653.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design122_12_5_top.design122_12_5_inst.memory_cntrl_instance761.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design122_12_5_top.design122_12_5_inst.memory_cntrl_instance873.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design122_12_5_top.design122_12_5_inst.memory_cntrl_instance980.mem.mem via $__RS_FACTOR_BRAM36_SDP
<suppressed ~2736 debug messages>

9.148. Executing Rs_BRAM_Split pass.

9.149. Executing TECHMAP pass (map to technology primitives).

9.149.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

9.149.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~41 debug messages>

9.150. Executing TECHMAP pass (map to technology primitives).

9.150.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

9.150.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

9.151. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

9.152. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.
<suppressed ~24 debug messages>

9.153. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.154. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$procmux$106.
    dead port 2/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance10092.\mem.$procmux$106.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$procmux$106.
    dead port 2/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance102.\mem.$procmux$106.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$procmux$106.
    dead port 2/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance110101.\mem.$procmux$106.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$procmux$106.
    dead port 2/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance120114.\mem.$procmux$106.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$procmux$106.
    dead port 2/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance210.\mem.$procmux$106.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$procmux$106.
    dead port 2/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance324.\mem.$procmux$106.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$procmux$106.
    dead port 2/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance433.\mem.$procmux$106.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$procmux$106.
    dead port 2/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance542.\mem.$procmux$106.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$procmux$106.
    dead port 2/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance653.\mem.$procmux$106.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$procmux$106.
    dead port 2/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance761.\mem.$procmux$106.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$procmux$106.
    dead port 2/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance873.\mem.$procmux$106.
    dead port 1/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$procmux$106.
    dead port 2/2 on $mux $flatten\design122_12_5_inst.\memory_cntrl_instance980.\mem.$procmux$106.
Removed 24 multiplexer ports.
<suppressed ~227 debug messages>

9.155. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.156. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.157. Executing OPT_SHARE pass.

9.158. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance873.rd_en_667 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2230, Q = \design122_12_5_inst.memory_cntrl_instance873.rd_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance873.reset_mem_679 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2234, Q = \design122_12_5_inst.memory_cntrl_instance873.reset_mem).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance873.wr_en_665 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2238, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance980.rd_en_647 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2242, Q = \design122_12_5_inst.memory_cntrl_instance980.rd_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance980.reset_mem_659 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2246, Q = \design122_12_5_inst.memory_cntrl_instance980.reset_mem).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance980.wr_en_645 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2250, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance653.rd_en_707 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2206, Q = \design122_12_5_inst.memory_cntrl_instance653.rd_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance653.reset_mem_719 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2210, Q = \design122_12_5_inst.memory_cntrl_instance653.reset_mem).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance653.wr_en_705 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2214, Q = \design122_12_5_inst.memory_cntrl_instance653.wr_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance761.rd_en_687 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2218, Q = \design122_12_5_inst.memory_cntrl_instance761.rd_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance761.reset_mem_699 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2222, Q = \design122_12_5_inst.memory_cntrl_instance761.reset_mem).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance761.wr_en_685 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2226, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_en).
Adding EN signal on $auto$mem.cc:1529:emulate_reset$1711 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1748, Q = \emulate_reset_emu_srst_sel_1710).
Adding EN signal on $auto$memory_libmap.cc:2442:execute$1704 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1752, Q = $auto$memory_libmap.cc:2436:execute$1702).
Adding EN signal on $auto$mem.cc:1529:emulate_reset$1694 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1756, Q = \emulate_reset_emu_srst_sel_1693).
Adding EN signal on $auto$memory_libmap.cc:2442:execute$1687 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1760, Q = $auto$memory_libmap.cc:2436:execute$1685).
Adding EN signal on $auto$mem.cc:1529:emulate_reset$1677 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1764, Q = \emulate_reset_emu_srst_sel_1676).
Adding EN signal on $auto$memory_libmap.cc:2442:execute$1670 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1768 [31:24], Q = $auto$memory_libmap.cc:2436:execute$1668 [31:24]).
Adding EN signal on $auto$memory_libmap.cc:2442:execute$1670 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1768 [23:0], Q = $auto$memory_libmap.cc:2436:execute$1668 [23:0]).
Adding EN signal on $auto$mem.cc:1529:emulate_reset$1660 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1772, Q = \emulate_reset_emu_srst_sel_1659).
Adding EN signal on $auto$memory_libmap.cc:2442:execute$1653 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1776, Q = $auto$memory_libmap.cc:2436:execute$1651).
Adding EN signal on $auto$mem.cc:1529:emulate_reset$1643 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1780, Q = \emulate_reset_emu_srst_sel_1642).
Adding EN signal on $auto$memory_libmap.cc:2442:execute$1636 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1784 [31:24], Q = $auto$memory_libmap.cc:2436:execute$1634 [31:24]).
Adding EN signal on $auto$memory_libmap.cc:2442:execute$1636 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1784 [23:0], Q = $auto$memory_libmap.cc:2436:execute$1634 [23:0]).
Adding EN signal on $auto$mem.cc:1529:emulate_reset$1626 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1788, Q = \emulate_reset_emu_srst_sel_1625).
Adding EN signal on $auto$memory_libmap.cc:2442:execute$1619 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1792, Q = $auto$memory_libmap.cc:2436:execute$1617).
Adding EN signal on $auto$mem.cc:1529:emulate_reset$1609 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1796, Q = \emulate_reset_emu_srst_sel_1608).
Adding EN signal on $auto$memory_libmap.cc:2442:execute$1602 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1800, Q = $auto$memory_libmap.cc:2436:execute$1600).
Adding EN signal on $auto$mem.cc:1529:emulate_reset$1592 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1804, Q = \emulate_reset_emu_srst_sel_1591).
Adding EN signal on $auto$memory_libmap.cc:2442:execute$1585 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1808, Q = $auto$memory_libmap.cc:2436:execute$1583).
Adding EN signal on $auto$mem.cc:1529:emulate_reset$1575 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1812, Q = \emulate_reset_emu_srst_sel_1574).
Adding EN signal on $auto$memory_libmap.cc:2442:execute$1568 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1816, Q = $auto$memory_libmap.cc:2436:execute$1566).
Adding EN signal on $auto$mem.cc:1529:emulate_reset$1558 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1820, Q = \emulate_reset_emu_srst_sel_1557).
Adding EN signal on $auto$memory_libmap.cc:2442:execute$1551 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1824, Q = $auto$memory_libmap.cc:2436:execute$1549).
Adding EN signal on $auto$mem.cc:1529:emulate_reset$1541 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1828, Q = \emulate_reset_emu_srst_sel_1540).
Adding EN signal on $auto$memory_libmap.cc:2442:execute$1534 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1832, Q = $auto$memory_libmap.cc:2436:execute$1532).
Adding EN signal on $auto$mem.cc:1529:emulate_reset$1524 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1836, Q = \emulate_reset_emu_srst_sel_1523).
Adding EN signal on $auto$memory_libmap.cc:2442:execute$1517 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1840, Q = $auto$memory_libmap.cc:2436:execute$1515).
Adding EN signal on $auto$ff.cc:298:slice$655 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1874, Q = \design122_12_5_inst.memory_cntrl_instance980.rd_addr).
Adding EN signal on $auto$ff.cc:298:slice$657 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1878, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_addr).
Adding EN signal on $auto$ff.cc:298:slice$675 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1882, Q = \design122_12_5_inst.memory_cntrl_instance873.rd_addr).
Adding EN signal on $auto$ff.cc:298:slice$677 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1886, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_addr).
Adding EN signal on $auto$ff.cc:298:slice$695 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1890, Q = \design122_12_5_inst.memory_cntrl_instance761.rd_addr).
Adding EN signal on $auto$ff.cc:298:slice$697 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1894, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_addr).
Adding EN signal on $auto$ff.cc:298:slice$715 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1900, Q = \design122_12_5_inst.memory_cntrl_instance653.rd_addr).
Adding EN signal on $auto$ff.cc:298:slice$717 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1904, Q = \design122_12_5_inst.memory_cntrl_instance653.wr_addr).
Adding EN signal on $auto$ff.cc:298:slice$735 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1910, Q = \design122_12_5_inst.memory_cntrl_instance542.rd_addr).
Adding EN signal on $auto$ff.cc:298:slice$737 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1914, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_addr).
Adding EN signal on $auto$ff.cc:298:slice$755 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1918, Q = \design122_12_5_inst.memory_cntrl_instance433.rd_addr).
Adding EN signal on $auto$ff.cc:298:slice$757 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1922, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_addr).
Adding EN signal on $auto$ff.cc:298:slice$775 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1928, Q = \design122_12_5_inst.memory_cntrl_instance324.rd_addr).
Adding EN signal on $auto$ff.cc:298:slice$777 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1932, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_addr).
Adding EN signal on $auto$ff.cc:298:slice$795 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1938, Q = \design122_12_5_inst.memory_cntrl_instance210.rd_addr).
Adding EN signal on $auto$ff.cc:298:slice$797 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1942, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_addr).
Adding EN signal on $auto$ff.cc:298:slice$815 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1948, Q = \design122_12_5_inst.memory_cntrl_instance120114.rd_addr).
Adding EN signal on $auto$ff.cc:298:slice$817 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1952, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_addr).
Adding EN signal on $auto$ff.cc:298:slice$835 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1958, Q = \design122_12_5_inst.memory_cntrl_instance110101.rd_addr).
Adding EN signal on $auto$ff.cc:298:slice$837 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1962, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_addr).
Adding EN signal on $auto$ff.cc:298:slice$855 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1968, Q = \design122_12_5_inst.memory_cntrl_instance102.rd_addr).
Adding EN signal on $auto$ff.cc:298:slice$857 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1972, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_addr).
Adding EN signal on $auto$ff.cc:298:slice$875 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1978, Q = \design122_12_5_inst.memory_cntrl_instance10092.rd_addr).
Adding EN signal on $auto$ff.cc:298:slice$877 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$1982, Q = \design122_12_5_inst.memory_cntrl_instance10092.wr_addr).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance10092.rd_en_867 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2110, Q = \design122_12_5_inst.memory_cntrl_instance10092.rd_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance10092.reset_mem_879 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2114, Q = \design122_12_5_inst.memory_cntrl_instance10092.reset_mem).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance10092.wr_en_865 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2118, Q = \design122_12_5_inst.memory_cntrl_instance10092.wr_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance102.rd_en_847 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2122, Q = \design122_12_5_inst.memory_cntrl_instance102.rd_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance102.reset_mem_859 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2126, Q = \design122_12_5_inst.memory_cntrl_instance102.reset_mem).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance102.wr_en_845 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2130, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance110101.rd_en_827 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2134, Q = \design122_12_5_inst.memory_cntrl_instance110101.rd_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance110101.reset_mem_839 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2138, Q = \design122_12_5_inst.memory_cntrl_instance110101.reset_mem).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance110101.wr_en_825 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2142, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance120114.rd_en_807 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2146, Q = \design122_12_5_inst.memory_cntrl_instance120114.rd_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance120114.reset_mem_819 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2150, Q = \design122_12_5_inst.memory_cntrl_instance120114.reset_mem).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance120114.wr_en_805 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2154, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance210.rd_en_787 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2158, Q = \design122_12_5_inst.memory_cntrl_instance210.rd_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance210.reset_mem_799 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2162, Q = \design122_12_5_inst.memory_cntrl_instance210.reset_mem).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance210.wr_en_785 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2166, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance324.rd_en_767 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2170, Q = \design122_12_5_inst.memory_cntrl_instance324.rd_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance324.reset_mem_779 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2174, Q = \design122_12_5_inst.memory_cntrl_instance324.reset_mem).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance324.wr_en_765 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2178, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance433.rd_en_747 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2182, Q = \design122_12_5_inst.memory_cntrl_instance433.rd_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance433.reset_mem_759 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2186, Q = \design122_12_5_inst.memory_cntrl_instance433.reset_mem).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance433.wr_en_745 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2190, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance542.rd_en_727 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2194, Q = \design122_12_5_inst.memory_cntrl_instance542.rd_en).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance542.reset_mem_739 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2198, Q = \design122_12_5_inst.memory_cntrl_instance542.reset_mem).
Adding EN signal on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance542.wr_en_725 ($dff) from module design122_12_5_top (D = $auto$rtlil.cc:2613:Mux$2202, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_en).
[#visit=210, #solve=0, #remove=0, time=0.03 sec.]

9.159. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 20 unused cells and 270 unused wires.
<suppressed ~21 debug messages>

9.160. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.
<suppressed ~72 debug messages>

9.161. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~227 debug messages>

9.162. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.163. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~72 debug messages>
Removed a total of 24 cells.

9.164. Executing OPT_SHARE pass.

9.165. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=208, #solve=0, #remove=0, time=0.03 sec.]

9.166. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

9.167. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.168. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~227 debug messages>

9.169. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.170. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.171. Executing OPT_SHARE pass.

9.172. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=208, #solve=0, #remove=0, time=0.03 sec.]

9.173. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.174. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 3

9.175. Executing PMUXTREE pass.

9.176. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3137 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3139 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3123 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3125 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3109 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3111 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3081 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3083 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3067 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3069 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3053 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3055 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3025 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3027 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3011 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$3013 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2997 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2999 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2971 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2973 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2957 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2959 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2943 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2945 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2915 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2917 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2901 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2903 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2887 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2889 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2861 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2863 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2847 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2849 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2833 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2835 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2805 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2807 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2791 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2793 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2777 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2779 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2749 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2751 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2735 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2737 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2721 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2723 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2661 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2663 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2649 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2651 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2635 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2637 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2621 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2623 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2593 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2595 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2579 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2581 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2565 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2567 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2537 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2539 to a pmux with 2 cases.
Converting design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2523 ... design122_12_5_top.$auto$pmuxtree.cc:65:recursive_mux_generator$2525 to a pmux with 2 cases.
Converted 66 (p)mux cells into 33 pmux cells.
<suppressed ~453 debug messages>

9.177. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

9.178. Executing TECHMAP pass (map to technology primitives).

9.178.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.178.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

9.178.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~3813 debug messages>

9.179. Printing statistics.

=== design122_12_5_top ===

   Number of wires:               7896
   Number of wire bits:          77667
   Number of public wires:         679
   Number of public wire bits:   11576
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              24012
     $_AND_                       2736
     $_DFFE_PP_                    992
     $_DFF_PP0_                    384
     $_DFF_P_                     1606
     $_MUX_                      10366
     $_NOT_                        573
     $_OR_                        4023
     $_XOR_                       3320
     TDP_RAM36K                     12

9.180. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.
<suppressed ~11379 debug messages>

9.181. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~14142 debug messages>
Removed a total of 4714 cells.

9.182. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.183. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.184. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.185. Executing OPT_SHARE pass.

9.186. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on design122_12_5_top:design122_12_5_inst.register_instance110104.data_out[0]_14287 ($_DFF_P_) from module design122_12_5_top.
[#visit=2425, #solve=0, #remove=1, time=0.11 sec.]

9.187. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 404 unused cells and 5706 unused wires.
<suppressed ~405 debug messages>

9.188. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.
<suppressed ~308 debug messages>

9.189. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.190. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.191. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

9.192. Executing OPT_SHARE pass.

9.193. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on design122_12_5_top:design122_12_5_inst.full_adder_instance214.full_adder_inst.b[0]_10207 ($_DFF_P_) from module design122_12_5_top.
Setting constant 0-bit at position 0 on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance102.wr_data_mem[0]_13123 ($_DFFE_PP_) from module design122_12_5_top.
Setting constant 0-bit at position 0 on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance120114.wr_data_mem[0]_13353 ($_DFFE_PP_) from module design122_12_5_top.
Setting constant 0-bit at position 0 on design122_12_5_top:design122_12_5_inst.memory_cntrl_instance324.wr_data_mem[0]_13573 ($_DFFE_PP_) from module design122_12_5_top.
[#visit=2421, #solve=0, #remove=4, time=0.09 sec.]

9.194. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 6 unused cells and 43 unused wires.
<suppressed ~7 debug messages>

9.195. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.
<suppressed ~24 debug messages>

9.196. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.197. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.198. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.199. Executing OPT_SHARE pass.

9.200. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2417, #solve=0, #remove=0, time=0.09 sec.]

9.201. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.202. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 3

9.203. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.
<suppressed ~2238 debug messages>

9.204. Executing TECHMAP pass (map to technology primitives).

9.204.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.204.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

9.205. Printing statistics.

=== design122_12_5_top ===

   Number of wires:               2875
   Number of wire bits:          29049
   Number of public wires:         679
   Number of public wire bits:   11576
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              11045
     $_AND_                       1955
     $_DFFE_PP_                    833
     $_DFF_PP0_                    384
     $_DFF_P_                     1200
     $_MUX_                       3867
     $_NOT_                        647
     $_OR_                        1489
     $_XOR_                        658
     TDP_RAM36K                     12

9.206. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.207. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

9.208. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.209. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.210. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.211. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2417, #solve=0, #remove=0, time=0.09 sec.]

9.212. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 122 unused wires.
<suppressed ~1 debug messages>

9.213. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

9.214. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.215. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.216. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.217. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.218. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.219. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2417, #solve=0, #remove=0, time=0.09 sec.]

9.220. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.221. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

9.222. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.223. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.224. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.225. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.226. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.227. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2417, #solve=0, #remove=0, time=0.10 sec.]

9.228. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2417, #solve=352, #remove=0, time=0.10 sec.]

9.229. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.230. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

9.231. Printing statistics.

=== design122_12_5_top ===

   Number of wires:               2753
   Number of wire bits:          27913
   Number of public wires:         679
   Number of public wire bits:   11576
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              11033
     $_AND_                       1955
     $_DFFE_PP_                    833
     $_DFF_PP0_                    384
     $_DFF_P_                     1200
     $_MUX_                       3867
     $_NOT_                        635
     $_OR_                        1489
     $_XOR_                        658
     TDP_RAM36K                     12

   Number of Generic REGs:          2417

ABC-DFF iteration : 1

9.232. Executing ABC pass (technology mapping using ABC).

9.232.1. Summary of detected clock domains:
  384 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2288, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2294, arst={ }, srst={ }
  27 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2300, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2313, arst={ }, srst={ }
  27 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2319, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2332, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2338, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2344, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2350, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2356, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2362, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2368, arst={ }, srst={ }
  74 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$651, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2267, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2264, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2261, arst={ }, srst={ }
  42 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$671, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2258, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2255, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2252, arst={ }, srst={ }
  42 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$691, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2285, arst={ }, srst={ }
  27 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2282, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2279, arst={ }, srst={ }
  26 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$711, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2276, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2273, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2270, arst={ }, srst={ }
  26 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$731, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2401, arst={ }, srst={ }
  27 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2512, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2398, arst={ }, srst={ }
  42 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$751, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2407, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2503, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2404, arst={ }, srst={ }
  10 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$771, arst={ }, srst={ }
  74 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2413, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2494, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2410, arst={ }, srst={ }
  74 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$791, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2419, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2485, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2416, arst={ }, srst={ }
  10 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$811, arst={ }, srst={ }
  74 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2425, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2476, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2422, arst={ }, srst={ }
  26 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$831, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2431, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2467, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2428, arst={ }, srst={ }
  10 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$851, arst={ }, srst={ }
  74 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2437, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2458, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2434, arst={ }, srst={ }
  134 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$871, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2443, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2449, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2440, arst={ }, srst={ }
  7622 cells in clk=\clk, en={ }, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2291, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2297, arst={ }, srst={ }
  24 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2310, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2316, arst={ }, srst={ }
  24 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2329, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2335, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2341, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2347, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2353, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2359, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2365, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2371, arst={ }, srst={ }

  #logic partitions = 74

9.232.2. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 7622 gates and 8745 wires to a netlist network with 1121 inputs and 1711 outputs (dfl=1).

9.232.2.1. Executing ABC.
[Time = 0.58 sec.]

9.232.3. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 384 gates and 416 wires to a netlist network with 32 inputs and 384 outputs (dfl=1).

9.232.3.1. Executing ABC.
[Time = 0.08 sec.]

9.232.4. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$871
Extracted 134 gates and 169 wires to a netlist network with 33 inputs and 16 outputs (dfl=1).

9.232.4.1. Executing ABC.
[Time = 0.07 sec.]

9.232.5. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2413
Extracted 73 gates and 77 wires to a netlist network with 2 inputs and 13 outputs (dfl=1).

9.232.5.1. Executing ABC.
[Time = 0.08 sec.]

9.232.6. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$791
Extracted 74 gates and 118 wires to a netlist network with 44 inputs and 34 outputs (dfl=1).

9.232.6.1. Executing ABC.
[Time = 0.07 sec.]

9.232.7. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2425
Extracted 73 gates and 77 wires to a netlist network with 2 inputs and 13 outputs (dfl=1).

9.232.7.1. Executing ABC.
[Time = 0.08 sec.]

9.232.8. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$651
Extracted 74 gates and 118 wires to a netlist network with 44 inputs and 34 outputs (dfl=1).

9.232.8.1. Executing ABC.
[Time = 0.06 sec.]

9.232.9. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2437
Extracted 73 gates and 77 wires to a netlist network with 2 inputs and 13 outputs (dfl=1).

9.232.9.1. Executing ABC.
[Time = 0.08 sec.]

9.232.10. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2407
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.232.10.1. Executing ABC.
[Time = 0.09 sec.]

9.232.11. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2431
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.232.11.1. Executing ABC.
[Time = 0.08 sec.]

9.232.12. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2443
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.232.12.1. Executing ABC.
[Time = 0.08 sec.]

9.232.13. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2267
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.232.13.1. Executing ABC.
[Time = 0.08 sec.]

9.232.14. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2401
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.232.14.1. Executing ABC.
[Time = 0.08 sec.]

9.232.15. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2419
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.232.15.1. Executing ABC.
[Time = 0.08 sec.]

9.232.16. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2258
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.232.16.1. Executing ABC.
[Time = 0.07 sec.]

9.232.17. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2276
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.232.17.1. Executing ABC.
[Time = 0.08 sec.]

9.232.18. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2285
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.232.18.1. Executing ABC.
[Time = 0.09 sec.]

9.232.19. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2434
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.232.19.1. Executing ABC.
[Time = 0.07 sec.]

9.232.20. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2398
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.232.20.1. Executing ABC.
[Time = 0.07 sec.]

9.232.21. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2440
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.232.21.1. Executing ABC.
[Time = 0.07 sec.]

9.232.22. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2270
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.232.22.1. Executing ABC.
[Time = 0.07 sec.]

9.232.23. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2410
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.232.23.1. Executing ABC.
[Time = 0.07 sec.]

9.232.24. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2416
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.232.24.1. Executing ABC.
[Time = 0.07 sec.]

9.232.25. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2279
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.232.25.1. Executing ABC.
[Time = 0.07 sec.]

9.232.26. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2404
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.232.26.1. Executing ABC.
[Time = 0.07 sec.]

9.232.27. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2252
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.232.27.1. Executing ABC.
[Time = 0.07 sec.]

9.232.28. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2261
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.232.28.1. Executing ABC.
[Time = 0.07 sec.]

9.232.29. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2422
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.232.29.1. Executing ABC.
[Time = 0.09 sec.]

9.232.30. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2428
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.232.30.1. Executing ABC.
[Time = 0.07 sec.]

9.232.31. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$691
Extracted 42 gates and 70 wires to a netlist network with 28 inputs and 18 outputs (dfl=1).

9.232.31.1. Executing ABC.
[Time = 0.05 sec.]

9.232.32. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$671
Extracted 42 gates and 70 wires to a netlist network with 28 inputs and 18 outputs (dfl=1).

9.232.32.1. Executing ABC.
[Time = 0.05 sec.]

9.232.33. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$751
Extracted 42 gates and 70 wires to a netlist network with 28 inputs and 18 outputs (dfl=1).

9.232.33.1. Executing ABC.
[Time = 0.05 sec.]

9.232.34. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2494
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.232.34.1. Executing ABC.
[Time = 0.06 sec.]

9.232.35. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2458
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.232.35.1. Executing ABC.
[Time = 0.07 sec.]

9.232.36. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2288
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.232.36.1. Executing ABC.
[Time = 0.05 sec.]

9.232.37. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2485
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.232.37.1. Executing ABC.
[Time = 0.06 sec.]

9.232.38. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2449
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.232.38.1. Executing ABC.
[Time = 0.06 sec.]

9.232.39. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2476
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.232.39.1. Executing ABC.
[Time = 0.06 sec.]

9.232.40. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2467
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.232.40.1. Executing ABC.
[Time = 0.07 sec.]

9.232.41. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2503
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.232.41.1. Executing ABC.
[Time = 0.06 sec.]

9.232.42. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2294
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.232.42.1. Executing ABC.
[Time = 0.05 sec.]

9.232.43. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2313
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.232.43.1. Executing ABC.
[Time = 0.05 sec.]

9.232.44. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2332
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.232.44.1. Executing ABC.
[Time = 0.05 sec.]

9.232.45. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2338
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.232.45.1. Executing ABC.
[Time = 0.05 sec.]

9.232.46. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2344
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.232.46.1. Executing ABC.
[Time = 0.05 sec.]

9.232.47. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2350
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.232.47.1. Executing ABC.
[Time = 0.05 sec.]

9.232.48. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2356
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.232.48.1. Executing ABC.
[Time = 0.05 sec.]

9.232.49. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2362
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.232.49.1. Executing ABC.
[Time = 0.05 sec.]

9.232.50. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2368
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.232.50.1. Executing ABC.
[Time = 0.05 sec.]

9.232.51. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2264
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.232.51.1. Executing ABC.
[Time = 0.06 sec.]

9.232.52. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2255
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.232.52.1. Executing ABC.
[Time = 0.06 sec.]

9.232.53. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2273
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.232.53.1. Executing ABC.
[Time = 0.06 sec.]

9.232.54. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43600$auto$opt_dff.cc:195:make_patterns_logic$2297
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.232.54.1. Executing ABC.
[Time = 0.04 sec.]

9.232.55. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43153$auto$opt_dff.cc:195:make_patterns_logic$2359
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.232.55.1. Executing ABC.
[Time = 0.05 sec.]

9.232.56. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43562$auto$opt_dff.cc:195:make_patterns_logic$2291
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.232.56.1. Executing ABC.
[Time = 0.05 sec.]

9.232.57. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43638$auto$opt_dff.cc:195:make_patterns_logic$2316
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.232.57.1. Executing ABC.
[Time = 0.05 sec.]

9.232.58. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43115$auto$opt_dff.cc:195:make_patterns_logic$2353
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.232.58.1. Executing ABC.
[Time = 0.05 sec.]

9.232.59. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43039$auto$opt_dff.cc:195:make_patterns_logic$2347
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.232.59.1. Executing ABC.
[Time = 0.05 sec.]

9.232.60. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42964$auto$opt_dff.cc:195:make_patterns_logic$2365
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.232.60.1. Executing ABC.
[Time = 0.04 sec.]

9.232.61. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42926$auto$opt_dff.cc:195:make_patterns_logic$2341
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.232.61.1. Executing ABC.
[Time = 0.05 sec.]

9.232.62. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43191$auto$opt_dff.cc:195:make_patterns_logic$2335
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.232.62.1. Executing ABC.
[Time = 0.04 sec.]

9.232.63. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43077$auto$opt_dff.cc:195:make_patterns_logic$2371
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.232.63.1. Executing ABC.
[Time = 0.05 sec.]

9.232.64. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2512
Extracted 27 gates and 55 wires to a netlist network with 27 inputs and 27 outputs (dfl=1).

9.232.64.1. Executing ABC.
[Time = 0.07 sec.]

9.232.65. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2282
Extracted 27 gates and 55 wires to a netlist network with 27 inputs and 27 outputs (dfl=1).

9.232.65.1. Executing ABC.
[Time = 0.06 sec.]

9.232.66. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2319
Extracted 27 gates and 53 wires to a netlist network with 26 inputs and 26 outputs (dfl=1).

9.232.66.1. Executing ABC.
[Time = 0.05 sec.]

9.232.67. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2300
Extracted 27 gates and 53 wires to a netlist network with 26 inputs and 26 outputs (dfl=1).

9.232.67.1. Executing ABC.
[Time = 0.05 sec.]

9.232.68. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$831
Extracted 26 gates and 46 wires to a netlist network with 20 inputs and 10 outputs (dfl=1).

9.232.68.1. Executing ABC.
[Time = 0.05 sec.]

9.232.69. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$731
Extracted 26 gates and 46 wires to a netlist network with 20 inputs and 10 outputs (dfl=1).

9.232.69.1. Executing ABC.
[Time = 0.05 sec.]

9.232.70. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$711
Extracted 26 gates and 40 wires to a netlist network with 13 inputs and 10 outputs (dfl=1).

9.232.70.1. Executing ABC.
[Time = 0.04 sec.]

9.232.71. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44676$auto$opt_dff.cc:195:make_patterns_logic$2310
Extracted 24 gates and 48 wires to a netlist network with 24 inputs and 24 outputs (dfl=1).

9.232.71.1. Executing ABC.
[Time = 0.04 sec.]

9.232.72. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44646$auto$opt_dff.cc:195:make_patterns_logic$2329
Extracted 24 gates and 48 wires to a netlist network with 24 inputs and 24 outputs (dfl=1).

9.232.72.1. Executing ABC.
[Time = 0.05 sec.]

9.232.73. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$851
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 10 outputs (dfl=1).

9.232.73.1. Executing ABC.
[Time = 0.04 sec.]

9.232.74. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$811
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 10 outputs (dfl=1).

9.232.74.1. Executing ABC.
[Time = 0.05 sec.]

9.232.75. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$771
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 10 outputs (dfl=1).

9.232.75.1. Executing ABC.
[Time = 0.05 sec.]

9.233. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.234. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~69 debug messages>
Removed a total of 23 cells.

9.235. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.236. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.237. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.238. Executing OPT_SHARE pass.

9.239. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2384, #solve=0, #remove=0, time=0.08 sec.]

9.240. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 1 unused cells and 11151 unused wires.
<suppressed ~14 debug messages>

9.241. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.242. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.243. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.244. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.245. Executing OPT_SHARE pass.

9.246. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2384, #solve=0, #remove=0, time=0.09 sec.]

9.247. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.248. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 2

ABC-DFF iteration : 2

9.249. Executing ABC pass (technology mapping using ABC).

9.249.1. Summary of detected clock domains:
  20 cells in clk=\clk, en=$abc$45059$auto$opt_dff.cc:220:make_patterns_logic$771, arst={ }, srst={ }
  20 cells in clk=\clk, en=$abc$45030$auto$opt_dff.cc:220:make_patterns_logic$811, arst={ }, srst={ }
  20 cells in clk=\clk, en=$abc$45001$auto$opt_dff.cc:220:make_patterns_logic$851, arst={ }, srst={ }
  73 cells in clk=\clk, en=$abc$44646$auto$opt_dff.cc:195:make_patterns_logic$2329, arst={ }, srst={ }
  73 cells in clk=\clk, en=$abc$44676$auto$opt_dff.cc:195:make_patterns_logic$2310, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$44834$auto$opt_dff.cc:220:make_patterns_logic$711, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$44799$auto$opt_dff.cc:220:make_patterns_logic$731, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$44764$auto$opt_dff.cc:220:make_patterns_logic$831, arst={ }, srst={ }
  27 cells in clk=\clk, en=$abc$44735$auto$opt_dff.cc:195:make_patterns_logic$2300, arst={ }, srst={ }
  27 cells in clk=\clk, en=$abc$44706$auto$opt_dff.cc:195:make_patterns_logic$2319, arst={ }, srst={ }
  2 cells in clk=\clk, en=$abc$44676$auto$opt_dff.cc:195:make_patterns_logic$2282, arst={ }, srst={ }
  2 cells in clk=\clk, en=$abc$44646$auto$opt_dff.cc:195:make_patterns_logic$2512, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$43077$auto$opt_dff.cc:195:make_patterns_logic$2371, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$43191$auto$opt_dff.cc:195:make_patterns_logic$2335, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$42926$auto$opt_dff.cc:195:make_patterns_logic$2341, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$42964$auto$opt_dff.cc:195:make_patterns_logic$2365, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$43039$auto$opt_dff.cc:195:make_patterns_logic$2347, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$43115$auto$opt_dff.cc:195:make_patterns_logic$2353, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$43638$auto$opt_dff.cc:195:make_patterns_logic$2316, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$43562$auto$opt_dff.cc:195:make_patterns_logic$2291, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$43153$auto$opt_dff.cc:195:make_patterns_logic$2359, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$43600$auto$opt_dff.cc:195:make_patterns_logic$2297, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$43638$auto$opt_dff.cc:195:make_patterns_logic$2273, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$43600$auto$opt_dff.cc:195:make_patterns_logic$2255, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$43562$auto$opt_dff.cc:195:make_patterns_logic$2264, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$43525$auto$opt_dff.cc:195:make_patterns_logic$2368, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$43488$auto$opt_dff.cc:195:make_patterns_logic$2362, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$43451$auto$opt_dff.cc:195:make_patterns_logic$2356, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$43414$auto$opt_dff.cc:195:make_patterns_logic$2350, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$43377$auto$opt_dff.cc:195:make_patterns_logic$2344, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$43340$auto$opt_dff.cc:195:make_patterns_logic$2338, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$43303$auto$opt_dff.cc:195:make_patterns_logic$2332, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43266$auto$opt_dff.cc:195:make_patterns_logic$2313, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43229$auto$opt_dff.cc:195:make_patterns_logic$2294, arst={ }, srst={ }
  2 cells in clk=\clk, en=$abc$43191$auto$opt_dff.cc:195:make_patterns_logic$2503, arst={ }, srst={ }
  2 cells in clk=\clk, en=$abc$43153$auto$opt_dff.cc:195:make_patterns_logic$2467, arst={ }, srst={ }
  2 cells in clk=\clk, en=$abc$43115$auto$opt_dff.cc:195:make_patterns_logic$2476, arst={ }, srst={ }
  2 cells in clk=\clk, en=$abc$43077$auto$opt_dff.cc:195:make_patterns_logic$2449, arst={ }, srst={ }
  2 cells in clk=\clk, en=$abc$43039$auto$opt_dff.cc:195:make_patterns_logic$2485, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43002$auto$opt_dff.cc:195:make_patterns_logic$2288, arst={ }, srst={ }
  2 cells in clk=\clk, en=$abc$42964$auto$opt_dff.cc:195:make_patterns_logic$2458, arst={ }, srst={ }
  2 cells in clk=\clk, en=$abc$42926$auto$opt_dff.cc:195:make_patterns_logic$2494, arst={ }, srst={ }
  34 cells in clk=\clk, en=$abc$42867$auto$opt_dff.cc:220:make_patterns_logic$751, arst={ }, srst={ }
  34 cells in clk=\clk, en=$abc$42808$auto$opt_dff.cc:220:make_patterns_logic$671, arst={ }, srst={ }
  34 cells in clk=\clk, en=$abc$42749$auto$opt_dff.cc:220:make_patterns_logic$691, arst={ }, srst={ }
  45 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2428, arst={ }, srst={ }
  44 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2422, arst={ }, srst={ }
  45 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2261, arst={ }, srst={ }
  44 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2252, arst={ }, srst={ }
  44 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2404, arst={ }, srst={ }
  44 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2279, arst={ }, srst={ }
  45 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2416, arst={ }, srst={ }
  44 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2410, arst={ }, srst={ }
  44 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2270, arst={ }, srst={ }
  45 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2440, arst={ }, srst={ }
  44 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2398, arst={ }, srst={ }
  44 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2434, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$42001$auto$opt_dff.cc:195:make_patterns_logic$2285, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41925$auto$opt_dff.cc:195:make_patterns_logic$2276, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41849$auto$opt_dff.cc:195:make_patterns_logic$2258, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41773$auto$opt_dff.cc:195:make_patterns_logic$2419, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41697$auto$opt_dff.cc:195:make_patterns_logic$2401, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41621$auto$opt_dff.cc:195:make_patterns_logic$2267, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41545$auto$opt_dff.cc:195:make_patterns_logic$2443, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41469$auto$opt_dff.cc:195:make_patterns_logic$2431, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41393$auto$opt_dff.cc:195:make_patterns_logic$2407, arst={ }, srst={ }
  46 cells in clk=\clk, en=$abc$41333$auto$opt_dff.cc:195:make_patterns_logic$2437, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$41226$auto$opt_dff.cc:220:make_patterns_logic$651, arst={ }, srst={ }
  46 cells in clk=\clk, en=$abc$41166$auto$opt_dff.cc:195:make_patterns_logic$2425, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$41059$auto$opt_dff.cc:220:make_patterns_logic$791, arst={ }, srst={ }
  46 cells in clk=\clk, en=$abc$40999$auto$opt_dff.cc:195:make_patterns_logic$2413, arst={ }, srst={ }
  19 cells in clk=\clk, en=$abc$40925$auto$opt_dff.cc:220:make_patterns_logic$871, arst={ }, srst={ }
  384 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  5812 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 74

9.249.2. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 5812 gates and 6660 wires to a netlist network with 848 inputs and 1246 outputs (dfl=1).

9.249.2.1. Executing ABC.
[Time = 0.47 sec.]

9.249.3. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 384 gates and 416 wires to a netlist network with 32 inputs and 384 outputs (dfl=1).

9.249.3.1. Executing ABC.
[Time = 0.08 sec.]

9.249.4. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43153$auto$opt_dff.cc:195:make_patterns_logic$2359
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

9.249.4.1. Executing ABC.
[Time = 0.07 sec.]

9.249.5. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43600$auto$opt_dff.cc:195:make_patterns_logic$2297
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

9.249.5.1. Executing ABC.
[Time = 0.07 sec.]

9.249.6. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43562$auto$opt_dff.cc:195:make_patterns_logic$2291
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

9.249.6.1. Executing ABC.
[Time = 0.07 sec.]

9.249.7. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43638$auto$opt_dff.cc:195:make_patterns_logic$2316
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

9.249.7.1. Executing ABC.
[Time = 0.07 sec.]

9.249.8. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43115$auto$opt_dff.cc:195:make_patterns_logic$2353
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

9.249.8.1. Executing ABC.
[Time = 0.08 sec.]

9.249.9. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43039$auto$opt_dff.cc:195:make_patterns_logic$2347
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

9.249.9.1. Executing ABC.
[Time = 0.07 sec.]

9.249.10. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42964$auto$opt_dff.cc:195:make_patterns_logic$2365
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

9.249.10.1. Executing ABC.
[Time = 0.07 sec.]

9.249.11. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42926$auto$opt_dff.cc:195:make_patterns_logic$2341
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

9.249.11.1. Executing ABC.
[Time = 0.07 sec.]

9.249.12. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43191$auto$opt_dff.cc:195:make_patterns_logic$2335
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

9.249.12.1. Executing ABC.
[Time = 0.07 sec.]

9.249.13. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43077$auto$opt_dff.cc:195:make_patterns_logic$2371
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

9.249.13.1. Executing ABC.
[Time = 0.07 sec.]

9.249.14. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44676$auto$opt_dff.cc:195:make_patterns_logic$2310
Extracted 73 gates and 100 wires to a netlist network with 27 inputs and 49 outputs (dfl=1).

9.249.14.1. Executing ABC.
[Time = 0.07 sec.]

9.249.15. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44646$auto$opt_dff.cc:195:make_patterns_logic$2329
Extracted 73 gates and 100 wires to a netlist network with 27 inputs and 49 outputs (dfl=1).

9.249.15.1. Executing ABC.
[Time = 0.07 sec.]

9.249.16. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41226$auto$opt_dff.cc:220:make_patterns_logic$651
Extracted 65 gates and 100 wires to a netlist network with 35 inputs and 33 outputs (dfl=1).

9.249.16.1. Executing ABC.
[Time = 0.05 sec.]

9.249.17. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41059$auto$opt_dff.cc:220:make_patterns_logic$791
Extracted 65 gates and 100 wires to a netlist network with 35 inputs and 33 outputs (dfl=1).

9.249.17.1. Executing ABC.
[Time = 0.05 sec.]

9.249.18. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42001$auto$opt_dff.cc:195:make_patterns_logic$2285
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=1).

9.249.18.1. Executing ABC.
[Time = 0.06 sec.]

9.249.19. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41925$auto$opt_dff.cc:195:make_patterns_logic$2276
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=1).

9.249.19.1. Executing ABC.
[Time = 0.06 sec.]

9.249.20. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41849$auto$opt_dff.cc:195:make_patterns_logic$2258
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=1).

9.249.20.1. Executing ABC.
[Time = 0.07 sec.]

9.249.21. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41773$auto$opt_dff.cc:195:make_patterns_logic$2419
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=1).

9.249.21.1. Executing ABC.
[Time = 0.06 sec.]

9.249.22. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41697$auto$opt_dff.cc:195:make_patterns_logic$2401
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=1).

9.249.22.1. Executing ABC.
[Time = 0.07 sec.]

9.249.23. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41621$auto$opt_dff.cc:195:make_patterns_logic$2267
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=1).

9.249.23.1. Executing ABC.
[Time = 0.06 sec.]

9.249.24. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41545$auto$opt_dff.cc:195:make_patterns_logic$2443
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=1).

9.249.24.1. Executing ABC.
[Time = 0.06 sec.]

9.249.25. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41393$auto$opt_dff.cc:195:make_patterns_logic$2407
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=1).

9.249.25.1. Executing ABC.
[Time = 0.07 sec.]

9.249.26. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41469$auto$opt_dff.cc:195:make_patterns_logic$2431
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=1).

9.249.26.1. Executing ABC.
[Time = 0.07 sec.]

9.249.27. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41333$auto$opt_dff.cc:195:make_patterns_logic$2437
Extracted 46 gates and 50 wires to a netlist network with 4 inputs and 14 outputs (dfl=1).

9.249.27.1. Executing ABC.
[Time = 0.07 sec.]

9.249.28. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41166$auto$opt_dff.cc:195:make_patterns_logic$2425
Extracted 46 gates and 50 wires to a netlist network with 4 inputs and 14 outputs (dfl=1).

9.249.28.1. Executing ABC.
[Time = 0.06 sec.]

9.249.29. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40999$auto$opt_dff.cc:195:make_patterns_logic$2413
Extracted 46 gates and 50 wires to a netlist network with 4 inputs and 14 outputs (dfl=1).

9.249.29.1. Executing ABC.
[Time = 0.06 sec.]

9.249.30. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2261
Extracted 44 gates and 47 wires to a netlist network with 3 inputs and 13 outputs (dfl=1).

9.249.30.1. Executing ABC.
[Time = 0.05 sec.]

9.249.31. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2428
Extracted 45 gates and 47 wires to a netlist network with 2 inputs and 14 outputs (dfl=1).

9.249.31.1. Executing ABC.
[Time = 0.05 sec.]

9.249.32. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2416
Extracted 44 gates and 47 wires to a netlist network with 3 inputs and 13 outputs (dfl=1).

9.249.32.1. Executing ABC.
[Time = 0.05 sec.]

9.249.33. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2440
Extracted 44 gates and 47 wires to a netlist network with 3 inputs and 13 outputs (dfl=1).

9.249.33.1. Executing ABC.
[Time = 0.06 sec.]

9.249.34. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2404
Extracted 44 gates and 47 wires to a netlist network with 3 inputs and 13 outputs (dfl=1).

9.249.34.1. Executing ABC.
[Time = 0.09 sec.]

9.249.35. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2252
Extracted 44 gates and 47 wires to a netlist network with 3 inputs and 13 outputs (dfl=1).

9.249.35.1. Executing ABC.
[Time = 0.06 sec.]

9.249.36. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2422
Extracted 44 gates and 47 wires to a netlist network with 3 inputs and 13 outputs (dfl=1).

9.249.36.1. Executing ABC.
[Time = 0.05 sec.]

9.249.37. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2434
Extracted 44 gates and 47 wires to a netlist network with 3 inputs and 13 outputs (dfl=1).

9.249.37.1. Executing ABC.
[Time = 0.05 sec.]

9.249.38. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2398
Extracted 44 gates and 47 wires to a netlist network with 3 inputs and 13 outputs (dfl=1).

9.249.38.1. Executing ABC.
[Time = 0.06 sec.]

9.249.39. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2279
Extracted 44 gates and 47 wires to a netlist network with 3 inputs and 13 outputs (dfl=1).

9.249.39.1. Executing ABC.
[Time = 0.07 sec.]

9.249.40. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2270
Extracted 44 gates and 47 wires to a netlist network with 3 inputs and 13 outputs (dfl=1).

9.249.40.1. Executing ABC.
[Time = 0.06 sec.]

9.249.41. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2410
Extracted 44 gates and 47 wires to a netlist network with 3 inputs and 13 outputs (dfl=1).

9.249.41.1. Executing ABC.
[Time = 0.05 sec.]

9.249.42. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43303$auto$opt_dff.cc:195:make_patterns_logic$2332
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.249.42.1. Executing ABC.
[Time = 0.05 sec.]

9.249.43. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43340$auto$opt_dff.cc:195:make_patterns_logic$2338
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.249.43.1. Executing ABC.
[Time = 0.05 sec.]

9.249.44. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43377$auto$opt_dff.cc:195:make_patterns_logic$2344
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.249.44.1. Executing ABC.
[Time = 0.05 sec.]

9.249.45. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43414$auto$opt_dff.cc:195:make_patterns_logic$2350
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.249.45.1. Executing ABC.
[Time = 0.05 sec.]

9.249.46. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43451$auto$opt_dff.cc:195:make_patterns_logic$2356
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.249.46.1. Executing ABC.
[Time = 0.05 sec.]

9.249.47. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43488$auto$opt_dff.cc:195:make_patterns_logic$2362
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.249.47.1. Executing ABC.
[Time = 0.05 sec.]

9.249.48. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43525$auto$opt_dff.cc:195:make_patterns_logic$2368
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.249.48.1. Executing ABC.
[Time = 0.05 sec.]

9.249.49. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42867$auto$opt_dff.cc:220:make_patterns_logic$751
Extracted 33 gates and 52 wires to a netlist network with 19 inputs and 17 outputs (dfl=1).

9.249.49.1. Executing ABC.
[Time = 0.05 sec.]

9.249.50. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42808$auto$opt_dff.cc:220:make_patterns_logic$671
Extracted 33 gates and 52 wires to a netlist network with 19 inputs and 17 outputs (dfl=1).

9.249.50.1. Executing ABC.
[Time = 0.05 sec.]

9.249.51. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42749$auto$opt_dff.cc:220:make_patterns_logic$691
Extracted 33 gates and 52 wires to a netlist network with 19 inputs and 17 outputs (dfl=1).

9.249.51.1. Executing ABC.
[Time = 0.05 sec.]

9.249.52. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43002$auto$opt_dff.cc:195:make_patterns_logic$2288
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=1).

9.249.52.1. Executing ABC.
[Time = 0.05 sec.]

9.249.53. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43229$auto$opt_dff.cc:195:make_patterns_logic$2294
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=1).

9.249.53.1. Executing ABC.
[Time = 0.05 sec.]

9.249.54. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43266$auto$opt_dff.cc:195:make_patterns_logic$2313
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=1).

9.249.54.1. Executing ABC.
[Time = 0.05 sec.]

9.249.55. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44706$auto$opt_dff.cc:195:make_patterns_logic$2319
Extracted 27 gates and 53 wires to a netlist network with 26 inputs and 26 outputs (dfl=1).

9.249.55.1. Executing ABC.
[Time = 0.05 sec.]

9.249.56. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44735$auto$opt_dff.cc:195:make_patterns_logic$2300
Extracted 27 gates and 53 wires to a netlist network with 26 inputs and 26 outputs (dfl=1).

9.249.56.1. Executing ABC.
[Time = 0.05 sec.]

9.249.57. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45030$auto$opt_dff.cc:220:make_patterns_logic$811
Extracted 19 gates and 31 wires to a netlist network with 12 inputs and 10 outputs (dfl=1).

9.249.57.1. Executing ABC.
[Time = 0.05 sec.]

9.249.58. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45059$auto$opt_dff.cc:220:make_patterns_logic$771
Extracted 19 gates and 31 wires to a netlist network with 12 inputs and 10 outputs (dfl=1).

9.249.58.1. Executing ABC.
[Time = 0.05 sec.]

9.249.59. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45001$auto$opt_dff.cc:220:make_patterns_logic$851
Extracted 19 gates and 31 wires to a netlist network with 12 inputs and 10 outputs (dfl=1).

9.249.59.1. Executing ABC.
[Time = 0.05 sec.]

9.249.60. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40925$auto$opt_dff.cc:220:make_patterns_logic$871
Extracted 19 gates and 30 wires to a netlist network with 10 inputs and 10 outputs (dfl=1).

9.249.60.1. Executing ABC.
[Time = 0.05 sec.]

9.249.61. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44799$auto$opt_dff.cc:220:make_patterns_logic$731
Extracted 17 gates and 28 wires to a netlist network with 11 inputs and 9 outputs (dfl=1).

9.249.61.1. Executing ABC.
[Time = 0.05 sec.]

9.249.62. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44764$auto$opt_dff.cc:220:make_patterns_logic$831
Extracted 17 gates and 28 wires to a netlist network with 11 inputs and 9 outputs (dfl=1).

9.249.62.1. Executing ABC.
[Time = 0.05 sec.]

9.249.63. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43638$auto$opt_dff.cc:195:make_patterns_logic$2273
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 4 outputs (dfl=1).

9.249.63.1. Executing ABC.
[Time = 0.05 sec.]

9.249.64. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44834$auto$opt_dff.cc:220:make_patterns_logic$711
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs (dfl=1).

9.249.64.1. Executing ABC.
[Time = 0.05 sec.]

9.249.65. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43600$auto$opt_dff.cc:195:make_patterns_logic$2255
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 4 outputs (dfl=1).

9.249.65.1. Executing ABC.
[Time = 0.05 sec.]

9.249.66. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43562$auto$opt_dff.cc:195:make_patterns_logic$2264
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 4 outputs (dfl=1).

9.249.66.1. Executing ABC.
[Time = 0.04 sec.]

9.249.67. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42926$auto$opt_dff.cc:195:make_patterns_logic$2494
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs (dfl=1).

9.249.67.1. Executing ABC.
[Time = 0.04 sec.]

9.249.68. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44646$auto$opt_dff.cc:195:make_patterns_logic$2512
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs (dfl=1).

9.249.68.1. Executing ABC.
[Time = 0.05 sec.]

9.249.69. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44676$auto$opt_dff.cc:195:make_patterns_logic$2282
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs (dfl=1).

9.249.69.1. Executing ABC.
[Time = 0.04 sec.]

9.249.70. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43191$auto$opt_dff.cc:195:make_patterns_logic$2503
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs (dfl=1).

9.249.70.1. Executing ABC.
[Time = 0.05 sec.]

9.249.71. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43153$auto$opt_dff.cc:195:make_patterns_logic$2467
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs (dfl=1).

9.249.71.1. Executing ABC.
[Time = 0.05 sec.]

9.249.72. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43115$auto$opt_dff.cc:195:make_patterns_logic$2476
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs (dfl=1).

9.249.72.1. Executing ABC.
[Time = 0.05 sec.]

9.249.73. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43077$auto$opt_dff.cc:195:make_patterns_logic$2449
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs (dfl=1).

9.249.73.1. Executing ABC.
[Time = 0.05 sec.]

9.249.74. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43039$auto$opt_dff.cc:195:make_patterns_logic$2485
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs (dfl=1).

9.249.74.1. Executing ABC.
[Time = 0.04 sec.]

9.249.75. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42964$auto$opt_dff.cc:195:make_patterns_logic$2458
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs (dfl=1).

9.249.75.1. Executing ABC.
[Time = 0.05 sec.]

9.250. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.251. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

9.252. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.253. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.254. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.255. Executing OPT_SHARE pass.

9.256. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2379, #solve=0, #remove=0, time=0.11 sec.]

9.257. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 14491 unused wires.
<suppressed ~1 debug messages>

9.258. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

9.259. Executing ABC pass (technology mapping using ABC).

9.259.1. Summary of detected clock domains:
  5 cells in clk=\clk, en=$abc$42964$auto$opt_dff.cc:195:make_patterns_logic$2458, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43039$auto$opt_dff.cc:195:make_patterns_logic$2485, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43077$auto$opt_dff.cc:195:make_patterns_logic$2449, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43115$auto$opt_dff.cc:195:make_patterns_logic$2476, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43153$auto$opt_dff.cc:195:make_patterns_logic$2467, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43191$auto$opt_dff.cc:195:make_patterns_logic$2503, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$44676$auto$opt_dff.cc:195:make_patterns_logic$2282, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$44646$auto$opt_dff.cc:195:make_patterns_logic$2512, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$42926$auto$opt_dff.cc:195:make_patterns_logic$2494, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43562$auto$opt_dff.cc:195:make_patterns_logic$2264, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43600$auto$opt_dff.cc:195:make_patterns_logic$2255, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$44834$auto$opt_dff.cc:220:make_patterns_logic$711, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43638$auto$opt_dff.cc:195:make_patterns_logic$2273, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$44764$auto$opt_dff.cc:220:make_patterns_logic$831, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$44799$auto$opt_dff.cc:220:make_patterns_logic$731, arst={ }, srst={ }
  10 cells in clk=\clk, en=$abc$40925$auto$opt_dff.cc:220:make_patterns_logic$871, arst={ }, srst={ }
  20 cells in clk=\clk, en=$abc$45001$auto$opt_dff.cc:220:make_patterns_logic$851, arst={ }, srst={ }
  20 cells in clk=\clk, en=$abc$45059$auto$opt_dff.cc:220:make_patterns_logic$771, arst={ }, srst={ }
  20 cells in clk=\clk, en=$abc$45030$auto$opt_dff.cc:220:make_patterns_logic$811, arst={ }, srst={ }
  25 cells in clk=\clk, en=$abc$44735$auto$opt_dff.cc:195:make_patterns_logic$2300, arst={ }, srst={ }
  25 cells in clk=\clk, en=$abc$44706$auto$opt_dff.cc:195:make_patterns_logic$2319, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43266$auto$opt_dff.cc:195:make_patterns_logic$2313, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43229$auto$opt_dff.cc:195:make_patterns_logic$2294, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43002$auto$opt_dff.cc:195:make_patterns_logic$2288, arst={ }, srst={ }
  34 cells in clk=\clk, en=$abc$42749$auto$opt_dff.cc:220:make_patterns_logic$691, arst={ }, srst={ }
  34 cells in clk=\clk, en=$abc$42808$auto$opt_dff.cc:220:make_patterns_logic$671, arst={ }, srst={ }
  34 cells in clk=\clk, en=$abc$42867$auto$opt_dff.cc:220:make_patterns_logic$751, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43525$auto$opt_dff.cc:195:make_patterns_logic$2368, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43488$auto$opt_dff.cc:195:make_patterns_logic$2362, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43451$auto$opt_dff.cc:195:make_patterns_logic$2356, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43414$auto$opt_dff.cc:195:make_patterns_logic$2350, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43377$auto$opt_dff.cc:195:make_patterns_logic$2344, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43340$auto$opt_dff.cc:195:make_patterns_logic$2338, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43303$auto$opt_dff.cc:195:make_patterns_logic$2332, arst={ }, srst={ }
  41 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2410, arst={ }, srst={ }
  40 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2270, arst={ }, srst={ }
  40 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2279, arst={ }, srst={ }
  40 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2398, arst={ }, srst={ }
  40 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2434, arst={ }, srst={ }
  40 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2422, arst={ }, srst={ }
  40 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2252, arst={ }, srst={ }
  40 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2404, arst={ }, srst={ }
  40 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2440, arst={ }, srst={ }
  41 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2416, arst={ }, srst={ }
  40 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2428, arst={ }, srst={ }
  41 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2261, arst={ }, srst={ }
  47 cells in clk=\clk, en=$abc$40999$auto$opt_dff.cc:195:make_patterns_logic$2413, arst={ }, srst={ }
  47 cells in clk=\clk, en=$abc$41166$auto$opt_dff.cc:195:make_patterns_logic$2425, arst={ }, srst={ }
  47 cells in clk=\clk, en=$abc$41333$auto$opt_dff.cc:195:make_patterns_logic$2437, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41469$auto$opt_dff.cc:195:make_patterns_logic$2431, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41393$auto$opt_dff.cc:195:make_patterns_logic$2407, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41545$auto$opt_dff.cc:195:make_patterns_logic$2443, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41621$auto$opt_dff.cc:195:make_patterns_logic$2267, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41697$auto$opt_dff.cc:195:make_patterns_logic$2401, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41773$auto$opt_dff.cc:195:make_patterns_logic$2419, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41849$auto$opt_dff.cc:195:make_patterns_logic$2258, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$41925$auto$opt_dff.cc:195:make_patterns_logic$2276, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$42001$auto$opt_dff.cc:195:make_patterns_logic$2285, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$41059$auto$opt_dff.cc:220:make_patterns_logic$791, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$41226$auto$opt_dff.cc:220:make_patterns_logic$651, arst={ }, srst={ }
  72 cells in clk=\clk, en=$abc$44646$auto$opt_dff.cc:195:make_patterns_logic$2329, arst={ }, srst={ }
  72 cells in clk=\clk, en=$abc$44676$auto$opt_dff.cc:195:make_patterns_logic$2310, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43077$auto$opt_dff.cc:195:make_patterns_logic$2371, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43191$auto$opt_dff.cc:195:make_patterns_logic$2335, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$42926$auto$opt_dff.cc:195:make_patterns_logic$2341, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$42964$auto$opt_dff.cc:195:make_patterns_logic$2365, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43039$auto$opt_dff.cc:195:make_patterns_logic$2347, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43115$auto$opt_dff.cc:195:make_patterns_logic$2353, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43638$auto$opt_dff.cc:195:make_patterns_logic$2316, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43562$auto$opt_dff.cc:195:make_patterns_logic$2291, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43600$auto$opt_dff.cc:195:make_patterns_logic$2297, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43153$auto$opt_dff.cc:195:make_patterns_logic$2359, arst={ }, srst={ }
  384 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  5788 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 74

9.259.2. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 5788 gates and 6639 wires to a netlist network with 851 inputs and 1241 outputs (dfl=2).

9.259.2.1. Executing ABC.
[Time = 0.93 sec.]

9.259.3. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 384 gates and 416 wires to a netlist network with 32 inputs and 384 outputs (dfl=2).

9.259.3.1. Executing ABC.
[Time = 0.07 sec.]

9.259.4. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42926$auto$opt_dff.cc:195:make_patterns_logic$2341
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.259.4.1. Executing ABC.
[Time = 0.08 sec.]

9.259.5. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43077$auto$opt_dff.cc:195:make_patterns_logic$2371
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.259.5.1. Executing ABC.
[Time = 0.08 sec.]

9.259.6. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43191$auto$opt_dff.cc:195:make_patterns_logic$2335
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.259.6.1. Executing ABC.
[Time = 0.08 sec.]

9.259.7. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42964$auto$opt_dff.cc:195:make_patterns_logic$2365
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.259.7.1. Executing ABC.
[Time = 0.08 sec.]

9.259.8. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43039$auto$opt_dff.cc:195:make_patterns_logic$2347
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.259.8.1. Executing ABC.
[Time = 0.08 sec.]

9.259.9. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43115$auto$opt_dff.cc:195:make_patterns_logic$2353
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.259.9.1. Executing ABC.
[Time = 0.08 sec.]

9.259.10. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43638$auto$opt_dff.cc:195:make_patterns_logic$2316
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.259.10.1. Executing ABC.
[Time = 0.12 sec.]

9.259.11. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43562$auto$opt_dff.cc:195:make_patterns_logic$2291
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.259.11.1. Executing ABC.
[Time = 0.08 sec.]

9.259.12. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43600$auto$opt_dff.cc:195:make_patterns_logic$2297
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.259.12.1. Executing ABC.
[Time = 0.08 sec.]

9.259.13. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43153$auto$opt_dff.cc:195:make_patterns_logic$2359
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.259.13.1. Executing ABC.
[Time = 0.08 sec.]

9.259.14. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44676$auto$opt_dff.cc:195:make_patterns_logic$2310
Extracted 72 gates and 98 wires to a netlist network with 26 inputs and 48 outputs (dfl=2).

9.259.14.1. Executing ABC.
[Time = 0.08 sec.]

9.259.15. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44646$auto$opt_dff.cc:195:make_patterns_logic$2329
Extracted 72 gates and 98 wires to a netlist network with 26 inputs and 48 outputs (dfl=2).

9.259.15.1. Executing ABC.
[Time = 0.07 sec.]

9.259.16. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41226$auto$opt_dff.cc:220:make_patterns_logic$651
Extracted 65 gates and 100 wires to a netlist network with 35 inputs and 33 outputs (dfl=2).

9.259.16.1. Executing ABC.
[Time = 0.05 sec.]

9.259.17. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41059$auto$opt_dff.cc:220:make_patterns_logic$791
Extracted 65 gates and 100 wires to a netlist network with 35 inputs and 33 outputs (dfl=2).

9.259.17.1. Executing ABC.
[Time = 0.07 sec.]

9.259.18. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41849$auto$opt_dff.cc:195:make_patterns_logic$2258
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=2).

9.259.18.1. Executing ABC.
[Time = 0.07 sec.]

9.259.19. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41469$auto$opt_dff.cc:195:make_patterns_logic$2431
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=2).

9.259.19.1. Executing ABC.
[Time = 0.07 sec.]

9.259.20. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41393$auto$opt_dff.cc:195:make_patterns_logic$2407
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=2).

9.259.20.1. Executing ABC.
[Time = 0.07 sec.]

9.259.21. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41545$auto$opt_dff.cc:195:make_patterns_logic$2443
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=2).

9.259.21.1. Executing ABC.
[Time = 0.07 sec.]

9.259.22. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41621$auto$opt_dff.cc:195:make_patterns_logic$2267
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=2).

9.259.22.1. Executing ABC.
[Time = 0.07 sec.]

9.259.23. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41773$auto$opt_dff.cc:195:make_patterns_logic$2419
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=2).

9.259.23.1. Executing ABC.
[Time = 0.07 sec.]

9.259.24. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41925$auto$opt_dff.cc:195:make_patterns_logic$2276
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=2).

9.259.24.1. Executing ABC.
[Time = 0.07 sec.]

9.259.25. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42001$auto$opt_dff.cc:195:make_patterns_logic$2285
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=2).

9.259.25.1. Executing ABC.
[Time = 0.07 sec.]

9.259.26. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41697$auto$opt_dff.cc:195:make_patterns_logic$2401
Extracted 64 gates and 67 wires to a netlist network with 3 inputs and 23 outputs (dfl=2).

9.259.26.1. Executing ABC.
[Time = 0.07 sec.]

9.259.27. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41333$auto$opt_dff.cc:195:make_patterns_logic$2437
Extracted 47 gates and 51 wires to a netlist network with 4 inputs and 15 outputs (dfl=2).

9.259.27.1. Executing ABC.
[Time = 0.07 sec.]

9.259.28. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41166$auto$opt_dff.cc:195:make_patterns_logic$2425
Extracted 47 gates and 51 wires to a netlist network with 4 inputs and 15 outputs (dfl=2).

9.259.28.1. Executing ABC.
[Time = 0.07 sec.]

9.259.29. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40999$auto$opt_dff.cc:195:make_patterns_logic$2413
Extracted 47 gates and 51 wires to a netlist network with 4 inputs and 15 outputs (dfl=2).

9.259.29.1. Executing ABC.
[Time = 0.07 sec.]

9.259.30. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2261
Extracted 40 gates and 43 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.259.30.1. Executing ABC.
[Time = 0.06 sec.]

9.259.31. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2410
Extracted 41 gates and 43 wires to a netlist network with 2 inputs and 14 outputs (dfl=2).

9.259.31.1. Executing ABC.
[Time = 0.06 sec.]

9.259.32. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2416
Extracted 40 gates and 43 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.259.32.1. Executing ABC.
[Time = 0.06 sec.]

9.259.33. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2428
Extracted 40 gates and 43 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.259.33.1. Executing ABC.
[Time = 0.06 sec.]

9.259.34. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2440
Extracted 40 gates and 43 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.259.34.1. Executing ABC.
[Time = 0.06 sec.]

9.259.35. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2404
Extracted 40 gates and 43 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.259.35.1. Executing ABC.
[Time = 0.06 sec.]

9.259.36. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2398
Extracted 40 gates and 43 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.259.36.1. Executing ABC.
[Time = 0.06 sec.]

9.259.37. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2252
Extracted 40 gates and 43 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.259.37.1. Executing ABC.
[Time = 0.06 sec.]

9.259.38. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2422
Extracted 40 gates and 43 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.259.38.1. Executing ABC.
[Time = 0.06 sec.]

9.259.39. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2434
Extracted 40 gates and 43 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.259.39.1. Executing ABC.
[Time = 0.06 sec.]

9.259.40. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2279
Extracted 40 gates and 43 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.259.40.1. Executing ABC.
[Time = 0.06 sec.]

9.259.41. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2270
Extracted 40 gates and 43 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.259.41.1. Executing ABC.
[Time = 0.06 sec.]

9.259.42. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42749$auto$opt_dff.cc:220:make_patterns_logic$691
Extracted 33 gates and 52 wires to a netlist network with 19 inputs and 17 outputs (dfl=2).

9.259.42.1. Executing ABC.
[Time = 0.05 sec.]

9.259.43. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42808$auto$opt_dff.cc:220:make_patterns_logic$671
Extracted 33 gates and 52 wires to a netlist network with 19 inputs and 17 outputs (dfl=2).

9.259.43.1. Executing ABC.
[Time = 0.05 sec.]

9.259.44. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42867$auto$opt_dff.cc:220:make_patterns_logic$751
Extracted 33 gates and 52 wires to a netlist network with 19 inputs and 17 outputs (dfl=2).

9.259.44.1. Executing ABC.
[Time = 0.05 sec.]

9.259.45. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43525$auto$opt_dff.cc:195:make_patterns_logic$2368
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.259.45.1. Executing ABC.
[Time = 0.05 sec.]

9.259.46. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43266$auto$opt_dff.cc:195:make_patterns_logic$2313
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.259.46.1. Executing ABC.
[Time = 0.05 sec.]

9.259.47. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43229$auto$opt_dff.cc:195:make_patterns_logic$2294
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.259.47.1. Executing ABC.
[Time = 0.05 sec.]

9.259.48. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43002$auto$opt_dff.cc:195:make_patterns_logic$2288
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.259.48.1. Executing ABC.
[Time = 0.05 sec.]

9.259.49. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43488$auto$opt_dff.cc:195:make_patterns_logic$2362
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.259.49.1. Executing ABC.
[Time = 0.05 sec.]

9.259.50. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43451$auto$opt_dff.cc:195:make_patterns_logic$2356
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.259.50.1. Executing ABC.
[Time = 0.08 sec.]

9.259.51. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43414$auto$opt_dff.cc:195:make_patterns_logic$2350
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.259.51.1. Executing ABC.
[Time = 0.06 sec.]

9.259.52. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43377$auto$opt_dff.cc:195:make_patterns_logic$2344
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.259.52.1. Executing ABC.
[Time = 0.05 sec.]

9.259.53. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43340$auto$opt_dff.cc:195:make_patterns_logic$2338
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.259.53.1. Executing ABC.
[Time = 0.05 sec.]

9.259.54. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43303$auto$opt_dff.cc:195:make_patterns_logic$2332
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.259.54.1. Executing ABC.
[Time = 0.05 sec.]

9.259.55. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44706$auto$opt_dff.cc:195:make_patterns_logic$2319
Extracted 25 gates and 50 wires to a netlist network with 25 inputs and 25 outputs (dfl=2).

9.259.55.1. Executing ABC.
[Time = 0.05 sec.]

9.259.56. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44735$auto$opt_dff.cc:195:make_patterns_logic$2300
Extracted 25 gates and 50 wires to a netlist network with 25 inputs and 25 outputs (dfl=2).

9.259.56.1. Executing ABC.
[Time = 0.05 sec.]

9.259.57. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45030$auto$opt_dff.cc:220:make_patterns_logic$811
Extracted 19 gates and 31 wires to a netlist network with 12 inputs and 10 outputs (dfl=2).

9.259.57.1. Executing ABC.
[Time = 0.05 sec.]

9.259.58. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45001$auto$opt_dff.cc:220:make_patterns_logic$851
Extracted 19 gates and 31 wires to a netlist network with 12 inputs and 10 outputs (dfl=2).

9.259.58.1. Executing ABC.
[Time = 0.05 sec.]

9.259.59. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45059$auto$opt_dff.cc:220:make_patterns_logic$771
Extracted 19 gates and 31 wires to a netlist network with 12 inputs and 10 outputs (dfl=2).

9.259.59.1. Executing ABC.
[Time = 0.05 sec.]

9.259.60. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44799$auto$opt_dff.cc:220:make_patterns_logic$731
Extracted 17 gates and 28 wires to a netlist network with 11 inputs and 9 outputs (dfl=2).

9.259.60.1. Executing ABC.
[Time = 0.05 sec.]

9.259.61. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44764$auto$opt_dff.cc:220:make_patterns_logic$831
Extracted 17 gates and 28 wires to a netlist network with 11 inputs and 9 outputs (dfl=2).

9.259.61.1. Executing ABC.
[Time = 0.05 sec.]

9.259.62. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40925$auto$opt_dff.cc:220:make_patterns_logic$871
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 5 outputs (dfl=2).

9.259.62.1. Executing ABC.
[Time = 0.05 sec.]

9.259.63. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43562$auto$opt_dff.cc:195:make_patterns_logic$2264
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.259.63.1. Executing ABC.
[Time = 0.05 sec.]

9.259.64. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43039$auto$opt_dff.cc:195:make_patterns_logic$2485
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.259.64.1. Executing ABC.
[Time = 0.05 sec.]

9.259.65. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43077$auto$opt_dff.cc:195:make_patterns_logic$2449
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.259.65.1. Executing ABC.
[Time = 0.05 sec.]

9.259.66. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43115$auto$opt_dff.cc:195:make_patterns_logic$2476
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.259.66.1. Executing ABC.
[Time = 0.05 sec.]

9.259.67. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43153$auto$opt_dff.cc:195:make_patterns_logic$2467
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.259.67.1. Executing ABC.
[Time = 0.05 sec.]

9.259.68. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43191$auto$opt_dff.cc:195:make_patterns_logic$2503
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.259.68.1. Executing ABC.
[Time = 0.05 sec.]

9.259.69. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44676$auto$opt_dff.cc:195:make_patterns_logic$2282
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.259.69.1. Executing ABC.
[Time = 0.05 sec.]

9.259.70. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44646$auto$opt_dff.cc:195:make_patterns_logic$2512
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.259.70.1. Executing ABC.
[Time = 0.05 sec.]

9.259.71. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42926$auto$opt_dff.cc:195:make_patterns_logic$2494
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.259.71.1. Executing ABC.
[Time = 0.05 sec.]

9.259.72. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43600$auto$opt_dff.cc:195:make_patterns_logic$2255
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.259.72.1. Executing ABC.
[Time = 0.05 sec.]

9.259.73. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43638$auto$opt_dff.cc:195:make_patterns_logic$2273
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.259.73.1. Executing ABC.
[Time = 0.05 sec.]

9.259.74. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42964$auto$opt_dff.cc:195:make_patterns_logic$2458
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.259.74.1. Executing ABC.
[Time = 0.05 sec.]

9.259.75. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44834$auto$opt_dff.cc:220:make_patterns_logic$711
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs (dfl=2).

9.259.75.1. Executing ABC.
[Time = 0.05 sec.]

9.260. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.261. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

9.262. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.263. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.264. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.265. Executing OPT_SHARE pass.

9.266. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2379, #solve=0, #remove=0, time=0.06 sec.]

9.267. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 14402 unused wires.
<suppressed ~1 debug messages>

9.268. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

9.269. Executing ABC pass (technology mapping using ABC).

9.269.1. Summary of detected clock domains:
  4 cells in clk=\clk, en=$abc$44834$auto$opt_dff.cc:220:make_patterns_logic$711, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$42964$auto$opt_dff.cc:195:make_patterns_logic$2458, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43638$auto$opt_dff.cc:195:make_patterns_logic$2273, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43600$auto$opt_dff.cc:195:make_patterns_logic$2255, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$42926$auto$opt_dff.cc:195:make_patterns_logic$2494, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$44646$auto$opt_dff.cc:195:make_patterns_logic$2512, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$44676$auto$opt_dff.cc:195:make_patterns_logic$2282, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43191$auto$opt_dff.cc:195:make_patterns_logic$2503, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43153$auto$opt_dff.cc:195:make_patterns_logic$2467, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43115$auto$opt_dff.cc:195:make_patterns_logic$2476, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43077$auto$opt_dff.cc:195:make_patterns_logic$2449, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43039$auto$opt_dff.cc:195:make_patterns_logic$2485, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$43562$auto$opt_dff.cc:195:make_patterns_logic$2264, arst={ }, srst={ }
  13 cells in clk=\clk, en=$abc$40925$auto$opt_dff.cc:220:make_patterns_logic$871, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$44764$auto$opt_dff.cc:220:make_patterns_logic$831, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$44799$auto$opt_dff.cc:220:make_patterns_logic$731, arst={ }, srst={ }
  20 cells in clk=\clk, en=$abc$45059$auto$opt_dff.cc:220:make_patterns_logic$771, arst={ }, srst={ }
  20 cells in clk=\clk, en=$abc$45001$auto$opt_dff.cc:220:make_patterns_logic$851, arst={ }, srst={ }
  20 cells in clk=\clk, en=$abc$45030$auto$opt_dff.cc:220:make_patterns_logic$811, arst={ }, srst={ }
  25 cells in clk=\clk, en=$abc$44735$auto$opt_dff.cc:195:make_patterns_logic$2300, arst={ }, srst={ }
  25 cells in clk=\clk, en=$abc$44706$auto$opt_dff.cc:195:make_patterns_logic$2319, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43303$auto$opt_dff.cc:195:make_patterns_logic$2332, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43340$auto$opt_dff.cc:195:make_patterns_logic$2338, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43377$auto$opt_dff.cc:195:make_patterns_logic$2344, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43414$auto$opt_dff.cc:195:make_patterns_logic$2350, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43451$auto$opt_dff.cc:195:make_patterns_logic$2356, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43488$auto$opt_dff.cc:195:make_patterns_logic$2362, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43002$auto$opt_dff.cc:195:make_patterns_logic$2288, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43229$auto$opt_dff.cc:195:make_patterns_logic$2294, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43266$auto$opt_dff.cc:195:make_patterns_logic$2313, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$43525$auto$opt_dff.cc:195:make_patterns_logic$2368, arst={ }, srst={ }
  34 cells in clk=\clk, en=$abc$42867$auto$opt_dff.cc:220:make_patterns_logic$751, arst={ }, srst={ }
  34 cells in clk=\clk, en=$abc$42808$auto$opt_dff.cc:220:make_patterns_logic$671, arst={ }, srst={ }
  34 cells in clk=\clk, en=$abc$42749$auto$opt_dff.cc:220:make_patterns_logic$691, arst={ }, srst={ }
  49 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2270, arst={ }, srst={ }
  48 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2279, arst={ }, srst={ }
  48 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2434, arst={ }, srst={ }
  48 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2422, arst={ }, srst={ }
  48 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2252, arst={ }, srst={ }
  48 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2398, arst={ }, srst={ }
  48 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2404, arst={ }, srst={ }
  48 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2440, arst={ }, srst={ }
  48 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2428, arst={ }, srst={ }
  49 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2416, arst={ }, srst={ }
  48 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2410, arst={ }, srst={ }
  49 cells in clk=\clk, en=$abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2261, arst={ }, srst={ }
  50 cells in clk=\clk, en=$abc$40999$auto$opt_dff.cc:195:make_patterns_logic$2413, arst={ }, srst={ }
  50 cells in clk=\clk, en=$abc$41166$auto$opt_dff.cc:195:make_patterns_logic$2425, arst={ }, srst={ }
  50 cells in clk=\clk, en=$abc$41333$auto$opt_dff.cc:195:make_patterns_logic$2437, arst={ }, srst={ }
  60 cells in clk=\clk, en=$abc$41697$auto$opt_dff.cc:195:make_patterns_logic$2401, arst={ }, srst={ }
  60 cells in clk=\clk, en=$abc$42001$auto$opt_dff.cc:195:make_patterns_logic$2285, arst={ }, srst={ }
  60 cells in clk=\clk, en=$abc$41925$auto$opt_dff.cc:195:make_patterns_logic$2276, arst={ }, srst={ }
  59 cells in clk=\clk, en=$abc$41773$auto$opt_dff.cc:195:make_patterns_logic$2419, arst={ }, srst={ }
  59 cells in clk=\clk, en=$abc$41621$auto$opt_dff.cc:195:make_patterns_logic$2267, arst={ }, srst={ }
  60 cells in clk=\clk, en=$abc$41545$auto$opt_dff.cc:195:make_patterns_logic$2443, arst={ }, srst={ }
  60 cells in clk=\clk, en=$abc$41393$auto$opt_dff.cc:195:make_patterns_logic$2407, arst={ }, srst={ }
  60 cells in clk=\clk, en=$abc$41469$auto$opt_dff.cc:195:make_patterns_logic$2431, arst={ }, srst={ }
  60 cells in clk=\clk, en=$abc$41849$auto$opt_dff.cc:195:make_patterns_logic$2258, arst={ }, srst={ }
  66 cells in clk=\clk, en=$abc$41059$auto$opt_dff.cc:220:make_patterns_logic$791, arst={ }, srst={ }
  66 cells in clk=\clk, en=$abc$41226$auto$opt_dff.cc:220:make_patterns_logic$651, arst={ }, srst={ }
  72 cells in clk=\clk, en=$abc$44646$auto$opt_dff.cc:195:make_patterns_logic$2329, arst={ }, srst={ }
  72 cells in clk=\clk, en=$abc$44676$auto$opt_dff.cc:195:make_patterns_logic$2310, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43153$auto$opt_dff.cc:195:make_patterns_logic$2359, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43600$auto$opt_dff.cc:195:make_patterns_logic$2297, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43562$auto$opt_dff.cc:195:make_patterns_logic$2291, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43638$auto$opt_dff.cc:195:make_patterns_logic$2316, arst={ }, srst={ }
  102 cells in clk=\clk, en=$abc$43115$auto$opt_dff.cc:195:make_patterns_logic$2353, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43039$auto$opt_dff.cc:195:make_patterns_logic$2347, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$42964$auto$opt_dff.cc:195:make_patterns_logic$2365, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43191$auto$opt_dff.cc:195:make_patterns_logic$2335, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$43077$auto$opt_dff.cc:195:make_patterns_logic$2371, arst={ }, srst={ }
  113 cells in clk=\clk, en=$abc$42926$auto$opt_dff.cc:195:make_patterns_logic$2341, arst={ }, srst={ }
  384 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  3953 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 74

9.269.2. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 3953 gates and 4782 wires to a netlist network with 829 inputs and 1249 outputs (dfl=2).

9.269.2.1. Executing ABC.
[Time = 0.79 sec.]

9.269.3. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 384 gates and 416 wires to a netlist network with 32 inputs and 384 outputs (dfl=2).

9.269.3.1. Executing ABC.
[Time = 0.08 sec.]

9.269.4. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42926$auto$opt_dff.cc:195:make_patterns_logic$2341
Extracted 113 gates and 164 wires to a netlist network with 51 inputs and 64 outputs (dfl=2).

9.269.4.1. Executing ABC.
[Time = 0.09 sec.]

9.269.5. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43115$auto$opt_dff.cc:195:make_patterns_logic$2353
Extracted 102 gates and 142 wires to a netlist network with 40 inputs and 64 outputs (dfl=2).

9.269.5.1. Executing ABC.
[Time = 0.09 sec.]

9.269.6. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43562$auto$opt_dff.cc:195:make_patterns_logic$2291
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.269.6.1. Executing ABC.
[Time = 0.08 sec.]

9.269.7. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43153$auto$opt_dff.cc:195:make_patterns_logic$2359
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.269.7.1. Executing ABC.
[Time = 0.08 sec.]

9.269.8. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43600$auto$opt_dff.cc:195:make_patterns_logic$2297
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.269.8.1. Executing ABC.
[Time = 0.08 sec.]

9.269.9. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43638$auto$opt_dff.cc:195:make_patterns_logic$2316
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.269.9.1. Executing ABC.
[Time = 0.08 sec.]

9.269.10. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43039$auto$opt_dff.cc:195:make_patterns_logic$2347
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.269.10.1. Executing ABC.
[Time = 0.09 sec.]

9.269.11. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42964$auto$opt_dff.cc:195:make_patterns_logic$2365
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.269.11.1. Executing ABC.
[Time = 0.08 sec.]

9.269.12. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43191$auto$opt_dff.cc:195:make_patterns_logic$2335
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.269.12.1. Executing ABC.
[Time = 0.08 sec.]

9.269.13. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43077$auto$opt_dff.cc:195:make_patterns_logic$2371
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

9.269.13.1. Executing ABC.
[Time = 0.08 sec.]

9.269.14. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44676$auto$opt_dff.cc:195:make_patterns_logic$2310
Extracted 72 gates and 98 wires to a netlist network with 26 inputs and 48 outputs (dfl=2).

9.269.14.1. Executing ABC.
[Time = 0.09 sec.]

9.269.15. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44646$auto$opt_dff.cc:195:make_patterns_logic$2329
Extracted 72 gates and 98 wires to a netlist network with 26 inputs and 48 outputs (dfl=2).

9.269.15.1. Executing ABC.
[Time = 0.09 sec.]

9.269.16. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41226$auto$opt_dff.cc:220:make_patterns_logic$651
Extracted 66 gates and 101 wires to a netlist network with 35 inputs and 34 outputs (dfl=2).

9.269.16.1. Executing ABC.
[Time = 0.06 sec.]

9.269.17. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41059$auto$opt_dff.cc:220:make_patterns_logic$791
Extracted 66 gates and 101 wires to a netlist network with 35 inputs and 34 outputs (dfl=2).

9.269.17.1. Executing ABC.
[Time = 0.06 sec.]

9.269.18. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41393$auto$opt_dff.cc:195:make_patterns_logic$2407
Extracted 60 gates and 63 wires to a netlist network with 3 inputs and 24 outputs (dfl=2).

9.269.18.1. Executing ABC.
[Time = 0.06 sec.]

9.269.19. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41697$auto$opt_dff.cc:195:make_patterns_logic$2401
Extracted 60 gates and 63 wires to a netlist network with 3 inputs and 24 outputs (dfl=2).

9.269.19.1. Executing ABC.
[Time = 0.06 sec.]

9.269.20. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42001$auto$opt_dff.cc:195:make_patterns_logic$2285
Extracted 60 gates and 63 wires to a netlist network with 3 inputs and 24 outputs (dfl=2).

9.269.20.1. Executing ABC.
[Time = 0.09 sec.]

9.269.21. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41925$auto$opt_dff.cc:195:make_patterns_logic$2276
Extracted 60 gates and 63 wires to a netlist network with 3 inputs and 24 outputs (dfl=2).

9.269.21.1. Executing ABC.
[Time = 0.06 sec.]

9.269.22. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41469$auto$opt_dff.cc:195:make_patterns_logic$2431
Extracted 60 gates and 63 wires to a netlist network with 3 inputs and 24 outputs (dfl=2).

9.269.22.1. Executing ABC.
[Time = 0.06 sec.]

9.269.23. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41849$auto$opt_dff.cc:195:make_patterns_logic$2258
Extracted 60 gates and 63 wires to a netlist network with 3 inputs and 24 outputs (dfl=2).

9.269.23.1. Executing ABC.
[Time = 0.06 sec.]

9.269.24. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41545$auto$opt_dff.cc:195:make_patterns_logic$2443
Extracted 60 gates and 63 wires to a netlist network with 3 inputs and 24 outputs (dfl=2).

9.269.24.1. Executing ABC.
[Time = 0.06 sec.]

9.269.25. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41621$auto$opt_dff.cc:195:make_patterns_logic$2267
Extracted 59 gates and 62 wires to a netlist network with 3 inputs and 23 outputs (dfl=2).

9.269.25.1. Executing ABC.
[Time = 0.06 sec.]

9.269.26. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41773$auto$opt_dff.cc:195:make_patterns_logic$2419
Extracted 59 gates and 62 wires to a netlist network with 3 inputs and 23 outputs (dfl=2).

9.269.26.1. Executing ABC.
[Time = 0.06 sec.]

9.269.27. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41333$auto$opt_dff.cc:195:make_patterns_logic$2437
Extracted 50 gates and 54 wires to a netlist network with 4 inputs and 14 outputs (dfl=2).

9.269.27.1. Executing ABC.
[Time = 0.06 sec.]

9.269.28. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41166$auto$opt_dff.cc:195:make_patterns_logic$2425
Extracted 50 gates and 54 wires to a netlist network with 4 inputs and 14 outputs (dfl=2).

9.269.28.1. Executing ABC.
[Time = 0.06 sec.]

9.269.29. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40999$auto$opt_dff.cc:195:make_patterns_logic$2413
Extracted 50 gates and 54 wires to a netlist network with 4 inputs and 14 outputs (dfl=2).

9.269.29.1. Executing ABC.
[Time = 0.06 sec.]

9.269.30. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2261
Extracted 48 gates and 51 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.269.30.1. Executing ABC.
[Time = 0.06 sec.]

9.269.31. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2270
Extracted 49 gates and 51 wires to a netlist network with 2 inputs and 14 outputs (dfl=2).

9.269.31.1. Executing ABC.
[Time = 0.06 sec.]

9.269.32. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2416
Extracted 48 gates and 51 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.269.32.1. Executing ABC.
[Time = 0.06 sec.]

9.269.33. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2410
Extracted 48 gates and 51 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.269.33.1. Executing ABC.
[Time = 0.06 sec.]

9.269.34. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2428
Extracted 48 gates and 51 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.269.34.1. Executing ABC.
[Time = 0.06 sec.]

9.269.35. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2440
Extracted 48 gates and 51 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.269.35.1. Executing ABC.
[Time = 0.06 sec.]

9.269.36. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2422
Extracted 48 gates and 51 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.269.36.1. Executing ABC.
[Time = 0.06 sec.]

9.269.37. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2404
Extracted 48 gates and 51 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.269.37.1. Executing ABC.
[Time = 0.06 sec.]

9.269.38. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2398
Extracted 48 gates and 51 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.269.38.1. Executing ABC.
[Time = 0.06 sec.]

9.269.39. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2252
Extracted 48 gates and 51 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.269.39.1. Executing ABC.
[Time = 0.06 sec.]

9.269.40. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2434
Extracted 48 gates and 51 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.269.40.1. Executing ABC.
[Time = 0.06 sec.]

9.269.41. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32026$auto$opt_dff.cc:195:make_patterns_logic$2279
Extracted 48 gates and 51 wires to a netlist network with 3 inputs and 13 outputs (dfl=2).

9.269.41.1. Executing ABC.
[Time = 0.06 sec.]

9.269.42. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42749$auto$opt_dff.cc:220:make_patterns_logic$691
Extracted 33 gates and 52 wires to a netlist network with 19 inputs and 17 outputs (dfl=2).

9.269.42.1. Executing ABC.
[Time = 0.05 sec.]

9.269.43. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42808$auto$opt_dff.cc:220:make_patterns_logic$671
Extracted 33 gates and 52 wires to a netlist network with 19 inputs and 17 outputs (dfl=2).

9.269.43.1. Executing ABC.
[Time = 0.05 sec.]

9.269.44. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42867$auto$opt_dff.cc:220:make_patterns_logic$751
Extracted 33 gates and 52 wires to a netlist network with 19 inputs and 17 outputs (dfl=2).

9.269.44.1. Executing ABC.
[Time = 0.05 sec.]

9.269.45. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43002$auto$opt_dff.cc:195:make_patterns_logic$2288
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.269.45.1. Executing ABC.
[Time = 0.05 sec.]

9.269.46. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43303$auto$opt_dff.cc:195:make_patterns_logic$2332
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.269.46.1. Executing ABC.
[Time = 0.05 sec.]

9.269.47. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43340$auto$opt_dff.cc:195:make_patterns_logic$2338
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.269.47.1. Executing ABC.
[Time = 0.05 sec.]

9.269.48. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43377$auto$opt_dff.cc:195:make_patterns_logic$2344
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.269.48.1. Executing ABC.
[Time = 0.06 sec.]

9.269.49. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43414$auto$opt_dff.cc:195:make_patterns_logic$2350
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.269.49.1. Executing ABC.
[Time = 0.05 sec.]

9.269.50. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43451$auto$opt_dff.cc:195:make_patterns_logic$2356
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.269.50.1. Executing ABC.
[Time = 0.05 sec.]

9.269.51. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43488$auto$opt_dff.cc:195:make_patterns_logic$2362
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.269.51.1. Executing ABC.
[Time = 0.05 sec.]

9.269.52. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43229$auto$opt_dff.cc:195:make_patterns_logic$2294
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.269.52.1. Executing ABC.
[Time = 0.05 sec.]

9.269.53. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43266$auto$opt_dff.cc:195:make_patterns_logic$2313
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.269.53.1. Executing ABC.
[Time = 0.05 sec.]

9.269.54. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43525$auto$opt_dff.cc:195:make_patterns_logic$2368
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

9.269.54.1. Executing ABC.
[Time = 0.05 sec.]

9.269.55. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44706$auto$opt_dff.cc:195:make_patterns_logic$2319
Extracted 25 gates and 50 wires to a netlist network with 25 inputs and 25 outputs (dfl=2).

9.269.55.1. Executing ABC.
[Time = 0.05 sec.]

9.269.56. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44735$auto$opt_dff.cc:195:make_patterns_logic$2300
Extracted 25 gates and 50 wires to a netlist network with 25 inputs and 25 outputs (dfl=2).

9.269.56.1. Executing ABC.
[Time = 0.05 sec.]

9.269.57. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45030$auto$opt_dff.cc:220:make_patterns_logic$811
Extracted 19 gates and 31 wires to a netlist network with 12 inputs and 10 outputs (dfl=2).

9.269.57.1. Executing ABC.
[Time = 0.05 sec.]

9.269.58. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45059$auto$opt_dff.cc:220:make_patterns_logic$771
Extracted 19 gates and 31 wires to a netlist network with 12 inputs and 10 outputs (dfl=2).

9.269.58.1. Executing ABC.
[Time = 0.05 sec.]

9.269.59. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45001$auto$opt_dff.cc:220:make_patterns_logic$851
Extracted 19 gates and 31 wires to a netlist network with 12 inputs and 10 outputs (dfl=2).

9.269.59.1. Executing ABC.
[Time = 0.05 sec.]

9.269.60. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44799$auto$opt_dff.cc:220:make_patterns_logic$731
Extracted 17 gates and 28 wires to a netlist network with 11 inputs and 9 outputs (dfl=2).

9.269.60.1. Executing ABC.
[Time = 0.05 sec.]

9.269.61. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44764$auto$opt_dff.cc:220:make_patterns_logic$831
Extracted 17 gates and 28 wires to a netlist network with 11 inputs and 9 outputs (dfl=2).

9.269.61.1. Executing ABC.
[Time = 0.06 sec.]

9.269.62. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40925$auto$opt_dff.cc:220:make_patterns_logic$871
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 4 outputs (dfl=2).

9.269.62.1. Executing ABC.
[Time = 0.06 sec.]

9.269.63. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43115$auto$opt_dff.cc:195:make_patterns_logic$2476
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.269.63.1. Executing ABC.
[Time = 0.06 sec.]

9.269.64. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42964$auto$opt_dff.cc:195:make_patterns_logic$2458
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.269.64.1. Executing ABC.
[Time = 0.05 sec.]

9.269.65. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43638$auto$opt_dff.cc:195:make_patterns_logic$2273
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.269.65.1. Executing ABC.
[Time = 0.05 sec.]

9.269.66. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43600$auto$opt_dff.cc:195:make_patterns_logic$2255
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.269.66.1. Executing ABC.
[Time = 0.05 sec.]

9.269.67. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42926$auto$opt_dff.cc:195:make_patterns_logic$2494
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.269.67.1. Executing ABC.
[Time = 0.05 sec.]

9.269.68. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44646$auto$opt_dff.cc:195:make_patterns_logic$2512
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.269.68.1. Executing ABC.
[Time = 0.06 sec.]

9.269.69. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44676$auto$opt_dff.cc:195:make_patterns_logic$2282
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.269.69.1. Executing ABC.
[Time = 0.05 sec.]

9.269.70. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43191$auto$opt_dff.cc:195:make_patterns_logic$2503
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.269.70.1. Executing ABC.
[Time = 0.05 sec.]

9.269.71. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43153$auto$opt_dff.cc:195:make_patterns_logic$2467
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.269.71.1. Executing ABC.
[Time = 0.05 sec.]

9.269.72. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43077$auto$opt_dff.cc:195:make_patterns_logic$2449
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.269.72.1. Executing ABC.
[Time = 0.05 sec.]

9.269.73. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43039$auto$opt_dff.cc:195:make_patterns_logic$2485
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.269.73.1. Executing ABC.
[Time = 0.05 sec.]

9.269.74. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43562$auto$opt_dff.cc:195:make_patterns_logic$2264
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 5 outputs (dfl=2).

9.269.74.1. Executing ABC.
[Time = 0.05 sec.]

9.269.75. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44834$auto$opt_dff.cc:220:make_patterns_logic$711
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs (dfl=2).

9.269.75.1. Executing ABC.
[Time = 0.05 sec.]

9.270. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.
<suppressed ~1 debug messages>

9.271. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

9.272. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.273. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.274. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.275. Executing OPT_SHARE pass.

9.276. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2379, #solve=0, #remove=0, time=0.06 sec.]

9.277. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 12644 unused wires.
<suppressed ~1 debug messages>

9.278. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1
select with DFL2 synthesis (thresh-logic=0.920000, thresh_dff=0.980000)

9.279. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
   Number of Generic REGs:          2417

ABC-DFF iteration : 1

9.280. Executing ABC pass (technology mapping using ABC).

9.280.1. Summary of detected clock domains:
  384 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2288, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2294, arst={ }, srst={ }
  27 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2300, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2313, arst={ }, srst={ }
  27 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2319, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2332, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2338, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2344, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2350, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2356, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2362, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2368, arst={ }, srst={ }
  74 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$651, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2267, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2264, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2261, arst={ }, srst={ }
  42 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$671, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2258, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2255, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2252, arst={ }, srst={ }
  42 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$691, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2285, arst={ }, srst={ }
  27 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2282, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2279, arst={ }, srst={ }
  26 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$711, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2276, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2273, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2270, arst={ }, srst={ }
  26 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$731, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2401, arst={ }, srst={ }
  27 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2512, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2398, arst={ }, srst={ }
  42 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$751, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2407, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2503, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2404, arst={ }, srst={ }
  10 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$771, arst={ }, srst={ }
  74 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2413, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2494, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2410, arst={ }, srst={ }
  74 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$791, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2419, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2485, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2416, arst={ }, srst={ }
  10 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$811, arst={ }, srst={ }
  74 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2425, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2476, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2422, arst={ }, srst={ }
  26 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$831, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2431, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2467, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2428, arst={ }, srst={ }
  10 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$851, arst={ }, srst={ }
  74 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2437, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2458, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2434, arst={ }, srst={ }
  134 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$871, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2443, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2449, arst={ }, srst={ }
  44 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2440, arst={ }, srst={ }
  7622 cells in clk=\clk, en={ }, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2291, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2297, arst={ }, srst={ }
  24 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2310, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2316, arst={ }, srst={ }
  24 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2329, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2335, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2341, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2347, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2353, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2359, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2365, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$2371, arst={ }, srst={ }

  #logic partitions = 74

9.280.2. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 7622 gates and 8745 wires to a netlist network with 1121 inputs and 1711 outputs (dfl=1).

9.280.2.1. Executing ABC.
[Time = 0.58 sec.]

9.280.3. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 384 gates and 416 wires to a netlist network with 32 inputs and 384 outputs (dfl=1).

9.280.3.1. Executing ABC.
[Time = 0.08 sec.]

9.280.4. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$871
Extracted 134 gates and 169 wires to a netlist network with 33 inputs and 16 outputs (dfl=1).

9.280.4.1. Executing ABC.
[Time = 0.07 sec.]

9.280.5. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2413
Extracted 73 gates and 77 wires to a netlist network with 2 inputs and 13 outputs (dfl=1).

9.280.5.1. Executing ABC.
[Time = 0.08 sec.]

9.280.6. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$791
Extracted 74 gates and 118 wires to a netlist network with 44 inputs and 34 outputs (dfl=1).

9.280.6.1. Executing ABC.
[Time = 0.05 sec.]

9.280.7. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2425
Extracted 73 gates and 77 wires to a netlist network with 2 inputs and 13 outputs (dfl=1).

9.280.7.1. Executing ABC.
[Time = 0.08 sec.]

9.280.8. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$651
Extracted 74 gates and 118 wires to a netlist network with 44 inputs and 34 outputs (dfl=1).

9.280.8.1. Executing ABC.
[Time = 0.05 sec.]

9.280.9. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2437
Extracted 73 gates and 77 wires to a netlist network with 2 inputs and 13 outputs (dfl=1).

9.280.9.1. Executing ABC.
[Time = 0.08 sec.]

9.280.10. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2407
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.280.10.1. Executing ABC.
[Time = 0.08 sec.]

9.280.11. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2431
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.280.11.1. Executing ABC.
[Time = 0.08 sec.]

9.280.12. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2443
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.280.12.1. Executing ABC.
[Time = 0.08 sec.]

9.280.13. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2267
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.280.13.1. Executing ABC.
[Time = 0.08 sec.]

9.280.14. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2401
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.280.14.1. Executing ABC.
[Time = 0.08 sec.]

9.280.15. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2419
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.280.15.1. Executing ABC.
[Time = 0.08 sec.]

9.280.16. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2258
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.280.16.1. Executing ABC.
[Time = 0.08 sec.]

9.280.17. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2276
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.280.17.1. Executing ABC.
[Time = 0.08 sec.]

9.280.18. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2285
Extracted 64 gates and 69 wires to a netlist network with 3 inputs and 22 outputs (dfl=1).

9.280.18.1. Executing ABC.
[Time = 0.08 sec.]

9.280.19. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$79107$auto$opt_dff.cc:195:make_patterns_logic$2434
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.280.19.1. Executing ABC.
[Time = 0.07 sec.]

9.280.20. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$79107$auto$opt_dff.cc:195:make_patterns_logic$2398
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.280.20.1. Executing ABC.
[Time = 0.07 sec.]

9.280.21. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$79107$auto$opt_dff.cc:195:make_patterns_logic$2440
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.280.21.1. Executing ABC.
[Time = 0.08 sec.]

9.280.22. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$79107$auto$opt_dff.cc:195:make_patterns_logic$2270
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.280.22.1. Executing ABC.
[Time = 0.07 sec.]

9.280.23. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$79107$auto$opt_dff.cc:195:make_patterns_logic$2410
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.280.23.1. Executing ABC.
[Time = 0.07 sec.]

9.280.24. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$79107$auto$opt_dff.cc:195:make_patterns_logic$2416
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.280.24.1. Executing ABC.
[Time = 0.07 sec.]

9.280.25. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$79107$auto$opt_dff.cc:195:make_patterns_logic$2279
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.280.25.1. Executing ABC.
[Time = 0.07 sec.]

9.280.26. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$79107$auto$opt_dff.cc:195:make_patterns_logic$2404
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.280.26.1. Executing ABC.
[Time = 0.07 sec.]

9.280.27. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$79107$auto$opt_dff.cc:195:make_patterns_logic$2252
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.280.27.1. Executing ABC.
[Time = 0.07 sec.]

9.280.28. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$79107$auto$opt_dff.cc:195:make_patterns_logic$2261
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.280.28.1. Executing ABC.
[Time = 0.07 sec.]

9.280.29. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$79107$auto$opt_dff.cc:195:make_patterns_logic$2422
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.280.29.1. Executing ABC.
[Time = 0.07 sec.]

9.280.30. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$79107$auto$opt_dff.cc:195:make_patterns_logic$2428
Extracted 44 gates and 47 wires to a netlist network with 2 inputs and 12 outputs (dfl=1).

9.280.30.1. Executing ABC.
[Time = 0.07 sec.]

9.280.31. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$691
Extracted 42 gates and 70 wires to a netlist network with 28 inputs and 18 outputs (dfl=1).

9.280.31.1. Executing ABC.
[Time = 0.05 sec.]

9.280.32. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$671
Extracted 42 gates and 70 wires to a netlist network with 28 inputs and 18 outputs (dfl=1).

9.280.32.1. Executing ABC.
[Time = 0.05 sec.]

9.280.33. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$751
Extracted 42 gates and 70 wires to a netlist network with 28 inputs and 18 outputs (dfl=1).

9.280.33.1. Executing ABC.
[Time = 0.05 sec.]

9.280.34. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2494
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.280.34.1. Executing ABC.
[Time = 0.07 sec.]

9.280.35. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2458
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.280.35.1. Executing ABC.
[Time = 0.08 sec.]

9.280.36. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2288
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.280.36.1. Executing ABC.
[Time = 0.06 sec.]

9.280.37. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2485
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.280.37.1. Executing ABC.
[Time = 0.07 sec.]

9.280.38. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2449
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.280.38.1. Executing ABC.
[Time = 0.07 sec.]

9.280.39. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2476
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.280.39.1. Executing ABC.
[Time = 0.07 sec.]

9.280.40. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2467
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.280.40.1. Executing ABC.
[Time = 0.07 sec.]

9.280.41. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2503
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.280.41.1. Executing ABC.
[Time = 0.07 sec.]

9.280.42. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2294
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.280.42.1. Executing ABC.
[Time = 0.05 sec.]

9.280.43. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2313
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.280.43.1. Executing ABC.
[Time = 0.05 sec.]

9.280.44. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2332
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.280.44.1. Executing ABC.
[Time = 0.05 sec.]

9.280.45. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2338
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.280.45.1. Executing ABC.
[Time = 0.05 sec.]

9.280.46. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2344
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.280.46.1. Executing ABC.
[Time = 0.05 sec.]

9.280.47. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2350
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.280.47.1. Executing ABC.
[Time = 0.05 sec.]

9.280.48. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2356
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.280.48.1. Executing ABC.
[Time = 0.05 sec.]

9.280.49. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2362
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.280.49.1. Executing ABC.
[Time = 0.05 sec.]

9.280.50. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2368
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

9.280.50.1. Executing ABC.
[Time = 0.05 sec.]

9.280.51. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2264
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.280.51.1. Executing ABC.
[Time = 0.07 sec.]

9.280.52. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2255
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.280.52.1. Executing ABC.
[Time = 0.07 sec.]

9.280.53. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2273
Extracted 35 gates and 71 wires to a netlist network with 35 inputs and 35 outputs (dfl=1).

9.280.53.1. Executing ABC.
[Time = 0.07 sec.]

9.280.54. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$90681$auto$opt_dff.cc:195:make_patterns_logic$2297
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.280.54.1. Executing ABC.
[Time = 0.05 sec.]

9.280.55. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$90234$auto$opt_dff.cc:195:make_patterns_logic$2359
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.280.55.1. Executing ABC.
[Time = 0.05 sec.]

9.280.56. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$90643$auto$opt_dff.cc:195:make_patterns_logic$2291
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.280.56.1. Executing ABC.
[Time = 0.05 sec.]

9.280.57. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$90719$auto$opt_dff.cc:195:make_patterns_logic$2316
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.280.57.1. Executing ABC.
[Time = 0.05 sec.]

9.280.58. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$90196$auto$opt_dff.cc:195:make_patterns_logic$2353
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.280.58.1. Executing ABC.
[Time = 0.05 sec.]

9.280.59. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$90120$auto$opt_dff.cc:195:make_patterns_logic$2347
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.280.59.1. Executing ABC.
[Time = 0.05 sec.]

9.280.60. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$90045$auto$opt_dff.cc:195:make_patterns_logic$2365
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.280.60.1. Executing ABC.
[Time = 0.05 sec.]

9.280.61. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$90007$auto$opt_dff.cc:195:make_patterns_logic$2341
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.280.61.1. Executing ABC.
[Time = 0.05 sec.]

9.280.62. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$90272$auto$opt_dff.cc:195:make_patterns_logic$2335
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.280.62.1. Executing ABC.
[Time = 0.05 sec.]

9.280.63. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$90158$auto$opt_dff.cc:195:make_patterns_logic$2371
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

9.280.63.1. Executing ABC.
[Time = 0.05 sec.]

9.280.64. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2512
Extracted 27 gates and 55 wires to a netlist network with 27 inputs and 27 outputs (dfl=1).

9.280.64.1. Executing ABC.
[Time = 0.07 sec.]

9.280.65. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2282
Extracted 27 gates and 55 wires to a netlist network with 27 inputs and 27 outputs (dfl=1).

9.280.65.1. Executing ABC.
[Time = 0.07 sec.]

9.280.66. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2319
Extracted 27 gates and 53 wires to a netlist network with 26 inputs and 26 outputs (dfl=1).

9.280.66.1. Executing ABC.
[Time = 0.06 sec.]

9.280.67. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$2300
Extracted 27 gates and 53 wires to a netlist network with 26 inputs and 26 outputs (dfl=1).

9.280.67.1. Executing ABC.
[Time = 0.05 sec.]

9.280.68. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$831
Extracted 26 gates and 46 wires to a netlist network with 20 inputs and 10 outputs (dfl=1).

9.280.68.1. Executing ABC.
[Time = 0.05 sec.]

9.280.69. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$731
Extracted 26 gates and 46 wires to a netlist network with 20 inputs and 10 outputs (dfl=1).

9.280.69.1. Executing ABC.
[Time = 0.05 sec.]

9.280.70. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$711
Extracted 26 gates and 40 wires to a netlist network with 13 inputs and 10 outputs (dfl=1).

9.280.70.1. Executing ABC.
[Time = 0.05 sec.]

9.280.71. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$91757$auto$opt_dff.cc:195:make_patterns_logic$2310
Extracted 24 gates and 48 wires to a netlist network with 24 inputs and 24 outputs (dfl=1).

9.280.71.1. Executing ABC.
[Time = 0.05 sec.]

9.280.72. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$91727$auto$opt_dff.cc:195:make_patterns_logic$2329
Extracted 24 gates and 48 wires to a netlist network with 24 inputs and 24 outputs (dfl=1).

9.280.72.1. Executing ABC.
[Time = 0.05 sec.]

9.280.73. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$851
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 10 outputs (dfl=1).

9.280.73.1. Executing ABC.
[Time = 0.05 sec.]

9.280.74. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$811
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 10 outputs (dfl=1).

9.280.74.1. Executing ABC.
[Time = 0.05 sec.]

9.280.75. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$771
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 10 outputs (dfl=1).

9.280.75.1. Executing ABC.
[Time = 0.05 sec.]

9.281. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2385, #solve=0, #remove=0, time=0.09 sec.]

9.282. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.283. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 1 unused cells and 11133 unused wires.
<suppressed ~14 debug messages>

9.284. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2385, #solve=0, #remove=0, time=0.12 sec.]

9.285. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.286. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.287. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2385, #solve=0, #remove=0, time=0.09 sec.]

9.288. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.289. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.290. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 2

9.291. Executing ABC pass (technology mapping using ABC).

9.291.1. Summary of detected clock domains:
  384 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  9797 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 2

9.291.2. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 9785 gates and 10514 wires to a netlist network with 729 inputs and 2033 outputs (dfl=1).

9.291.2.1. Executing ABC.
[Time = 1.04 sec.]

9.291.3. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 384 gates and 416 wires to a netlist network with 32 inputs and 384 outputs (dfl=1).

9.291.3.1. Executing ABC.
[Time = 0.09 sec.]

9.292. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1710, #solve=0, #remove=0, time=0.06 sec.]

9.293. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.294. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 13048 unused wires.
<suppressed ~36 debug messages>

9.295. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1710, #solve=0, #remove=0, time=0.06 sec.]

9.296. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.297. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.298. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93992 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7784_, Q = \design122_12_5_inst.memory_cntrl_instance10092.wr_data_mem [6]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93991 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7781_, Q = \design122_12_5_inst.memory_cntrl_instance10092.wr_data_mem [22]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93990 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7777_, Q = \design122_12_5_inst.memory_cntrl_instance10092.wr_data_mem [23]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93989 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7774_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [0]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93988 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7772_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [1]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93987 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7770_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [2]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93986 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7768_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [3]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93985 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7766_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [4]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93984 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7764_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [5]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93983 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7762_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [6]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93982 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7760_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [7]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93981 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7758_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [8]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93980 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7756_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [9]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93979 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7754_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [10]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93978 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7752_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [11]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93977 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7750_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [12]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93976 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7748_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [13]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93975 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7746_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [14]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93974 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7744_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [15]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93973 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7742_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [16]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93972 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7740_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [17]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93971 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7738_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [18]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93970 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7736_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [19]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93969 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7734_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [20]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93968 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7732_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [21]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93967 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7730_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [22]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93966 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7728_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [23]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93965 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7726_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [24]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93964 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7724_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [25]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93963 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7722_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [26]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93962 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7720_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [27]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93961 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7718_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [28]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93960 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7716_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [29]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93959 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7714_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [30]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93958 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7712_, Q = \design122_12_5_inst.memory_cntrl_instance210.wr_data_mem [31]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93957 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7710_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [0]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93956 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7708_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [1]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93955 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7706_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [2]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93954 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7704_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [3]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93953 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7702_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [4]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93952 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7700_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [5]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93951 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7698_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [6]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93950 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7696_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [7]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93949 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7694_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [8]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93948 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7692_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [9]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93947 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7690_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [10]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93946 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7688_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [11]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93945 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7686_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [12]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93944 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7684_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [13]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93943 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7682_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [14]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93942 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7680_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [15]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93941 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7678_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [16]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93940 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7676_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [17]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93939 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7674_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [18]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93938 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7672_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [19]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93937 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7670_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [20]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93936 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7668_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [21]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93935 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7666_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [22]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93934 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7664_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [23]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93933 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7662_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [24]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93932 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7660_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [25]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93931 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7658_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [26]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93930 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7656_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [27]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93929 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7654_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [28]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93928 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7652_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [29]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93927 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7650_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [30]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93926 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7648_, Q = \design122_12_5_inst.memory_cntrl_instance980.wr_data_mem [31]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93903 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7565_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [0]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93902 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7563_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [1]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93901 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7561_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [2]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93900 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7559_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [3]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93899 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7557_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [4]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93898 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7555_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [5]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93897 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7553_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [6]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93896 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7551_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [7]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93895 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7549_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [8]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93894 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7547_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [9]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93893 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7545_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [10]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93892 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7543_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [11]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93891 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7541_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [12]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93890 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7539_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [13]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93889 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7537_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [14]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93888 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7535_, Q = \design122_12_5_inst.memory_cntrl_instance761.wr_data_mem [15]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93887 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7533_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [0]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93886 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7531_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [1]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93885 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7529_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [2]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93884 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7527_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [3]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93883 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7525_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [4]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93882 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7523_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [5]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93881 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7521_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [6]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93880 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7519_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [7]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93879 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7517_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [8]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93878 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7515_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [9]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93877 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7513_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [10]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93876 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7511_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [11]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93875 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7509_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [12]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93874 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7507_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [13]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93873 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7505_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [14]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93872 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7503_, Q = \design122_12_5_inst.memory_cntrl_instance873.wr_data_mem [15]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93871 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7501_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [0]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93870 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7499_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [1]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93869 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7497_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [2]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93868 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7495_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [3]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93867 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7493_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [4]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93866 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7491_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [5]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93865 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7489_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [6]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93864 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7487_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [7]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93863 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7485_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [8]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93862 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7483_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [9]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93861 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7481_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [10]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93860 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7479_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [11]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93859 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7477_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [12]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93858 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7475_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [13]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93857 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7473_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [14]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93856 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7471_, Q = \design122_12_5_inst.memory_cntrl_instance433.wr_data_mem [15]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93853 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7466_, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_data_mem [2]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93852 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7464_, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_data_mem [3]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93851 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7462_, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_data_mem [4]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93850 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7460_, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_data_mem [10]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93849 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7458_, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_data_mem [11]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93848 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7456_, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_data_mem [18]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93847 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7454_, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_data_mem [22]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93846 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7452_, Q = \design122_12_5_inst.memory_cntrl_instance110101.wr_data_mem [30]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93845 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7450_, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_data_mem [2]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93844 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7448_, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_data_mem [3]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93843 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7446_, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_data_mem [4]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93842 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7444_, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_data_mem [10]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93841 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7442_, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_data_mem [11]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93840 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7440_, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_data_mem [18]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93839 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7438_, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_data_mem [22]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93838 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7436_, Q = \design122_12_5_inst.memory_cntrl_instance542.wr_data_mem [30]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93837 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7434_, Q = \design122_12_5_inst.memory_cntrl_instance653.wr_data_mem [10]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93836 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7432_, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_data_mem [2]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93835 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7430_, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_data_mem [3]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93834 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7428_, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_data_mem [4]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93833 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7426_, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_data_mem [10]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93832 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7424_, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_data_mem [11]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93831 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7422_, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_data_mem [18]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93830 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7420_, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_data_mem [22]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93829 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7418_, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_data_mem [23]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93828 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7416_, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_data_mem [2]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93827 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7414_, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_data_mem [3]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93826 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7412_, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_data_mem [4]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93825 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7410_, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_data_mem [10]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93824 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7408_, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_data_mem [11]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93823 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7406_, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_data_mem [18]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93822 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7404_, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_data_mem [22]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93821 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7402_, Q = \design122_12_5_inst.memory_cntrl_instance120114.wr_data_mem [23]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93820 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7400_, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_data_mem [2]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93819 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7398_, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_data_mem [3]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93818 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7396_, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_data_mem [4]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93817 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7394_, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_data_mem [10]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93816 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7392_, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_data_mem [11]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93815 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7390_, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_data_mem [18]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93814 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7388_, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_data_mem [22]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93813 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7386_, Q = \design122_12_5_inst.memory_cntrl_instance324.wr_data_mem [23]).
Adding EN signal on $abc$93811$auto$blifparse.cc:377:parse_blif$93812 ($_DFF_P_) from module design122_12_5_top (D = $abc$93811$new_n7384_, Q = \design122_12_5_inst.memory_cntrl_instance102.wr_data_mem [29]).
[#visit=1710, #solve=0, #remove=0, time=0.06 sec.]

9.299. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.300. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 157 unused cells and 157 unused wires.
<suppressed ~158 debug messages>

9.301. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 3

9.302. Executing ABC pass (technology mapping using ABC).

9.302.1. Summary of detected clock domains:
  384 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  6575 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 2

9.302.2. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 6563 gates and 7292 wires to a netlist network with 729 inputs and 1358 outputs (dfl=2).

9.302.2.1. Executing ABC.
[Time = 1.25 sec.]

9.302.3. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 384 gates and 416 wires to a netlist network with 32 inputs and 384 outputs (dfl=2).

9.302.3.1. Executing ABC.
[Time = 0.08 sec.]

9.303. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1710, #solve=0, #remove=0, time=0.04 sec.]

9.304. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.305. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 10164 unused wires.
<suppressed ~1 debug messages>

9.306. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1710, #solve=0, #remove=0, time=0.05 sec.]

9.307. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.308. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.309. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1710, #solve=0, #remove=0, time=0.04 sec.]

9.310. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.311. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.312. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 4

9.313. Executing ABC pass (technology mapping using ABC).

9.313.1. Summary of detected clock domains:
  384 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  4732 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 2

9.313.2. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 4720 gates and 5449 wires to a netlist network with 729 inputs and 1358 outputs (dfl=2).

9.313.2.1. Executing ABC.
[Time = 1.01 sec.]

9.313.3. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 384 gates and 416 wires to a netlist network with 32 inputs and 384 outputs (dfl=2).

9.313.3.1. Executing ABC.
[Time = 0.08 sec.]

9.314. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1710, #solve=0, #remove=0, time=0.04 sec.]

9.315. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.316. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 8321 unused wires.
<suppressed ~1 debug messages>

9.317. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1710, #solve=0, #remove=0, time=0.04 sec.]

9.318. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.319. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.320. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1710, #solve=0, #remove=0, time=0.04 sec.]

9.321. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.322. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.323. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).
select with DFL2 synthesis (thresh-logic=0.920000, thresh_dff=0.980000)

9.324. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.
select CE remove strategy (thresh_logic=0.920000, thresh_dff=0.980000, dfl=2)

9.325. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.326. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.327. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.328. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.329. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.330. Executing OPT_SHARE pass.

9.331. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1710, #solve=0, #remove=0, time=0.04 sec.]

9.332. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

9.333. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.334. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.335. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.336. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.337. Executing OPT_SHARE pass.

9.338. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1710, #solve=0, #remove=0, time=0.05 sec.]

9.339. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.340. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 2

9.341. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.342. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.343. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.344. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.345. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.346. Executing OPT_SHARE pass.

9.347. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1710, #solve=0, #remove=0, time=0.04 sec.]

9.348. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.349. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

9.350. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.351. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.352. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.353. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.354. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.355. Executing OPT_SHARE pass.

9.356. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1710, #solve=0, #remove=0, time=0.04 sec.]

9.357. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1710, #solve=352, #remove=0, time=0.05 sec.]

9.358. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.359. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

9.360. Executing BMUXMAP pass.

9.361. Executing DEMUXMAP pass.

9.362. Executing SPLITNETS pass (splitting up multi-bit signals).

9.363. Executing ABC pass (technology mapping using ABC).

9.363.1. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Extracted 3353 gates and 4995 wires to a netlist network with 1642 inputs and 996 outputs (dfl=1).

9.363.1.1. Executing ABC.
DE:   Version : 7.7
DE:   #PIs = 1642  #Luts =  1482  Max Lvl =   4  Avg Lvl =   2.09  [   0.12 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 1642  #Luts =  1475  Max Lvl =   4  Avg Lvl =   2.10  [   1.55 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 1642  #Luts =  1405  Max Lvl =   4  Avg Lvl =   2.08  [   1.64 sec. at Pass 2]{map}[6]
DE:   #PIs = 1642  #Luts =  1393  Max Lvl =   4  Avg Lvl =   2.06  [   1.47 sec. at Pass 3]{postMap}[12]
DE:   #PIs = 1642  #Luts =  1375  Max Lvl =   4  Avg Lvl =   2.06  [   1.70 sec. at Pass 4]{map}[16]
DE:   #PIs = 1642  #Luts =  1368  Max Lvl =   4  Avg Lvl =   2.06  [   2.05 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 1642  #Luts =  1438  Max Lvl =   3  Avg Lvl =   2.09  [   1.63 sec. at Pass 6]{map}[16]
DE:   #PIs = 1642  #Luts =  1414  Max Lvl =   3  Avg Lvl =   1.90  [   1.81 sec. at Pass 7]{postMap}[16]
DE:   #PIs = 1642  #Luts =  1403  Max Lvl =   3  Avg Lvl =   2.09  [   1.78 sec. at Pass 8]{map}[16]
DE:   #PIs = 1642  #Luts =  1398  Max Lvl =   3  Avg Lvl =   2.09  [   1.70 sec. at Pass 9]{postMap}[16]
DE:   #PIs = 1642  #Luts =  1392  Max Lvl =   3  Avg Lvl =   2.09  [   1.74 sec. at Pass 10]{map}[16]
DE:   #PIs = 1642  #Luts =  1391  Max Lvl =   3  Avg Lvl =   1.91  [   1.79 sec. at Pass 11]{postMap}[16]
DE:   #PIs = 1642  #Luts =  1384  Max Lvl =   3  Avg Lvl =   1.89  [   1.67 sec. at Pass 12]{map}[16]
DE:   #PIs = 1642  #Luts =  1384  Max Lvl =   3  Avg Lvl =   1.89  [   1.79 sec. at Pass 13]{postMap}[16]
DE:   #PIs = 1642  #Luts =  1384  Max Lvl =   3  Avg Lvl =   1.89  [   1.90 sec. at Pass 14]{map}[16]
DE:   #PIs = 1642  #Luts =  1383  Max Lvl =   3  Avg Lvl =   1.89  [   1.83 sec. at Pass 15]{postMap}[16]
DE:   #PIs = 1642  #Luts =  1383  Max Lvl =   3  Avg Lvl =   1.89  [   1.70 sec. at Pass 16]{map}[16]
DE:   #PIs = 1642  #Luts =  1383  Max Lvl =   3  Avg Lvl =   1.89  [   1.71 sec. at Pass 17]{postMap}[16]
DE:   #PIs = 1642  #Luts =  1383  Max Lvl =   3  Avg Lvl =   1.89  [   1.62 sec. at Pass 18]{map}[16]
DE:   #PIs = 1642  #Luts =  1383  Max Lvl =   3  Avg Lvl =   1.89  [   1.24 sec. at Pass 19]{pushMap}[16]
DE:   #PIs = 1642  #Luts =  1376  Max Lvl =   3  Avg Lvl =   1.90  [   1.17 sec. at Pass 20]{pushMap}[16]
DE:   #PIs = 1642  #Luts =  1376  Max Lvl =   3  Avg Lvl =   1.90  [   1.19 sec. at Pass 20]{pushMap}[16]
DE:   #PIs = 1642  #Luts =  1376  Max Lvl =   3  Avg Lvl =   1.90  [   1.40 sec. at Pass 21]{postMap}[16]
DE:   #PIs = 1642  #Luts =  1376  Max Lvl =   3  Avg Lvl =   1.90  [   1.53 sec. at Pass 22]{map}[16]
DE:   #PIs = 1642  #Luts =  1369  Max Lvl =   3  Avg Lvl =   1.90  [   1.47 sec. at Pass 23]{postMap}[16]
DE:   #PIs = 1642  #Luts =  1368  Max Lvl =   3  Avg Lvl =   1.90  [   1.59 sec. at Pass 24]{map}[16]
DE:   #PIs = 1642  #Luts =  1367  Max Lvl =   3  Avg Lvl =   1.89  [   1.44 sec. at Pass 25]{postMap}[16]
DE:   #PIs = 1642  #Luts =  1367  Max Lvl =   3  Avg Lvl =   1.89  [   1.69 sec. at Pass 26]{map}[16]
DE:   #PIs = 1642  #Luts =  1361  Max Lvl =   3  Avg Lvl =   1.91  [   1.50 sec. at Pass 27]{postMap}[16]
DE:   #PIs = 1642  #Luts =  1361  Max Lvl =   3  Avg Lvl =   1.91  [   1.71 sec. at Pass 28]{map}[16]
DE:   #PIs = 1642  #Luts =  1361  Max Lvl =   3  Avg Lvl =   1.91  [   1.64 sec. at Pass 29]{postMap}[16]
DE:   #PIs = 1642  #Luts =  1361  Max Lvl =   3  Avg Lvl =   1.91  [   1.65 sec. at Pass 30]{map}[16]
DE:   #PIs = 1642  #Luts =  1361  Max Lvl =   3  Avg Lvl =   1.91  [   1.21 sec. at Pass 31]{pushMap}[16]
DE:   #PIs = 1642  #Luts =  1361  Max Lvl =   3  Avg Lvl =   1.91  [   1.16 sec. at Pass 32]{pushMap}[16]
DE:   #PIs = 1642  #Luts =  1361  Max Lvl =   3  Avg Lvl =   1.91  [   1.25 sec. at Pass 32]{pushMap}[16]
DE:   #PIs = 1642  #Luts =  1361  Max Lvl =   3  Avg Lvl =   1.91  [   0.83 sec. at Pass 33]{finalMap}[16]
DE:   
DE:   total time =   54.97 sec.
[Time = 57.11 sec.]

9.364. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.365. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.366. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.367. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.368. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.369. Executing OPT_SHARE pass.

9.370. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1710, #solve=0, #remove=0, time=0.02 sec.]

9.371. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 4995 unused wires.
<suppressed ~1 debug messages>

9.372. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

9.373. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

9.374. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.375. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

9.376. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.377. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.378. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.379. Executing OPT_SHARE pass.

9.380. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1708, #solve=0, #remove=0, time=0.03 sec.]

9.381. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

9.382. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.383. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.384. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.385. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.386. Executing OPT_SHARE pass.

9.387. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1708, #solve=0, #remove=0, time=0.03 sec.]

9.388. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.389. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 2

9.390. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.391. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.392. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.393. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.394. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.395. Executing OPT_SHARE pass.

9.396. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1708, #solve=0, #remove=0, time=0.02 sec.]

9.397. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1708, #solve=352, #remove=0, time=0.03 sec.]

9.398. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.399. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

9.400. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.401. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.402. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.403. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.404. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.405. Executing OPT_SHARE pass.

9.406. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1708, #solve=0, #remove=0, time=0.02 sec.]

9.407. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.408. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

9.409. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.410. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.411. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.412. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.413. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.414. Executing OPT_SHARE pass.

9.415. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1708, #solve=0, #remove=0, time=0.02 sec.]

9.416. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1708, #solve=352, #remove=0, time=0.03 sec.]

9.417. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..

9.418. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

9.419. Printing statistics.

=== design122_12_5_top ===

   Number of wires:               2007
   Number of wire bits:          12659
   Number of public wires:         632
   Number of public wire bits:   10072
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3079
     $_DFF_PP0_                    384
     $_DFF_P_                     1324
     $lut                         1359
     TDP_RAM36K                     12

9.420. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

9.421. Executing RS_DFFSR_CONV pass.

9.422. Printing statistics.

=== design122_12_5_top ===

   Number of wires:               2007
   Number of wire bits:          12659
   Number of public wires:         632
   Number of public wire bits:   10072
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3079
     $_DFF_PP0_                    384
     $_DFF_P_                     1324
     $lut                         1359
     TDP_RAM36K                     12

9.423. Executing TECHMAP pass (map to technology primitives).

9.423.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.423.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

9.423.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~3573 debug messages>

9.424. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.
<suppressed ~22094 debug messages>

9.425. Executing SIMPLEMAP pass (map simple cells to gate primitives).

9.426. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.427. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~10452 debug messages>
Removed a total of 3484 cells.

9.428. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.07 sec.]

9.429. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 8978 unused wires.
<suppressed ~1 debug messages>

9.430. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.
<suppressed ~285 debug messages>

9.431. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

9.432. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.433. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.434. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.435. Executing OPT_SHARE pass.

9.436. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.05 sec.]

9.437. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 177 unused wires.
<suppressed ~1 debug messages>

9.438. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

9.439. Executing TECHMAP pass (map to technology primitives).

9.439.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.439.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

9.440. Executing ABC pass (technology mapping using ABC).

9.440.1. Extracting gate netlist of module `\design122_12_5_top' to `<abc-temp-dir>/input.blif'..
Extracted 3776 gates and 5418 wires to a netlist network with 1640 inputs and 995 outputs (dfl=1).

9.440.1.1. Executing ABC.
DE:   Version : 7.7
DE:   #PIs = 1640  #Luts =  1371  Max Lvl =   3  Avg Lvl =   1.89  [   0.13 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 1640  #Luts =  1367  Max Lvl =   3  Avg Lvl =   1.89  [   1.44 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 1640  #Luts =  1367  Max Lvl =   3  Avg Lvl =   1.89  [   1.51 sec. at Pass 2]{map}[6]
DE:   #PIs = 1640  #Luts =  1367  Max Lvl =   3  Avg Lvl =   1.89  [   1.48 sec. at Pass 3]{postMap}[12]
DE:   #PIs = 1640  #Luts =  1367  Max Lvl =   3  Avg Lvl =   1.89  [   1.68 sec. at Pass 4]{map}[16]
DE:   #PIs = 1640  #Luts =  1367  Max Lvl =   3  Avg Lvl =   1.89  [   1.63 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 1640  #Luts =  1367  Max Lvl =   3  Avg Lvl =   1.89  [   1.24 sec. at Pass 6]{pushMap}[16]
DE:   #PIs = 1640  #Luts =  1367  Max Lvl =   3  Avg Lvl =   1.89  [   1.23 sec. at Pass 7]{pushMap}[16]
DE:   #PIs = 1640  #Luts =  1367  Max Lvl =   3  Avg Lvl =   1.89  [   1.29 sec. at Pass 7]{pushMap}[16]
DE:   #PIs = 1640  #Luts =  1367  Max Lvl =   3  Avg Lvl =   1.89  [   0.92 sec. at Pass 8]{finalMap}[16]
DE:   
DE:   total time =   12.56 sec.
[Time = 14.71 sec.]

9.441. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

9.442. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.443. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design122_12_5_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.444. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design122_12_5_top.
Performed a total of 0 changes.

9.445. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design122_12_5_top'.
Removed a total of 0 cells.

9.446. Executing OPT_SHARE pass.

9.447. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.03 sec.]

9.448. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 4933 unused wires.
<suppressed ~1 debug messages>

9.449. Executing OPT_EXPR pass (perform const folding).
Optimizing module design122_12_5_top.

RUN-OPT ITERATIONS DONE : 1

9.450. Executing HIERARCHY pass (managing design hierarchy).

9.450.1. Analyzing design hierarchy..
Top module:  \design122_12_5_top

9.450.2. Analyzing design hierarchy..
Top module:  \design122_12_5_top
Removed 0 unused modules.

9.451. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 445 unused wires.
<suppressed ~445 debug messages>

9.452. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__IO_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

9.453. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Replacing existing blackbox module `\BOOT_CLOCK' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:9.1-14.10.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:24.1-31.10.
Generating RTLIL representation for module `\CARRY'.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:41.1-46.10.
Generating RTLIL representation for module `\CLK_BUF'.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:56.1-64.10.
Generating RTLIL representation for module `\DFFNRE'.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:74.1-82.10.
Generating RTLIL representation for module `\DFFRE'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:92.1-126.10.
Generating RTLIL representation for module `\DSP19X2'.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:136.1-162.10.
Generating RTLIL representation for module `\DSP38'.
Replacing existing blackbox module `\FIFO18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:172.1-219.10.
Generating RTLIL representation for module `\FIFO18KX2'.
Replacing existing blackbox module `\FIFO36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:229.1-254.10.
Generating RTLIL representation for module `\FIFO36K'.
Replacing existing blackbox module `\I_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:264.1-276.10.
Generating RTLIL representation for module `\I_BUF_DS'.
Replacing existing blackbox module `\I_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:286.1-297.10.
Generating RTLIL representation for module `\I_BUF'.
Replacing existing blackbox module `\I_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:307.1-315.10.
Generating RTLIL representation for module `\I_DDR'.
Replacing existing blackbox module `\I_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:325.1-337.10.
Generating RTLIL representation for module `\I_DELAY'.
Replacing existing blackbox module `\I_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:347.1-366.10.
Generating RTLIL representation for module `\I_SERDES'.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:376.1-382.10.
Generating RTLIL representation for module `\LUT1'.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:392.1-398.10.
Generating RTLIL representation for module `\LUT2'.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:408.1-414.10.
Generating RTLIL representation for module `\LUT3'.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:424.1-430.10.
Generating RTLIL representation for module `\LUT4'.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:440.1-446.10.
Generating RTLIL representation for module `\LUT5'.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:456.1-462.10.
Generating RTLIL representation for module `\LUT6'.
Replacing existing blackbox module `\O_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:472.1-486.10.
Generating RTLIL representation for module `\O_BUF_DS'.
Replacing existing blackbox module `\O_BUFT_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:496.1-510.10.
Generating RTLIL representation for module `\O_BUFT_DS'.
Replacing existing blackbox module `\O_BUFT' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:520.1-533.10.
Generating RTLIL representation for module `\O_BUFT'.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:543.1-556.10.
Generating RTLIL representation for module `\O_BUF'.
Replacing existing blackbox module `\O_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:566.1-574.10.
Generating RTLIL representation for module `\O_DDR'.
Replacing existing blackbox module `\O_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:584.1-596.10.
Generating RTLIL representation for module `\O_DELAY'.
Replacing existing blackbox module `\O_SERDES_CLK' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:606.1-615.10.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Replacing existing blackbox module `\O_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:625.1-642.10.
Generating RTLIL representation for module `\O_SERDES'.
Replacing existing blackbox module `\PLL' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:652.1-667.10.
Generating RTLIL representation for module `\PLL'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_M' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:677.1-691.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_S' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:701.1-718.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M0' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:728.1-767.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M1' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:777.1-816.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Replacing existing blackbox module `\SOC_FPGA_INTF_DMA' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:826.1-832.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Replacing existing blackbox module `\SOC_FPGA_INTF_IRQ' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:842.1-848.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Replacing existing blackbox module `\SOC_FPGA_INTF_JTAG' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:858.1-866.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Replacing existing blackbox module `\SOC_FPGA_TEMPERATURE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:876.1-884.10.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:894.1-947.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:957.1-986.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1003.1-1008.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1016.1-1021.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1030.1-1036.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1044.1-1050.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1059.1-1065.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1074.1-1080.10.
Generating RTLIL representation for module `\LATCHNS'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1085.1-1135.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1140.1-1174.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1179.1-1225.12.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

9.454. Executing CLKBUFMAP pass (inserting clock buffers).
Inserting rs__CLK_BUF on design122_12_5_top.clk[0].

9.455. Executing TECHMAP pass (map to technology primitives).

9.455.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

9.455.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~7 debug messages>

9.456. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

9.457. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port design122_12_5_top.clk using rs__I_BUF.
Mapping port design122_12_5_top.in using rs__I_BUF.
Mapping port design122_12_5_top.out using rs__O_BUF.
Mapping port design122_12_5_top.rst using rs__I_BUF.

9.458. Executing TECHMAP pass (map to technology primitives).

9.458.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

9.458.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~72 debug messages>

9.459. Printing statistics.

=== design122_12_5_top ===

   Number of wires:               1773
   Number of wire bits:           6288
   Number of public wires:         187
   Number of public wire bits:    3428
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3154
     $lut                         1367
     CLK_BUF                         1
     DFFRE                        1708
     I_BUF                          34
     O_BUF                          32
     TDP_RAM36K                     12

9.460. Executing TECHMAP pass (map to technology primitives).

9.460.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

9.460.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4126 debug messages>

9.461. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design122_12_5_top..
Removed 0 unused cells and 2932 unused wires.
<suppressed ~1 debug messages>

9.462. Executing SPLITNETS pass (splitting up multi-bit signals).

9.463. Executing HIERARCHY pass (managing design hierarchy).

9.463.1. Analyzing design hierarchy..
Top module:  \design122_12_5_top

9.463.2. Analyzing design hierarchy..
Top module:  \design122_12_5_top
Removed 0 unused modules.

Dumping port properties into 'netlist_info.json' file.

9.464. Printing statistics.

=== design122_12_5_top ===

   Number of wires:               1575
   Number of wire bits:           6090
   Number of public wires:         187
   Number of public wire bits:    3428
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3154
     CLK_BUF                         1
     DFFRE                        1708
     I_BUF                          34
     LUT1                            1
     LUT2                          295
     LUT3                          367
     LUT4                          313
     LUT5                          134
     LUT6                          257
     O_BUF                          32
     TDP_RAM36K                     12

   Number of LUTs:                1367
   Number of REGs:                1708
   Number of CARRY ADDERs:           0

10. Executing Verilog backend.
Dumping module `\design122_12_5_top'.

10.1. Executing BLIF backend.

-- Running command `write_rtlil design.rtlil' --

10.2. Executing RTLIL backend.
Output filename: design.rtlil

10.3. Executing SPLITNETS pass (splitting up multi-bit signals).

10.4. Executing FLATTEN pass (flatten design).
Deleting now unused module interface_design122_12_5_top.
<suppressed ~1 debug messages>

10.5. Executing Verilog backend.
Dumping module `\design122_12_5_top'.

10.5.1. Executing BLIF backend.

10.5.2. Executing Verilog backend.
Dumping module `\design122_12_5_top'.

10.5.2.1. Executing BLIF backend.

10.5.2.2. Executing Verilog backend.
Dumping module `\fabric_design122_12_5_top'.

10.5.2.2.1. Executing BLIF backend.

Warnings: 25 unique messages, 25 total
End of script. Logfile hash: dbf2bbf4e4, CPU: user 57.15s system 2.45s, MEM: 164.87 MB peak
Yosys 0.38 (git sha1 24ed610c2, gcc 11.2.1 -fPIC -Os)
Time spent: 95% 10x abc (866 sec), 1% 79x opt_expr (14 sec), ...
