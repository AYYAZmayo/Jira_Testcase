
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 2b36bfab5, gcc 11.2.1 -fPIC -Os)


-- Executing script file `EDA-2924.ys' --

1. Executing Verilog with UHDM frontend.
Warning: Removing unelaborated module: \TDP_RAM36K from the design.
Warning: Removing unelaborated module: \TDP_RAM18KX2 from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_AXI_M1 from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_AHB_S from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_AHB_M from the design.
Warning: Removing unelaborated module: \PLL from the design.
Warning: Removing unelaborated module: \O_DELAY from the design.
Warning: Removing unelaborated module: \O_DDR from the design.
Warning: Removing unelaborated module: \O_SERDES from the design.
Warning: Removing unelaborated module: \O_BUFT_DS from the design.
Warning: Removing unelaborated module: \O_BUF from the design.
Warning: Removing unelaborated module: \I_BUF from the design.
Warning: Removing unelaborated module: \DFFRE from the design.
Warning: Removing unelaborated module: \LATCH from the design.
Warning: Removing unelaborated module: \I_BUF_DS from the design.
Warning: Removing unelaborated module: \LUT3 from the design.
Warning: Removing unelaborated module: \DSP38 from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_DMA from the design.
Warning: Removing unelaborated module: \FIFO36K from the design.
Warning: Removing unelaborated module: \LUT4 from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_AXI_M0 from the design.
Warning: Removing unelaborated module: \CARRY from the design.
Warning: Removing unelaborated module: \FCLK_BUF from the design.
Warning: Removing unelaborated module: \CLK_BUF from the design.
Warning: Removing unelaborated module: \LATCHR from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_JTAG from the design.
Warning: Removing unelaborated module: \O_BUFT from the design.
Warning: Removing unelaborated module: \DSP19X2 from the design.
Warning: Removing unelaborated module: \FIFO18KX2 from the design.
Warning: Removing unelaborated module: \LATCHNS from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_IRQ from the design.
Warning: Removing unelaborated module: \DFFNRE from the design.
Warning: Removing unelaborated module: \O_SERDES_CLK from the design.
Warning: Removing unelaborated module: \I_DDR from the design.
Warning: Removing unelaborated module: \I_DELAY from the design.
Warning: Removing unelaborated module: \O_BUF_DS from the design.
Warning: Removing unelaborated module: \I_FAB from the design.
Warning: Removing unelaborated module: \LATCHN from the design.
Warning: Removing unelaborated module: \SOC_FPGA_TEMPERATURE from the design.
Warning: Removing unelaborated module: \LATCHNR from the design.
Warning: Removing unelaborated module: \LATCHS from the design.
Warning: Removing unelaborated module: \LUT1 from the design.
Warning: Removing unelaborated module: \LUT2 from the design.
Warning: Removing unelaborated module: \O_FAB from the design.
Warning: Removing unelaborated module: \LUT5 from the design.
Warning: Removing unelaborated module: \I_SERDES from the design.
Warning: Removing unelaborated module: \BOOT_CLOCK from the design.
Warning: Removing unelaborated module: \LUT6 from the design.
Generating RTLIL representation for module `\mealy_fsm'.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \mealy_fsm

2.2. Analyzing design hierarchy..
Top module:  \mealy_fsm
Removed 0 unused modules.

3. Executing synth_rs pass: v0.4.218

3.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v' to AST representation.
Generating RTLIL representation for module `\CARRY'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

3.4. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v' to AST representation.
Generating RTLIL representation for module `\DFFRE'.
Successfully finished Verilog frontend.

3.5. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v' to AST representation.
Generating RTLIL representation for module `\DFFNRE'.
Successfully finished Verilog frontend.

3.6. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Successfully finished Verilog frontend.

3.7. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v' to AST representation.
Generating RTLIL representation for module `\LUT2'.
Successfully finished Verilog frontend.

3.8. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v' to AST representation.
Generating RTLIL representation for module `\LUT3'.
Successfully finished Verilog frontend.

3.9. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Successfully finished Verilog frontend.

3.10. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v' to AST representation.
Generating RTLIL representation for module `\LUT5'.
Successfully finished Verilog frontend.

3.11. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v' to AST representation.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

3.12. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v' to AST representation.
Generating RTLIL representation for module `\CLK_BUF'.
Successfully finished Verilog frontend.

3.13. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v' to AST representation.
Generating RTLIL representation for module `\O_BUF'.
Successfully finished Verilog frontend.

3.14. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v' to AST representation.
Generating RTLIL representation for module `\DSP38'.
Successfully finished Verilog frontend.

3.15. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v' to AST representation.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\DSP19X2'.
Successfully finished Verilog frontend.

3.16. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.17. Executing HIERARCHY pass (managing design hierarchy).

3.17.1. Analyzing design hierarchy..
Top module:  \mealy_fsm

3.17.2. Analyzing design hierarchy..
Top module:  \mealy_fsm
Removed 0 unused modules.

3.18. Executing PROC pass (convert processes to netlists).

3.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:98$12 in module mealy_fsm.
Removed 1 dead cases from process $proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:65$8 in module mealy_fsm.
Marked 2 switch rules as full_case in process $proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:65$8 in module mealy_fsm.
Marked 2 switch rules as full_case in process $proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:53$3 in module mealy_fsm.
Removed a total of 1 dead cases.

3.18.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 2 redundant assignments.
Promoted 0 assignments to connections.

3.18.4. Executing PROC_INIT pass (extract init attributes).

3.18.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `\mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:98$12'.
Found async reset \rst in `\mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:65$8'.
Found async reset \rst in `\mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:53$3'.

3.18.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~5 debug messages>

3.18.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:98$12'.
     1/1: $0\led[3:0]
Creating decoders for process `\mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:65$8'.
     1/2: $0\state[0:0]
     2/2: $0\done_sig[0:0]
Creating decoders for process `\mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:53$3'.
     1/2: $0\clk_count[23:0]
     2/2: $0\div_clk[0:0]

3.18.8. Executing PROC_DLATCH pass (convert process syncs to latches).

3.18.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\mealy_fsm.\led' using process `\mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:98$12'.
  created $adff cell `$procdff$37' with positive edge clock and positive level reset.
Creating register for signal `\mealy_fsm.\done_sig' using process `\mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:65$8'.
  created $dff cell `$procdff$40' with positive edge clock.
Creating register for signal `\mealy_fsm.\state' using process `\mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:65$8'.
  created $adff cell `$procdff$41' with positive edge clock and positive level reset.
Creating register for signal `\mealy_fsm.\div_clk' using process `\mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:53$3'.
  created $dff cell `$procdff$44' with positive edge clock.
Creating register for signal `\mealy_fsm.\clk_count' using process `\mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:53$3'.
  created $adff cell `$procdff$45' with positive edge clock and positive level reset.

3.18.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.18.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:98$12'.
Removing empty process `mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:98$12'.
Found and cleaned up 3 empty switches in `\mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:65$8'.
Removing empty process `mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:65$8'.
Found and cleaned up 1 empty switch in `\mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:53$3'.
Removing empty process `mealy_fsm.$proc$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:53$3'.
Cleaned up 5 empty switches.

3.18.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.
<suppressed ~13 debug messages>

3.19. Executing FLATTEN pass (flatten design).

# -------------------- 
#  Design entry stats  
# -------------------- 

3.20. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 47
   Number of wire bits:            187
   Number of public wires:          10
   Number of public wire bits:      36
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 24
     $add                            2
     $adff                           3
     $dff                            2
     $eq                             2
     $mux                            8
     $not                            5
     $pmux                           2

3.21. Executing SPLITNETS pass (splitting up multi-bit signals).

3.22. Executing DEMUXMAP pass.

3.23. Executing FLATTEN pass (flatten design).

3.24. Executing DEMUXMAP pass.

3.25. Executing TRIBUF pass.
Warning: Ignored -no_iobuf because -keep_tribuf is used.

3.26. Executing DEMINOUT pass (demote inout ports to input or output).

3.27. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 2 unused cells and 22 unused wires.
<suppressed ~5 debug messages>

3.29. Executing CHECK pass (checking for obvious problems).
Checking module mealy_fsm...
Found and reported 0 problems.

3.30. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 25
   Number of wire bits:            139
   Number of public wires:           8
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 22
     $add                            2
     $adff                           3
     $dff                            2
     $eq                             2
     $mux                            8
     $not                            3
     $pmux                           2

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.32. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

3.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$21: \state -> 1'0
      Replacing known input bits on port A of cell $procmux$19: \state -> 1'1
      Replacing known input bits on port B of cell $procmux$23: \state -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

3.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.36. Executing OPT_SHARE pass.

3.37. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=0, #remove=0, time=0.00 sec.]

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.40. Executing FSM pass (extract and optimize FSM).

3.40.1. Executing FSM_DETECT pass (finding FSMs in design).

3.40.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.40.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.40.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.40.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.40.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.40.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.40.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.41. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 24) from port B of cell mealy_fsm.$eq$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:56$5 ($eq).
Removed top 31 bits (of 32) from port B of cell mealy_fsm.$add$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:60$7 ($add).
Removed top 8 bits (of 32) from port Y of cell mealy_fsm.$add$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:60$7 ($add).
Removed top 31 bits (of 32) from port B of cell mealy_fsm.$add$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:103$15 ($add).
Removed top 28 bits (of 32) from port Y of cell mealy_fsm.$add$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:103$15 ($add).
Removed top 28 bits (of 32) from wire mealy_fsm.$add$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:103$15_Y.
Removed top 8 bits (of 32) from wire mealy_fsm.$add$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:60$7_Y.

3.42. Executing PEEPOPT pass (run peephole optimizers).

3.43. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

3.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.46. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

3.47. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.49. Executing OPT_SHARE pass.

3.50. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$44 ($dff) from module mealy_fsm (D = $not$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:58$6_Y, Q = \div_clk).
Adding EN signal on $procdff$40 ($dff) from module mealy_fsm (D = $0\done_sig[0:0], Q = \done_sig).
[#visit=5, #solve=0, #remove=0, time=0.00 sec.]

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

3.52. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.
<suppressed ~2 debug messages>

RUN-OPT ITERATIONS DONE : 1

3.53. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.55. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

3.56. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
    New input vector for $reduce_and cell $auto_57: { $auto_54 \rst_btn }
  Optimizing cells in module \mealy_fsm.
Performed a total of 1 changes.

3.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.58. Executing OPT_SHARE pass.

3.59. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=0, #remove=0, time=0.00 sec.]

3.60. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.67. Executing OPT_SHARE pass.

3.68. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=0, #remove=0, time=0.00 sec.]

3.69. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=29, #remove=0, time=0.11 sec.]

3.70. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.71. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.72. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell mealy_fsm.$auto_55 ($ne).

3.73. Executing PEEPOPT pass (run peephole optimizers).

3.74. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.75. Executing DEMUXMAP pass.

3.76. Executing SPLITNETS pass (splitting up multi-bit signals).

3.77. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 24
   Number of wire bits:            102
   Number of public wires:           8
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 21
     $add                            2
     $adff                           3
     $dffe                           2
     $eq                             2
     $mux                            5
     $ne                             1
     $not                            2
     $pmux                           2
     $reduce_and                     2

3.78. Executing RS_DSP_MULTADD pass.

3.79. Executing WREDUCE pass (reducing word size of cells).

3.80. Executing RS_DSP_MACC pass.

3.81. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.82. Executing TECHMAP pass (map to technology primitives).

3.82.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.82.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.83. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 24
   Number of wire bits:            102
   Number of public wires:           8
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 21
     $add                            2
     $adff                           3
     $dffe                           2
     $eq                             2
     $mux                            5
     $ne                             1
     $not                            2
     $pmux                           2
     $reduce_and                     2

3.84. Executing TECHMAP pass (map to technology primitives).

3.84.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.84.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.85. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 24
   Number of wire bits:            102
   Number of public wires:           8
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 21
     $add                            2
     $adff                           3
     $dffe                           2
     $eq                             2
     $mux                            5
     $ne                             1
     $not                            2
     $pmux                           2
     $reduce_and                     2

3.86. Executing TECHMAP pass (map to technology primitives).

3.86.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.86.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.87. Executing TECHMAP pass (map to technology primitives).

3.87.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.87.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.88. Executing TECHMAP pass (map to technology primitives).

3.88.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

3.88.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.89. Executing RS_DSP_SIMD pass.

3.90. Executing TECHMAP pass (map to technology primitives).

3.90.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

3.90.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.91. Executing TECHMAP pass (map to technology primitives).

3.91.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

3.91.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

3.92. Executing rs_pack_dsp_regs pass.

3.93. Executing RS_DSP_IO_REGS pass.

3.94. Executing TECHMAP pass (map to technology primitives).

3.94.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Successfully finished Verilog frontend.

3.94.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~14 debug messages>

3.95. Executing TECHMAP pass (map to technology primitives).

3.95.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

3.95.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

3.96. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 24
   Number of wire bits:            102
   Number of public wires:           8
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 21
     $add                            2
     $adff                           3
     $dffe                           2
     $eq                             2
     $mux                            5
     $ne                             1
     $not                            2
     $pmux                           2
     $reduce_and                     2

3.97. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module mealy_fsm:
  creating $macc model for $add$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:103$15 ($add).
  creating $macc model for $add$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:60$7 ($add).
  creating $alu model for $macc $add$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:60$7.
  creating $alu model for $macc $add$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:103$15.
  creating $alu cell for $add$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:103$15: $auto_58
  creating $alu cell for $add$/home/rapidsilicon/FPGA_Course_Shawn_Hymel/introduction-to-fpga/05-finite-state-machines/example-02-mealy-fsm/mealy-fsm.v:60$7: $auto_61
  created 2 $alu and 0 $macc cells.

3.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.99. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.100. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

3.101. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.102. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.103. Executing OPT_SHARE pass.

3.104. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=0, #remove=0, time=0.00 sec.]

3.105. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.106. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.107. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 28
   Number of wire bits:            158
   Number of public wires:           8
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 21
     $adff                           3
     $alu                            2
     $dffe                           2
     $eq                             2
     $mux                            5
     $ne                             1
     $not                            2
     $pmux                           2
     $reduce_and                     2

3.108. Executing MEMORY pass.

3.108.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

3.108.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

3.108.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

3.108.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

3.108.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

3.108.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.108.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.108.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

3.108.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.108.10. Executing MEMORY_COLLECT pass (generating $mem cells).

3.109. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 28
   Number of wire bits:            158
   Number of public wires:           8
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 21
     $adff                           3
     $alu                            2
     $dffe                           2
     $eq                             2
     $mux                            5
     $ne                             1
     $not                            2
     $pmux                           2
     $reduce_and                     2

3.110. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~4 debug messages>

3.111. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.112. Executing MEMORY_LIBMAP pass (mapping memories to cells).

3.113. Executing MEMORY_LIBMAP pass (mapping memories to cells).

3.114. Executing Rs_BRAM_Split pass.

3.115. Executing TECHMAP pass (map to technology primitives).

3.115.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.115.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

3.116. Executing TECHMAP pass (map to technology primitives).

3.116.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

3.116.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.117. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

3.118. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.119. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.120. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

3.121. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.123. Executing OPT_SHARE pass.

3.124. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=0, #remove=0, time=0.00 sec.]

3.125. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.127. Executing PMUXTREE pass.

3.128. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~7 debug messages>

3.129. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

3.130. Executing TECHMAP pass (map to technology primitives).

3.130.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.130.2. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.130.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~583 debug messages>

3.131. Printing statistics.

=== mealy_fsm ===

   Number of wires:                184
   Number of wire bits:           3000
   Number of public wires:           8
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                385
     $_AND_                         96
     $_DFFE_PP_                      2
     $_DFF_PN0_                     29
     $_MUX_                         62
     $_NOT_                         33
     $_OR_                          75
     $_XOR_                         88

3.132. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.
<suppressed ~216 debug messages>

3.133. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

3.134. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.135. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.136. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.137. Executing OPT_SHARE pass.

3.138. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.01 sec.]

3.139. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 19 unused cells and 150 unused wires.
<suppressed ~20 debug messages>

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.141. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.142. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.143. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.144. Executing OPT_SHARE pass.

3.145. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.146. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 2

3.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.
<suppressed ~30 debug messages>

3.149. Executing TECHMAP pass (map to technology primitives).

3.149.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.149.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

3.150. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 51
   Number of wire bits:            227
   Number of public wires:           8
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                175
     $_AND_                         69
     $_DFFE_PP_                      2
     $_DFF_PN0_                     29
     $_MUX_                          2
     $_NOT_                         20
     $_OR_                          27
     $_XOR_                         26

3.151. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.152. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.153. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.154. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.155. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.156. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.157. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

3.158. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.159. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.160. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.161. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.162. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.163. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.164. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.165. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.166. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.167. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.168. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.169. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.170. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.171. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.172. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.173. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=29, #remove=0, time=0.02 sec.]

3.174. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.175. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.176. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 49
   Number of wire bits:            225
   Number of public wires:           8
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                175
     $_AND_                         69
     $_DFFE_PP_                      2
     $_DFF_PN0_                     29
     $_MUX_                          2
     $_NOT_                         20
     $_OR_                          27
     $_XOR_                         26

   Number of Generic REGs:          31

ABC-DFF iteration : 1

3.177. Executing ABC pass (technology mapping using ABC).

3.177.1. Summary of detected clock domains:
  25 cells in clk=\div_clk, en={ }, arst=!\rst_btn, srst={ }
  4 cells in clk=\div_clk, en=$auto_56, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto_49, arst={ }, srst={ }
  142 cells in clk=\clk, en={ }, arst=!\rst_btn, srst={ }

  #logic partitions = 4

3.177.2. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rst_btn
Extracted 142 gates and 142 wires to a netlist network with 0 inputs and 25 outputs (dfl=1).

3.177.2.1. Executing ABC.
[Time = 0.09 sec.]

3.177.3. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \div_clk, asynchronously reset by !\rst_btn
Extracted 25 gates and 27 wires to a netlist network with 1 inputs and 7 outputs (dfl=1).

3.177.3.1. Executing ABC.
[Time = 0.09 sec.]

3.177.4. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \div_clk, enabled by $auto_56
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs (dfl=1).

3.177.4.1. Executing ABC.
[Time = 0.05 sec.]

3.177.5. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_49
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs (dfl=1).

3.177.5.1. Executing ABC.
[Time = 0.05 sec.]

3.178. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.179. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.180. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.181. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.182. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.183. Executing OPT_SHARE pass.

3.184. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.185. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 112 unused wires.
<suppressed ~1 debug messages>

3.186. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 2

3.187. Executing ABC pass (technology mapping using ABC).

3.187.1. Summary of detected clock domains:
  108 cells in clk=\clk, en={ }, arst=!\rst_btn, srst={ }
  14 cells in clk=\clk, en=$abc$1031$auto_49, arst={ }, srst={ }
  3 cells in clk=\div_clk, en=$abc$1025$auto_56, arst={ }, srst={ }
  16 cells in clk=\div_clk, en={ }, arst=!\rst_btn, srst={ }

  #logic partitions = 4

3.187.2. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rst_btn
Extracted 108 gates and 109 wires to a netlist network with 1 inputs and 36 outputs (dfl=1).

3.187.2.1. Executing ABC.
[Time = 0.09 sec.]

3.187.3. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \div_clk, asynchronously reset by !\rst_btn
Extracted 16 gates and 17 wires to a netlist network with 1 inputs and 7 outputs (dfl=1).

3.187.3.1. Executing ABC.
[Time = 0.09 sec.]

3.187.4. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1031$auto_49
Extracted 14 gates and 27 wires to a netlist network with 13 inputs and 3 outputs (dfl=1).

3.187.4.1. Executing ABC.
[Time = 0.05 sec.]

3.187.5. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$1190$lo0, enabled by $abc$1025$auto_56
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs (dfl=1).

3.187.5.1. Executing ABC.
[Time = 0.05 sec.]

3.188. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.189. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.190. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.191. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.192. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.193. Executing OPT_SHARE pass.

3.194. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.195. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 192 unused wires.
<suppressed ~1 debug messages>

3.196. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

3.197. Executing ABC pass (technology mapping using ABC).

3.197.1. Summary of detected clock domains:
  3 cells in clk=\div_clk, en=$abc$1025$auto_56, arst={ }, srst={ }
  3 cells in clk=\clk, en=$abc$1031$auto_49, arst={ }, srst={ }
  16 cells in clk=\div_clk, en={ }, arst=!\rst_btn, srst={ }
  118 cells in clk=\clk, en={ }, arst=!\rst_btn, srst={ }

  #logic partitions = 4

3.197.2. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rst_btn
Extracted 118 gates and 118 wires to a netlist network with 0 inputs and 25 outputs (dfl=2).

3.197.2.1. Executing ABC.
[Time = 0.11 sec.]

3.197.3. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \div_clk, asynchronously reset by !\rst_btn
Extracted 16 gates and 17 wires to a netlist network with 1 inputs and 7 outputs (dfl=2).

3.197.3.1. Executing ABC.
[Time = 0.10 sec.]

3.197.4. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \div_clk, enabled by $abc$1025$auto_56
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs (dfl=2).

3.197.4.1. Executing ABC.
[Time = 0.06 sec.]

3.197.5. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1031$auto_49
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs (dfl=2).

3.197.5.1. Executing ABC.
[Time = 0.06 sec.]

3.198. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.199. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.200. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.201. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.202. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.203. Executing OPT_SHARE pass.

3.204. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.205. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 180 unused wires.
<suppressed ~1 debug messages>

3.206. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

3.207. Executing ABC pass (technology mapping using ABC).

3.207.1. Summary of detected clock domains:
  3 cells in clk=\clk, en=$abc$1031$auto_49, arst={ }, srst={ }
  3 cells in clk=\div_clk, en=$abc$1025$auto_56, arst={ }, srst={ }
  15 cells in clk=\div_clk, en={ }, arst=!\rst_btn, srst={ }
  114 cells in clk=\clk, en={ }, arst=!\rst_btn, srst={ }

  #logic partitions = 4

3.207.2. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rst_btn
Extracted 114 gates and 114 wires to a netlist network with 0 inputs and 25 outputs (dfl=2).

3.207.2.1. Executing ABC.
[Time = 0.12 sec.]

3.207.3. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \div_clk, asynchronously reset by !\rst_btn
Extracted 15 gates and 16 wires to a netlist network with 1 inputs and 7 outputs (dfl=2).

3.207.3.1. Executing ABC.
[Time = 0.09 sec.]

3.207.4. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1031$auto_49
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs (dfl=2).

3.207.4.1. Executing ABC.
[Time = 0.05 sec.]

3.207.5. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$1543$lo0, enabled by $abc$1025$auto_56
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs (dfl=2).

3.207.5.1. Executing ABC.
[Time = 0.07 sec.]

3.208. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.209. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.210. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.211. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.212. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.213. Executing OPT_SHARE pass.

3.214. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.215. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 175 unused wires.
<suppressed ~1 debug messages>

3.216. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1
select with DFL1 synthesis (thresh_logic=0.920000, thresh_dff=0.980000)

3.217. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
   Number of Generic REGs:          31

ABC-DFF iteration : 1

3.218. Executing ABC pass (technology mapping using ABC).

3.218.1. Summary of detected clock domains:
  25 cells in clk=\div_clk, en={ }, arst=!\rst_btn, srst={ }
  4 cells in clk=\div_clk, en=$auto_56, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto_49, arst={ }, srst={ }
  142 cells in clk=\clk, en={ }, arst=!\rst_btn, srst={ }

  #logic partitions = 4

3.218.2. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rst_btn
Extracted 142 gates and 142 wires to a netlist network with 0 inputs and 25 outputs (dfl=1).

3.218.2.1. Executing ABC.
[Time = 0.12 sec.]

3.218.3. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \div_clk, asynchronously reset by !\rst_btn
Extracted 25 gates and 27 wires to a netlist network with 1 inputs and 7 outputs (dfl=1).

3.218.3.1. Executing ABC.
[Time = 0.08 sec.]

3.218.4. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \div_clk, enabled by $auto_56
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs (dfl=1).

3.218.4.1. Executing ABC.
[Time = 0.04 sec.]

3.218.5. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_49
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs (dfl=1).

3.218.5.1. Executing ABC.
[Time = 0.03 sec.]

3.219. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.220. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.221. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 112 unused wires.
<suppressed ~1 debug messages>

3.222. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.223. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.224. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.225. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.226. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.227. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.228. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 2

3.229. Executing ABC pass (technology mapping using ABC).

3.229.1. Summary of detected clock domains:
  19 cells in clk=\div_clk, en={ }, arst=!\rst_btn, srst={ }
  119 cells in clk=\clk, en={ }, arst=!\rst_btn, srst={ }
  1 cells in clk=\div_clk, en={ }, arst={ }, srst={ }
  4 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 4

3.229.2. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rst_btn
Extracted 119 gates and 119 wires to a netlist network with 0 inputs and 25 outputs (dfl=1).

3.229.2.1. Executing ABC.
[Time = 0.07 sec.]

3.229.3. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \div_clk, asynchronously reset by !\rst_btn
Extracted 19 gates and 22 wires to a netlist network with 3 inputs and 6 outputs (dfl=1).

3.229.3.1. Executing ABC.
[Time = 0.06 sec.]

3.229.4. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 1 outputs (dfl=1).

3.229.4.1. Executing ABC.
[Time = 0.08 sec.]

3.229.5. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$1903$lo0
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs (dfl=1).

3.229.5.1. Executing ABC.
[Time = 0.05 sec.]

3.230. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.01 sec.]

3.231. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.232. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 182 unused wires.
<suppressed ~1 debug messages>

3.233. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.01 sec.]

3.234. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.235. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.236. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$1908$auto_1909 ($_DFF_P_) from module mealy_fsm (D = \state, Q = \done_sig).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.237. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.238. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

3.239. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 3

3.240. Executing ABC pass (technology mapping using ABC).

3.240.1. Summary of detected clock domains:
  3 cells in clk=\clk, en={ }, arst={ }, srst={ }
  18 cells in clk=\div_clk, en={ }, arst=!\rst_btn, srst={ }
  119 cells in clk=\clk, en={ }, arst=!\rst_btn, srst={ }
  1 cells in clk=\div_clk, en={ }, arst={ }, srst={ }

  #logic partitions = 4

3.240.2. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rst_btn
Extracted 119 gates and 119 wires to a netlist network with 0 inputs and 25 outputs (dfl=2).

3.240.2.1. Executing ABC.
[Time = 0.12 sec.]

3.240.3. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \div_clk, asynchronously reset by !\rst_btn
Extracted 18 gates and 21 wires to a netlist network with 3 inputs and 6 outputs (dfl=2).

3.240.3.1. Executing ABC.
[Time = 0.10 sec.]

3.240.4. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 1 outputs (dfl=2).

3.240.4.1. Executing ABC.
[Time = 0.06 sec.]

3.240.5. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$2078$lo0
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs (dfl=2).

3.240.5.1. Executing ABC.
[Time = 0.05 sec.]

3.241. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.242. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.243. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 180 unused wires.
<suppressed ~1 debug messages>

3.244. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.245. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.246. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.247. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.248. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.249. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.250. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 4

3.251. Executing ABC pass (technology mapping using ABC).

3.251.1. Summary of detected clock domains:
  4 cells in clk=\div_clk, en={ }, arst={ }, srst={ }
  3 cells in clk=\clk, en={ }, arst={ }, srst={ }
  15 cells in clk=\div_clk, en={ }, arst=!\rst_btn, srst={ }
  114 cells in clk=\clk, en={ }, arst=!\rst_btn, srst={ }

  #logic partitions = 4

3.251.2. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rst_btn
Extracted 114 gates and 114 wires to a netlist network with 0 inputs and 25 outputs (dfl=2).

3.251.2.1. Executing ABC.
[Time = 0.09 sec.]

3.251.3. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \div_clk, asynchronously reset by !\rst_btn
Extracted 15 gates and 17 wires to a netlist network with 2 inputs and 7 outputs (dfl=2).

3.251.3.1. Executing ABC.
[Time = 0.06 sec.]

3.251.4. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \div_clk
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 1 outputs (dfl=2).

3.251.4.1. Executing ABC.
[Time = 0.05 sec.]

3.251.5. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 1 outputs (dfl=2).

3.251.5.1. Executing ABC.
[Time = 0.06 sec.]

3.252. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.253. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.254. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 175 unused wires.
<suppressed ~1 debug messages>

3.255. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.256. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.257. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.258. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.259. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.260. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.261. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).
select with DFL1 synthesis (thresh_logic=0.920000, thresh_dff=0.980000)

3.262. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
select CE remove strategy (thresh_logic=0.920000, thresh_dff=0.980000, dfl=1)

3.263. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.264. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.265. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.266. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.267. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.268. Executing OPT_SHARE pass.

3.269. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on mealy_fsm:done_sig_1912 ($_DFF_P_) from module mealy_fsm (D = \state, Q = \done_sig).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.270. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

3.271. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.272. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.273. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.274. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.275. Executing OPT_SHARE pass.

3.276. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.277. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.278. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 2

3.279. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.280. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.281. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.282. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.283. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.284. Executing OPT_SHARE pass.

3.285. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.286. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.287. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.288. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.289. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.290. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.291. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.292. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.293. Executing OPT_SHARE pass.

3.294. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.295. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=29, #remove=0, time=0.01 sec.]

3.296. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.297. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.298. Executing BMUXMAP pass.

3.299. Executing DEMUXMAP pass.

3.300. Executing SPLITNETS pass (splitting up multi-bit signals).

3.301. Executing ABC pass (technology mapping using ABC).

3.301.1. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Extracted 109 gates and 141 wires to a netlist network with 32 inputs and 31 outputs (dfl=1).

3.301.1.1. Executing ABC.
DE:   Version : 7.7
DE:   #PIs =  32  #Luts =    47  Max Lvl =   3  Avg Lvl =   2.19  [   0.11 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  32  #Luts =    46  Max Lvl =   3  Avg Lvl =   2.19  [   0.21 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  32  #Luts =    45  Max Lvl =   3  Avg Lvl =   2.32  [   0.18 sec. at Pass 2]{map}[6]
DE:   #PIs =  32  #Luts =    44  Max Lvl =   3  Avg Lvl =   2.32  [   0.30 sec. at Pass 3]{postMap}[12]
DE:   #PIs =  32  #Luts =    43  Max Lvl =   3  Avg Lvl =   2.32  [   0.80 sec. at Pass 4]{map}[36]
DE:   #PIs =  32  #Luts =    43  Max Lvl =   3  Avg Lvl =   2.32  [   2.19 sec. at Pass 5]{postMap}[72]
DE:   #PIs =  32  #Luts =    43  Max Lvl =   3  Avg Lvl =   2.32  [   2.32 sec. at Pass 6]{map}[100]
DE:   #PIs =  32  #Luts =    43  Max Lvl =   3  Avg Lvl =   2.32  [   2.59 sec. at Pass 7]{postMap}[100]
DE:   #PIs =  32  #Luts =    43  Max Lvl =   3  Avg Lvl =   2.32  [   2.38 sec. at Pass 8]{pushMap}[100]
DE:   #PIs =  32  #Luts =    43  Max Lvl =   3  Avg Lvl =   2.32  [   2.27 sec. at Pass 9]{pushMap}[100]
DE:   #PIs =  32  #Luts =    42  Max Lvl =   3  Avg Lvl =   2.32  [   2.88 sec. at Pass 9]{pushMap}[100]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   2.48 sec. at Pass 10]{map}[100]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   2.53 sec. at Pass 11]{postMap}[100]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   2.29 sec. at Pass 12]{map}[100]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   2.87 sec. at Pass 13]{postMap}[100]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   2.28 sec. at Pass 14]{pushMap}[100]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   2.31 sec. at Pass 15]{pushMap}[100]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   2.15 sec. at Pass 15]{pushMap}[100]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   2.09 sec. at Pass 16]{finalMap}[100]
DE:   
DE:   total time =   35.51 sec.
[Time = 37.59 sec.]

3.302. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.303. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.304. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.305. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.306. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.307. Executing OPT_SHARE pass.

3.308. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.309. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 141 unused wires.
<suppressed ~1 debug messages>

3.310. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.311. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

3.312. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.313. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.314. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.315. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.316. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.317. Executing OPT_SHARE pass.

3.318. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.00 sec.]

3.319. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.320. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.321. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.322. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.323. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.324. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.325. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.326. Executing OPT_SHARE pass.

3.327. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=0, #remove=0, time=0.01 sec.]

3.328. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=31, #solve=29, #remove=0, time=0.05 sec.]

3.329. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.330. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.331. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 49
   Number of wire bits:             75
   Number of public wires:           8
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 72
     $_DFFE_PP_                      1
     $_DFF_PN0_                     29
     $_DFF_P_                        1
     $lut                           41

3.332. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

3.333. Executing RS_DFFSR_CONV pass.

3.334. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 49
   Number of wire bits:             75
   Number of public wires:           8
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 72
     $_DFFE_PP0P_                    1
     $_DFF_PN0_                     29
     $_DFF_P_                        1
     $lut                           41

3.335. Executing TECHMAP pass (map to technology primitives).

3.335.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.335.2. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

3.335.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~195 debug messages>

3.336. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.
<suppressed ~852 debug messages>

3.337. Executing SIMPLEMAP pass (map simple cells to gate primitives).

3.338. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.339. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
<suppressed ~159 debug messages>
Removed a total of 53 cells.

3.340. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

3.341. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 204 unused wires.
<suppressed ~1 debug messages>

3.342. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.
<suppressed ~1 debug messages>

3.343. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.344. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.345. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.346. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.347. Executing OPT_SHARE pass.

3.348. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.01 sec.]

3.349. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.350. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.351. Executing TECHMAP pass (map to technology primitives).

3.351.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.351.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

3.352. Executing ABC pass (technology mapping using ABC).

3.352.1. Extracting gate netlist of module `\mealy_fsm' to `<abc-temp-dir>/input.blif'..
Extracted 182 gates and 216 wires to a netlist network with 32 inputs and 31 outputs (dfl=1).

3.352.1.1. Executing ABC.
DE:   Version : 7.7
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   0.20 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   0.23 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   0.20 sec. at Pass 2]{map}[6]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   0.31 sec. at Pass 3]{postMap}[12]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   1.03 sec. at Pass 4]{map}[36]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   1.72 sec. at Pass 5]{postMap}[72]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   1.50 sec. at Pass 6]{pushMap}[72]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   1.48 sec. at Pass 7]{pushMap}[72]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   1.51 sec. at Pass 7]{pushMap}[72]
DE:   #PIs =  32  #Luts =    41  Max Lvl =   3  Avg Lvl =   2.29  [   1.52 sec. at Pass 8]{finalMap}[72]
DE:   
DE:   total time =    9.82 sec.
[Time = 11.88 sec.]

3.353. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

3.354. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.355. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mealy_fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.356. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mealy_fsm.
Performed a total of 0 changes.

3.357. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mealy_fsm'.
Removed a total of 0 cells.

3.358. Executing OPT_SHARE pass.

3.359. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

3.360. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 172 unused wires.
<suppressed ~1 debug messages>

3.361. Executing OPT_EXPR pass (perform const folding).
Optimizing module mealy_fsm.

RUN-OPT ITERATIONS DONE : 1

3.362. Executing HIERARCHY pass (managing design hierarchy).

3.362.1. Analyzing design hierarchy..
Top module:  \mealy_fsm

3.362.2. Analyzing design hierarchy..
Top module:  \mealy_fsm
Removed 0 unused modules.

3.363. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.364. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v
Parsing SystemVerilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__IO_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

3.365. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Replacing existing blackbox module `\CARRY' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:24.1-31.10.
Generating RTLIL representation for module `\CARRY'.
Replacing existing blackbox module `\CLK_BUF' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:41.1-46.10.
Generating RTLIL representation for module `\CLK_BUF'.
Replacing existing blackbox module `\DFFNRE' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:56.1-64.10.
Generating RTLIL representation for module `\DFFNRE'.
Replacing existing blackbox module `\DFFRE' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:74.1-82.10.
Generating RTLIL representation for module `\DFFRE'.
Replacing existing blackbox module `\DSP19X2' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:92.1-126.10.
Generating RTLIL representation for module `\DSP19X2'.
Replacing existing blackbox module `\DSP38' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:136.1-162.10.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FCLK_BUF'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_FAB'.
Generating RTLIL representation for module `\I_SERDES'.
Replacing existing blackbox module `\LUT1' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:402.1-408.10.
Generating RTLIL representation for module `\LUT1'.
Replacing existing blackbox module `\LUT2' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:418.1-424.10.
Generating RTLIL representation for module `\LUT2'.
Replacing existing blackbox module `\LUT3' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:434.1-440.10.
Generating RTLIL representation for module `\LUT3'.
Replacing existing blackbox module `\LUT4' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:450.1-456.10.
Generating RTLIL representation for module `\LUT4'.
Replacing existing blackbox module `\LUT5' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:466.1-472.10.
Generating RTLIL representation for module `\LUT5'.
Replacing existing blackbox module `\LUT6' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:482.1-488.10.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Replacing existing blackbox module `\O_BUF' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:563.1-574.10.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_FAB'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:929.1-984.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Replacing existing blackbox module `\TDP_RAM36K' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:994.1-1023.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\LATCH' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1040.1-1045.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1053.1-1058.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1067.1-1073.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1081.1-1087.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1096.1-1102.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1111.1-1117.10.
Generating RTLIL representation for module `\LATCHNS'.
Successfully finished Verilog frontend.
 ***************************
   Inserting Input Buffers
 ***************************
WARNING: port '\clk' has no associated I_BUF
WARNING: port '\go_btn' has no associated I_BUF
WARNING: port '\rst_btn' has no associated I_BUF
 ***************************
   Inserting Clock Buffers
 ***************************
INFO: inserting FCLK_BUF before '\div_clk'
INFO: inserting CLK_BUF before '$ibuf_clk'
 *****************************
   Inserting Output Buffers
 *****************************
WARNING: OUTPUT port '\done_sig' has no associated O_BUF
WARNING: OUTPUT port '\led' has no associated O_BUF
 *****************************
   Mapping Tri-state Buffers  
 *****************************

3.366. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..

3.367. Executing TECHMAP pass (map to technology primitives).

3.367.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

3.367.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~14 debug messages>

3.368. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

3.369. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 56
   Number of wire bits:             85
   Number of public wires:           8
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 82
     $lut                           41
     CLK_BUF                         1
     DFFRE                          31
     FCLK_BUF                        1
     I_BUF                           3
     O_BUF                           5

3.370. Executing TECHMAP pass (map to technology primitives).

3.370.1. Executing Verilog-2005 frontend: /home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v
Parsing Verilog input from `/home/rapidsilicon/Aug_2024_Bash/RC1/Raptor/2024.09/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

3.370.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~291 debug messages>

3.371. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mealy_fsm..
Removed 0 unused cells and 82 unused wires.
<suppressed ~1 debug messages>

3.372. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 56
   Number of wire bits:             85
   Number of public wires:           8
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 82
     CLK_BUF                         1
     DFFRE                          31
     FCLK_BUF                        1
     I_BUF                           3
     LUT2                            4
     LUT3                            5
     LUT4                           13
     LUT5                           11
     LUT6                            8
     O_BUF                           5

 *****************************
         Rewire_Obuft         
 *****************************

==========================
Post Design clean up ... 

Split to bits ... 

3.373. Executing SPLITNETS pass (splitting up multi-bit signals).

Split into bits ...     [0.00 sec.]
Building Sig2cells ...  [0.00 sec.]
Building Sig2sig ...    [0.00 sec.]
Backward clean up ...   [0.00 sec.]
Before cleanup :

3.374. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 82
   Number of wire bits:             85
   Number of public wires:          31
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 82
     CLK_BUF                         1
     DFFRE                          31
     FCLK_BUF                        1
     I_BUF                           3
     LUT2                            4
     LUT3                            5
     LUT4                           13
     LUT5                           11
     LUT6                            8
     O_BUFT                          5

 --------------------------
   Removed assigns : 0
   Removed wires   : 0
   Removed cells   : 0
 --------------------------
After cleanup :

3.375. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 82
   Number of wire bits:             85
   Number of public wires:          31
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 82
     CLK_BUF                         1
     DFFRE                          31
     FCLK_BUF                        1
     I_BUF                           3
     LUT2                            4
     LUT3                            5
     LUT4                           13
     LUT5                           11
     LUT6                            8
     O_BUFT                          5


Total time for 'obs_clean' ...   
 [0.01 sec.]

3.376. Executing SPLITNETS pass (splitting up multi-bit signals).

3.377. Executing HIERARCHY pass (managing design hierarchy).

3.377.1. Analyzing design hierarchy..
Top module:  \mealy_fsm

3.377.2. Analyzing design hierarchy..
Top module:  \mealy_fsm
Removed 0 unused modules.

Dumping port properties into 'netlist_info.json' file.


Inserting I_FAB/O_FAB cells ...


Inserting I_FAB/O_FAB cells done.

3.378. Printing statistics.

=== mealy_fsm ===

   Number of wires:                 82
   Number of wire bits:             85
   Number of public wires:          31
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 82
     CLK_BUF                         1
     DFFRE                          31
     FCLK_BUF                        1
     I_BUF                           3
     LUT2                            4
     LUT3                            5
     LUT4                           13
     LUT5                           11
     LUT6                            8
     O_BUFT                          5

   Number of LUTs:                  41
   Number of REGs:                  31
   Number of CARRY ADDERs:           0

3.379. Executing Verilog backend.
Dumping module `\mealy_fsm'.

# -------------------- 
# Core Synthesis done 
# -------------------- 

3.380. Executing Verilog backend.
Dumping module `\mealy_fsm'.

3.380.1. Executing BLIF backend.

-- Running command `write_rtlil design.rtlil' --

3.380.2. Executing RTLIL backend.
Output filename: design.rtlil

3.380.3. Executing SPLITNETS pass (splitting up multi-bit signals).

3.380.4. Executing FLATTEN pass (flatten design).
Deleting now unused module interface_mealy_fsm.
<suppressed ~1 debug messages>

3.380.5. Executing Verilog backend.
Dumping module `\mealy_fsm'.

3.380.5.1. Executing BLIF backend.

3.380.5.2. Executing Verilog backend.
Dumping module `\mealy_fsm'.

3.380.5.2.1. Executing BLIF backend.

3.380.5.2.2. Executing Verilog backend.
Dumping module `\fabric_mealy_fsm'.

3.380.5.2.2.1. Executing BLIF backend.

Warnings: 49 unique messages, 49 total
End of script. Logfile hash: 174d6d10f7, CPU: user 4.04s system 0.20s, MEM: 61.71 MB peak
Yosys 0.38 (git sha1 2b36bfab5, gcc 11.2.1 -fPIC -Os)
Time spent: 98% 10x abc (350 sec), 0% 2x read_systemverilog (0 sec), ...
