/* Generated by Yosys 0.38 (git sha1 2b36bfab5, gcc 11.2.1 -fPIC -Os) */

module mealy_fsm(clk, rst_btn, go_btn, led, done_sig);
  input clk;
  output done_sig;
  input go_btn;
  output [3:0] led;
  input rst_btn;
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire clk;
  wire \clk_count[0] ;
  wire \clk_count[10] ;
  wire \clk_count[11] ;
  wire \clk_count[12] ;
  wire \clk_count[13] ;
  wire \clk_count[14] ;
  wire \clk_count[15] ;
  wire \clk_count[16] ;
  wire \clk_count[17] ;
  wire \clk_count[18] ;
  wire \clk_count[19] ;
  wire \clk_count[1] ;
  wire \clk_count[20] ;
  wire \clk_count[21] ;
  wire \clk_count[22] ;
  wire \clk_count[23] ;
  wire \clk_count[2] ;
  wire \clk_count[3] ;
  wire \clk_count[4] ;
  wire \clk_count[5] ;
  wire \clk_count[6] ;
  wire \clk_count[7] ;
  wire \clk_count[8] ;
  wire \clk_count[9] ;
  wire div_clk;
  wire done_sig;
  wire go_btn;
  wire [3:0] led;
  wire rst_btn;
  wire state;
  DFFRE _051_ (
    .C(_041_),
    .D(_000_),
    .E(1'b1),
    .Q(\clk_count[0] ),
    .R(_045_)
  );
  DFFRE _052_ (
    .C(_041_),
    .D(_001_),
    .E(1'b1),
    .Q(\clk_count[1] ),
    .R(_045_)
  );
  DFFRE _053_ (
    .C(_041_),
    .D(_002_),
    .E(1'b1),
    .Q(\clk_count[2] ),
    .R(_045_)
  );
  DFFRE _054_ (
    .C(_041_),
    .D(_003_),
    .E(1'b1),
    .Q(\clk_count[3] ),
    .R(_045_)
  );
  DFFRE _055_ (
    .C(_041_),
    .D(_004_),
    .E(1'b1),
    .Q(\clk_count[4] ),
    .R(_045_)
  );
  DFFRE _056_ (
    .C(_041_),
    .D(_005_),
    .E(1'b1),
    .Q(\clk_count[5] ),
    .R(_045_)
  );
  DFFRE _057_ (
    .C(_041_),
    .D(_006_),
    .E(1'b1),
    .Q(\clk_count[6] ),
    .R(_045_)
  );
  DFFRE _058_ (
    .C(_041_),
    .D(_007_),
    .E(1'b1),
    .Q(\clk_count[7] ),
    .R(_045_)
  );
  DFFRE _059_ (
    .C(_041_),
    .D(_008_),
    .E(1'b1),
    .Q(\clk_count[8] ),
    .R(_045_)
  );
  DFFRE _060_ (
    .C(_041_),
    .D(_009_),
    .E(1'b1),
    .Q(\clk_count[9] ),
    .R(_045_)
  );
  DFFRE _061_ (
    .C(_041_),
    .D(_010_),
    .E(1'b1),
    .Q(\clk_count[10] ),
    .R(_045_)
  );
  DFFRE _062_ (
    .C(_041_),
    .D(_011_),
    .E(1'b1),
    .Q(\clk_count[11] ),
    .R(_045_)
  );
  DFFRE _063_ (
    .C(_041_),
    .D(_012_),
    .E(1'b1),
    .Q(\clk_count[12] ),
    .R(_045_)
  );
  DFFRE _064_ (
    .C(_041_),
    .D(_013_),
    .E(1'b1),
    .Q(\clk_count[13] ),
    .R(_045_)
  );
  DFFRE _065_ (
    .C(_041_),
    .D(_014_),
    .E(1'b1),
    .Q(\clk_count[14] ),
    .R(_045_)
  );
  DFFRE _066_ (
    .C(_041_),
    .D(_015_),
    .E(1'b1),
    .Q(\clk_count[15] ),
    .R(_045_)
  );
  DFFRE _067_ (
    .C(_041_),
    .D(_016_),
    .E(1'b1),
    .Q(\clk_count[16] ),
    .R(_045_)
  );
  DFFRE _068_ (
    .C(_041_),
    .D(_017_),
    .E(1'b1),
    .Q(\clk_count[17] ),
    .R(_045_)
  );
  DFFRE _069_ (
    .C(_041_),
    .D(_018_),
    .E(1'b1),
    .Q(\clk_count[18] ),
    .R(_045_)
  );
  DFFRE _070_ (
    .C(_041_),
    .D(_019_),
    .E(1'b1),
    .Q(\clk_count[19] ),
    .R(_045_)
  );
  DFFRE _071_ (
    .C(_041_),
    .D(_020_),
    .E(1'b1),
    .Q(\clk_count[20] ),
    .R(_045_)
  );
  DFFRE _072_ (
    .C(_041_),
    .D(_021_),
    .E(1'b1),
    .Q(\clk_count[21] ),
    .R(_045_)
  );
  DFFRE _073_ (
    .C(_041_),
    .D(_022_),
    .E(1'b1),
    .Q(\clk_count[22] ),
    .R(_045_)
  );
  DFFRE _074_ (
    .C(_041_),
    .D(_023_),
    .E(1'b1),
    .Q(\clk_count[23] ),
    .R(_045_)
  );
  DFFRE _075_ (
    .C(_042_),
    .D(_024_),
    .E(1'b1),
    .Q(_047_),
    .R(_045_)
  );
  DFFRE _076_ (
    .C(_042_),
    .D(_025_),
    .E(1'b1),
    .Q(_048_),
    .R(_045_)
  );
  DFFRE _077_ (
    .C(_042_),
    .D(_026_),
    .E(1'b1),
    .Q(_049_),
    .R(_045_)
  );
  DFFRE _078_ (
    .C(_042_),
    .D(_027_),
    .E(1'b1),
    .Q(_050_),
    .R(_045_)
  );
  DFFRE _079_ (
    .C(_042_),
    .D(_028_),
    .E(1'b1),
    .Q(state),
    .R(_045_)
  );
  DFFRE _080_ (
    .C(_041_),
    .D(_030_),
    .E(1'b1),
    .Q(div_clk),
    .R(1'b1)
  );
  LUT5 #(
    .INIT_VALUE(32'd2147483648)
  ) _081_ (
    .A({ \clk_count[6] , \clk_count[5] , \clk_count[15] , \clk_count[14] , \clk_count[13]  }),
    .Y(_031_)
  );
  LUT6 #(
    .INIT_VALUE(64'b0000000100000000000000000000000000000000000000000000000000000000)
  ) _082_ (
    .A({ \clk_count[9] , \clk_count[17] , \clk_count[18] , \clk_count[10] , \clk_count[16] , \clk_count[19]  }),
    .Y(_032_)
  );
  LUT5 #(
    .INIT_VALUE(32'd65536)
  ) _083_ (
    .A({ \clk_count[20] , \clk_count[2] , \clk_count[3] , \clk_count[23] , \clk_count[21]  }),
    .Y(_033_)
  );
  LUT6 #(
    .INIT_VALUE(64'b0000000000000000000000000000000100000000000000000000000000000000)
  ) _084_ (
    .A({ \clk_count[8] , \clk_count[0] , \clk_count[4] , \clk_count[11] , \clk_count[12] , \clk_count[7]  }),
    .Y(_034_)
  );
  LUT6 #(
    .INIT_VALUE(64'b0001000000000000000000000000000000000000000000000000000000000000)
  ) _085_ (
    .A({ _034_, _033_, _032_, _031_, \clk_count[1] , \clk_count[22]  }),
    .Y(_035_)
  );
  LUT3 #(
    .INIT_VALUE(8'b01111000)
  ) _086_ (
    .A({ div_clk, _035_, _045_ }),
    .Y(_030_)
  );
  LUT6 #(
    .INIT_VALUE(64'b0111111111111111011111111111111100000000000000001111111111111111)
  ) _087_ (
    .A({ state, _044_, _048_, _047_, _049_, _050_ }),
    .Y(_028_)
  );
  LUT4 #(
    .INIT_VALUE(16'b0111111110000000)
  ) _088_ (
    .A({ _050_, _048_, _047_, _049_ }),
    .Y(_027_)
  );
  LUT3 #(
    .INIT_VALUE(8'b01111000)
  ) _089_ (
    .A({ _049_, _048_, _047_ }),
    .Y(_026_)
  );
  LUT2 #(
    .INIT_VALUE(4'b0110)
  ) _090_ (
    .A({ _048_, _047_ }),
    .Y(_025_)
  );
  LUT2 #(
    .INIT_VALUE(4'b0100)
  ) _091_ (
    .A({ state, _047_ }),
    .Y(_024_)
  );
  LUT6 #(
    .INIT_VALUE(64'b1000000000000000111111111111111100000000000000000000000000000000)
  ) _092_ (
    .A({ _045_, state, _048_, _047_, _049_, _050_ }),
    .Y(_029_)
  );
  LUT5 #(
    .INIT_VALUE(32'd2147483648)
  ) _093_ (
    .A({ \clk_count[2] , \clk_count[1] , \clk_count[0] , \clk_count[4] , \clk_count[3]  }),
    .Y(_036_)
  );
  LUT5 #(
    .INIT_VALUE(32'd2147483648)
  ) _094_ (
    .A({ \clk_count[11] , \clk_count[12] , \clk_count[9] , \clk_count[8] , \clk_count[10]  }),
    .Y(_037_)
  );
  LUT4 #(
    .INIT_VALUE(16'b1000000000000000)
  ) _095_ (
    .A({ _037_, _036_, _031_, \clk_count[7]  }),
    .Y(_038_)
  );
  LUT4 #(
    .INIT_VALUE(16'b1000000000000000)
  ) _096_ (
    .A({ \clk_count[16] , \clk_count[17] , \clk_count[19] , \clk_count[18]  }),
    .Y(_039_)
  );
  LUT6 #(
    .INIT_VALUE(64'b0111111111111111111111111111111110000000000000000000000000000000)
  ) _097_ (
    .A({ \clk_count[23] , _039_, _038_, \clk_count[21] , \clk_count[20] , \clk_count[22]  }),
    .Y(_023_)
  );
  LUT5 #(
    .INIT_VALUE(32'd2147450880)
  ) _098_ (
    .A({ \clk_count[22] , _039_, _038_, \clk_count[21] , \clk_count[20]  }),
    .Y(_022_)
  );
  LUT4 #(
    .INIT_VALUE(16'b0111111110000000)
  ) _099_ (
    .A({ \clk_count[21] , _039_, _038_, \clk_count[20]  }),
    .Y(_021_)
  );
  LUT4 #(
    .INIT_VALUE(16'b0000011100001000)
  ) _100_ (
    .A({ \clk_count[20] , _035_, _039_, _038_ }),
    .Y(_020_)
  );
  LUT5 #(
    .INIT_VALUE(32'd2147450880)
  ) _101_ (
    .A({ \clk_count[19] , _038_, \clk_count[16] , \clk_count[17] , \clk_count[18]  }),
    .Y(_019_)
  );
  LUT5 #(
    .INIT_VALUE(32'd8323200)
  ) _102_ (
    .A({ \clk_count[18] , _035_, _038_, \clk_count[16] , \clk_count[17]  }),
    .Y(_018_)
  );
  LUT4 #(
    .INIT_VALUE(16'b0000011100001000)
  ) _103_ (
    .A({ \clk_count[17] , _035_, _038_, \clk_count[16]  }),
    .Y(_017_)
  );
  LUT5 #(
    .INIT_VALUE(32'd2147450880)
  ) _104_ (
    .A({ \clk_count[16] , _037_, _036_, _031_, \clk_count[7]  }),
    .Y(_016_)
  );
  LUT4 #(
    .INIT_VALUE(16'b1000000000000000)
  ) _105_ (
    .A({ _036_, \clk_count[6] , \clk_count[5] , \clk_count[7]  }),
    .Y(_040_)
  );
  LUT6 #(
    .INIT_VALUE(64'b0000000000000000011111111111111100000000000000001000000000000000)
  ) _106_ (
    .A({ \clk_count[15] , _035_, _040_, _037_, \clk_count[14] , \clk_count[13]  }),
    .Y(_015_)
  );
  LUT5 #(
    .INIT_VALUE(32'd8323200)
  ) _107_ (
    .A({ \clk_count[14] , _035_, _040_, _037_, \clk_count[13]  }),
    .Y(_014_)
  );
  LUT4 #(
    .INIT_VALUE(16'b0000011100001000)
  ) _108_ (
    .A({ \clk_count[13] , _035_, _040_, _037_ }),
    .Y(_013_)
  );
  LUT6 #(
    .INIT_VALUE(64'b0111111111111111111111111111111110000000000000000000000000000000)
  ) _109_ (
    .A({ \clk_count[12] , _040_, \clk_count[11] , \clk_count[9] , \clk_count[8] , \clk_count[10]  }),
    .Y(_012_)
  );
  LUT5 #(
    .INIT_VALUE(32'd2147450880)
  ) _110_ (
    .A({ \clk_count[11] , _040_, \clk_count[9] , \clk_count[8] , \clk_count[10]  }),
    .Y(_011_)
  );
  LUT4 #(
    .INIT_VALUE(16'b0111111110000000)
  ) _111_ (
    .A({ \clk_count[10] , _040_, \clk_count[9] , \clk_count[8]  }),
    .Y(_010_)
  );
  LUT4 #(
    .INIT_VALUE(16'b0000011100001000)
  ) _112_ (
    .A({ \clk_count[9] , _035_, _040_, \clk_count[8]  }),
    .Y(_009_)
  );
  LUT3 #(
    .INIT_VALUE(8'b00010100)
  ) _113_ (
    .A({ _040_, \clk_count[8] , _035_ }),
    .Y(_008_)
  );
  LUT4 #(
    .INIT_VALUE(16'b0111111110000000)
  ) _114_ (
    .A({ \clk_count[7] , _036_, \clk_count[6] , \clk_count[5]  }),
    .Y(_007_)
  );
  LUT4 #(
    .INIT_VALUE(16'b0000011100001000)
  ) _115_ (
    .A({ \clk_count[6] , _035_, _036_, \clk_count[5]  }),
    .Y(_006_)
  );
  LUT3 #(
    .INIT_VALUE(8'b00010100)
  ) _116_ (
    .A({ _036_, \clk_count[5] , _035_ }),
    .Y(_005_)
  );
  LUT5 #(
    .INIT_VALUE(32'd2147450880)
  ) _117_ (
    .A({ \clk_count[4] , \clk_count[2] , \clk_count[1] , \clk_count[0] , \clk_count[3]  }),
    .Y(_004_)
  );
  LUT4 #(
    .INIT_VALUE(16'b0111111110000000)
  ) _118_ (
    .A({ \clk_count[3] , \clk_count[2] , \clk_count[1] , \clk_count[0]  }),
    .Y(_003_)
  );
  LUT3 #(
    .INIT_VALUE(8'b01111000)
  ) _119_ (
    .A({ \clk_count[2] , \clk_count[1] , \clk_count[0]  }),
    .Y(_002_)
  );
  LUT2 #(
    .INIT_VALUE(4'b0110)
  ) _120_ (
    .A({ \clk_count[1] , \clk_count[0]  }),
    .Y(_001_)
  );
  LUT2 #(
    .INIT_VALUE(4'b0001)
  ) _121_ (
    .A({ _035_, \clk_count[0]  }),
    .Y(_000_)
  );
  CLK_BUF _122_ (
    .I(_043_),
    .O(_041_)
  );
  FCLK_BUF _123_ (
    .I(div_clk),
    .O(_042_)
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) _124_ (
    .EN(1'b1),
    .I(clk),
    .O(_043_)
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) _125_ (
    .EN(1'b1),
    .I(go_btn),
    .O(_044_)
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) _126_ (
    .EN(1'b1),
    .I(rst_btn),
    .O(_045_)
  );
  O_BUFT _127_ (
    .I(_046_),
    .O(done_sig),
    .T(1'b1)
  );
  O_BUFT _128_ (
    .I(_047_),
    .O(led[0]),
    .T(1'b1)
  );
  O_BUFT _129_ (
    .I(_048_),
    .O(led[1]),
    .T(1'b1)
  );
  O_BUFT _130_ (
    .I(_049_),
    .O(led[2]),
    .T(1'b1)
  );
  O_BUFT _131_ (
    .I(_050_),
    .O(led[3]),
    .T(1'b1)
  );
  DFFRE \mealy_fsm:done_sig_2258  (
    .C(_042_),
    .D(state),
    .E(_029_),
    .Q(_046_),
    .R(1'b1)
  );
endmodule
