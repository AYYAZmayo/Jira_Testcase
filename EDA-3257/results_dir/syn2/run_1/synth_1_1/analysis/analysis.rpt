/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.09
Build    : 1.2.4
Hash     : d22acb7
Date     : Sep 21 2024
Type     : Engineering
Log Time   : Sat Sep 21 11:56:00 2024 GMT
/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.09
Build    : 1.2.4
Hash     : d22acb7
Date     : Sep 21 2024
Type     : Engineering
Log Time   : Sat Sep 21 10:40:37 2024 GMT
/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.09
Build    : 1.2.4
Hash     : d22acb7
Date     : Sep 21 2024
Type     : Engineering
Log Time   : Sat Sep 21 10:40:37 2024 GMT

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 4964457dc, gcc 11.2.1 -fPIC -Os)


-- Executing script file `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/syn2/results_dir/syn2/run_1/synth_1_1/analysis/syn2_analyzer.cmd' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_21_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_21_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FCLK_BUF'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_FAB'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\MIPI_RX'.
Generating RTLIL representation for module `\MIPI_TX'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_FAB'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/syn2/results_dir/.././rtl/syn2.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/syn2/results_dir/.././rtl/syn2.v' to AST representation.
Warning: Encountered `full_case' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using the Verilog `full_case' attribute or the SystemVerilog `unique' or `unique0' keywords is recommended!
Warning: Encountered `parallel_case' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using the Verilog `parallel_case' attribute or the SystemVerilog `unique' or `priority' keywords is recommended!
Generating RTLIL representation for module `\syn2'.
Generating RTLIL representation for module `\fpu_mul'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/syn2/results_dir/.././rtl/syn2.v:386.1-387.22 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\except'.
Generating RTLIL representation for module `\pre_norm_fmul'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/syn2/results_dir/.././rtl/syn2.v:811.1-817.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\mul_r2'.
Generating RTLIL representation for module `\post_norm'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/syn2/results_dir/.././rtl/syn2.v:1196.1-1202.9 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/syn2/results_dir/.././rtl/syn2.v:1204.1-1210.9 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\pri_encoder'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/syn2/results_dir/.././rtl/syn2.v:1356.1-1456.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\b_right_shifter'.
Generating RTLIL representation for module `\b_left_shifter'.
Generating RTLIL representation for module `\fpu_add'.
Generating RTLIL representation for module `\pre_norm'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/syn2/results_dir/.././rtl/syn2.v:2133.1-2163.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/syn2/results_dir/.././rtl/syn2.v:2188.1-2202.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/syn2/results_dir/.././rtl/syn2.v:2241.1-2255.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\add_sub27'.
Successfully finished Verilog frontend.

-- Running command `hierarchy -top syn2' --

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \syn2
Used module:     \fpu_add
Used module:         \post_norm
Used module:             \b_left_shifter
Used module:             \b_right_shifter
Used module:             \pri_encoder
Used module:         \add_sub27
Used module:         \pre_norm
Used module:         \except
Used module:     \fpu_mul
Used module:         \mul_r2
Used module:         \pre_norm_fmul

3.2. Analyzing design hierarchy..
Top module:  \syn2
Used module:     \fpu_add
Used module:         \post_norm
Used module:             \b_left_shifter
Used module:             \b_right_shifter
Used module:             \pri_encoder
Used module:         \add_sub27
Used module:         \pre_norm
Used module:         \except
Used module:     \fpu_mul
Used module:         \mul_r2
Used module:         \pre_norm_fmul
Removed 0 unused modules.
Warning: Resizing cell port pre_norm.u7.shift_out from 27 bits to 48 bits.
Warning: Resizing cell port pre_norm.u7.shift_value from 5 bits to 6 bits.
Warning: Resizing cell port pre_norm.u7.shift_in from 27 bits to 48 bits.
Warning: Resizing cell port fpu_add.u0.opb from 32 bits to 31 bits.
Warning: Resizing cell port fpu_add.u0.opa from 32 bits to 31 bits.
Warning: Resizing cell port post_norm.u3.shift_out from 56 bits to 48 bits.
Warning: Resizing cell port post_norm.u3.shift_in from 56 bits to 48 bits.

Dumping file hier_info.json ...
 Process module "add_sub27"
 Process module "b_left_shifter"
 Process module "b_right_shifter"
 Process module "except"
 Process module "fpu_add"
 Process module "fpu_mul"
 Process module "mul_r2"
 Process module "post_norm"
 Process module "pre_norm"
 Process module "pre_norm_fmul"
 Process module "pri_encoder"
Dumping file port_info.json ...

Warnings: 9 unique messages, 9 total
End of script. Logfile hash: abe474d086, CPU: user 0.16s system 0.02s, MEM: 20.64 MB peak
Yosys 0.38 (git sha1 4964457dc, gcc 11.2.1 -fPIC -Os)
Time spent: 88% 4x read_verilog (0 sec), 8% 1x analyze (0 sec), ...
