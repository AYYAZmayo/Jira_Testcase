//Verilog generated by VPR  from post-place-and-route implementation
module fabric_lut_ff_mux (
    input \$iopadmap$mux_sel ,
    input \$auto$clkbufmap.cc:294:execute$638 ,
    input \$iopadmap$rst ,
    input \$iopadmap$in[0] ,
    input \$iopadmap$in[1] ,
    input \$iopadmap$in[2] ,
    input \$iopadmap$in[3] ,
    output \$iopadmap$Q 
);

    //Wires
    wire \$iopadmap$mux_sel_output_0_0 ;
    wire \$auto$clkbufmap.cc:294:execute$638_output_0_0 ;
    wire \$iopadmap$rst_output_0_0 ;
    wire \$iopadmap$in[0]_output_0_0 ;
    wire \$iopadmap$in[1]_output_0_0 ;
    wire \$iopadmap$in[2]_output_0_0 ;
    wire \$iopadmap$in[3]_output_0_0 ;
    wire \dffre_$iopadmap$Q_output_0_0 ;
    wire \lut_$true_output_0_0 ;
    wire \lut_$abc$317$li0_li0_output_0_0 ;
    wire \lut_$abc$317$li0_li0_input_0_5 ;
    wire \dffre_$iopadmap$Q_clock_0_0 ;
    wire \lut_$abc$317$li0_li0_input_0_2 ;
    wire \lut_$abc$317$li0_li0_input_0_4 ;
    wire \lut_$abc$317$li0_li0_input_0_1 ;
    wire \lut_$abc$317$li0_li0_input_0_0 ;
    wire \lut_$abc$317$li0_li0_input_0_3 ;
    wire \$iopadmap$Q_input_0_0 ;
    wire \dffre_$iopadmap$Q_input_1_0 ;
    wire \dffre_$iopadmap$Q_input_2_0 ;
    wire \dffre_$iopadmap$Q_input_0_0 ;

    //IO assignments
    assign \$iopadmap$Q  = \$iopadmap$Q_input_0_0 ;
    assign \$iopadmap$mux_sel_output_0_0  = \$iopadmap$mux_sel ;
    assign \$auto$clkbufmap.cc:294:execute$638_output_0_0  = \$auto$clkbufmap.cc:294:execute$638 ;
    assign \$iopadmap$rst_output_0_0  = \$iopadmap$rst ;
    assign \$iopadmap$in[0]_output_0_0  = \$iopadmap$in[0] ;
    assign \$iopadmap$in[1]_output_0_0  = \$iopadmap$in[1] ;
    assign \$iopadmap$in[2]_output_0_0  = \$iopadmap$in[2] ;
    assign \$iopadmap$in[3]_output_0_0  = \$iopadmap$in[3] ;

    //Interconnect
    fpga_interconnect \routing_segment_$iopadmap$mux_sel_output_0_0_to_lut_$abc$317$li0_li0_input_0_5  (
        .datain(\$iopadmap$mux_sel_output_0_0 ),
        .dataout(\lut_$abc$317$li0_li0_input_0_5 )
    );

    fpga_interconnect \routing_segment_$auto$clkbufmap.cc:294:execute$638_output_0_0_to_dffre_$iopadmap$Q_clock_0_0  (
        .datain(\$auto$clkbufmap.cc:294:execute$638_output_0_0 ),
        .dataout(\dffre_$iopadmap$Q_clock_0_0 )
    );

    fpga_interconnect \routing_segment_$iopadmap$rst_output_0_0_to_lut_$abc$317$li0_li0_input_0_2  (
        .datain(\$iopadmap$rst_output_0_0 ),
        .dataout(\lut_$abc$317$li0_li0_input_0_2 )
    );

    fpga_interconnect \routing_segment_$iopadmap$in[0]_output_0_0_to_lut_$abc$317$li0_li0_input_0_4  (
        .datain(\$iopadmap$in[0]_output_0_0 ),
        .dataout(\lut_$abc$317$li0_li0_input_0_4 )
    );

    fpga_interconnect \routing_segment_$iopadmap$in[1]_output_0_0_to_lut_$abc$317$li0_li0_input_0_1  (
        .datain(\$iopadmap$in[1]_output_0_0 ),
        .dataout(\lut_$abc$317$li0_li0_input_0_1 )
    );

    fpga_interconnect \routing_segment_$iopadmap$in[2]_output_0_0_to_lut_$abc$317$li0_li0_input_0_0  (
        .datain(\$iopadmap$in[2]_output_0_0 ),
        .dataout(\lut_$abc$317$li0_li0_input_0_0 )
    );

    fpga_interconnect \routing_segment_$iopadmap$in[3]_output_0_0_to_lut_$abc$317$li0_li0_input_0_3  (
        .datain(\$iopadmap$in[3]_output_0_0 ),
        .dataout(\lut_$abc$317$li0_li0_input_0_3 )
    );

    fpga_interconnect \routing_segment_dffre_$iopadmap$Q_output_0_0_to_$iopadmap$Q_input_0_0  (
        .datain(\dffre_$iopadmap$Q_output_0_0 ),
        .dataout(\$iopadmap$Q_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_$iopadmap$Q_input_1_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_$iopadmap$Q_input_1_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_$iopadmap$Q_input_2_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_$iopadmap$Q_input_2_0 )
    );

    fpga_interconnect \routing_segment_lut_$abc$317$li0_li0_output_0_0_to_dffre_$iopadmap$Q_input_0_0  (
        .datain(\lut_$abc$317$li0_li0_output_0_0 ),
        .dataout(\dffre_$iopadmap$Q_input_0_0 )
    );


    //Cell instances
    LUT_K #(
        .K(5),
        .LUT_MASK(32'b00000000000000000000000000000001)
    ) \lut_$true  (
        .in({
            1'b0,
            1'b0,
            1'b0,
            1'b0,
            1'b0
         }),
        .out(\lut_$true_output_0_0 )
    );

    LUT_K #(
        .K(6),
        .LUT_MASK(64'b0000001100000011000011000000111000001100000011000000001100000001)
    ) \lut_$abc$317$li0_li0  (
        .in({
            \lut_$abc$317$li0_li0_input_0_5 ,
            \lut_$abc$317$li0_li0_input_0_4 ,
            \lut_$abc$317$li0_li0_input_0_3 ,
            \lut_$abc$317$li0_li0_input_0_2 ,
            \lut_$abc$317$li0_li0_input_0_1 ,
            \lut_$abc$317$li0_li0_input_0_0 
         }),
        .out(\lut_$abc$317$li0_li0_output_0_0 )
    );

    DFFRE #(
    ) \dffre_$iopadmap$Q  (
        .C(\dffre_$iopadmap$Q_clock_0_0 ),
        .D(\dffre_$iopadmap$Q_input_0_0 ),
        .E(\dffre_$iopadmap$Q_input_2_0 ),
        .R(\dffre_$iopadmap$Q_input_1_0 ),
        .Q(\dffre_$iopadmap$Q_output_0_0 )
    );


endmodule
