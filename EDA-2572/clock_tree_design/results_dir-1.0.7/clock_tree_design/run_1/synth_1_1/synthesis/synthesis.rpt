/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.03
Build    : 1.0.7
Hash     : 5a7470e
Date     : Mar  7 2024
Type     : Engineering
Log Time   : Thu Mar  7 10:05:34 2024 GMT

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.18+10 (git sha1 07c42e625, gcc 11.2.1 -fPIC -Os)


-- Executing script file `clock_tree_design.ys' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CARRY_CHAIN'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v' to AST representation.
Generating RTLIL representation for module `\clock_tree_design'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:117.3-124.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:126.4-133.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:135.7-142.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:144.4-151.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:153.3-160.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:162.6-169.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:171.6-178.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:180.6-187.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:190.4-197.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:199.7-206.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:208.7-215.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:217.7-224.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:226.4-233.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:235.7-242.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:244.4-251.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:253.7-260.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:262.1-269.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:271.6-278.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:280.6-287.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:290.6-297.7 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\T_ff'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \clock_tree_design
Used module:     \T_ff

3.2. Analyzing design hierarchy..
Top module:  \clock_tree_design
Used module:     \T_ff
Removed 0 unused modules.

4. Executing synth_rs pass: v0.4.218

4.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v' to AST representation.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v:10.1-19.10.
Generating RTLIL representation for module `\CARRY'.
Successfully finished Verilog frontend.

4.3. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:20.1-34.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:48.1-62.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:81.1-97.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:115.1-131.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:150.1-166.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:184.1-200.10.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

4.4. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v' to AST representation.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFRE'.
Successfully finished Verilog frontend.

4.5. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v' to AST representation.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFNRE'.
Successfully finished Verilog frontend.

4.6. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v' to AST representation.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v:10.1-21.10.
Generating RTLIL representation for module `\LUT1'.
Successfully finished Verilog frontend.

4.7. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v' to AST representation.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v:10.1-21.10.
Generating RTLIL representation for module `\LUT2'.
Successfully finished Verilog frontend.

4.8. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v' to AST representation.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v:10.1-21.10.
Generating RTLIL representation for module `\LUT3'.
Successfully finished Verilog frontend.

4.9. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v' to AST representation.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v:11.1-22.10.
Generating RTLIL representation for module `\LUT4'.
Successfully finished Verilog frontend.

4.10. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v' to AST representation.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v:10.1-21.10.
Generating RTLIL representation for module `\LUT5'.
Successfully finished Verilog frontend.

4.11. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v' to AST representation.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v:10.1-21.10.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

4.12. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v' to AST representation.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v:10.1-17.10.
Generating RTLIL representation for module `\CLK_BUF'.
Successfully finished Verilog frontend.

4.13. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v' to AST representation.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v:10.1-22.10.
Generating RTLIL representation for module `\O_BUF'.
Successfully finished Verilog frontend.

4.14. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v' to AST representation.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:10.1-324.10.
Generating RTLIL representation for module `\DSP38'.
/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:0: Warning: System task `$display' outside initial block is unsupported.
Successfully finished Verilog frontend.

4.15. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v' to AST representation.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:2.1-29.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:33.1-84.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\RS_DSP3'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:116.1-149.10.
Generating RTLIL representation for module `\DSP19X2'.
Successfully finished Verilog frontend.

4.16. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:112.1-540.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:542.1-951.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:953.1-1356.10.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.17. Executing HIERARCHY pass (managing design hierarchy).

4.17.1. Analyzing design hierarchy..
Top module:  \clock_tree_design
Used module:     \T_ff

4.17.2. Analyzing design hierarchy..
Top module:  \clock_tree_design
Used module:     \T_ff
Removed 0 unused modules.

4.18. Executing PROC pass (convert processes to netlists).

4.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:323$201 in module T_ff.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:290$191 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:280$181 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:271$171 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:262$161 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:253$151 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:244$141 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:235$131 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:226$121 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:217$111 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:208$101 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:199$91 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:190$81 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:180$71 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:171$61 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:162$51 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:153$41 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:144$31 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:135$21 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:126$11 in module clock_tree_design.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:117$1 in module clock_tree_design.
Removed a total of 0 dead cases.

4.18.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 21 redundant assignments.
Promoted 0 assignments to connections.

4.18.4. Executing PROC_INIT pass (extract init attributes).

4.18.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \CLR in `\T_ff.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:323$201'.

4.18.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~20 debug messages>

4.18.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\T_ff.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:323$201'.
     1/1: $0\Q[0:0]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:290$191'.
     1/1: $0\mux_out[19:19]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:280$181'.
     1/1: $0\mux_out[18:18]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:271$171'.
     1/1: $0\mux_out[17:17]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:262$161'.
     1/1: $0\mux_out[16:16]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:253$151'.
     1/1: $0\mux_out[15:15]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:244$141'.
     1/1: $0\mux_out[14:14]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:235$131'.
     1/1: $0\mux_out[13:13]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:226$121'.
     1/1: $0\mux_out[12:12]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:217$111'.
     1/1: $0\mux_out[11:11]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:208$101'.
     1/1: $0\mux_out[10:10]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:199$91'.
     1/1: $0\mux_out[9:9]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:190$81'.
     1/1: $0\mux_out[8:8]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:180$71'.
     1/1: $0\mux_out[7:7]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:171$61'.
     1/1: $0\mux_out[6:6]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:162$51'.
     1/1: $0\mux_out[5:5]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:153$41'.
     1/1: $0\mux_out[4:4]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:144$31'.
     1/1: $0\mux_out[3:3]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:135$21'.
     1/1: $0\mux_out[2:2]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:126$11'.
     1/1: $0\mux_out[1:1]
Creating decoders for process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:117$1'.
     1/1: $0\mux_out[0:0]

4.18.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\clock_tree_design.\mux_out [19]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:290$191'.
No latch inferred for signal `\clock_tree_design.\mux_out [18]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:280$181'.
No latch inferred for signal `\clock_tree_design.\mux_out [17]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:271$171'.
No latch inferred for signal `\clock_tree_design.\mux_out [16]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:262$161'.
No latch inferred for signal `\clock_tree_design.\mux_out [15]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:253$151'.
No latch inferred for signal `\clock_tree_design.\mux_out [14]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:244$141'.
No latch inferred for signal `\clock_tree_design.\mux_out [13]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:235$131'.
No latch inferred for signal `\clock_tree_design.\mux_out [12]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:226$121'.
No latch inferred for signal `\clock_tree_design.\mux_out [11]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:217$111'.
No latch inferred for signal `\clock_tree_design.\mux_out [10]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:208$101'.
No latch inferred for signal `\clock_tree_design.\mux_out [9]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:199$91'.
No latch inferred for signal `\clock_tree_design.\mux_out [8]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:190$81'.
No latch inferred for signal `\clock_tree_design.\mux_out [7]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:180$71'.
No latch inferred for signal `\clock_tree_design.\mux_out [6]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:171$61'.
No latch inferred for signal `\clock_tree_design.\mux_out [5]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:162$51'.
No latch inferred for signal `\clock_tree_design.\mux_out [4]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:153$41'.
No latch inferred for signal `\clock_tree_design.\mux_out [3]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:144$31'.
No latch inferred for signal `\clock_tree_design.\mux_out [2]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:135$21'.
No latch inferred for signal `\clock_tree_design.\mux_out [1]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:126$11'.
No latch inferred for signal `\clock_tree_design.\mux_out [0]' from process `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:117$1'.

4.18.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\T_ff.\Q' using process `\T_ff.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:323$201'.
  created $adff cell `$procdff$304' with positive edge clock and negative level reset.

4.18.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.18.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `T_ff.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:323$201'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:290$191'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:290$191'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:280$181'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:280$181'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:271$171'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:271$171'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:262$161'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:262$161'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:253$151'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:253$151'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:244$141'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:244$141'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:235$131'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:235$131'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:226$121'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:226$121'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:217$111'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:217$111'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:208$101'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:208$101'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:199$91'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:199$91'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:190$81'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:190$81'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:180$71'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:180$71'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:171$61'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:171$61'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:162$51'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:162$51'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:153$41'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:153$41'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:144$31'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:144$31'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:135$21'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:135$21'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:126$11'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:126$11'.
Found and cleaned up 1 empty switch in `\clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:117$1'.
Removing empty process `clock_tree_design.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/7march/clock_tree_design/results_dir/.././rtl/clock_tree_design.v:117$1'.
Cleaned up 20 empty switches.

4.18.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module T_ff.
Optimizing module clock_tree_design.
<suppressed ~20 debug messages>

4.19. Executing DEMUXMAP pass.

4.20. Executing FLATTEN pass (flatten design).
Deleting now unused module T_ff.
<suppressed ~80 debug messages>

4.21. Executing DEMUXMAP pass.

4.22. Executing TRIBUF pass.

4.23. Executing TRIBUF pass.

4.24. Executing DEMINOUT pass (demote inout ports to input or output).

4.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 80 unused cells and 280 unused wires.
<suppressed ~81 debug messages>

4.27. Executing CHECK pass (checking for obvious problems).
Checking module clock_tree_design...
Found and reported 0 problems.

4.28. Printing statistics.

=== clock_tree_design ===

   Number of wires:                686
   Number of wire bits:            770
   Number of public wires:         426
   Number of public wire bits:     510
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                440
     $adff                          80
     $and                           60
     $eq                            60
     $logic_not                     20
     $or                            60
     $pmux                          20
     $xor                          140

4.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
<suppressed ~228 debug messages>
Removed a total of 76 cells.

4.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

4.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.34. Executing OPT_SHARE pass.

4.35. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=80, #solve=0, #remove=0, time=0.00 sec.]

4.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 0 unused cells and 76 unused wires.
<suppressed ~1 debug messages>

4.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.38. Executing FSM pass (extract and optimize FSM).

4.38.1. Executing FSM_DETECT pass (finding FSMs in design).

4.38.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.38.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.38.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.38.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.38.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.38.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.39. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell clock_tree_design.$procmux$207_CMP0 ($eq).

4.40. Executing PEEPOPT pass (run peephole optimizers).

4.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.42. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.44. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

4.45. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.46. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.47. Executing OPT_SHARE pass.

4.48. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=80, #solve=0, #remove=0, time=0.00 sec.]

4.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.51. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.52. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.53. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

4.54. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.55. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.56. Executing OPT_SHARE pass.

4.57. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=80, #solve=0, #remove=0, time=0.00 sec.]

4.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.60. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.62. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

4.63. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.64. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.65. Executing OPT_SHARE pass.

4.66. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=80, #solve=0, #remove=0, time=0.00 sec.]

4.67. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=80, #solve=80, #remove=0, time=0.01 sec.]

4.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.70. Executing WREDUCE pass (reducing word size of cells).

4.71. Executing PEEPOPT pass (run peephole optimizers).

4.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.73. Executing DEMUXMAP pass.

4.74. Printing statistics.

=== clock_tree_design ===

   Number of wires:                610
   Number of wire bits:            694
   Number of public wires:         426
   Number of public wire bits:     510
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                364
     $adff                          80
     $and                           60
     $eq                             3
     $logic_not                      1
     $or                            60
     $pmux                          20
     $xor                          140

4.75. Executing RS_DSP_MULTADD pass.

4.76. Executing WREDUCE pass (reducing word size of cells).

4.77. Executing RS_DSP_MACC pass.

4.78. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.79. Executing TECHMAP pass (map to technology primitives).

4.79.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.79.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.80. Printing statistics.

=== clock_tree_design ===

   Number of wires:                610
   Number of wire bits:            694
   Number of public wires:         426
   Number of public wire bits:     510
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                364
     $adff                          80
     $and                           60
     $eq                             3
     $logic_not                      1
     $or                            60
     $pmux                          20
     $xor                          140

4.81. Executing TECHMAP pass (map to technology primitives).

4.81.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.81.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.82. Printing statistics.

=== clock_tree_design ===

   Number of wires:                610
   Number of wire bits:            694
   Number of public wires:         426
   Number of public wire bits:     510
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                364
     $adff                          80
     $and                           60
     $eq                             3
     $logic_not                      1
     $or                            60
     $pmux                          20
     $xor                          140

4.83. Executing TECHMAP pass (map to technology primitives).

4.83.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.83.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.84. Executing TECHMAP pass (map to technology primitives).

4.84.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.84.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.85. Executing TECHMAP pass (map to technology primitives).

4.85.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

4.85.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.86. Executing RS_DSP_SIMD pass.

4.87. Executing TECHMAP pass (map to technology primitives).

4.87.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

4.87.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.88. Executing TECHMAP pass (map to technology primitives).

4.88.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.88.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

4.89. Executing rs_pack_dsp_regs pass.

4.90. Executing RS_DSP_IO_REGS pass.

4.91. Executing TECHMAP pass (map to technology primitives).

4.91.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Successfully finished Verilog frontend.

4.91.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~14 debug messages>

4.92. Executing TECHMAP pass (map to technology primitives).

4.92.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.92.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

4.93. Printing statistics.

=== clock_tree_design ===

   Number of wires:                610
   Number of wire bits:            694
   Number of public wires:         426
   Number of public wire bits:     510
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                364
     $adff                          80
     $and                           60
     $eq                             3
     $logic_not                      1
     $or                            60
     $pmux                          20
     $xor                          140

4.94. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module clock_tree_design:
  created 0 $alu and 0 $macc cells.

4.95. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.96. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.97. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

4.98. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.99. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.100. Executing OPT_SHARE pass.

4.101. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=80, #solve=0, #remove=0, time=0.00 sec.]

4.102. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.104. Printing statistics.

=== clock_tree_design ===

   Number of wires:                610
   Number of wire bits:            694
   Number of public wires:         426
   Number of public wire bits:     510
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                364
     $adff                          80
     $and                           60
     $eq                             3
     $logic_not                      1
     $or                            60
     $pmux                          20
     $xor                          140

4.105. Executing MEMORY pass.

4.105.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.105.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.105.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

4.105.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.105.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

4.105.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.105.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.105.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.105.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.105.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.106. Printing statistics.

=== clock_tree_design ===

   Number of wires:                610
   Number of wire bits:            694
   Number of public wires:         426
   Number of public wire bits:     510
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                364
     $adff                          80
     $and                           60
     $eq                             3
     $logic_not                      1
     $or                            60
     $pmux                          20
     $xor                          140

4.107. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~1 debug messages>

4.108. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.109. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.110. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.111. Executing Rs_BRAM_Split pass.

4.112. Executing TECHMAP pass (map to technology primitives).

4.112.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

4.112.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

4.113. Executing TECHMAP pass (map to technology primitives).

4.113.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

4.113.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.114. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

4.115. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.116. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.117. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

4.118. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.119. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.120. Executing OPT_SHARE pass.

4.121. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=80, #solve=0, #remove=0, time=0.00 sec.]

4.122. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.123. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.124. Executing PMUXTREE pass.

4.125. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~60 debug messages>

4.126. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

4.127. Executing TECHMAP pass (map to technology primitives).

4.127.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.127.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

4.127.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~495 debug messages>

4.128. Printing statistics.

=== clock_tree_design ===

   Number of wires:                700
   Number of wire bits:            787
   Number of public wires:         426
   Number of public wire bits:     510
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                434
     $_AND_                         60
     $_DFF_PN0_                     80
     $_MUX_                         60
     $_NOT_                          4
     $_OR_                          84
     $_XOR_                        146

4.129. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.
<suppressed ~46 debug messages>

4.130. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
<suppressed ~63 debug messages>
Removed a total of 21 cells.

4.131. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.132. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.133. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.134. Executing OPT_SHARE pass.

4.135. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=80, #solve=0, #remove=0, time=0.00 sec.]

4.136. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 3 unused cells and 50 unused wires.
<suppressed ~4 debug messages>

4.137. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.138. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.139. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.140. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.141. Executing OPT_SHARE pass.

4.142. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=80, #solve=0, #remove=0, time=0.00 sec.]

4.143. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.144. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 2

4.145. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.
<suppressed ~20 debug messages>

4.146. Executing TECHMAP pass (map to technology primitives).

4.146.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.146.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

4.147. Printing statistics.

=== clock_tree_design ===

   Number of wires:                654
   Number of wire bits:            738
   Number of public wires:         426
   Number of public wire bits:     510
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                408
     $_AND_                         80
     $_DFF_PN0_                     80
     $_MUX_                         40
     $_NOT_                          4
     $_OR_                          64
     $_XOR_                        140

4.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.149. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.150. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.151. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.152. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.153. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=80, #solve=0, #remove=0, time=0.00 sec.]

4.154. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.155. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.156. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.158. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.159. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.160. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.161. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=80, #solve=0, #remove=0, time=0.00 sec.]

4.162. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.166. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.167. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.168. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.169. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=80, #solve=0, #remove=0, time=0.00 sec.]

4.170. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=80, #solve=80, #remove=0, time=0.01 sec.]

4.171. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.172. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.173. Printing statistics.

=== clock_tree_design ===

   Number of wires:                654
   Number of wire bits:            738
   Number of public wires:         426
   Number of public wire bits:     510
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                408
     $_AND_                         80
     $_DFF_PN0_                     80
     $_MUX_                         40
     $_NOT_                          4
     $_OR_                          64
     $_XOR_                        140

   Number of Generic REGs:          80

ABC-DFF iteration : 1

4.174. Executing ABC pass (technology mapping using ABC).

4.174.1. Summary of detected clock domains:
  25 cells in clk=\clk6, en={ }, arst=!\clr_n, srst={ }
  82 cells in clk=\clk5, en={ }, arst=!\clr_n, srst={ }
  75 cells in clk=\clk4, en={ }, arst=!\clr_n, srst={ }
  75 cells in clk=\clk3, en={ }, arst=!\clr_n, srst={ }
  75 cells in clk=\clk2, en={ }, arst=!\clr_n, srst={ }
  76 cells in clk=\clk1, en={ }, arst=!\clr_n, srst={ }

  #logic partitions = 6

4.174.2. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk5, asynchronously reset by !\clr_n
Extracted 82 gates and 89 wires to a netlist network with 7 inputs and 23 outputs (dfl=1).

4.174.2.1. Executing ABC.
[Time = 0.06 sec.]

4.174.3. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk1, asynchronously reset by !\clr_n
Extracted 76 gates and 84 wires to a netlist network with 8 inputs and 20 outputs (dfl=1).

4.174.3.1. Executing ABC.
[Time = 0.09 sec.]

4.174.4. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk4, asynchronously reset by !\clr_n
Extracted 75 gates and 82 wires to a netlist network with 7 inputs and 19 outputs (dfl=1).

4.174.4.1. Executing ABC.
[Time = 0.06 sec.]

4.174.5. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk3, asynchronously reset by !\clr_n
Extracted 75 gates and 82 wires to a netlist network with 7 inputs and 19 outputs (dfl=1).

4.174.5.1. Executing ABC.
[Time = 0.09 sec.]

4.174.6. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk2, asynchronously reset by !\clr_n
Extracted 75 gates and 82 wires to a netlist network with 7 inputs and 19 outputs (dfl=1).

4.174.6.1. Executing ABC.
[Time = 0.06 sec.]

4.174.7. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk6, asynchronously reset by !\clr_n
Extracted 25 gates and 31 wires to a netlist network with 6 inputs and 20 outputs (dfl=1).

4.174.7.1. Executing ABC.
[Time = 0.04 sec.]

4.175. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.
<suppressed ~4 debug messages>

4.176. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

4.177. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.178. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.179. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.180. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$1103$auto$blifparse.cc:381:parse_blif$1116 in front of them:
        $abc$1103$auto$blifparse.cc:381:parse_blif$1115
        $abc$1103$auto$blifparse.cc:381:parse_blif$1114

4.181. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.182. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 0 unused cells and 458 unused wires.
<suppressed ~81 debug messages>

4.183. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.
<suppressed ~1 debug messages>

4.184. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.185. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.186. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.187. Executing OPT_SHARE pass.

4.188. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.189. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.190. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 2

ABC-DFF iteration : 2

4.191. Executing ABC pass (technology mapping using ABC).

4.191.1. Summary of detected clock domains:
  17 cells in clk=\clk6, en={ }, arst=!\clr_n, srst={ }
  6 cells in clk=\clk2, en={ }, arst=!\clr_n, srst={ }
  6 cells in clk=\clk3, en={ }, arst=!\clr_n, srst={ }
  6 cells in clk=\clk4, en={ }, arst=!\clr_n, srst={ }
  14 cells in clk=\clk1, en={ }, arst=!\clr_n, srst={ }
  23 cells in clk=\clk5, en={ }, arst=!\clr_n, srst={ }

  #logic partitions = 6

4.191.2. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk5, asynchronously reset by !\clr_n
Extracted 22 gates and 46 wires to a netlist network with 24 inputs and 13 outputs (dfl=1).

4.191.2.1. Executing ABC.
[Time = 0.06 sec.]

4.191.3. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk6, asynchronously reset by !\clr_n
Extracted 17 gates and 23 wires to a netlist network with 6 inputs and 16 outputs (dfl=1).

4.191.3.1. Executing ABC.
[Time = 0.04 sec.]

4.191.4. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk1, asynchronously reset by !\clr_n
Extracted 14 gates and 28 wires to a netlist network with 14 inputs and 12 outputs (dfl=1).

4.191.4.1. Executing ABC.
[Time = 0.06 sec.]

4.191.5. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk2, asynchronously reset by !\clr_n
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 5 outputs (dfl=1).

4.191.5.1. Executing ABC.
[Time = 0.04 sec.]

4.191.6. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk3, asynchronously reset by !\clr_n
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 5 outputs (dfl=1).

4.191.6.1. Executing ABC.
[Time = 0.04 sec.]

4.191.7. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk4, asynchronously reset by !\clr_n
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 5 outputs (dfl=1).

4.191.7.1. Executing ABC.
[Time = 0.04 sec.]

4.192. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.193. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.194. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.195. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.196. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.197. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$1275$auto$blifparse.cc:381:parse_blif$1290 in front of them:
        $abc$1317$auto$blifparse.cc:381:parse_blif$1320
        $abc$1317$auto$blifparse.cc:381:parse_blif$1323

4.198. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.199. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 0 unused cells and 138 unused wires.
<suppressed ~1 debug messages>

4.200. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.
<suppressed ~1 debug messages>

4.201. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.202. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.203. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.204. Executing OPT_SHARE pass.

4.205. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.206. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

4.207. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 2

ABC-DFF iteration : 3

4.208. Executing ABC pass (technology mapping using ABC).

4.208.1. Summary of detected clock domains:
  9 cells in clk=\clk4, en={ }, arst=!\clr_n, srst={ }
  9 cells in clk=\clk3, en={ }, arst=!\clr_n, srst={ }
  17 cells in clk=\clk2, en={ }, arst=!\clr_n, srst={ }
  8 cells in clk=\clk1, en={ }, arst=!\clr_n, srst={ }
  5 cells in clk=\clk6, en={ }, arst=!\clr_n, srst={ }
  21 cells in clk=\clk5, en={ }, arst=!\clr_n, srst={ }

  #logic partitions = 6

4.208.2. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk5, asynchronously reset by !\clr_n
Extracted 20 gates and 42 wires to a netlist network with 22 inputs and 12 outputs (dfl=2).

4.208.2.1. Executing ABC.
[Time = 0.06 sec.]

4.208.3. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk2, asynchronously reset by !\clr_n
Extracted 17 gates and 29 wires to a netlist network with 12 inputs and 12 outputs (dfl=2).

4.208.3.1. Executing ABC.
[Time = 0.06 sec.]

4.208.4. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk4, asynchronously reset by !\clr_n
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 6 outputs (dfl=2).

4.208.4.1. Executing ABC.
[Time = 0.04 sec.]

4.208.5. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk3, asynchronously reset by !\clr_n
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 6 outputs (dfl=2).

4.208.5.1. Executing ABC.
[Time = 0.04 sec.]

4.208.6. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk1, asynchronously reset by !\clr_n
Extracted 8 gates and 11 wires to a netlist network with 3 inputs and 5 outputs (dfl=2).

4.208.6.1. Executing ABC.
[Time = 0.04 sec.]

4.208.7. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk6, asynchronously reset by !\clr_n
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 4 outputs (dfl=2).

4.208.7.1. Executing ABC.
[Time = 0.04 sec.]

4.209. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.
<suppressed ~1 debug messages>

4.210. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.211. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.212. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.213. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.214. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$1360$auto$blifparse.cc:381:parse_blif$1386 in front of them:
        $abc$1389$auto$blifparse.cc:381:parse_blif$1394
        $abc$1389$auto$blifparse.cc:381:parse_blif$1396

4.215. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.216. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 1 unused cells and 124 unused wires.
<suppressed ~2 debug messages>

4.217. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.
<suppressed ~1 debug messages>

4.218. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.219. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.220. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.221. Executing OPT_SHARE pass.

4.222. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.223. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

4.224. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 2

ABC-DFF iteration : 4

4.225. Executing ABC pass (technology mapping using ABC).

4.225.1. Summary of detected clock domains:
  25 cells in clk=\clk6, en={ }, arst=!\clr_n, srst={ }
  3 cells in clk=\clk1, en={ }, arst=!\clr_n, srst={ }
  4 cells in clk=\clk3, en={ }, arst=!\clr_n, srst={ }
  12 cells in clk=\clk4, en={ }, arst=!\clr_n, srst={ }
  3 cells in clk=\clk2, en={ }, arst=!\clr_n, srst={ }
  18 cells in clk=\clk5, en={ }, arst=!\clr_n, srst={ }

  #logic partitions = 6

4.225.2. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk6, asynchronously reset by !\clr_n
Extracted 25 gates and 36 wires to a netlist network with 11 inputs and 16 outputs (dfl=2).

4.225.2.1. Executing ABC.
[Time = 0.05 sec.]

4.225.3. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk5, asynchronously reset by !\clr_n
Extracted 17 gates and 33 wires to a netlist network with 16 inputs and 12 outputs (dfl=2).

4.225.3.1. Executing ABC.
[Time = 0.06 sec.]

4.225.4. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk4, asynchronously reset by !\clr_n
Extracted 12 gates and 25 wires to a netlist network with 13 inputs and 11 outputs (dfl=2).

4.225.4.1. Executing ABC.
[Time = 0.07 sec.]

4.225.5. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk3, asynchronously reset by !\clr_n
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 3 outputs (dfl=2).

4.225.5.1. Executing ABC.
[Time = 0.05 sec.]

4.225.6. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk1, asynchronously reset by !\clr_n
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs (dfl=2).

4.225.6.1. Executing ABC.
[Time = 0.04 sec.]

4.225.7. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk2, asynchronously reset by !\clr_n
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs (dfl=2).

4.225.7.1. Executing ABC.
[Time = 0.04 sec.]

4.226. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.227. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.228. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.229. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.230. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.231. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$1469$auto$blifparse.cc:381:parse_blif$1479 in front of them:
        $abc$1488$auto$blifparse.cc:381:parse_blif$1494
        $abc$1488$auto$blifparse.cc:381:parse_blif$1491

4.232. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.233. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 0 unused cells and 119 unused wires.
<suppressed ~1 debug messages>

4.234. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.
<suppressed ~1 debug messages>

4.235. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.236. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.237. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.238. Executing OPT_SHARE pass.

4.239. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.240. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

4.241. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 2
select with DFL2 synthesis (thresh-logic=0.920000, thresh_dff=0.980000)

4.242. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

4.243. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.244. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.245. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.246. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.247. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.248. Executing OPT_SHARE pass.

4.249. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.250. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.251. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.252. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.253. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.254. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.255. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.256. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.257. Executing OPT_SHARE pass.

4.258. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.259. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.260. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.261. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.262. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.263. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.264. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.265. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.266. Executing OPT_SHARE pass.

4.267. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.268. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=6, #remove=0, time=0.00 sec.]

4.269. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.270. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.271. Executing BMUXMAP pass.

4.272. Executing DEMUXMAP pass.

4.273. Executing ABC pass (technology mapping using ABC).

4.273.1. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Extracted 56 gates and 66 wires to a netlist network with 10 inputs and 19 outputs (dfl=1).

4.273.1.1. Executing ABC.
DE:   Version : 7.5
DE:   #PIs =  10  #Luts =    19  Max Lvl =   1  Avg Lvl =   1.00  [   0.07 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  10  #Luts =    19  Max Lvl =   1  Avg Lvl =   1.00  [   0.10 sec. at Pass 1]{initMapFlow}[3]
DE:   #PIs =  10  #Luts =    19  Max Lvl =   1  Avg Lvl =   1.00  [   0.09 sec. at Pass 2]{map}[9]
DE:   #PIs =  10  #Luts =    19  Max Lvl =   1  Avg Lvl =   1.00  [   0.17 sec. at Pass 3]{postMap}[18]
DE:   #PIs =  10  #Luts =    19  Max Lvl =   1  Avg Lvl =   1.00  [   0.30 sec. at Pass 4]{map}[54]
DE:   #PIs =  10  #Luts =    19  Max Lvl =   1  Avg Lvl =   1.00  [   0.69 sec. at Pass 5]{postMap}[100]
DE:   #PIs =  10  #Luts =    19  Max Lvl =   1  Avg Lvl =   1.00  [   0.67 sec. at Pass 6]{pushMap}[100]
DE:   #PIs =  10  #Luts =    19  Max Lvl =   1  Avg Lvl =   1.00  [   0.67 sec. at Pass 7]{pushMap}[100]
DE:   #PIs =  10  #Luts =    19  Max Lvl =   1  Avg Lvl =   1.00  [   0.71 sec. at Pass 7]{pushMap}[100]
DE:   #PIs =  10  #Luts =    19  Max Lvl =   1  Avg Lvl =   1.00  [   0.68 sec. at Pass 8]{finalMap}[100]
DE:   
DE:   total time =    4.27 sec.
[Time = 7.25 sec.]

4.274. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.275. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.276. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.277. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.278. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.279. Executing OPT_SHARE pass.

4.280. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.281. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 0 unused cells and 66 unused wires.
<suppressed ~1 debug messages>

4.282. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.283. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

4.284. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.285. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.286. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.287. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.288. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.289. Executing OPT_SHARE pass.

4.290. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.291. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.292. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.293. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.294. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.295. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.296. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.297. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.298. Executing OPT_SHARE pass.

4.299. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.300. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=6, #remove=0, time=0.00 sec.]

4.301. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..

4.302. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.303. Printing statistics.

=== clock_tree_design ===

   Number of wires:                356
   Number of wire bits:            440
   Number of public wires:         346
   Number of public wire bits:     430
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 26
     $_DFF_PN0_                      6
     $lut                           19
     $mux                            1

4.304. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.305. Executing RS_DFFSR_CONV pass.

4.306. Printing statistics.

=== clock_tree_design ===

   Number of wires:                356
   Number of wire bits:            440
   Number of public wires:         346
   Number of public wire bits:     430
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 26
     $_DFF_PN0_                      6
     $lut                           19
     $mux                            1

4.307. Executing TECHMAP pass (map to technology primitives).

4.307.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.307.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

4.307.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~146 debug messages>

4.308. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.
<suppressed ~65 debug messages>

4.309. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.310. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.311. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

4.312. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.313. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 0 unused cells and 60 unused wires.
<suppressed ~1 debug messages>

4.314. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.
<suppressed ~2 debug messages>

4.315. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.316. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.317. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.318. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.319. Executing OPT_SHARE pass.

4.320. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.321. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.322. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.323. Executing TECHMAP pass (map to technology primitives).

4.323.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.323.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

4.324. Executing ABC pass (technology mapping using ABC).

4.324.1. Extracting gate netlist of module `\clock_tree_design' to `<abc-temp-dir>/input.blif'..
Extracted 36 gates and 47 wires to a netlist network with 9 inputs and 16 outputs (dfl=1).

4.324.1.1. Executing ABC.
DE:   Version : 7.5
DE:   #PIs =   9  #Luts =    16  Max Lvl =   1  Avg Lvl =   1.00  [   0.07 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =   9  #Luts =    16  Max Lvl =   1  Avg Lvl =   1.00  [   0.10 sec. at Pass 1]{initMapFlow}[3]
DE:   #PIs =   9  #Luts =    16  Max Lvl =   1  Avg Lvl =   1.00  [   0.12 sec. at Pass 2]{map}[9]
DE:   #PIs =   9  #Luts =    16  Max Lvl =   1  Avg Lvl =   1.00  [   0.17 sec. at Pass 3]{postMap}[18]
DE:   #PIs =   9  #Luts =    16  Max Lvl =   1  Avg Lvl =   1.00  [   0.28 sec. at Pass 4]{map}[54]
DE:   #PIs =   9  #Luts =    16  Max Lvl =   1  Avg Lvl =   1.00  [   0.70 sec. at Pass 5]{postMap}[100]
DE:   #PIs =   9  #Luts =    16  Max Lvl =   1  Avg Lvl =   1.00  [   0.66 sec. at Pass 6]{pushMap}[100]
DE:   #PIs =   9  #Luts =    16  Max Lvl =   1  Avg Lvl =   1.00  [   0.66 sec. at Pass 7]{pushMap}[100]
DE:   #PIs =   9  #Luts =    16  Max Lvl =   1  Avg Lvl =   1.00  [   0.68 sec. at Pass 7]{pushMap}[100]
DE:   #PIs =   9  #Luts =    16  Max Lvl =   1  Avg Lvl =   1.00  [   0.63 sec. at Pass 8]{finalMap}[100]
DE:   
DE:   total time =    4.19 sec.
[Time = 6.26 sec.]

4.325. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

4.326. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.327. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_tree_design..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.328. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_tree_design.
Performed a total of 0 changes.

4.329. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_tree_design'.
Removed a total of 0 cells.

4.330. Executing OPT_SHARE pass.

4.331. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.332. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 0 unused cells and 41 unused wires.
<suppressed ~1 debug messages>

4.333. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_tree_design.

RUN-OPT ITERATIONS DONE : 1

4.334. Executing HIERARCHY pass (managing design hierarchy).

4.334.1. Analyzing design hierarchy..
Top module:  \clock_tree_design

4.334.2. Analyzing design hierarchy..
Top module:  \clock_tree_design
Removed 0 unused modules.

4.335. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_tree_design..
Removed 0 unused cells and 256 unused wires.
<suppressed ~256 debug messages>

4.336. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__IO_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.337. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Replacing existing blackbox module `\BOOT_CLOCK' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:9.1-14.10.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:24.1-31.10.
Generating RTLIL representation for module `\CARRY'.
Replacing existing blackbox module `\CARRY_CHAIN' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:41.1-48.10.
Generating RTLIL representation for module `\CARRY_CHAIN'.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:58.1-63.10.
Generating RTLIL representation for module `\CLK_BUF'.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:73.1-81.10.
Generating RTLIL representation for module `\DFFNRE'.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:91.1-99.10.
Generating RTLIL representation for module `\DFFRE'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:109.1-143.10.
Generating RTLIL representation for module `\DSP19X2'.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:153.1-179.10.
Generating RTLIL representation for module `\DSP38'.
Replacing existing blackbox module `\FIFO18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:189.1-236.10.
Generating RTLIL representation for module `\FIFO18KX2'.
Replacing existing blackbox module `\FIFO36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:246.1-271.10.
Generating RTLIL representation for module `\FIFO36K'.
Replacing existing blackbox module `\I_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:281.1-291.10.
Generating RTLIL representation for module `\I_BUF'.
Replacing existing blackbox module `\I_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:301.1-313.10.
Generating RTLIL representation for module `\I_BUF_DS'.
Replacing existing blackbox module `\I_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:323.1-330.10.
Generating RTLIL representation for module `\I_DDR'.
Replacing existing blackbox module `\I_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:340.1-351.10.
Generating RTLIL representation for module `\I_DELAY'.
Replacing existing blackbox module `\I_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:361.1-379.10.
Generating RTLIL representation for module `\I_SERDES'.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:389.1-395.10.
Generating RTLIL representation for module `\LUT1'.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:405.1-411.10.
Generating RTLIL representation for module `\LUT2'.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:421.1-427.10.
Generating RTLIL representation for module `\LUT3'.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:437.1-443.10.
Generating RTLIL representation for module `\LUT4'.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:453.1-459.10.
Generating RTLIL representation for module `\LUT5'.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:469.1-475.10.
Generating RTLIL representation for module `\LUT6'.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:485.1-497.10.
Generating RTLIL representation for module `\O_BUF'.
Replacing existing blackbox module `\O_BUFT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:507.1-519.10.
Generating RTLIL representation for module `\O_BUFT'.
Replacing existing blackbox module `\O_BUFT_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:529.1-541.10.
Generating RTLIL representation for module `\O_BUFT_DS'.
Replacing existing blackbox module `\O_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:551.1-563.10.
Generating RTLIL representation for module `\O_BUF_DS'.
Replacing existing blackbox module `\O_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:573.1-580.10.
Generating RTLIL representation for module `\O_DDR'.
Replacing existing blackbox module `\O_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:590.1-601.10.
Generating RTLIL representation for module `\O_DELAY'.
Replacing existing blackbox module `\O_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:611.1-627.10.
Generating RTLIL representation for module `\O_SERDES'.
Replacing existing blackbox module `\O_SERDES_CLK' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:637.1-646.10.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Replacing existing blackbox module `\PLL' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:656.1-671.10.
Generating RTLIL representation for module `\PLL'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_M' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:681.1-695.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_S' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:705.1-722.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M0' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:732.1-771.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M1' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:781.1-820.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Replacing existing blackbox module `\SOC_FPGA_INTF_DMA' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:830.1-836.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Replacing existing blackbox module `\SOC_FPGA_INTF_IRQ' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:846.1-852.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Replacing existing blackbox module `\SOC_FPGA_INTF_JTAG' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:862.1-870.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Replacing existing blackbox module `\SOC_FPGA_TEMPERATURE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:880.1-888.10.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:898.1-951.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:961.1-990.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1007.1-1012.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1020.1-1025.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1034.1-1040.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1048.1-1054.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1063.1-1069.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1078.1-1084.10.
Generating RTLIL representation for module `\LATCHNS'.
Replacing existing blackbox module `\RS_DSP' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1091.1-1116.10.
Generating RTLIL representation for module `\RS_DSP'.
Replacing existing blackbox module `\RS_DSP_MULT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1122.1-1135.10.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Replacing existing blackbox module `\RS_DSP_MULT_REGIN' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1140.1-1156.10.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Replacing existing blackbox module `\RS_DSP_MULT_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1161.1-1178.10.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULT_REGIN_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1184.1-1202.10.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTADD' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1208.1-1235.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Replacing existing blackbox module `\RS_DSP_MULTADD_REGIN' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1240.1-1266.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Replacing existing blackbox module `\RS_DSP_MULTADD_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1271.1-1297.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTADD_REGIN_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1302.1-1327.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTACC' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1332.1-1353.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Replacing existing blackbox module `\RS_DSP_MULTACC_REGIN' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1358.1-1382.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Replacing existing blackbox module `\RS_DSP_MULTACC_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1387.1-1409.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTACC_REGIN_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1414.1-1436.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Replacing existing blackbox module `\RS_TDP36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1443.1-1514.10.
Generating RTLIL representation for module `\RS_TDP36K'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1520.1-1570.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1575.1-1609.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1614.1-1660.12.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.338. Executing TECHMAP pass (map to technology primitives).

4.338.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.338.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

4.339. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port clock_tree_design.clk1 using rs__I_BUF.
Mapping port clock_tree_design.clk2 using rs__I_BUF.
Mapping port clock_tree_design.clk3 using rs__I_BUF.
Mapping port clock_tree_design.clk4 using rs__I_BUF.
Mapping port clock_tree_design.clk5 using rs__I_BUF.
Mapping port clock_tree_design.clk6 using rs__I_BUF.
Mapping port clock_tree_design.clr_n using rs__I_BUF.
Mapping port clock_tree_design.mux_out using rs__O_BUF.
Mapping port clock_tree_design.sel using rs__I_BUF.
Mapping port clock_tree_design.t using rs__I_BUF.

4.340. Executing TECHMAP pass (map to technology primitives).

4.340.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.340.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~36 debug messages>

4.341. Printing statistics.

=== clock_tree_design ===

   Number of wires:                196
   Number of wire bits:            236
   Number of public wires:          90
   Number of public wire bits:     110
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 52
     $lut                           16
     DFFRE                           6
     I_BUF                          10
     O_BUF                          20

4.342. Executing TECHMAP pass (map to technology primitives).

4.342.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_07_2024_11_49_49/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.342.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~58 debug messages>

4.343. Printing statistics.

=== clock_tree_design ===

   Number of wires:                228
   Number of wire bits:            299
   Number of public wires:          90
   Number of public wire bits:     110
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 52
     DFFRE                           6
     I_BUF                          10
     LUT2                            6
     LUT3                            5
     LUT4                            5
     O_BUF                          20

   Number of LUTs:                  16
   Number of REGs:                   6
   Number of CARRY ADDERs:           0

5. Executing Verilog backend.
Dumping module `\clock_tree_design'.

6. Executing BLIF backend.

7. Executing Verilog backend.
Dumping module `\clock_tree_design'.
Dumping module `\interface_clock_tree_design'.

8. Executing BLIF backend.

9. Executing Verilog backend.
Dumping module `\fabric_clock_tree_design'.

10. Executing BLIF backend.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 81b3f0b481, CPU: user 1.55s system 0.10s, MEM: 35.57 MB peak
Yosys 0.18+10 (git sha1 07c42e625, gcc 11.2.1 -fPIC -Os)
Time spent: 99% 6x abc (208 sec), 0% 44x read_verilog (0 sec), ...
