Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.150.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_04_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_04_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.150.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $bmux.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'1
  Constant input on bit 1 of port A: 1'1
  Constant input on bit 2 of port A: 1'1
  Constant input on bit 3 of port A: 1'1
  Constant input on bit 4 of port A: 1'1
  Constant input on bit 5 of port A: 1'1
  Constant input on bit 6 of port A: 1'1
  Constant input on bit 7 of port A: 1'1
Creating constmapped module `$paramod$constmap:d32af9f98b13acf7c63f4f5db250ab4c25260edc$paramod$f2a47dd175a7c0e8985b70f3752771959b224676\_90_shift_shiftx'.

3.150.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:d32af9f98b13acf7c63f4f5db250ab4c25260edc$paramod$f2a47dd175a7c0e8985b70f3752771959b224676\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$18229.
    dead port 2/2 on $mux $procmux$18223.
    dead port 2/2 on $mux $procmux$18217.
    dead port 2/2 on $mux $procmux$18211.
    dead port 2/2 on $mux $procmux$18205.
    dead port 2/2 on $mux $procmux$18199.
    dead port 2/2 on $mux $procmux$18193.
    dead port 2/2 on $mux $procmux$18187.
    dead port 2/2 on $mux $procmux$18181.
    dead port 2/2 on $mux $procmux$18175.
    dead port 2/2 on $mux $procmux$18169.
Removed 11 multiplexer ports.
<suppressed ~2369 debug messages>

3.150.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:d32af9f98b13acf7c63f4f5db250ab4c25260edc$paramod$f2a47dd175a7c0e8985b70f3752771959b224676\_90_shift_shiftx.
<suppressed ~23 debug messages>
Removed 0 unused cells and 16 unused wires.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'1
  Constant input on bit 1 of port A: 1'1
  Constant input on bit 2 of port A: 1'1
  Constant input on bit 3 of port A: 1'1
  Constant input on bit 4 of port A: 1'1
  Constant input on bit 5 of port A: 1'1
  Constant input on bit 6 of port A: 1'1
  Constant input on bit 7 of port A: 1'1
Creating constmapped module `$paramod$constmap:40068170fd8c3c126781efa4f3f35a467c940074$paramod$cb13c056c9502bda0d0523ccd31c5a0340d1f777\_90_shift_shiftx'.

3.150.57. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:40068170fd8c3c126781efa4f3f35a467c940074$paramod$cb13c056c9502bda0d0523ccd31c5a0340d1f777\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$21624.
    dead port 2/2 on $mux $procmux$21618.
    dead port 2/2 on $mux $procmux$21612.
    dead port 2/2 on $mux $procmux$21606.
    dead port 2/2 on $mux $procmux$21600.
    dead port 2/2 on $mux $procmux$21594.
    dead port 2/2 on $mux $procmux$21588.
    dead port 2/2 on $mux $procmux$21582.
    dead port 2/2 on $mux $procmux$21576.
    dead port 2/2 on $mux $procmux$21570.
    dead port 2/2 on $mux $procmux$21564.
    dead port 2/2 on $mux $procmux$21558.
Removed 12 multiplexer ports.
<suppressed ~1086 debug messages>

3.150.58. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:40068170fd8c3c126781efa4f3f35a467c940074$paramod$cb13c056c9502bda0d0523ccd31c5a0340d1f777\_90_shift_shiftx.
<suppressed ~22 debug messages>
Removed 0 unused cells and 17 unused wires.
Using extmapper simplemap for cells of type $dffe.
terminate called after throwing an instance of 'std::length_error'
  what():  hash table exceeded maximum size.
Design is likely too large for yosys to handle, if possible try not to flatten the design.
