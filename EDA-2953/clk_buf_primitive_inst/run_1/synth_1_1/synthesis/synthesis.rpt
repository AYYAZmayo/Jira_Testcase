/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.06
Build    : 1.1.1
Hash     : 9567da9
Date     : Jun  6 2024
Type     : Engineering
Log Time   : Thu Jun  6 08:20:07 2024 GMT

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 a0cd5d1bb, gcc 11.2.1 -fPIC -Os)


-- Executing script file `clk_buf_primitive_inst.ys' --

1. Executing Verilog with UHDM frontend.
Warning: Removing unelaborated module: \_$_mem_v2_asymmetric from the design.
Warning: Removing unelaborated module: \TDP_RAM36K from the design.
Warning: Removing unelaborated module: \TDP_RAM18KX2 from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_AXI_M1 from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_AHB_S from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_AHB_M from the design.
Warning: Removing unelaborated module: \PLL from the design.
Warning: Removing unelaborated module: \O_DELAY from the design.
Warning: Removing unelaborated module: \O_DDR from the design.
Warning: Removing unelaborated module: \O_BUF_DS from the design.
Warning: Removing unelaborated module: \O_SERDES from the design.
Warning: Removing unelaborated module: \O_BUFT_DS from the design.
Warning: Removing unelaborated module: \O_BUF from the design.
Warning: Removing unelaborated module: \DSP38 from the design.
Warning: Removing unelaborated module: \DFFRE from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_AXI_M0 from the design.
Warning: Removing unelaborated module: \CARRY from the design.
Warning: Removing unelaborated module: \LATCHR from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_DMA from the design.
Warning: Removing unelaborated module: \LUT4 from the design.
Warning: Removing unelaborated module: \FIFO36K from the design.
Warning: Removing unelaborated module: \I_BUF from the design.
Warning: Removing unelaborated module: \BRAM2x18_SDP from the design.
Warning: Removing unelaborated module: \LUT2 from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_JTAG from the design.
Warning: Removing unelaborated module: \O_BUFT from the design.
Warning: Removing unelaborated module: \DSP19X2 from the design.
Warning: Removing unelaborated module: \FIFO18KX2 from the design.
Warning: Removing unelaborated module: \LATCHNS from the design.
Warning: Removing unelaborated module: \I_SERDES from the design.
Warning: Removing unelaborated module: \LUT6 from the design.
Warning: Removing unelaborated module: \BOOT_CLOCK from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_IRQ from the design.
Warning: Removing unelaborated module: \BRAM2x18_TDP from the design.
Warning: Removing unelaborated module: \DFFNRE from the design.
Warning: Removing unelaborated module: \LATCH from the design.
Warning: Removing unelaborated module: \I_BUF_DS from the design.
Warning: Removing unelaborated module: \LUT3 from the design.
Warning: Removing unelaborated module: \O_SERDES_CLK from the design.
Warning: Removing unelaborated module: \I_DDR from the design.
Warning: Removing unelaborated module: \I_DELAY from the design.
Warning: Removing unelaborated module: \LATCHN from the design.
Warning: Removing unelaborated module: \SOC_FPGA_TEMPERATURE from the design.
Warning: Removing unelaborated module: \LATCHNR from the design.
Warning: Removing unelaborated module: \LATCHS from the design.
Warning: Removing unelaborated module: \LUT1 from the design.
Warning: Removing unelaborated module: \LUT5 from the design.
Generating RTLIL representation for module `\clk_buf_primitive_inst'.
Generating RTLIL representation for module `\CLK_BUF'.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \clk_buf_primitive_inst

2.2. Analyzing design hierarchy..
Top module:  \clk_buf_primitive_inst
Removed 0 unused modules.

3. Executing synth_rs pass: v0.4.218

3.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v' to AST representation.
Generating RTLIL representation for module `\CARRY'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

3.4. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v' to AST representation.
Generating RTLIL representation for module `\DFFRE'.
Successfully finished Verilog frontend.

3.5. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v' to AST representation.
Generating RTLIL representation for module `\DFFNRE'.
Successfully finished Verilog frontend.

3.6. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Successfully finished Verilog frontend.

3.7. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v' to AST representation.
Generating RTLIL representation for module `\LUT2'.
Successfully finished Verilog frontend.

3.8. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v' to AST representation.
Generating RTLIL representation for module `\LUT3'.
Successfully finished Verilog frontend.

3.9. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Successfully finished Verilog frontend.

3.10. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v' to AST representation.
Generating RTLIL representation for module `\LUT5'.
Successfully finished Verilog frontend.

3.11. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v' to AST representation.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

3.12. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v' to AST representation.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v:10.1-17.10.
Generating RTLIL representation for module `\CLK_BUF'.
Successfully finished Verilog frontend.

3.13. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v' to AST representation.
Generating RTLIL representation for module `\O_BUF'.
Successfully finished Verilog frontend.

3.14. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v' to AST representation.
Generating RTLIL representation for module `\DSP38'.
Successfully finished Verilog frontend.

3.15. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v' to AST representation.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\DSP19X2'.
Successfully finished Verilog frontend.

3.16. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.17. Executing HIERARCHY pass (managing design hierarchy).

3.17.1. Analyzing design hierarchy..
Top module:  \clk_buf_primitive_inst

3.17.2. Analyzing design hierarchy..
Top module:  \clk_buf_primitive_inst
Removed 0 unused modules.

3.18. Executing PROC pass (convert processes to netlists).

3.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.18.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 1 assignment to connection.

3.18.4. Executing PROC_INIT pass (extract init attributes).

3.18.5. Executing PROC_ARST pass (detect async resets in processes).

3.18.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

3.18.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\clk_buf_primitive_inst.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RS_FPGA_PRIMITIVES_new/clk_buf_primitive_inst/rtl/clk_buf_primitive_inst.v:10$1'.

3.18.8. Executing PROC_DLATCH pass (convert process syncs to latches).

3.18.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\clk_buf_primitive_inst.\clock_output' using process `\clk_buf_primitive_inst.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RS_FPGA_PRIMITIVES_new/clk_buf_primitive_inst/rtl/clk_buf_primitive_inst.v:10$1'.
  created $dff cell `$procdff$2' with positive edge clock.

3.18.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.18.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `clk_buf_primitive_inst.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RS_FPGA_PRIMITIVES_new/clk_buf_primitive_inst/rtl/clk_buf_primitive_inst.v:10$1'.
Cleaned up 0 empty switches.

3.18.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.19. Executing SPLITNETS pass (splitting up multi-bit signals).

3.20. Executing DEMUXMAP pass.

3.21. Executing FLATTEN pass (flatten design).

3.22. Executing DEMUXMAP pass.

3.23. Executing TRIBUF pass.
Warning: Ignored -no_iobuf because -keep_tribuf is used.

3.24. Executing DEMINOUT pass (demote inout ports to input or output).

3.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

3.27. Executing CHECK pass (checking for obvious problems).
Checking module clk_buf_primitive_inst...
Found and reported 0 problems.

3.28. Printing statistics.

=== clk_buf_primitive_inst ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $dff                            1
     CLK_BUF                         1

3.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.34. Executing OPT_SHARE pass.

3.35. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.38. Executing FSM pass (extract and optimize FSM).

3.38.1. Executing FSM_DETECT pass (finding FSMs in design).

3.38.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.38.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.38.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.38.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.38.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.38.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.39. Executing WREDUCE pass (reducing word size of cells).

3.40. Executing PEEPOPT pass (run peephole optimizers).

3.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.42. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.44. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.45. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.46. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.47. Executing OPT_SHARE pass.

3.48. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.51. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.52. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.53. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.54. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.55. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.56. Executing OPT_SHARE pass.

3.57. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.60. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.62. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.63. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.64. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.65. Executing OPT_SHARE pass.

3.66. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.67. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.70. Executing WREDUCE pass (reducing word size of cells).

3.71. Executing PEEPOPT pass (run peephole optimizers).

3.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.73. Executing DEMUXMAP pass.

3.74. Executing SPLITNETS pass (splitting up multi-bit signals).

3.75. Printing statistics.

=== clk_buf_primitive_inst ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $dff                            1
     CLK_BUF                         1

3.76. Executing RS_DSP_MULTADD pass.

3.77. Executing WREDUCE pass (reducing word size of cells).

3.78. Executing RS_DSP_MACC pass.

3.79. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.80. Executing TECHMAP pass (map to technology primitives).

3.80.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.80.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.81. Printing statistics.

=== clk_buf_primitive_inst ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $dff                            1
     CLK_BUF                         1

3.82. Executing TECHMAP pass (map to technology primitives).

3.82.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.82.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.83. Printing statistics.

=== clk_buf_primitive_inst ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $dff                            1
     CLK_BUF                         1

3.84. Executing TECHMAP pass (map to technology primitives).

3.84.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.84.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.85. Executing TECHMAP pass (map to technology primitives).

3.85.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.85.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.86. Executing TECHMAP pass (map to technology primitives).

3.86.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

3.86.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.87. Executing RS_DSP_SIMD pass.

3.88. Executing TECHMAP pass (map to technology primitives).

3.88.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

3.88.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.89. Executing TECHMAP pass (map to technology primitives).

3.89.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

3.89.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

3.90. Executing rs_pack_dsp_regs pass.

3.91. Executing RS_DSP_IO_REGS pass.

3.92. Executing TECHMAP pass (map to technology primitives).

3.92.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Successfully finished Verilog frontend.

3.92.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~14 debug messages>

3.93. Executing TECHMAP pass (map to technology primitives).

3.93.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

3.93.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

3.94. Printing statistics.

=== clk_buf_primitive_inst ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $dff                            1
     CLK_BUF                         1

3.95. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module clk_buf_primitive_inst:
  created 0 $alu and 0 $macc cells.

3.96. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.97. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.98. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.99. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.101. Executing OPT_SHARE pass.

3.102. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.103. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.105. Printing statistics.

=== clk_buf_primitive_inst ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $dff                            1
     CLK_BUF                         1

3.106. Executing MEMORY pass.

3.106.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

3.106.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

3.106.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

3.106.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

3.106.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

3.106.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.106.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.106.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

3.106.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.106.10. Executing MEMORY_COLLECT pass (generating $mem cells).

3.107. Printing statistics.

=== clk_buf_primitive_inst ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $dff                            1
     CLK_BUF                         1

3.108. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.

3.109. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.110. Executing MEMORY_LIBMAP pass (mapping memories to cells).

3.111. Executing MEMORY_LIBMAP pass (mapping memories to cells).

3.112. Executing Rs_BRAM_Split pass.

3.113. Executing TECHMAP pass (map to technology primitives).

3.113.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.113.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

3.114. Executing TECHMAP pass (map to technology primitives).

3.114.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

3.114.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.115. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

3.116. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.118. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.119. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.120. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.121. Executing OPT_SHARE pass.

3.122. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.123. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.124. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.125. Executing PMUXTREE pass.

3.126. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.

3.127. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

3.128. Executing TECHMAP pass (map to technology primitives).

3.128.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.128.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.128.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dff.
No more expansions possible.
<suppressed ~74 debug messages>

3.129. Printing statistics.

=== clk_buf_primitive_inst ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_DFF_P_                        1
     CLK_BUF                         1

3.130. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.131. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.132. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.133. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.134. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.135. Executing OPT_SHARE pass.

3.136. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.137. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.138. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.139. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.140. Executing TECHMAP pass (map to technology primitives).

3.140.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.140.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

3.141. Printing statistics.

=== clk_buf_primitive_inst ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_DFF_P_                        1
     CLK_BUF                         1

3.142. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.143. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.144. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.145. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.146. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.147. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.148. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.149. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.150. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.151. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.152. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.153. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.154. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.155. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.156. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.157. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.158. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.159. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.160. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.161. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.162. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.163. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.164. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.165. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.166. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.167. Printing statistics.

=== clk_buf_primitive_inst ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_DFF_P_                        1
     CLK_BUF                         1

   Number of Generic REGs:          1

ABC-DFF iteration : 1

3.168. Executing ABC pass (technology mapping using ABC).

3.168.1. Summary of detected clock domains:
  2 cells in clk=\clock_input, en={ }, arst={ }, srst={ }

  #logic partitions = 1

3.168.2. Extracting gate netlist of module `\clk_buf_primitive_inst' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock_input
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs (dfl=1).

3.168.2.1. Executing ABC.
[Time = 0.05 sec.]

3.169. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.170. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.171. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.172. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.173. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.174. Executing OPT_SHARE pass.

3.175. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.176. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

3.177. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 2

3.178. Executing ABC pass (technology mapping using ABC).

3.178.1. Summary of detected clock domains:
  2 cells in clk=\clock_input, en={ }, arst={ }, srst={ }

  #logic partitions = 1

3.178.2. Extracting gate netlist of module `\clk_buf_primitive_inst' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock_input
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs (dfl=1).

3.178.2.1. Executing ABC.
[Time = 0.04 sec.]

3.179. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.180. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.181. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.182. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.183. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.184. Executing OPT_SHARE pass.

3.185. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.186. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

3.187. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

3.188. Executing ABC pass (technology mapping using ABC).

3.188.1. Summary of detected clock domains:
  2 cells in clk=\clock_input, en={ }, arst={ }, srst={ }

  #logic partitions = 1

3.188.2. Extracting gate netlist of module `\clk_buf_primitive_inst' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock_input
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs (dfl=2).

3.188.2.1. Executing ABC.
[Time = 0.04 sec.]

3.189. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.190. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.191. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.192. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.193. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.194. Executing OPT_SHARE pass.

3.195. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.196. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

3.197. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

3.198. Executing ABC pass (technology mapping using ABC).

3.198.1. Summary of detected clock domains:
  2 cells in clk=\clock_input, en={ }, arst={ }, srst={ }

  #logic partitions = 1

3.198.2. Extracting gate netlist of module `\clk_buf_primitive_inst' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock_input
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs (dfl=2).

3.198.2.1. Executing ABC.
[Time = 0.04 sec.]

3.199. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.200. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.201. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.202. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.203. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.204. Executing OPT_SHARE pass.

3.205. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.206. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

3.207. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1
select with DFL2 synthesis (thresh-logic=0.920000, thresh_dff=0.980000)

3.208. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

3.209. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.210. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.211. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.212. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.213. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.214. Executing OPT_SHARE pass.

3.215. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.216. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.217. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.218. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.219. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.220. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.221. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.222. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.223. Executing OPT_SHARE pass.

3.224. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.225. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.226. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.227. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.228. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.229. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.230. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.231. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.232. Executing OPT_SHARE pass.

3.233. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.234. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.235. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.236. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.237. Executing BMUXMAP pass.

3.238. Executing DEMUXMAP pass.

3.239. Executing SPLITNETS pass (splitting up multi-bit signals).

3.240. Executing ABC pass (technology mapping using ABC).

3.240.1. Extracting gate netlist of module `\clk_buf_primitive_inst' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=1).
Don't call ABC as there is nothing to map.

3.241. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.242. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.243. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.244. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.245. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.246. Executing OPT_SHARE pass.

3.247. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.248. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.249. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.250. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

3.251. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.252. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.253. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.254. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.255. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.256. Executing OPT_SHARE pass.

3.257. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.258. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.259. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.260. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.261. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.262. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.263. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.264. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.265. Executing OPT_SHARE pass.

3.266. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.267. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

3.268. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.269. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.270. Printing statistics.

=== clk_buf_primitive_inst ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_DFF_P_                        1
     CLK_BUF                         1

3.271. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

3.272. Executing RS_DFFSR_CONV pass.

3.273. Printing statistics.

=== clk_buf_primitive_inst ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_DFF_P_                        1
     CLK_BUF                         1

3.274. Executing TECHMAP pass (map to technology primitives).

3.274.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.274.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

3.274.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~123 debug messages>

3.275. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.276. Executing SIMPLEMAP pass (map simple cells to gate primitives).

3.277. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.278. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.279. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

3.280. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

3.281. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.282. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.283. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.284. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.285. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.286. Executing OPT_SHARE pass.

3.287. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

3.288. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.289. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.290. Executing TECHMAP pass (map to technology primitives).

3.290.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.290.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

3.291. Executing ABC pass (technology mapping using ABC).

3.291.1. Extracting gate netlist of module `\clk_buf_primitive_inst' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=1).
Don't call ABC as there is nothing to map.

3.292. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

3.293. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.294. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clk_buf_primitive_inst..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.295. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clk_buf_primitive_inst.
Performed a total of 0 changes.

3.296. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clk_buf_primitive_inst'.
Removed a total of 0 cells.

3.297. Executing OPT_SHARE pass.

3.298. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

3.299. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.300. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_buf_primitive_inst.

RUN-OPT ITERATIONS DONE : 1

3.301. Executing HIERARCHY pass (managing design hierarchy).

3.301.1. Analyzing design hierarchy..
Top module:  \clk_buf_primitive_inst

3.301.2. Analyzing design hierarchy..
Top module:  \clk_buf_primitive_inst
Removed 0 unused modules.

3.302. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.303. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__IO_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

3.304. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:24.1-31.10.
Generating RTLIL representation for module `\CARRY'.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:41.1-46.10.
Generating RTLIL representation for module `\CLK_BUF'.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:56.1-64.10.
Generating RTLIL representation for module `\DFFNRE'.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:74.1-82.10.
Generating RTLIL representation for module `\DFFRE'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:92.1-126.10.
Generating RTLIL representation for module `\DSP19X2'.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:136.1-162.10.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:376.1-382.10.
Generating RTLIL representation for module `\LUT1'.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:392.1-398.10.
Generating RTLIL representation for module `\LUT2'.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:408.1-414.10.
Generating RTLIL representation for module `\LUT3'.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:424.1-430.10.
Generating RTLIL representation for module `\LUT4'.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:440.1-446.10.
Generating RTLIL representation for module `\LUT5'.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:456.1-462.10.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:543.1-556.10.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:894.1-947.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:957.1-986.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1003.1-1008.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1016.1-1021.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1030.1-1036.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1044.1-1050.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1059.1-1065.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1074.1-1080.10.
Generating RTLIL representation for module `\LATCHNS'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1085.1-1135.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1140.1-1174.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1179.1-1225.12.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.305. Executing CLKBUFMAP pass (inserting clock buffers).

3.306. Executing TECHMAP pass (map to technology primitives).

3.306.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

3.306.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

3.307. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.308. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port clk_buf_primitive_inst.clock_input using rs__I_BUF.
Mapping port clk_buf_primitive_inst.clock_output using rs__O_BUF.

3.309. Executing TECHMAP pass (map to technology primitives).

3.309.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

3.309.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~8 debug messages>

3.310. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

3.311. Executing SPLITNETS pass (splitting up multi-bit signals).

3.312. Printing statistics.

=== clk_buf_primitive_inst ===

   Number of wires:                  5
   Number of wire bits:              5
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     CLK_BUF                         1
     DFFRE                           1
     I_BUF                           1
     O_BUF                           1

3.313. Executing TECHMAP pass (map to technology primitives).

3.313.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

3.313.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

3.314. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_buf_primitive_inst..

3.315. Executing SPLITNETS pass (splitting up multi-bit signals).

3.316. Executing HIERARCHY pass (managing design hierarchy).

3.316.1. Analyzing design hierarchy..
Top module:  \clk_buf_primitive_inst

3.316.2. Analyzing design hierarchy..
Top module:  \clk_buf_primitive_inst
Removed 0 unused modules.

Dumping port properties into 'netlist_info.json' file.

3.317. Printing statistics.

=== clk_buf_primitive_inst ===

   Number of wires:                  5
   Number of wire bits:              5
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     CLK_BUF                         1
     DFFRE                           1
     I_BUF                           1
     O_BUF                           1

   Number of LUTs:                   0
   Number of REGs:                   1
   Number of CARRY ADDERs:           0

4. Executing Verilog backend.
Dumping module `\clk_buf_primitive_inst'.

4.1. Executing BLIF backend.

-- Running command `write_rtlil design.rtlil' --

4.2. Executing RTLIL backend.
Output filename: design.rtlil

4.3. Executing SPLITNETS pass (splitting up multi-bit signals).

4.4. Executing FLATTEN pass (flatten design).
Deleting now unused module interface_clk_buf_primitive_inst.
<suppressed ~1 debug messages>

4.5. Executing Verilog backend.
Dumping module `\clk_buf_primitive_inst'.

4.5.1. Executing BLIF backend.

4.5.2. Executing Verilog backend.
Dumping module `\clk_buf_primitive_inst'.

4.5.2.1. Executing BLIF backend.

4.5.2.2. Executing Verilog backend.
Dumping module `\fabric_clk_buf_primitive_inst'.

4.5.2.2.1. Executing BLIF backend.

Warnings: 48 unique messages, 48 total
End of script. Logfile hash: b1433f3fbb, CPU: user 0.91s system 0.09s, MEM: 49.37 MB peak
Yosys 0.38 (git sha1 a0cd5d1bb, gcc 11.2.1 -fPIC -Os)
Time spent: 34% 2x read_systemverilog (0 sec), 22% 40x read_verilog (0 sec), ...
