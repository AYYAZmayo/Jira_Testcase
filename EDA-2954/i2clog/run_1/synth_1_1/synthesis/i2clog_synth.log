
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 a0cd5d1bb, gcc 11.2.1 -fPIC -Os)


-- Executing script file `i2clog.ys' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v' to AST representation.
Generating RTLIL representation for module `\I2CLog'.
Generating RTLIL representation for module `\StartTrigger'.
Generating RTLIL representation for module `\StopTrigger'.
Generating RTLIL representation for module `\DlatchNeg'.
Generating RTLIL representation for module `\DlatchPos'.
Generating RTLIL representation for module `\I2CStart'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:98.1-122.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\I2CStop'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:146.1-170.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\I2C'.
Generating RTLIL representation for module `\Serial2Byte'.
Generating RTLIL representation for module `\ByteWr2Ram'.
/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:255: Warning: Identifier `\ByteRdyOut' is implicitly declared.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\RWCtrl'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:370.1-396.10 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \I2CLog
Used module:     \RWCtrl
Used module:     \ByteWr2Ram
Used module:         \DFF
Used module:     \Serial2Byte
Used module:     \I2C
Used module:         \I2CStart
Used module:             \StartTrigger
Used module:                 \DlatchNeg
Used module:         \I2CStop
Used module:             \StopTrigger
Used module:                 \DlatchPos

3.2. Analyzing design hierarchy..
Top module:  \I2CLog
Used module:     \RWCtrl
Used module:     \ByteWr2Ram
Used module:         \DFF
Used module:     \Serial2Byte
Used module:     \I2C
Used module:         \I2CStart
Used module:             \StartTrigger
Used module:                 \DlatchNeg
Used module:         \I2CStop
Used module:             \StopTrigger
Used module:                 \DlatchPos
Removed 0 unused modules.
Mapping positional arguments of cell ByteWr2Ram.Mod1 (DFF).
Mapping positional arguments of cell I2C.mod2 (I2CStart).
Mapping positional arguments of cell I2C.mod1 (I2CStop).
Mapping positional arguments of cell I2CStop.ModStop (StopTrigger).
Mapping positional arguments of cell I2CStart.ModStart (StartTrigger).
Mapping positional arguments of cell StopTrigger.SpLatch (DlatchPos).
Mapping positional arguments of cell StartTrigger.StLatch (DlatchNeg).
Mapping positional arguments of cell I2CLog.ModRW (RWCtrl).
Mapping positional arguments of cell I2CLog.ModByteWr (ByteWr2Ram).
Mapping positional arguments of cell I2CLog.ModSerial2Byte (Serial2Byte).
Mapping positional arguments of cell I2CLog.ModStSp (I2C).

4. Executing synth_rs pass: v0.4.218

4.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v' to AST representation.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v:10.1-19.10.
Generating RTLIL representation for module `\CARRY'.
Successfully finished Verilog frontend.

4.3. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:20.1-34.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:48.1-62.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:81.1-97.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:115.1-131.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:150.1-166.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:184.1-200.10.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

4.4. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v' to AST representation.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFRE'.
Successfully finished Verilog frontend.

4.5. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v' to AST representation.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFNRE'.
Successfully finished Verilog frontend.

4.6. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v' to AST representation.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v:10.1-20.10.
Generating RTLIL representation for module `\LUT1'.
Successfully finished Verilog frontend.

4.7. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v' to AST representation.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v:10.1-21.10.
Generating RTLIL representation for module `\LUT2'.
Successfully finished Verilog frontend.

4.8. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v' to AST representation.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v:10.1-22.10.
Generating RTLIL representation for module `\LUT3'.
Successfully finished Verilog frontend.

4.9. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v' to AST representation.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v:11.1-25.10.
Generating RTLIL representation for module `\LUT4'.
Successfully finished Verilog frontend.

4.10. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v' to AST representation.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v:10.1-24.10.
Generating RTLIL representation for module `\LUT5'.
Successfully finished Verilog frontend.

4.11. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v' to AST representation.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v:10.1-25.10.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

4.12. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v' to AST representation.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v:10.1-17.10.
Generating RTLIL representation for module `\CLK_BUF'.
Successfully finished Verilog frontend.

4.13. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v' to AST representation.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v:10.1-22.10.
Generating RTLIL representation for module `\O_BUF'.
Successfully finished Verilog frontend.

4.14. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v' to AST representation.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:10.1-324.10.
Generating RTLIL representation for module `\DSP38'.
Successfully finished Verilog frontend.

4.15. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v' to AST representation.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:2.1-29.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:33.1-84.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\RS_DSP3'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:116.1-149.10.
Generating RTLIL representation for module `\DSP19X2'.
Successfully finished Verilog frontend.

4.16. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:112.1-540.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:542.1-951.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:953.1-1356.10.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.17. Executing HIERARCHY pass (managing design hierarchy).

4.17.1. Analyzing design hierarchy..
Top module:  \I2CLog
Used module:     \RWCtrl
Used module:     \ByteWr2Ram
Used module:         \DFF
Used module:     \Serial2Byte
Used module:     \I2C
Used module:         \I2CStart
Used module:             \StartTrigger
Used module:                 \DlatchNeg
Used module:         \I2CStop
Used module:             \StopTrigger
Used module:                 \DlatchPos

4.17.2. Analyzing design hierarchy..
Top module:  \I2CLog
Used module:     \RWCtrl
Used module:     \ByteWr2Ram
Used module:         \DFF
Used module:     \Serial2Byte
Used module:     \I2C
Used module:         \I2CStart
Used module:             \StartTrigger
Used module:                 \DlatchNeg
Used module:         \I2CStop
Used module:             \StopTrigger
Used module:                 \DlatchPos
Removed 0 unused modules.

4.18. Executing PROC pass (convert processes to netlists).

4.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:370$23 in module RWCtrl.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:367$22 in module RWCtrl.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:344$21 in module DFF.
Removed 1 dead cases from process $proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:261$19 in module ByteWr2Ram.
Marked 3 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:261$19 in module ByteWr2Ram.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:256$18 in module ByteWr2Ram.
Marked 3 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:204$15 in module Serial2Byte.
Marked 2 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:146$11 in module I2CStop.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:137$9 in module I2CStop.
Marked 2 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:98$6 in module I2CStart.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:89$4 in module I2CStart.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:71$2 in module DlatchPos.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:61$1 in module DlatchNeg.
Removed a total of 1 dead cases.

4.18.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 6 redundant assignments.
Promoted 19 assignments to connections.

4.18.4. Executing PROC_INIT pass (extract init attributes).

4.18.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \Reset in `\RWCtrl.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:367$22'.
Found async reset \RESET in `\DFF.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:344$21'.
Found async reset \Rst in `\ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:256$18'.
Found async reset \RstSerial in `\Serial2Byte.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:204$15'.
Found async reset \RWInv in `\Serial2Byte.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:204$15'.
Found async reset \ResetPON in `\I2CStop.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:137$9'.
Found async reset \ResetPON in `\I2CStart.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:89$4'.
Found async reset \Reset in `\DlatchPos.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:71$2'.
Found async reset \Reset in `\DlatchNeg.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:61$1'.

4.18.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~11 debug messages>

4.18.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\RWCtrl.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:370$23'.
     1/4: $3\RW[0:0]
     2/4: $2\RW[0:0]
     3/4: $0\next_state[2:0]
     4/4: $1\RW[0:0]
Creating decoders for process `\RWCtrl.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:367$22'.
     1/1: $0\state_reg[2:0]
Creating decoders for process `\DFF.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:344$21'.
     1/1: $1\DOUT[0:0]
Creating decoders for process `\ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:261$19'.
     1/25: $3\RstByteRdy[0:0]
     2/25: $2\ACK[0:0]
     3/25: $3\Dout[7:0]
     4/25: $3\next_state[2:0]
     5/25: $3\Current_addr[14:0]
     6/25: $3\Ce[0:0]
     7/25: $3\We[0:0]
     8/25: $3\Oe[0:0]
     9/25: $2\RstByteRdy[0:0]
    10/25: $2\Ce[0:0]
    11/25: $2\We[0:0]
    12/25: $2\Oe[0:0]
    13/25: $2\Dout[7:0]
    14/25: $2\Current_addr[14:0]
    15/25: $2\Next_addr[14:0]
    16/25: $2\next_state[2:0]
    17/25: $1\Next_addr[14:0]
    18/25: $1\RstByteRdy[0:0]
    19/25: $1\next_state[2:0]
    20/25: $1\Current_addr[14:0]
    21/25: $1\Dout[7:0]
    22/25: $1\We[0:0]
    23/25: $1\Oe[0:0]
    24/25: $1\Ce[0:0]
    25/25: $1\ACK[0:0]
Creating decoders for process `\ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:256$18'.
     1/1: $1\state_reg[2:0]
Creating decoders for process `\Serial2Byte.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:204$15'.
     1/8: $3\COUNT[3:0]
     2/8: $3\ByteRdy[0:0]
     3/8: $2\COUNT[3:0]
     4/8: $2\ByteRdy[0:0]
     5/8: $2\Byte[8:0]
     6/8: $1\COUNT[3:0]
     7/8: $1\Byte[8:0]
     8/8: $1\ByteRdy[0:0]
Creating decoders for process `\I2CStop.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:146$11'.
     1/3: $2\RstStop[0:0]
     2/3: $0\SpNext_state[1:0]
     3/3: $1\RstStop[0:0]
Creating decoders for process `\I2CStop.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:137$9'.
     1/1: $0\SpState_reg[1:0]
Creating decoders for process `\I2CStart.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:98$6'.
     1/3: $2\RstStart[0:0]
     2/3: $0\StNext_state[1:0]
     3/3: $1\RstStart[0:0]
Creating decoders for process `\I2CStart.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:89$4'.
     1/1: $0\StState_reg[1:0]
Creating decoders for process `\DlatchPos.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:71$2'.
     1/1: $1\Q[0:0]
Creating decoders for process `\DlatchNeg.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:61$1'.
     1/1: $1\Q[0:0]

4.18.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\RWCtrl.\next_state' from process `\RWCtrl.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:370$23'.
Latch inferred for signal `\RWCtrl.\RW' from process `\RWCtrl.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:370$23': $auto$proc_dlatch.cc:427:proc_dlatch$349
No latch inferred for signal `\I2CStop.\SpNext_state' from process `\I2CStop.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:146$11'.
Latch inferred for signal `\I2CStop.\RstStop' from process `\I2CStop.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:146$11': $auto$proc_dlatch.cc:427:proc_dlatch$372
No latch inferred for signal `\I2CStart.\StNext_state' from process `\I2CStart.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:98$6'.
Latch inferred for signal `\I2CStart.\RstStart' from process `\I2CStart.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:98$6': $auto$proc_dlatch.cc:427:proc_dlatch$395

4.18.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\RWCtrl.\state_reg' using process `\RWCtrl.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:367$22'.
  created $adff cell `$procdff$396' with positive edge clock and positive level reset.
Creating register for signal `\DFF.\DOUT' using process `\DFF.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:344$21'.
  created $adff cell `$procdff$397' with positive edge clock and positive level reset.
Creating register for signal `\ByteWr2Ram.\Ce' using process `\ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:261$19'.
  created $dff cell `$procdff$398' with positive edge clock.
Creating register for signal `\ByteWr2Ram.\Oe' using process `\ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:261$19'.
  created $dff cell `$procdff$399' with positive edge clock.
Creating register for signal `\ByteWr2Ram.\We' using process `\ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:261$19'.
  created $dff cell `$procdff$400' with positive edge clock.
Creating register for signal `\ByteWr2Ram.\ACK' using process `\ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:261$19'.
  created $dff cell `$procdff$401' with positive edge clock.
Creating register for signal `\ByteWr2Ram.\Dout' using process `\ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:261$19'.
  created $dff cell `$procdff$402' with positive edge clock.
Creating register for signal `\ByteWr2Ram.\Current_addr' using process `\ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:261$19'.
  created $dff cell `$procdff$403' with positive edge clock.
Creating register for signal `\ByteWr2Ram.\next_state' using process `\ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:261$19'.
  created $dff cell `$procdff$404' with positive edge clock.
Creating register for signal `\ByteWr2Ram.\RstByteRdy' using process `\ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:261$19'.
  created $dff cell `$procdff$405' with positive edge clock.
Creating register for signal `\ByteWr2Ram.\Next_addr' using process `\ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:261$19'.
  created $dff cell `$procdff$406' with positive edge clock.
Creating register for signal `\ByteWr2Ram.\state_reg' using process `\ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:256$18'.
  created $adff cell `$procdff$407' with positive edge clock and positive level reset.
Creating register for signal `\Serial2Byte.\ByteRdy' using process `\Serial2Byte.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:204$15'.
  created $adff cell `$procdff$410' with positive edge clock and positive level reset.
Creating register for signal `\Serial2Byte.\Byte' using process `\Serial2Byte.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:204$15'.
  created $adff cell `$procdff$413' with positive edge clock and positive level reset.
Creating register for signal `\Serial2Byte.\COUNT' using process `\Serial2Byte.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:204$15'.
  created $adff cell `$procdff$416' with positive edge clock and positive level reset.
Creating register for signal `\I2CStop.\SpState_reg' using process `\I2CStop.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:137$9'.
  created $adff cell `$procdff$417' with positive edge clock and positive level reset.
Creating register for signal `\I2CStart.\StState_reg' using process `\I2CStart.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:89$4'.
  created $adff cell `$procdff$418' with positive edge clock and positive level reset.
Creating register for signal `\DlatchPos.\Q' using process `\DlatchPos.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:71$2'.
  created $adff cell `$procdff$419' with positive edge clock and positive level reset.
Creating register for signal `\DlatchNeg.\Q' using process `\DlatchNeg.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:61$1'.
  created $adff cell `$procdff$420' with negative edge clock and positive level reset.

4.18.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.18.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 3 empty switches in `\RWCtrl.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:370$23'.
Removing empty process `RWCtrl.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:370$23'.
Removing empty process `RWCtrl.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:367$22'.
Removing empty process `DFF.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:344$21'.
Found and cleaned up 3 empty switches in `\ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:261$19'.
Removing empty process `ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:261$19'.
Removing empty process `ByteWr2Ram.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:256$18'.
Found and cleaned up 1 empty switch in `\Serial2Byte.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:204$15'.
Removing empty process `Serial2Byte.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:204$15'.
Found and cleaned up 2 empty switches in `\I2CStop.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:146$11'.
Removing empty process `I2CStop.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:146$11'.
Removing empty process `I2CStop.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:137$9'.
Found and cleaned up 2 empty switches in `\I2CStart.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:98$6'.
Removing empty process `I2CStart.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:98$6'.
Removing empty process `I2CStart.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:89$4'.
Removing empty process `DlatchPos.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:71$2'.
Removing empty process `DlatchNeg.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:61$1'.
Cleaned up 11 empty switches.

4.18.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module RWCtrl.
<suppressed ~12 debug messages>
Optimizing module DFF.
Optimizing module ByteWr2Ram.
<suppressed ~16 debug messages>
Optimizing module Serial2Byte.
<suppressed ~3 debug messages>
Optimizing module I2C.
Optimizing module I2CStop.
<suppressed ~12 debug messages>
Optimizing module I2CStart.
<suppressed ~12 debug messages>
Optimizing module DlatchPos.
Optimizing module DlatchNeg.
Optimizing module StopTrigger.
Optimizing module StartTrigger.
Optimizing module I2CLog.

4.19. Executing SPLITNETS pass (splitting up multi-bit signals).

4.20. Executing DEMUXMAP pass.

4.21. Executing FLATTEN pass (flatten design).
Deleting now unused module ByteWr2Ram.
Deleting now unused module DFF.
Deleting now unused module DlatchNeg.
Deleting now unused module DlatchPos.
Deleting now unused module I2C.
Deleting now unused module I2CStart.
Deleting now unused module I2CStop.
Deleting now unused module RWCtrl.
Deleting now unused module Serial2Byte.
Deleting now unused module StartTrigger.
Deleting now unused module StopTrigger.
<suppressed ~11 debug messages>

4.22. Executing DEMUXMAP pass.

4.23. Executing TRIBUF pass.
Warning: Ignored -no_iobuf because -keep_tribuf is used.

4.24. Executing DEMINOUT pass (demote inout ports to input or output).

4.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 7 unused cells and 136 unused wires.
<suppressed ~14 debug messages>

4.27. Executing CHECK pass (checking for obvious problems).
Checking module I2CLog...
Found and reported 0 problems.

4.28. Printing statistics.

=== I2CLog ===

   Number of wires:                229
   Number of wire bits:            538
   Number of public wires:          94
   Number of public wire bits:     189
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                164
     $add                            2
     $adff                          10
     $and                            5
     $dff                            9
     $dlatch                         3
     $eq                            44
     $logic_not                     22
     $logic_or                       3
     $mux                           40
     $not                            9
     $pmux                          14
     $reduce_bool                    3

4.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
<suppressed ~159 debug messages>
Removed a total of 53 cells.

4.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$100.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$110.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$120.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$130.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$141.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$152.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$163.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$174.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$185.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$196.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$61.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$207.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$71.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$81.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$91.
    dead port 2/2 on $mux $flatten\ModByteWr.$procmux$218.
Removed 16 multiplexer ports.
<suppressed ~17 debug messages>

4.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
    New ctrl vector for $pmux cell $flatten\ModByteWr.$procmux$265: { $flatten\ModByteWr.$procmux$142_CMP $flatten\ModByteWr.$procmux$101_CMP $auto$opt_reduce.cc:134:opt_pmux$422 }
    New ctrl vector for $pmux cell $flatten\ModByteWr.$procmux$273: { $flatten\ModByteWr.$procmux$142_CMP $flatten\ModByteWr.$procmux$101_CMP $auto$opt_reduce.cc:134:opt_pmux$424 }
    New ctrl vector for $pmux cell $flatten\ModByteWr.$procmux$257: { $flatten\ModByteWr.$procmux$142_CMP $flatten\ModByteWr.$procmux$101_CMP $auto$opt_reduce.cc:134:opt_pmux$428 $auto$opt_reduce.cc:134:opt_pmux$426 }
    New ctrl vector for $pmux cell $flatten\ModRW.$procmux$50: $flatten\ModRW.$procmux$44_CMP
    New ctrl vector for $pmux cell $flatten\ModStSp.\mod1.$procmux$309: $flatten\ModStSp.\mod1.$procmux$310_CMP
    New ctrl vector for $pmux cell $flatten\ModByteWr.$procmux$226: { $flatten\ModByteWr.$procmux$142_CMP $flatten\ModByteWr.$procmux$101_CMP $flatten\ModByteWr.$procmux$229_CMP $auto$opt_reduce.cc:134:opt_pmux$430 }
    New ctrl vector for $pmux cell $flatten\ModStSp.\mod2.$procmux$329: $flatten\ModStSp.\mod2.$procmux$330_CMP
  Optimizing cells in module \I2CLog.
Performed a total of 7 changes.

4.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.34. Executing OPT_SHARE pass.

4.35. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=22, #solve=0, #remove=0, time=0.00 sec.]

4.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 70 unused wires.
<suppressed ~1 debug messages>

4.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

4.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.41. Executing OPT_SHARE pass.

4.42. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=22, #solve=0, #remove=0, time=0.00 sec.]

4.43. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 2

4.45. Executing FSM pass (extract and optimize FSM).

4.45.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking I2CLog.ModByteWr.next_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking I2CLog.ModRW.state_reg as FSM state register:
    Circuit seems to be self-resetting.
Not marking I2CLog.ModStSp.mod1.SpState_reg as FSM state register:
    Circuit seems to be self-resetting.
Not marking I2CLog.ModStSp.mod2.StState_reg as FSM state register:
    Circuit seems to be self-resetting.

4.45.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.45.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.45.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.45.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.45.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.45.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.45.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.46. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from mux cell I2CLog.$flatten\ModRW.$procmux$46 ($mux).
Removed top 2 bits (of 3) from port B of cell I2CLog.$flatten\ModRW.$procmux$44_CMP0 ($eq).
Removed top 2 bits (of 3) from mux cell I2CLog.$flatten\ModRW.$procmux$41 ($mux).
Removed top 31 bits (of 32) from port B of cell I2CLog.$flatten\ModSerial2Byte.$add$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:221$16 ($add).
Removed top 28 bits (of 32) from port Y of cell I2CLog.$flatten\ModSerial2Byte.$add$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:221$16 ($add).
Removed top 1 bits (of 2) from port B of cell I2CLog.$flatten\ModStSp.\mod2.$procmux$323_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell I2CLog.$flatten\ModStSp.\mod2.$procmux$325 ($mux).
Removed top 1 bits (of 2) from port B of cell I2CLog.$flatten\ModStSp.\mod1.$procmux$303_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell I2CLog.$flatten\ModStSp.\mod1.$procmux$305 ($mux).
Removed top 31 bits (of 32) from port B of cell I2CLog.$flatten\ModByteWr.$add$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:332$20 ($add).
Removed top 17 bits (of 32) from port Y of cell I2CLog.$flatten\ModByteWr.$add$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:332$20 ($add).
Removed top 2 bits (of 3) from port B of cell I2CLog.$flatten\ModByteWr.$procmux$101_CMP0 ($eq).
Removed top 2 bits (of 3) from mux cell I2CLog.$flatten\ModByteWr.$procmux$216 ($mux).
Removed top 1 bits (of 3) from port B of cell I2CLog.$flatten\ModByteWr.$procmux$228_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell I2CLog.$flatten\ModByteWr.$procmux$229_CMP0 ($eq).
Removed top 1 bits (of 3) from mux cell I2CLog.$flatten\ModByteWr.$procmux$89 ($mux).
Removed top 2 bits (of 3) from wire I2CLog.$flatten\ModByteWr.$2\next_state[2:0].
Removed top 1 bits (of 3) from wire I2CLog.$flatten\ModByteWr.$3\next_state[2:0].
Removed top 17 bits (of 32) from wire I2CLog.$flatten\ModByteWr.$add$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:332$20_Y.
Removed top 2 bits (of 3) from wire I2CLog.$flatten\ModRW.$procmux$41_Y.
Removed top 2 bits (of 3) from wire I2CLog.$flatten\ModRW.$procmux$46_Y.
Removed top 28 bits (of 32) from wire I2CLog.$flatten\ModSerial2Byte.$add$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:221$16_Y.
Removed top 1 bits (of 2) from wire I2CLog.$flatten\ModStSp.\mod1.$procmux$305_Y.
Removed top 1 bits (of 2) from wire I2CLog.$flatten\ModStSp.\mod2.$procmux$325_Y.

4.47. Executing PEEPOPT pass (run peephole optimizers).

4.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

4.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.51. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

4.52. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.53. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

4.54. Executing OPT_SHARE pass.

4.55. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\ModByteWr.$procdff$406 ($dff) from module I2CLog (D = $flatten\ModByteWr.$0\Next_addr[14:0], Q = \ModByteWr.Next_addr).
Adding EN signal on $flatten\ModByteWr.$procdff$405 ($dff) from module I2CLog (D = $flatten\ModByteWr.$0\RstByteRdy[0:0], Q = \ModByteWr.RstByteRdy).
Adding EN signal on $flatten\ModByteWr.$procdff$403 ($dff) from module I2CLog (D = $flatten\ModByteWr.$0\Current_addr[14:0], Q = \ModByteWr.Current_addr).
Adding EN signal on $flatten\ModByteWr.$procdff$402 ($dff) from module I2CLog (D = $flatten\ModByteWr.$0\Dout[7:0], Q = \ModByteWr.Dout).
Adding EN signal on $flatten\ModByteWr.$procdff$401 ($dff) from module I2CLog (D = \ModSerial2Byte.Byte [0], Q = \ModByteWr.ACK).
Adding EN signal on $flatten\ModByteWr.$procdff$400 ($dff) from module I2CLog (D = $flatten\ModByteWr.$0\We[0:0], Q = \ModByteWr.We).
Adding EN signal on $flatten\ModByteWr.$procdff$399 ($dff) from module I2CLog (D = $flatten\ModByteWr.$0\Oe[0:0], Q = \ModByteWr.Oe).
Adding EN signal on $flatten\ModByteWr.$procdff$398 ($dff) from module I2CLog (D = $flatten\ModByteWr.$0\Ce[0:0], Q = \ModByteWr.Ce).
[#visit=22, #solve=0, #remove=0, time=0.00 sec.]

4.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 2 unused cells and 5 unused wires.
<suppressed ~3 debug messages>

4.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.
<suppressed ~7 debug messages>

4.58. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

4.59. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.60. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

4.61. Executing OPT_SHARE pass.

4.62. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=22, #solve=0, #remove=0, time=0.00 sec.]

4.63. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 17 unused wires.
<suppressed ~1 debug messages>

4.64. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.65. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

4.66. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.67. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.68. Executing OPT_SHARE pass.

4.69. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=22, #solve=0, #remove=0, time=0.00 sec.]

4.70. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.71. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 3

4.72. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.74. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

4.75. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.76. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.77. Executing OPT_SHARE pass.

4.78. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=22, #solve=0, #remove=0, time=0.00 sec.]

4.79. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

4.81. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.82. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.83. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

4.84. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.85. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.86. Executing OPT_SHARE pass.

4.87. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=22, #solve=0, #remove=0, time=0.00 sec.]

4.88. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 1 on $flatten\ModRW.$procdff$396 ($adff) from module I2CLog.
Setting constant 0-bit at position 2 on $flatten\ModRW.$procdff$396 ($adff) from module I2CLog.
[#visit=22, #solve=23, #remove=2, time=0.01 sec.]

4.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.90. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.
<suppressed ~1 debug messages>

RUN-OPT ITERATIONS DONE : 1

4.91. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from mux cell I2CLog.$flatten\ModRW.$procmux$43 ($pmux).
Removed top 1 bits (of 2) from port B of cell I2CLog.$auto$opt_dff.cc:196:make_patterns_logic$450 ($ne).
Removed top 2 bits (of 3) from wire I2CLog.$auto$wreduce.cc:461:run$431.
Removed top 1 bits (of 3) from wire I2CLog.$auto$wreduce.cc:461:run$432.
Removed top 17 bits (of 32) from wire I2CLog.$auto$wreduce.cc:461:run$433.
Removed top 2 bits (of 3) from wire I2CLog.$auto$wreduce.cc:461:run$434.
Removed top 2 bits (of 3) from wire I2CLog.$auto$wreduce.cc:461:run$435.
Removed top 28 bits (of 32) from wire I2CLog.$auto$wreduce.cc:461:run$436.
Removed top 1 bits (of 2) from wire I2CLog.$auto$wreduce.cc:461:run$437.

4.92. Executing PEEPOPT pass (run peephole optimizers).

4.93. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

4.94. Executing DEMUXMAP pass.

4.95. Executing SPLITNETS pass (splitting up multi-bit signals).

4.96. Printing statistics.

=== I2CLog ===

   Number of wires:                167
   Number of wire bits:            348
   Number of public wires:          94
   Number of public wire bits:     189
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                102
     $add                            2
     $adff                          10
     $and                            5
     $dff                            1
     $dffe                           8
     $dlatch                         3
     $eq                            10
     $logic_not                      4
     $logic_or                       3
     $mux                           17
     $ne                             2
     $not                            9
     $pmux                          11
     $reduce_and                     7
     $reduce_bool                    6
     $reduce_or                      4

4.97. Executing RS_DSP_MULTADD pass.

4.98. Executing WREDUCE pass (reducing word size of cells).

4.99. Executing RS_DSP_MACC pass.

4.100. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.101. Executing TECHMAP pass (map to technology primitives).

4.101.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.101.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.102. Printing statistics.

=== I2CLog ===

   Number of wires:                167
   Number of wire bits:            348
   Number of public wires:          94
   Number of public wire bits:     189
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                102
     $add                            2
     $adff                          10
     $and                            5
     $dff                            1
     $dffe                           8
     $dlatch                         3
     $eq                            10
     $logic_not                      4
     $logic_or                       3
     $mux                           17
     $ne                             2
     $not                            9
     $pmux                          11
     $reduce_and                     7
     $reduce_bool                    6
     $reduce_or                      4

4.103. Executing TECHMAP pass (map to technology primitives).

4.103.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.103.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.104. Printing statistics.

=== I2CLog ===

   Number of wires:                167
   Number of wire bits:            348
   Number of public wires:          94
   Number of public wire bits:     189
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                102
     $add                            2
     $adff                          10
     $and                            5
     $dff                            1
     $dffe                           8
     $dlatch                         3
     $eq                            10
     $logic_not                      4
     $logic_or                       3
     $mux                           17
     $ne                             2
     $not                            9
     $pmux                          11
     $reduce_and                     7
     $reduce_bool                    6
     $reduce_or                      4

4.105. Executing TECHMAP pass (map to technology primitives).

4.105.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.105.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.106. Executing TECHMAP pass (map to technology primitives).

4.106.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.106.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.107. Executing TECHMAP pass (map to technology primitives).

4.107.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

4.107.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.108. Executing RS_DSP_SIMD pass.

4.109. Executing TECHMAP pass (map to technology primitives).

4.109.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

4.109.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.110. Executing TECHMAP pass (map to technology primitives).

4.110.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.110.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

4.111. Executing rs_pack_dsp_regs pass.

4.112. Executing RS_DSP_IO_REGS pass.

4.113. Executing TECHMAP pass (map to technology primitives).

4.113.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Successfully finished Verilog frontend.

4.113.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~14 debug messages>

4.114. Executing TECHMAP pass (map to technology primitives).

4.114.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.114.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

4.115. Printing statistics.

=== I2CLog ===

   Number of wires:                167
   Number of wire bits:            348
   Number of public wires:          94
   Number of public wire bits:     189
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                102
     $add                            2
     $adff                          10
     $and                            5
     $dff                            1
     $dffe                           8
     $dlatch                         3
     $eq                            10
     $logic_not                      4
     $logic_or                       3
     $mux                           17
     $ne                             2
     $not                            9
     $pmux                          11
     $reduce_and                     7
     $reduce_bool                    6
     $reduce_or                      4

4.116. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module I2CLog:
  creating $macc model for $flatten\ModByteWr.$add$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:332$20 ($add).
  creating $macc model for $flatten\ModSerial2Byte.$add$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:221$16 ($add).
  creating $alu model for $macc $flatten\ModSerial2Byte.$add$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:221$16.
  creating $alu model for $macc $flatten\ModByteWr.$add$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:332$20.
  creating $alu cell for $flatten\ModByteWr.$add$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:332$20: $auto$alumacc.cc:485:replace_alu$507
  creating $alu cell for $flatten\ModSerial2Byte.$add$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:221$16: $auto$alumacc.cc:485:replace_alu$510
  created 2 $alu and 0 $macc cells.

4.117. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.118. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.119. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

4.120. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.121. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.122. Executing OPT_SHARE pass.

4.123. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=22, #solve=0, #remove=0, time=0.00 sec.]

4.124. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.125. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

4.126. Printing statistics.

=== I2CLog ===

   Number of wires:                171
   Number of wire bits:            386
   Number of public wires:          94
   Number of public wire bits:     189
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                102
     $adff                          10
     $alu                            2
     $and                            5
     $dff                            1
     $dffe                           8
     $dlatch                         3
     $eq                            10
     $logic_not                      4
     $logic_or                       3
     $mux                           17
     $ne                             2
     $not                            9
     $pmux                          11
     $reduce_and                     7
     $reduce_bool                    6
     $reduce_or                      4

4.127. Executing MEMORY pass.

4.127.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.127.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.127.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

4.127.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.127.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

4.127.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.127.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.127.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.127.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.127.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.128. Printing statistics.

=== I2CLog ===

   Number of wires:                171
   Number of wire bits:            386
   Number of public wires:          94
   Number of public wire bits:     189
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                102
     $adff                          10
     $alu                            2
     $and                            5
     $dff                            1
     $dffe                           8
     $dlatch                         3
     $eq                            10
     $logic_not                      4
     $logic_or                       3
     $mux                           17
     $ne                             2
     $not                            9
     $pmux                          11
     $reduce_and                     7
     $reduce_bool                    6
     $reduce_or                      4

4.129. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~10 debug messages>

4.130. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.131. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.132. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.133. Executing Rs_BRAM_Split pass.

4.134. Executing TECHMAP pass (map to technology primitives).

4.134.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

4.134.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

4.135. Executing TECHMAP pass (map to technology primitives).

4.135.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

4.135.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.136. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

4.137. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.138. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.139. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

4.140. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.141. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.142. Executing OPT_SHARE pass.

4.143. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=22, #solve=0, #remove=0, time=0.00 sec.]

4.144. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.145. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

4.146. Executing PMUXTREE pass.

4.147. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting I2CLog.$auto$pmuxtree.cc:65:recursive_mux_generator$595 ... I2CLog.$auto$pmuxtree.cc:65:recursive_mux_generator$597 to a pmux with 2 cases.
Converting I2CLog.$auto$pmuxtree.cc:65:recursive_mux_generator$587 ... I2CLog.$auto$pmuxtree.cc:65:recursive_mux_generator$589 to a pmux with 2 cases.
Converting I2CLog.$auto$pmuxtree.cc:65:recursive_mux_generator$571 ... I2CLog.$auto$pmuxtree.cc:65:recursive_mux_generator$573 to a pmux with 2 cases.
Converting I2CLog.$auto$pmuxtree.cc:65:recursive_mux_generator$567 ... I2CLog.$auto$pmuxtree.cc:65:recursive_mux_generator$569 to a pmux with 2 cases.
Converting I2CLog.$auto$pmuxtree.cc:65:recursive_mux_generator$547 ... I2CLog.$auto$pmuxtree.cc:65:recursive_mux_generator$549 to a pmux with 2 cases.
Converting I2CLog.$auto$pmuxtree.cc:65:recursive_mux_generator$543 ... I2CLog.$auto$pmuxtree.cc:65:recursive_mux_generator$545 to a pmux with 2 cases.
Converted 12 (p)mux cells into 6 pmux cells.
<suppressed ~28 debug messages>

4.148. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

4.149. Executing TECHMAP pass (map to technology primitives).

4.149.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.149.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

4.149.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $dlatch.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~689 debug messages>

4.150. Printing statistics.

=== I2CLog ===

   Number of wires:                482
   Number of wire bits:           3338
   Number of public wires:          94
   Number of public wire bits:     189
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                517
     $_AND_                         95
     $_DFFE_PP_                     43
     $_DFF_NP0_                      1
     $_DFF_PP0_                     24
     $_DFF_P_                        3
     $_DLATCH_N_                     3
     $_MUX_                        129
     $_NOT_                         46
     $_OR_                         102
     $_XOR_                         71

4.151. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.
<suppressed ~226 debug messages>

4.152. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
<suppressed ~150 debug messages>
Removed a total of 50 cells.

4.153. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.154. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.155. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.156. Executing OPT_SHARE pass.

4.157. Executing OPT_DFF pass (perform DFF optimizations).
Handling always-active async load on I2CLog:ModRW.RW_823 ($_DLATCH_N_) from module I2CLog (changing to combinatorial circuit).
[#visit=73, #solve=0, #remove=0, time=0.00 sec.]

4.158. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 27 unused cells and 298 unused wires.
<suppressed ~28 debug messages>

4.159. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.160. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.161. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.162. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.163. Executing OPT_SHARE pass.

4.164. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=73, #solve=0, #remove=0, time=0.00 sec.]

4.165. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.166. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 2

4.167. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.
<suppressed ~27 debug messages>

4.168. Executing TECHMAP pass (map to technology primitives).

4.168.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.168.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

4.169. Printing statistics.

=== I2CLog ===

   Number of wires:                201
   Number of wire bits:            446
   Number of public wires:          94
   Number of public wire bits:     189
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                262
     $_AND_                         50
     $_DFFE_PP_                     43
     $_DFF_NP0_                      1
     $_DFF_PP0_                     24
     $_DFF_P_                        3
     $_DLATCH_N_                     2
     $_MUX_                         49
     $_NOT_                         29
     $_OR_                          44
     $_XOR_                         17

4.170. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.171. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.172. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.173. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.174. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.175. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=73, #solve=0, #remove=0, time=0.00 sec.]

4.176. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

4.177. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

4.178. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.179. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.180. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.181. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.182. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.183. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=73, #solve=0, #remove=0, time=0.00 sec.]

4.184. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.185. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

4.186. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.187. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.188. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.189. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.190. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.191. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=73, #solve=0, #remove=0, time=0.00 sec.]

4.192. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=73, #solve=21, #remove=0, time=0.00 sec.]

4.193. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.194. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

4.195. Printing statistics.

=== I2CLog ===

   Number of wires:                192
   Number of wire bits:            411
   Number of public wires:          94
   Number of public wire bits:     189
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                261
     $_AND_                         50
     $_DFFE_PP_                     43
     $_DFF_NP0_                      1
     $_DFF_PP0_                     24
     $_DFF_P_                        3
     $_DLATCH_N_                     2
     $_MUX_                         49
     $_NOT_                         29
     $_OR_                          43
     $_XOR_                         17

   Number of Generic REGs:          73

ABC-DFF iteration : 1

4.196. Executing ABC pass (technology mapping using ABC).

4.196.1. Summary of detected clock domains:
  11 cells in clk=!\SDA, en={ }, arst=\ModStSp.mod2.ModStart.StLatch.Reset, srst={ }
  9 cells in clk=\SDA, en={ }, arst=\ModStSp.mod1.ModStop.SpLatch.Reset, srst={ }
  39 cells in clk=\SCL, en={ }, arst=$flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408, srst={ }
  38 cells in clk=\Clk, en={ }, arst=\Rst, srst={ }
  19 cells in clk=\Clk, en={ }, arst={ }, srst={ }
  8 cells in clk=\Clk, en=$auto$opt_dff.cc:220:make_patterns_logic$479, arst={ }, srst={ }
  8 cells in clk=\Clk, en=$auto$opt_dff.cc:220:make_patterns_logic$451, arst={ }, srst={ }
  49 cells in clk=\Clk, en=$auto$opt_dff.cc:220:make_patterns_logic$444, arst={ }, srst={ }
  5 cells in clk=\ModSerial2Byte.ByteRdy, en={ }, arst=\ModByteWr.RstByteRdy, srst={ }
  10 cells in clk=\Clk, en=$auto$opt_dff.cc:220:make_patterns_logic$467, arst={ }, srst={ }
  54 cells in clk=\Clk, en=$auto$opt_dff.cc:220:make_patterns_logic$458, arst={ }, srst={ }
  10 cells in clk=\Clk, en=$auto$opt_dff.cc:220:make_patterns_logic$488, arst={ }, srst={ }
  1 cells in clk=\Clk, en=$auto$pmuxtree.cc:65:recursive_mux_generator$547.B_AND_S [4], arst={ }, srst={ }

  #logic partitions = 13

4.196.2. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$458
Extracted 54 gates and 73 wires to a netlist network with 19 inputs and 33 outputs (dfl=1).

4.196.2.1. Executing ABC.
[Time = 0.06 sec.]

4.196.3. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$444
Extracted 49 gates and 71 wires to a netlist network with 21 inputs and 33 outputs (dfl=1).

4.196.3.1. Executing ABC.
[Time = 0.06 sec.]

4.196.4. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SCL, asynchronously reset by $flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408
Extracted 39 gates and 44 wires to a netlist network with 4 inputs and 23 outputs (dfl=1).

4.196.4.1. Executing ABC.
[Time = 0.06 sec.]

4.196.5. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, asynchronously reset by \Rst
Extracted 38 gates and 47 wires to a netlist network with 9 inputs and 21 outputs (dfl=1).

4.196.5.1. Executing ABC.
[Time = 0.06 sec.]

4.196.6. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk
Extracted 19 gates and 31 wires to a netlist network with 11 inputs and 7 outputs (dfl=1).

4.196.6.1. Executing ABC.
[Time = 0.06 sec.]

4.196.7. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \SDA, asynchronously reset by \ModStSp.mod2.ModStart.StLatch.Reset
Extracted 10 gates and 19 wires to a netlist network with 8 inputs and 9 outputs (dfl=1).

4.196.7.1. Executing ABC.
[Time = 0.06 sec.]

4.196.8. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$467
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 10 outputs (dfl=1).

4.196.8.1. Executing ABC.
[Time = 0.04 sec.]

4.196.9. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$488
Extracted 10 gates and 18 wires to a netlist network with 7 inputs and 3 outputs (dfl=1).

4.196.9.1. Executing ABC.
[Time = 0.06 sec.]

4.196.10. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SDA, asynchronously reset by \ModStSp.mod1.ModStop.SpLatch.Reset
Extracted 8 gates and 14 wires to a netlist network with 6 inputs and 7 outputs (dfl=1).

4.196.10.1. Executing ABC.
[Time = 0.04 sec.]

4.196.11. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$479
Extracted 8 gates and 15 wires to a netlist network with 6 inputs and 3 outputs (dfl=1).

4.196.11.1. Executing ABC.
[Time = 0.06 sec.]

4.196.12. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$451
Extracted 8 gates and 15 wires to a netlist network with 6 inputs and 4 outputs (dfl=1).

4.196.12.1. Executing ABC.
[Time = 0.06 sec.]

4.196.13. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$1718$lo00, asynchronously reset by $abc$1912$lo0
Extracted 5 gates and 7 wires to a netlist network with 1 inputs and 5 outputs (dfl=1).

4.196.13.1. Executing ABC.
[Time = 0.04 sec.]

4.196.14. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1922$auto$pmuxtree.cc:65:recursive_mux_generator$547.B_AND_S[4]
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs (dfl=1).

4.196.14.1. Executing ABC.
[Time = 0.04 sec.]

4.197. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.
<suppressed ~1 debug messages>

4.198. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.199. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.200. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.201. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.202. Executing OPT_SHARE pass.

4.203. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $abc$1879$auto$blifparse.cc:377:parse_blif$1881 ($_DFFE_PP_) from module I2CLog.
[#visit=73, #solve=0, #remove=1, time=0.00 sec.]

4.204. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 415 unused wires.
<suppressed ~4 debug messages>

4.205. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.206. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.207. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.208. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.209. Executing OPT_SHARE pass.

4.210. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.211. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.212. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 2

ABC-DFF iteration : 2

4.213. Executing ABC pass (technology mapping using ABC).

4.213.1. Summary of detected clock domains:
  2 cells in clk=\Clk, en=$auto$pmuxtree.cc:65:recursive_mux_generator$547.B_AND_S [4], arst={ }, srst={ }
  3 cells in clk=\ModSerial2Byte.ByteRdy, en={ }, arst=\ModByteWr.RstByteRdy, srst={ }
  7 cells in clk=\Clk, en=$abc$1912$auto$opt_dff.cc:220:make_patterns_logic$451, arst={ }, srst={ }
  10 cells in clk=\Clk, en=$abc$1902$auto$opt_dff.cc:220:make_patterns_logic$479, arst={ }, srst={ }
  9 cells in clk=\SDA, en={ }, arst=\ModStSp.mod1.ModStop.SpLatch.Reset, srst={ }
  9 cells in clk=\Clk, en=$abc$1879$auto$opt_dff.cc:220:make_patterns_logic$488, arst={ }, srst={ }
  18 cells in clk=\Clk, en=$abc$1852$auto$opt_dff.cc:220:make_patterns_logic$467, arst={ }, srst={ }
  11 cells in clk=!\SDA, en={ }, arst=\ModStSp.mod2.ModStart.StLatch.Reset, srst={ }
  17 cells in clk=\Clk, en={ }, arst={ }, srst={ }
  28 cells in clk=\Clk, en={ }, arst=\Rst, srst={ }
  25 cells in clk=\SCL, en={ }, arst=$abc$1718$flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408, srst={ }
  48 cells in clk=\Clk, en=$abc$1652$auto$opt_dff.cc:220:make_patterns_logic$444, arst={ }, srst={ }
  55 cells in clk=\Clk, en=$abc$1567$auto$opt_dff.cc:220:make_patterns_logic$458, arst={ }, srst={ }

  #logic partitions = 13

4.213.2. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1567$auto$opt_dff.cc:220:make_patterns_logic$458
Extracted 55 gates and 73 wires to a netlist network with 18 inputs and 34 outputs (dfl=1).

4.213.2.1. Executing ABC.
[Time = 0.04 sec.]

4.213.3. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1652$auto$opt_dff.cc:220:make_patterns_logic$444
Extracted 48 gates and 68 wires to a netlist network with 20 inputs and 32 outputs (dfl=1).

4.213.3.1. Executing ABC.
[Time = 0.04 sec.]

4.213.4. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, asynchronously reset by \Rst
Extracted 28 gates and 35 wires to a netlist network with 7 inputs and 21 outputs (dfl=1).

4.213.4.1. Executing ABC.
[Time = 0.06 sec.]

4.213.5. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SCL, asynchronously reset by $abc$1718$flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408
Extracted 25 gates and 28 wires to a netlist network with 3 inputs and 15 outputs (dfl=1).

4.213.5.1. Executing ABC.
[Time = 0.05 sec.]

4.213.6. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1852$auto$opt_dff.cc:220:make_patterns_logic$467
Extracted 18 gates and 30 wires to a netlist network with 12 inputs and 10 outputs (dfl=1).

4.213.6.1. Executing ABC.
[Time = 0.05 sec.]

4.213.7. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk
Extracted 17 gates and 27 wires to a netlist network with 10 inputs and 8 outputs (dfl=1).

4.213.7.1. Executing ABC.
[Time = 0.06 sec.]

4.213.8. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \SDA, asynchronously reset by \ModStSp.mod2.ModStart.StLatch.Reset
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 8 outputs (dfl=1).

4.213.8.1. Executing ABC.
[Time = 0.06 sec.]

4.213.9. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1902$auto$opt_dff.cc:220:make_patterns_logic$479
Extracted 10 gates and 17 wires to a netlist network with 7 inputs and 4 outputs (dfl=1).

4.213.9.1. Executing ABC.
[Time = 0.04 sec.]

4.213.10. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SDA, asynchronously reset by \ModStSp.mod1.ModStop.SpLatch.Reset
Extracted 8 gates and 14 wires to a netlist network with 6 inputs and 6 outputs (dfl=1).

4.213.10.1. Executing ABC.
[Time = 0.04 sec.]

4.213.11. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1879$auto$opt_dff.cc:220:make_patterns_logic$488
Extracted 9 gates and 16 wires to a netlist network with 7 inputs and 4 outputs (dfl=1).

4.213.11.1. Executing ABC.
[Time = 0.04 sec.]

4.213.12. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1912$auto$opt_dff.cc:220:make_patterns_logic$451
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs (dfl=1).

4.213.12.1. Executing ABC.
[Time = 0.06 sec.]

4.213.13. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$2122$lo00, asynchronously reset by $abc$2264$lo0
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs (dfl=1).

4.213.13.1. Executing ABC.
[Time = 0.04 sec.]

4.213.14. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$pmuxtree.cc:65:recursive_mux_generator$547.B_AND_S [4]
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs (dfl=1).

4.213.14.1. Executing ABC.
[Time = 0.05 sec.]

4.214. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.215. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

4.216. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.217. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.218. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.219. Executing OPT_SHARE pass.

4.220. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.221. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 454 unused wires.
<suppressed ~1 debug messages>

4.222. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

4.223. Executing ABC pass (technology mapping using ABC).

4.223.1. Summary of detected clock domains:
  2 cells in clk=\Clk, en=$auto$pmuxtree.cc:65:recursive_mux_generator$547.B_AND_S [4], arst={ }, srst={ }
  3 cells in clk=\ModSerial2Byte.ByteRdy, en={ }, arst=\ModByteWr.RstByteRdy, srst={ }
  7 cells in clk=\Clk, en=$abc$1912$auto$opt_dff.cc:220:make_patterns_logic$451, arst={ }, srst={ }
  8 cells in clk=\Clk, en=$abc$1879$auto$opt_dff.cc:220:make_patterns_logic$488, arst={ }, srst={ }
  8 cells in clk=\SDA, en={ }, arst=\ModStSp.mod1.ModStop.SpLatch.Reset, srst={ }
  10 cells in clk=\Clk, en=$abc$1902$auto$opt_dff.cc:220:make_patterns_logic$479, arst={ }, srst={ }
  10 cells in clk=!\SDA, en={ }, arst=\ModStSp.mod2.ModStart.StLatch.Reset, srst={ }
  17 cells in clk=\Clk, en={ }, arst={ }, srst={ }
  19 cells in clk=\Clk, en=$abc$1852$auto$opt_dff.cc:220:make_patterns_logic$467, arst={ }, srst={ }
  25 cells in clk=\SCL, en={ }, arst=$abc$1718$flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408, srst={ }
  24 cells in clk=\Clk, en={ }, arst=\Rst, srst={ }
  49 cells in clk=\Clk, en=$abc$1652$auto$opt_dff.cc:220:make_patterns_logic$444, arst={ }, srst={ }
  53 cells in clk=\Clk, en=$abc$1567$auto$opt_dff.cc:220:make_patterns_logic$458, arst={ }, srst={ }

  #logic partitions = 13

4.223.2. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1567$auto$opt_dff.cc:220:make_patterns_logic$458
Extracted 53 gates and 71 wires to a netlist network with 18 inputs and 32 outputs (dfl=2).

4.223.2.1. Executing ABC.
[Time = 0.07 sec.]

4.223.3. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1652$auto$opt_dff.cc:220:make_patterns_logic$444
Extracted 49 gates and 69 wires to a netlist network with 20 inputs and 33 outputs (dfl=2).

4.223.3.1. Executing ABC.
[Time = 0.05 sec.]

4.223.4. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SCL, asynchronously reset by $abc$1718$flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408
Extracted 25 gates and 28 wires to a netlist network with 3 inputs and 15 outputs (dfl=2).

4.223.4.1. Executing ABC.
[Time = 0.05 sec.]

4.223.5. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, asynchronously reset by \Rst
Extracted 24 gates and 31 wires to a netlist network with 7 inputs and 21 outputs (dfl=2).

4.223.5.1. Executing ABC.
[Time = 0.08 sec.]

4.223.6. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1852$auto$opt_dff.cc:220:make_patterns_logic$467
Extracted 19 gates and 32 wires to a netlist network with 13 inputs and 11 outputs (dfl=2).

4.223.6.1. Executing ABC.
[Time = 0.04 sec.]

4.223.7. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk
Extracted 17 gates and 27 wires to a netlist network with 10 inputs and 7 outputs (dfl=2).

4.223.7.1. Executing ABC.
[Time = 0.06 sec.]

4.223.8. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1902$auto$opt_dff.cc:220:make_patterns_logic$479
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 4 outputs (dfl=2).

4.223.8.1. Executing ABC.
[Time = 0.04 sec.]

4.223.9. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \SDA, asynchronously reset by \ModStSp.mod2.ModStart.StLatch.Reset
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 8 outputs (dfl=2).

4.223.9.1. Executing ABC.
[Time = 0.06 sec.]

4.223.10. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1879$auto$opt_dff.cc:220:make_patterns_logic$488
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 2 outputs (dfl=2).

4.223.10.1. Executing ABC.
[Time = 0.05 sec.]

4.223.11. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SDA, asynchronously reset by \ModStSp.mod1.ModStop.SpLatch.Reset
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 6 outputs (dfl=2).

4.223.11.1. Executing ABC.
[Time = 0.05 sec.]

4.223.12. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1912$auto$opt_dff.cc:220:make_patterns_logic$451
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs (dfl=2).

4.223.12.1. Executing ABC.
[Time = 0.07 sec.]

4.223.13. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$2424$lo00, asynchronously reset by $abc$2605$lo0
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs (dfl=2).

4.223.13.1. Executing ABC.
[Time = 0.06 sec.]

4.223.14. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$pmuxtree.cc:65:recursive_mux_generator$547.B_AND_S [4]
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs (dfl=2).

4.223.14.1. Executing ABC.
[Time = 0.05 sec.]

4.224. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.225. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

4.226. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.227. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.228. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.229. Executing OPT_SHARE pass.

4.230. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.231. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 449 unused wires.
<suppressed ~1 debug messages>

4.232. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

4.233. Executing ABC pass (technology mapping using ABC).

4.233.1. Summary of detected clock domains:
  2 cells in clk=\Clk, en=$auto$pmuxtree.cc:65:recursive_mux_generator$547.B_AND_S [4], arst={ }, srst={ }
  3 cells in clk=\ModSerial2Byte.ByteRdy, en={ }, arst=\ModByteWr.RstByteRdy, srst={ }
  7 cells in clk=\Clk, en=$abc$1912$auto$opt_dff.cc:220:make_patterns_logic$451, arst={ }, srst={ }
  8 cells in clk=\SDA, en={ }, arst=\ModStSp.mod1.ModStop.SpLatch.Reset, srst={ }
  8 cells in clk=\Clk, en=$abc$1879$auto$opt_dff.cc:220:make_patterns_logic$488, arst={ }, srst={ }
  10 cells in clk=!\SDA, en={ }, arst=\ModStSp.mod2.ModStart.StLatch.Reset, srst={ }
  10 cells in clk=\Clk, en=$abc$1902$auto$opt_dff.cc:220:make_patterns_logic$479, arst={ }, srst={ }
  15 cells in clk=\Clk, en={ }, arst={ }, srst={ }
  20 cells in clk=\Clk, en=$abc$1852$auto$opt_dff.cc:220:make_patterns_logic$467, arst={ }, srst={ }
  24 cells in clk=\Clk, en={ }, arst=\Rst, srst={ }
  25 cells in clk=\SCL, en={ }, arst=$abc$1718$flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408, srst={ }
  47 cells in clk=\Clk, en=$abc$1652$auto$opt_dff.cc:220:make_patterns_logic$444, arst={ }, srst={ }
  45 cells in clk=\Clk, en=$abc$1567$auto$opt_dff.cc:220:make_patterns_logic$458, arst={ }, srst={ }

  #logic partitions = 13

4.233.2. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1652$auto$opt_dff.cc:220:make_patterns_logic$444
Extracted 47 gates and 67 wires to a netlist network with 20 inputs and 32 outputs (dfl=2).

4.233.2.1. Executing ABC.
[Time = 0.07 sec.]

4.233.3. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1567$auto$opt_dff.cc:220:make_patterns_logic$458
Extracted 45 gates and 63 wires to a netlist network with 18 inputs and 32 outputs (dfl=2).

4.233.3.1. Executing ABC.
[Time = 0.07 sec.]

4.233.4. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SCL, asynchronously reset by $abc$1718$flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408
Extracted 25 gates and 28 wires to a netlist network with 3 inputs and 15 outputs (dfl=2).

4.233.4.1. Executing ABC.
[Time = 0.05 sec.]

4.233.5. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, asynchronously reset by \Rst
Extracted 24 gates and 31 wires to a netlist network with 7 inputs and 21 outputs (dfl=2).

4.233.5.1. Executing ABC.
[Time = 0.07 sec.]

4.233.6. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1852$auto$opt_dff.cc:220:make_patterns_logic$467
Extracted 20 gates and 33 wires to a netlist network with 13 inputs and 12 outputs (dfl=2).

4.233.6.1. Executing ABC.
[Time = 0.05 sec.]

4.233.7. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk
Extracted 15 gates and 23 wires to a netlist network with 8 inputs and 5 outputs (dfl=2).

4.233.7.1. Executing ABC.
[Time = 0.05 sec.]

4.233.8. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \SDA, asynchronously reset by \ModStSp.mod2.ModStart.StLatch.Reset
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 8 outputs (dfl=2).

4.233.8.1. Executing ABC.
[Time = 0.07 sec.]

4.233.9. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1902$auto$opt_dff.cc:220:make_patterns_logic$479
Extracted 10 gates and 17 wires to a netlist network with 7 inputs and 5 outputs (dfl=2).

4.233.9.1. Executing ABC.
[Time = 0.05 sec.]

4.233.10. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SDA, asynchronously reset by \ModStSp.mod1.ModStop.SpLatch.Reset
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 6 outputs (dfl=2).

4.233.10.1. Executing ABC.
[Time = 0.06 sec.]

4.233.11. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1879$auto$opt_dff.cc:220:make_patterns_logic$488
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 2 outputs (dfl=2).

4.233.11.1. Executing ABC.
[Time = 0.05 sec.]

4.233.12. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$1912$auto$opt_dff.cc:220:make_patterns_logic$451
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs (dfl=2).

4.233.12.1. Executing ABC.
[Time = 0.07 sec.]

4.233.13. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$2764$lo00, asynchronously reset by $abc$2939$lo0
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs (dfl=2).

4.233.13.1. Executing ABC.
[Time = 0.05 sec.]

4.233.14. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$pmuxtree.cc:65:recursive_mux_generator$547.B_AND_S [4]
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs (dfl=2).

4.233.14.1. Executing ABC.
[Time = 0.05 sec.]

4.234. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.235. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

4.236. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.237. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.238. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.239. Executing OPT_SHARE pass.

4.240. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.241. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 436 unused wires.
<suppressed ~1 debug messages>

4.242. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1
select with DFL2 synthesis (thresh-logic=0.920000, thresh_dff=0.980000)

4.243. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
   Number of Generic REGs:          73

ABC-DFF iteration : 1

4.244. Executing ABC pass (technology mapping using ABC).

4.244.1. Summary of detected clock domains:
  11 cells in clk=!\SDA, en={ }, arst=\ModStSp.mod2.ModStart.StLatch.Reset, srst={ }
  9 cells in clk=\SDA, en={ }, arst=\ModStSp.mod1.ModStop.SpLatch.Reset, srst={ }
  39 cells in clk=\SCL, en={ }, arst=$flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408, srst={ }
  38 cells in clk=\Clk, en={ }, arst=\Rst, srst={ }
  19 cells in clk=\Clk, en={ }, arst={ }, srst={ }
  8 cells in clk=\Clk, en=$auto$opt_dff.cc:220:make_patterns_logic$479, arst={ }, srst={ }
  8 cells in clk=\Clk, en=$auto$opt_dff.cc:220:make_patterns_logic$451, arst={ }, srst={ }
  49 cells in clk=\Clk, en=$auto$opt_dff.cc:220:make_patterns_logic$444, arst={ }, srst={ }
  5 cells in clk=\ModSerial2Byte.ByteRdy, en={ }, arst=\ModByteWr.RstByteRdy, srst={ }
  10 cells in clk=\Clk, en=$auto$opt_dff.cc:220:make_patterns_logic$467, arst={ }, srst={ }
  54 cells in clk=\Clk, en=$auto$opt_dff.cc:220:make_patterns_logic$458, arst={ }, srst={ }
  10 cells in clk=\Clk, en=$auto$opt_dff.cc:220:make_patterns_logic$488, arst={ }, srst={ }
  1 cells in clk=\Clk, en=$auto$pmuxtree.cc:65:recursive_mux_generator$547.B_AND_S [4], arst={ }, srst={ }

  #logic partitions = 13

4.244.2. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$458
Extracted 54 gates and 73 wires to a netlist network with 19 inputs and 33 outputs (dfl=1).

4.244.2.1. Executing ABC.
[Time = 0.05 sec.]

4.244.3. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$444
Extracted 49 gates and 71 wires to a netlist network with 21 inputs and 33 outputs (dfl=1).

4.244.3.1. Executing ABC.
[Time = 0.06 sec.]

4.244.4. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SCL, asynchronously reset by $flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408
Extracted 39 gates and 44 wires to a netlist network with 4 inputs and 23 outputs (dfl=1).

4.244.4.1. Executing ABC.
[Time = 0.07 sec.]

4.244.5. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, asynchronously reset by \Rst
Extracted 38 gates and 47 wires to a netlist network with 9 inputs and 21 outputs (dfl=1).

4.244.5.1. Executing ABC.
[Time = 0.06 sec.]

4.244.6. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk
Extracted 19 gates and 31 wires to a netlist network with 11 inputs and 7 outputs (dfl=1).

4.244.6.1. Executing ABC.
[Time = 0.07 sec.]

4.244.7. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \SDA, asynchronously reset by \ModStSp.mod2.ModStart.StLatch.Reset
Extracted 10 gates and 19 wires to a netlist network with 8 inputs and 9 outputs (dfl=1).

4.244.7.1. Executing ABC.
[Time = 0.06 sec.]

4.244.8. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$467
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 10 outputs (dfl=1).

4.244.8.1. Executing ABC.
[Time = 0.05 sec.]

4.244.9. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$488
Extracted 10 gates and 18 wires to a netlist network with 7 inputs and 3 outputs (dfl=1).

4.244.9.1. Executing ABC.
[Time = 0.06 sec.]

4.244.10. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SDA, asynchronously reset by \ModStSp.mod1.ModStop.SpLatch.Reset
Extracted 8 gates and 14 wires to a netlist network with 6 inputs and 7 outputs (dfl=1).

4.244.10.1. Executing ABC.
[Time = 0.05 sec.]

4.244.11. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$479
Extracted 8 gates and 15 wires to a netlist network with 6 inputs and 3 outputs (dfl=1).

4.244.11.1. Executing ABC.
[Time = 0.06 sec.]

4.244.12. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$451
Extracted 8 gates and 15 wires to a netlist network with 6 inputs and 4 outputs (dfl=1).

4.244.12.1. Executing ABC.
[Time = 0.06 sec.]

4.244.13. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$3110$lo00, asynchronously reset by $abc$3304$lo0
Extracted 5 gates and 7 wires to a netlist network with 1 inputs and 5 outputs (dfl=1).

4.244.13.1. Executing ABC.
[Time = 0.04 sec.]

4.244.14. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, enabled by $abc$3314$auto$pmuxtree.cc:65:recursive_mux_generator$547.B_AND_S[4]
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs (dfl=1).

4.244.14.1. Executing ABC.
[Time = 0.04 sec.]

4.245. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=73, #solve=0, #remove=0, time=0.00 sec.]

4.246. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.
<suppressed ~1 debug messages>

4.247. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 414 unused wires.
<suppressed ~4 debug messages>

4.248. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $abc$3271$auto$blifparse.cc:377:parse_blif$3273 ($_DFFE_PP_) from module I2CLog.
[#visit=73, #solve=0, #remove=1, time=0.00 sec.]

4.249. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.250. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.251. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.252. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.253. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.254. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 2

4.255. Executing ABC pass (technology mapping using ABC).

4.255.1. Summary of detected clock domains:
  4 cells in clk=\ModSerial2Byte.ByteRdy, en={ }, arst=\ModByteWr.RstByteRdy, srst={ }
  9 cells in clk=\SDA, en={ }, arst=\ModStSp.mod1.ModStop.SpLatch.Reset, srst={ }
  11 cells in clk=!\SDA, en={ }, arst=\ModStSp.mod2.ModStart.StLatch.Reset, srst={ }
  28 cells in clk=\Clk, en={ }, arst=\Rst, srst={ }
  34 cells in clk=\SCL, en={ }, arst=$abc$3110$flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408, srst={ }
  199 cells in clk=\Clk, en={ }, arst={ }, srst={ }

  #logic partitions = 6

4.255.2. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk
Extracted 199 gates and 219 wires to a netlist network with 20 inputs and 45 outputs (dfl=1).

4.255.2.1. Executing ABC.
[Time = 0.10 sec.]

4.255.3. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SCL, asynchronously reset by $abc$3110$flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408
Extracted 34 gates and 40 wires to a netlist network with 6 inputs and 24 outputs (dfl=1).

4.255.3.1. Executing ABC.
[Time = 0.07 sec.]

4.255.4. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, asynchronously reset by \Rst
Extracted 28 gates and 35 wires to a netlist network with 7 inputs and 21 outputs (dfl=1).

4.255.4.1. Executing ABC.
[Time = 0.06 sec.]

4.255.5. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \SDA, asynchronously reset by \ModStSp.mod2.ModStart.StLatch.Reset
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 8 outputs (dfl=1).

4.255.5.1. Executing ABC.
[Time = 0.06 sec.]

4.255.6. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SDA, asynchronously reset by \ModStSp.mod1.ModStop.SpLatch.Reset
Extracted 8 gates and 14 wires to a netlist network with 6 inputs and 6 outputs (dfl=1).

4.255.6.1. Executing ABC.
[Time = 0.04 sec.]

4.255.7. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$3638$lo00, asynchronously reset by $abc$3410$lo01
Extracted 4 gates and 6 wires to a netlist network with 1 inputs and 4 outputs (dfl=1).

4.255.7.1. Executing ABC.
[Time = 0.04 sec.]

4.256. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.257. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.258. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 401 unused wires.
<suppressed ~1 debug messages>

4.259. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.260. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.261. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.262. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3452 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n329_, Q = \Current_addr [1]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3451 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n327_, Q = \Current_addr [2]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3450 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n325_, Q = \Current_addr [3]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3449 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n323_, Q = \Current_addr [4]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3448 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n321_, Q = \Current_addr [5]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3447 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n319_, Q = \Current_addr [6]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3446 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n317_, Q = \Current_addr [7]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3445 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n315_, Q = \Current_addr [8]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3444 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n313_, Q = \Current_addr [9]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3443 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n311_, Q = \Current_addr [10]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3442 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n309_, Q = \Current_addr [11]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3441 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n307_, Q = \Current_addr [12]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3440 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n305_, Q = \Current_addr [13]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3439 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n303_, Q = \Current_addr [14]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3438 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n301_, Q = \Current_addr [0]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3437 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n298_, Q = \ModByteWr.Next_addr [0]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3436 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n296_, Q = \ModByteWr.Next_addr [1]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3435 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n293_, Q = \ModByteWr.Next_addr [2]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3434 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n290_, Q = \ModByteWr.Next_addr [3]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3433 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n286_, Q = \ModByteWr.Next_addr [4]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3432 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n283_, Q = \ModByteWr.Next_addr [5]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3431 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n279_, Q = \ModByteWr.Next_addr [6]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3430 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n276_, Q = \ModByteWr.Next_addr [7]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3429 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n271_, Q = \ModByteWr.Next_addr [8]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3428 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n268_, Q = \ModByteWr.Next_addr [9]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3427 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n264_, Q = \ModByteWr.Next_addr [10]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3426 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n261_, Q = \ModByteWr.Next_addr [11]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3425 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n256_, Q = \ModByteWr.Next_addr [12]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3424 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n253_, Q = \ModByteWr.Next_addr [13]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3423 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n249_, Q = \ModByteWr.Next_addr [14]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3422 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[0], Q = \Dout [0]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3421 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[1], Q = \Dout [1]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3420 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[2], Q = \Dout [2]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3419 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[3], Q = \Dout [3]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3418 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[4], Q = \Dout [4]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3417 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[5], Q = \Dout [5]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3416 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[6], Q = \Dout [6]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3415 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[7], Q = \Dout [7]).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3414 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n222_, Q = \Ce).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3413 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n216_, Q = \We).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3412 ($_DFF_P_) from module I2CLog (D = $abc$3410$new_n211_, Q = \ModByteWr.RstByteRdy).
Adding EN signal on $abc$3410$auto$blifparse.cc:377:parse_blif$3411 ($_DFF_P_) from module I2CLog (D = \ModSerial2Byte.Byte [0], Q = \ACK).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.263. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.264. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 42 unused cells and 42 unused wires.
<suppressed ~43 debug messages>

4.265. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 3

4.266. Executing ABC pass (technology mapping using ABC).

4.266.1. Summary of detected clock domains:
  4 cells in clk=\ModSerial2Byte.ByteRdy, en={ }, arst=\ModByteWr.RstByteRdy, srst={ }
  8 cells in clk=\SDA, en={ }, arst=\ModStSp.mod1.ModStop.SpLatch.Reset, srst={ }
  10 cells in clk=!\SDA, en={ }, arst=\ModStSp.mod2.ModStart.StLatch.Reset, srst={ }
  26 cells in clk=\Clk, en={ }, arst=\Rst, srst={ }
  34 cells in clk=\SCL, en={ }, arst=$abc$3110$flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408, srst={ }
  181 cells in clk=\Clk, en={ }, arst={ }, srst={ }

  #logic partitions = 6

4.266.2. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk
Extracted 181 gates and 201 wires to a netlist network with 20 inputs and 45 outputs (dfl=2).

4.266.2.1. Executing ABC.
[Time = 0.11 sec.]

4.266.3. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SCL, asynchronously reset by $abc$3110$flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408
Extracted 34 gates and 40 wires to a netlist network with 6 inputs and 24 outputs (dfl=2).

4.266.3.1. Executing ABC.
[Time = 0.08 sec.]

4.266.4. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, asynchronously reset by \Rst
Extracted 26 gates and 33 wires to a netlist network with 7 inputs and 21 outputs (dfl=2).

4.266.4.1. Executing ABC.
[Time = 0.07 sec.]

4.266.5. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \SDA, asynchronously reset by \ModStSp.mod2.ModStart.StLatch.Reset
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 8 outputs (dfl=2).

4.266.5.1. Executing ABC.
[Time = 0.06 sec.]

4.266.6. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SDA, asynchronously reset by \ModStSp.mod1.ModStop.SpLatch.Reset
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 6 outputs (dfl=2).

4.266.6.1. Executing ABC.
[Time = 0.05 sec.]

4.266.7. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$4157$lo00, asynchronously reset by $abc$3889$lo01
Extracted 4 gates and 6 wires to a netlist network with 1 inputs and 4 outputs (dfl=2).

4.266.7.1. Executing ABC.
[Time = 0.05 sec.]

4.267. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.268. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.
<suppressed ~1 debug messages>

4.269. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 395 unused wires.
<suppressed ~1 debug messages>

4.270. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.271. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.272. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.273. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$3889$auto$blifparse.cc:377:parse_blif$3931 ($_DFF_P_) from module I2CLog (D = \ModSerial2Byte.Byte [0], Q = \ACK).
Adding EN signal on $abc$3889$auto$blifparse.cc:377:parse_blif$3930 ($_DFF_P_) from module I2CLog (D = $abc$3889$new_n213_, Q = \Ce).
Adding EN signal on $abc$3889$auto$blifparse.cc:377:parse_blif$3914 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[0], Q = \Dout [0]).
Adding EN signal on $abc$3889$auto$blifparse.cc:377:parse_blif$3913 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[1], Q = \Dout [1]).
Adding EN signal on $abc$3889$auto$blifparse.cc:377:parse_blif$3912 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[2], Q = \Dout [2]).
Adding EN signal on $abc$3889$auto$blifparse.cc:377:parse_blif$3911 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[3], Q = \Dout [3]).
Adding EN signal on $abc$3889$auto$blifparse.cc:377:parse_blif$3910 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[4], Q = \Dout [4]).
Adding EN signal on $abc$3889$auto$blifparse.cc:377:parse_blif$3909 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[5], Q = \Dout [5]).
Adding EN signal on $abc$3889$auto$blifparse.cc:377:parse_blif$3908 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[6], Q = \Dout [6]).
Adding EN signal on $abc$3889$auto$blifparse.cc:377:parse_blif$3907 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[7], Q = \Dout [7]).
Adding EN signal on $abc$3889$auto$blifparse.cc:377:parse_blif$3891 ($_DFF_P_) from module I2CLog (D = $abc$3889$new_n223_, Q = \ModByteWr.RstByteRdy).
Adding EN signal on $abc$3889$auto$blifparse.cc:377:parse_blif$3890 ($_DFF_P_) from module I2CLog (D = $abc$3889$new_n205_, Q = \We).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.274. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.275. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 12 unused cells and 12 unused wires.
<suppressed ~13 debug messages>

4.276. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 4

4.277. Executing ABC pass (technology mapping using ABC).

4.277.1. Summary of detected clock domains:
  4 cells in clk=\ModSerial2Byte.ByteRdy, en={ }, arst=\ModByteWr.RstByteRdy, srst={ }
  8 cells in clk=\SDA, en={ }, arst=\ModStSp.mod1.ModStop.SpLatch.Reset, srst={ }
  10 cells in clk=!\SDA, en={ }, arst=\ModStSp.mod2.ModStart.StLatch.Reset, srst={ }
  28 cells in clk=\Clk, en={ }, arst=\Rst, srst={ }
  34 cells in clk=\SCL, en={ }, arst=$abc$3110$flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408, srst={ }
  219 cells in clk=\Clk, en={ }, arst={ }, srst={ }

  #logic partitions = 6

4.277.2. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk
Extracted 219 gates and 239 wires to a netlist network with 20 inputs and 45 outputs (dfl=2).

4.277.2.1. Executing ABC.
[Time = 0.13 sec.]

4.277.3. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SCL, asynchronously reset by $abc$3110$flatten\ModSerial2Byte.$auto$proc_dff.cc:270:proc_dff$408
Extracted 34 gates and 40 wires to a netlist network with 6 inputs and 24 outputs (dfl=2).

4.277.3.1. Executing ABC.
[Time = 0.08 sec.]

4.277.4. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clk, asynchronously reset by \Rst
Extracted 28 gates and 35 wires to a netlist network with 7 inputs and 21 outputs (dfl=2).

4.277.4.1. Executing ABC.
[Time = 0.07 sec.]

4.277.5. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \SDA, asynchronously reset by \ModStSp.mod2.ModStart.StLatch.Reset
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 8 outputs (dfl=2).

4.277.5.1. Executing ABC.
[Time = 0.07 sec.]

4.277.6. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \SDA, asynchronously reset by \ModStSp.mod1.ModStop.SpLatch.Reset
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 6 outputs (dfl=2).

4.277.6.1. Executing ABC.
[Time = 0.05 sec.]

4.277.7. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$4583$lo00, asynchronously reset by $abc$4318$lo01
Extracted 4 gates and 6 wires to a netlist network with 1 inputs and 4 outputs (dfl=2).

4.277.7.1. Executing ABC.
[Time = 0.06 sec.]

4.278. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.279. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.
<suppressed ~1 debug messages>

4.280. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 436 unused wires.
<suppressed ~1 debug messages>

4.281. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.282. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.283. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.284. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$4318$auto$blifparse.cc:377:parse_blif$4330 ($_DFF_P_) from module I2CLog (D = \ModSerial2Byte.Byte [0], Q = \ACK).
Adding EN signal on $abc$4318$auto$blifparse.cc:377:parse_blif$4329 ($_DFF_P_) from module I2CLog (D = $abc$4318$new_n235_, Q = \Ce).
Adding EN signal on $abc$4318$auto$blifparse.cc:377:parse_blif$4328 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[0], Q = \Dout [0]).
Adding EN signal on $abc$4318$auto$blifparse.cc:377:parse_blif$4327 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[1], Q = \Dout [1]).
Adding EN signal on $abc$4318$auto$blifparse.cc:377:parse_blif$4326 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[2], Q = \Dout [2]).
Adding EN signal on $abc$4318$auto$blifparse.cc:377:parse_blif$4325 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[3], Q = \Dout [3]).
Adding EN signal on $abc$4318$auto$blifparse.cc:377:parse_blif$4324 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[4], Q = \Dout [4]).
Adding EN signal on $abc$4318$auto$blifparse.cc:377:parse_blif$4323 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[5], Q = \Dout [5]).
Adding EN signal on $abc$4318$auto$blifparse.cc:377:parse_blif$4322 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[6], Q = \Dout [6]).
Adding EN signal on $abc$4318$auto$blifparse.cc:377:parse_blif$4321 ($_DFF_P_) from module I2CLog (D = $abc$3110$auto$rtlil.cc:2613:Mux$558[7], Q = \Dout [7]).
Adding EN signal on $abc$4318$auto$blifparse.cc:377:parse_blif$4320 ($_DFF_P_) from module I2CLog (D = $abc$4318$new_n222_, Q = \ModByteWr.RstByteRdy).
Adding EN signal on $abc$4318$auto$blifparse.cc:377:parse_blif$4319 ($_DFF_P_) from module I2CLog (D = $abc$4318$new_n215_, Q = \We).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.285. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.286. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 12 unused cells and 12 unused wires.
<suppressed ~13 debug messages>

4.287. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).
select with DFL1 synthesis (thresh_logic=0.920000, thresh_dff=0.980000)

4.288. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
select CE keep strategy (thresh_logic=0.920000, thresh_dff=0.980000, dfl=2)

4.289. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.290. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.291. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.292. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.293. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.294. Executing OPT_SHARE pass.

4.295. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.296. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.297. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

4.298. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.299. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.300. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.301. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.302. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.303. Executing OPT_SHARE pass.

4.304. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.305. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.306. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

4.307. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.308. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.309. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.310. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.311. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.312. Executing OPT_SHARE pass.

4.313. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.314. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=21, #remove=0, time=0.00 sec.]

4.315. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.316. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

4.317. Executing BMUXMAP pass.

4.318. Executing DEMUXMAP pass.

4.319. Executing SPLITNETS pass (splitting up multi-bit signals).

4.320. Executing ABC pass (technology mapping using ABC).

4.320.1. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Extracted 146 gates and 202 wires to a netlist network with 56 inputs and 67 outputs (dfl=1).

4.320.1.1. Executing ABC.
DE:   Version : 7.7
DE:   #PIs =  56  #Luts =    72  Max Lvl =   3  Avg Lvl =   1.25  [   0.08 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  56  #Luts =    73  Max Lvl =   2  Avg Lvl =   1.18  [   0.13 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  56  #Luts =    72  Max Lvl =   2  Avg Lvl =   1.18  [   0.15 sec. at Pass 2]{map}[6]
DE:   #PIs =  56  #Luts =    72  Max Lvl =   2  Avg Lvl =   1.18  [   0.19 sec. at Pass 3]{postMap}[12]
DE:   #PIs =  56  #Luts =    72  Max Lvl =   2  Avg Lvl =   1.18  [   0.16 sec. at Pass 4]{map}[16]
DE:   #PIs =  56  #Luts =    72  Max Lvl =   2  Avg Lvl =   1.18  [   0.19 sec. at Pass 5]{postMap}[16]
DE:   #PIs =  56  #Luts =    72  Max Lvl =   2  Avg Lvl =   1.18  [   0.18 sec. at Pass 6]{pushMap}[16]
DE:   #PIs =  56  #Luts =    72  Max Lvl =   2  Avg Lvl =   1.18  [   0.17 sec. at Pass 7]{pushMap}[16]
DE:   #PIs =  56  #Luts =    72  Max Lvl =   2  Avg Lvl =   1.18  [   0.19 sec. at Pass 7]{pushMap}[16]
DE:   #PIs =  56  #Luts =    72  Max Lvl =   2  Avg Lvl =   1.18  [   0.15 sec. at Pass 8]{finalMap}[16]
DE:   
DE:   total time =    1.62 sec.
[Time = 3.68 sec.]

4.321. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.322. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.323. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.324. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.325. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.326. Executing OPT_SHARE pass.

4.327. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.328. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 191 unused wires.
<suppressed ~5 debug messages>

4.329. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

4.330. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

4.331. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.332. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.333. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.334. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.335. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.336. Executing OPT_SHARE pass.

4.337. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.338. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.339. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

4.340. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.341. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.342. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.343. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.344. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.345. Executing OPT_SHARE pass.

4.346. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=0, #remove=0, time=0.00 sec.]

4.347. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=72, #solve=21, #remove=0, time=0.00 sec.]

4.348. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.349. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

4.350. Printing statistics.

=== I2CLog ===

   Number of wires:                156
   Number of wire bits:            256
   Number of public wires:          87
   Number of public wire bits:     180
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                143
     $_DFFE_PP_                     42
     $_DFF_NP0_                      1
     $_DFF_PP0_                     24
     $_DFF_P_                        3
     $_DLATCH_N_                     2
     $lut                           71

4.351. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.352. Executing RS_DFFSR_CONV pass.

4.353. Printing statistics.

=== I2CLog ===

   Number of wires:                156
   Number of wire bits:            256
   Number of public wires:          87
   Number of public wire bits:     180
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                143
     $_DFFE_PP0P_                   42
     $_DFF_NP0_                      1
     $_DFF_PP0_                     24
     $_DFF_P_                        3
     $_DLATCH_N_                     2
     $lut                           71

4.354. Executing TECHMAP pass (map to technology primitives).

4.354.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.354.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

4.354.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~332 debug messages>

4.355. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.
<suppressed ~965 debug messages>

4.356. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.357. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.358. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
<suppressed ~339 debug messages>
Removed a total of 113 cells.

4.359. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.360. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 558 unused wires.
<suppressed ~1 debug messages>

4.361. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.
<suppressed ~2 debug messages>

4.362. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.363. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.364. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.365. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.366. Executing OPT_SHARE pass.

4.367. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.368. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..

4.369. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

4.370. Executing TECHMAP pass (map to technology primitives).

4.370.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.370.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

4.371. Executing ABC pass (technology mapping using ABC).

4.371.1. Extracting gate netlist of module `\I2CLog' to `<abc-temp-dir>/input.blif'..
Extracted 200 gates and 259 wires to a netlist network with 57 inputs and 68 outputs (dfl=1).

4.371.1.1. Executing ABC.
DE:   Version : 7.7
DE:   #PIs =  57  #Luts =    73  Max Lvl =   2  Avg Lvl =   1.15  [   0.07 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  57  #Luts =    73  Max Lvl =   2  Avg Lvl =   1.15  [   0.11 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  57  #Luts =    73  Max Lvl =   2  Avg Lvl =   1.15  [   0.11 sec. at Pass 2]{map}[6]
DE:   #PIs =  57  #Luts =    73  Max Lvl =   2  Avg Lvl =   1.15  [   0.17 sec. at Pass 3]{postMap}[12]
DE:   #PIs =  57  #Luts =    73  Max Lvl =   2  Avg Lvl =   1.15  [   0.17 sec. at Pass 4]{map}[16]
DE:   #PIs =  57  #Luts =    73  Max Lvl =   2  Avg Lvl =   1.15  [   0.19 sec. at Pass 5]{postMap}[16]
DE:   #PIs =  57  #Luts =    73  Max Lvl =   2  Avg Lvl =   1.15  [   0.19 sec. at Pass 6]{pushMap}[16]
DE:   #PIs =  57  #Luts =    73  Max Lvl =   2  Avg Lvl =   1.15  [   0.16 sec. at Pass 7]{pushMap}[16]
DE:   #PIs =  57  #Luts =    73  Max Lvl =   2  Avg Lvl =   1.15  [   0.18 sec. at Pass 7]{pushMap}[16]
DE:   #PIs =  57  #Luts =    73  Max Lvl =   2  Avg Lvl =   1.15  [   0.16 sec. at Pass 8]{finalMap}[16]
DE:   
DE:   total time =    1.53 sec.
[Time = 3.59 sec.]

4.372. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

4.373. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.374. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \I2CLog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.375. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \I2CLog.
Performed a total of 0 changes.

4.376. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\I2CLog'.
Removed a total of 0 cells.

4.377. Executing OPT_SHARE pass.

4.378. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.379. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 235 unused wires.
<suppressed ~7 debug messages>

4.380. Executing OPT_EXPR pass (perform const folding).
Optimizing module I2CLog.

RUN-OPT ITERATIONS DONE : 1

4.381. Executing HIERARCHY pass (managing design hierarchy).

4.381.1. Analyzing design hierarchy..
Top module:  \I2CLog

4.381.2. Analyzing design hierarchy..
Top module:  \I2CLog
Removed 0 unused modules.

4.382. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 43 unused wires.
<suppressed ~43 debug messages>

4.383. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__IO_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.384. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Replacing existing blackbox module `\BOOT_CLOCK' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:9.1-14.10.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:24.1-31.10.
Generating RTLIL representation for module `\CARRY'.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:41.1-46.10.
Generating RTLIL representation for module `\CLK_BUF'.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:56.1-64.10.
Generating RTLIL representation for module `\DFFNRE'.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:74.1-82.10.
Generating RTLIL representation for module `\DFFRE'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:92.1-126.10.
Generating RTLIL representation for module `\DSP19X2'.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:136.1-162.10.
Generating RTLIL representation for module `\DSP38'.
Replacing existing blackbox module `\FIFO18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:172.1-219.10.
Generating RTLIL representation for module `\FIFO18KX2'.
Replacing existing blackbox module `\FIFO36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:229.1-254.10.
Generating RTLIL representation for module `\FIFO36K'.
Replacing existing blackbox module `\I_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:264.1-276.10.
Generating RTLIL representation for module `\I_BUF_DS'.
Replacing existing blackbox module `\I_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:286.1-297.10.
Generating RTLIL representation for module `\I_BUF'.
Replacing existing blackbox module `\I_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:307.1-315.10.
Generating RTLIL representation for module `\I_DDR'.
Replacing existing blackbox module `\I_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:325.1-337.10.
Generating RTLIL representation for module `\I_DELAY'.
Replacing existing blackbox module `\I_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:347.1-366.10.
Generating RTLIL representation for module `\I_SERDES'.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:376.1-382.10.
Generating RTLIL representation for module `\LUT1'.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:392.1-398.10.
Generating RTLIL representation for module `\LUT2'.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:408.1-414.10.
Generating RTLIL representation for module `\LUT3'.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:424.1-430.10.
Generating RTLIL representation for module `\LUT4'.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:440.1-446.10.
Generating RTLIL representation for module `\LUT5'.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:456.1-462.10.
Generating RTLIL representation for module `\LUT6'.
Replacing existing blackbox module `\O_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:472.1-486.10.
Generating RTLIL representation for module `\O_BUF_DS'.
Replacing existing blackbox module `\O_BUFT_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:496.1-510.10.
Generating RTLIL representation for module `\O_BUFT_DS'.
Replacing existing blackbox module `\O_BUFT' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:520.1-533.10.
Generating RTLIL representation for module `\O_BUFT'.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:543.1-556.10.
Generating RTLIL representation for module `\O_BUF'.
Replacing existing blackbox module `\O_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:566.1-574.10.
Generating RTLIL representation for module `\O_DDR'.
Replacing existing blackbox module `\O_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:584.1-596.10.
Generating RTLIL representation for module `\O_DELAY'.
Replacing existing blackbox module `\O_SERDES_CLK' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:606.1-615.10.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Replacing existing blackbox module `\O_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:625.1-642.10.
Generating RTLIL representation for module `\O_SERDES'.
Replacing existing blackbox module `\PLL' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:652.1-667.10.
Generating RTLIL representation for module `\PLL'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_M' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:677.1-691.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_S' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:701.1-718.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M0' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:728.1-767.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M1' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:777.1-816.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Replacing existing blackbox module `\SOC_FPGA_INTF_DMA' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:826.1-832.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Replacing existing blackbox module `\SOC_FPGA_INTF_IRQ' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:842.1-848.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Replacing existing blackbox module `\SOC_FPGA_INTF_JTAG' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:858.1-866.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Replacing existing blackbox module `\SOC_FPGA_TEMPERATURE' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:876.1-884.10.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:894.1-947.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:957.1-986.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1003.1-1008.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1016.1-1021.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1030.1-1036.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1044.1-1050.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1059.1-1065.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1074.1-1080.10.
Generating RTLIL representation for module `\LATCHNS'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1085.1-1135.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1140.1-1174.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1179.1-1225.12.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.385. Executing CLKBUFMAP pass (inserting clock buffers).
Inserting rs__CLK_BUF on I2CLog.Clk[0].
Inserting rs__CLK_BUF on I2CLog.ModSerial2Byte.ByteRdy[0].
Inserting rs__CLK_BUF on I2CLog.SCL[0].
Inserting rs__CLK_BUF on I2CLog.SDA[0].

4.386. Executing TECHMAP pass (map to technology primitives).

4.386.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.386.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~10 debug messages>

4.387. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

4.388. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port I2CLog.ACK using rs__O_BUF.
Mapping port I2CLog.Ce using rs__O_BUF.
Mapping port I2CLog.Clk using rs__I_BUF.
Mapping port I2CLog.Current_addr using rs__O_BUF.
Mapping port I2CLog.Dout using rs__O_BUF.
Mapping port I2CLog.Oe using rs__O_BUF.
Mapping port I2CLog.Rst using rs__I_BUF.
Mapping port I2CLog.SCL using rs__I_BUF.
Mapping port I2CLog.SDA using rs__I_BUF.
Mapping port I2CLog.We using rs__O_BUF.

4.389. Executing TECHMAP pass (map to technology primitives).

4.389.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.389.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~37 debug messages>

4.390. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 99 unused wires.
<suppressed ~1 debug messages>

4.391. Executing SPLITNETS pass (splitting up multi-bit signals).

4.392. Printing statistics.

=== I2CLog ===

   Number of wires:                117
   Number of wire bits:            199
   Number of public wires:          38
   Number of public wire bits:     113
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                180
     $lut                           73
     CLK_BUF                         4
     DFFNRE                          1
     DFFRE                          69
     I_BUF                           4
     LATCHN                          2
     O_BUF                          27

4.393. Executing TECHMAP pass (map to technology primitives).

4.393.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.393.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~479 debug messages>

4.394. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \I2CLog..
Removed 0 unused cells and 146 unused wires.
<suppressed ~1 debug messages>

4.395. Executing SPLITNETS pass (splitting up multi-bit signals).

4.396. Executing HIERARCHY pass (managing design hierarchy).

4.396.1. Analyzing design hierarchy..
Top module:  \I2CLog

4.396.2. Analyzing design hierarchy..
Top module:  \I2CLog
Removed 0 unused modules.

Dumping port properties into 'netlist_info.json' file.

4.397. Printing statistics.

=== I2CLog ===

   Number of wires:                117
   Number of wire bits:            199
   Number of public wires:          38
   Number of public wire bits:     113
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                180
     CLK_BUF                         4
     DFFNRE                          1
     DFFRE                          69
     I_BUF                           4
     LATCHN                          2
     LUT1                            2
     LUT2                           12
     LUT3                           10
     LUT4                           34
     LUT5                            8
     LUT6                            7
     O_BUF                          27

   Number of LUTs:                  73
   Number of REGs:                  70
   Number of CARRY ADDERs:           0

5. Executing Verilog backend.
Dumping module `\I2CLog'.

5.1. Executing BLIF backend.

-- Running command `write_rtlil design.rtlil' --

5.2. Executing RTLIL backend.
Output filename: design.rtlil

5.3. Executing SPLITNETS pass (splitting up multi-bit signals).
Removed 0 unused cells and 7 unused wires.

5.4. Executing FLATTEN pass (flatten design).
Deleting now unused module interface_I2CLog.
<suppressed ~1 debug messages>

5.5. Executing Verilog backend.
Dumping module `\I2CLog'.

5.5.1. Executing BLIF backend.

5.5.2. Executing Verilog backend.
Dumping module `\I2CLog'.

5.5.2.1. Executing BLIF backend.

5.5.2.2. Executing Verilog backend.
Dumping module `\fabric_I2CLog'.

5.5.2.2.1. Executing BLIF backend.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: 79d1b5ac04, CPU: user 1.91s system 0.26s, MEM: 31.95 MB peak
Yosys 0.38 (git sha1 a0cd5d1bb, gcc 11.2.1 -fPIC -Os)
Time spent: 95% 10x abc (38 sec), 1% 70x opt_expr (0 sec), ...
