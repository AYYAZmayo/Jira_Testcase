/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.06
Build    : 1.1.1
Hash     : 9567da9
Date     : Jun  6 2024
Type     : Engineering
Log Time   : Thu Jun  6 10:07:24 2024 GMT
/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.06
Build    : 1.1.1
Hash     : 9567da9
Date     : Jun  6 2024
Type     : Engineering
Log Time   : Thu Jun  6 10:07:10 2024 GMT
/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.06
Build    : 1.1.1
Hash     : 9567da9
Date     : Jun  6 2024
Type     : Engineering
Log Time   : Thu Jun  6 10:07:10 2024 GMT

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 a0cd5d1bb, gcc 11.2.1 -fPIC -Os)


-- Executing script file `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/i2clog/run_1/synth_1_1/analysis/i2clog_analyzer.cmd' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/06_06_2024_09_15_02/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v' to AST representation.
Generating RTLIL representation for module `\I2CLog'.
Generating RTLIL representation for module `\StartTrigger'.
Generating RTLIL representation for module `\StopTrigger'.
Generating RTLIL representation for module `\DlatchNeg'.
Generating RTLIL representation for module `\DlatchPos'.
Generating RTLIL representation for module `\I2CStart'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:98.1-122.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\I2CStop'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:146.1-170.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\I2C'.
Generating RTLIL representation for module `\Serial2Byte'.
Generating RTLIL representation for module `\ByteWr2Ram'.
/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:255: Warning: Identifier `\ByteRdyOut' is implicitly declared.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\RWCtrl'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/i2clog/results_dir/.././rtl/I2C_TrafficLogger.v:370.1-396.10 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

-- Running command `hierarchy -top I2CLog' --

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \I2CLog
Used module:     \RWCtrl
Used module:     \ByteWr2Ram
Used module:         \DFF
Used module:     \Serial2Byte
Used module:     \I2C
Used module:         \I2CStart
Used module:             \StartTrigger
Used module:                 \DlatchNeg
Used module:         \I2CStop
Used module:             \StopTrigger
Used module:                 \DlatchPos

3.2. Analyzing design hierarchy..
Top module:  \I2CLog
Used module:     \RWCtrl
Used module:     \ByteWr2Ram
Used module:         \DFF
Used module:     \Serial2Byte
Used module:     \I2C
Used module:         \I2CStart
Used module:             \StartTrigger
Used module:                 \DlatchNeg
Used module:         \I2CStop
Used module:             \StopTrigger
Used module:                 \DlatchPos
Removed 0 unused modules.
Mapping positional arguments of cell ByteWr2Ram.Mod1 (DFF).
Mapping positional arguments of cell I2C.mod2 (I2CStart).
Mapping positional arguments of cell I2C.mod1 (I2CStop).
Mapping positional arguments of cell I2CStop.ModStop (StopTrigger).
Mapping positional arguments of cell I2CStart.ModStart (StartTrigger).
Mapping positional arguments of cell StopTrigger.SpLatch (DlatchPos).
Mapping positional arguments of cell StartTrigger.StLatch (DlatchNeg).
Mapping positional arguments of cell I2CLog.ModRW (RWCtrl).
Mapping positional arguments of cell I2CLog.ModByteWr (ByteWr2Ram).
Mapping positional arguments of cell I2CLog.ModSerial2Byte (Serial2Byte).
Mapping positional arguments of cell I2CLog.ModStSp (I2C).

Dumping file hier_info.json ...
 Process module "ByteWr2Ram"
 Process module "DFF"
 Process module "DlatchNeg"
 Process module "DlatchPos"
 Process module "I2C"
 Process module "I2CStart"
 Process module "I2CStop"
 Process module "RWCtrl"
 Process module "Serial2Byte"
 Process module "StartTrigger"
 Process module "StopTrigger"
Dumping file port_info.json ...

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 142c9d5c52, CPU: user 0.04s system 0.01s, MEM: 15.85 MB peak
Yosys 0.38 (git sha1 a0cd5d1bb, gcc 11.2.1 -fPIC -Os)
Time spent: 93% 4x read_verilog (0 sec), 4% 1x analyze (0 sec), ...
