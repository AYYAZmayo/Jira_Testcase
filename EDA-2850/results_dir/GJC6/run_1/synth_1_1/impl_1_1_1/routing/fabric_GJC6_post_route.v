//Verilog generated by VPR  from post-place-and-route implementation
module fabric_GJC6 (
    input \$auto$clkbufmap.cc:298:execute$445 ,
    input \$iopadmap$din ,
    input \$iopadmap$oe ,
    output \$iopadmap$tristate_out ,
    output \$auto$rs_design_edit.cc:841:execute$452 ,
    output \$auto$rs_design_edit.cc:841:execute$453 ,
    output \$auto$rs_design_edit.cc:841:execute$454 
);

    //Wires
    wire \$auto$clkbufmap.cc:298:execute$445_output_0_0 ;
    wire \$iopadmap$din_output_0_0 ;
    wire \$iopadmap$oe_output_0_0 ;
    wire \lut_$auto$rs_design_edit.cc:841:execute$452_output_0_0 ;
    wire \lut_$auto$rs_design_edit.cc:841:execute$453_output_0_0 ;
    wire \lut_$auto$rs_design_edit.cc:841:execute$454_output_0_0 ;
    wire \lut_$iopadmap$tristate_out_output_0_0 ;
    wire \lut_$true_output_0_0 ;
    wire \dffre_q1_output_0_0 ;
    wire \dffre_q2_output_0_0 ;
    wire \dffre_q1_clock_0_0 ;
    wire \dffre_q2_clock_0_0 ;
    wire \dffre_q1_input_0_0 ;
    wire \lut_$iopadmap$tristate_out_input_0_0 ;
    wire \$auto$rs_design_edit.cc:841:execute$452_input_0_0 ;
    wire \$auto$rs_design_edit.cc:841:execute$453_input_0_0 ;
    wire \$auto$rs_design_edit.cc:841:execute$454_input_0_0 ;
    wire \$iopadmap$tristate_out_input_0_0 ;
    wire \lut_$auto$rs_design_edit.cc:841:execute$454_input_0_4 ;
    wire \lut_$auto$rs_design_edit.cc:841:execute$453_input_0_4 ;
    wire \lut_$auto$rs_design_edit.cc:841:execute$452_input_0_4 ;
    wire \dffre_q1_input_1_0 ;
    wire \dffre_q1_input_2_0 ;
    wire \dffre_q2_input_1_0 ;
    wire \dffre_q2_input_2_0 ;
    wire \dffre_q2_input_0_0 ;
    wire \lut_$iopadmap$tristate_out_input_0_2 ;

    //IO assignments
    assign \$iopadmap$tristate_out  = \$iopadmap$tristate_out_input_0_0 ;
    assign \$auto$rs_design_edit.cc:841:execute$452  = \$auto$rs_design_edit.cc:841:execute$452_input_0_0 ;
    assign \$auto$rs_design_edit.cc:841:execute$453  = \$auto$rs_design_edit.cc:841:execute$453_input_0_0 ;
    assign \$auto$rs_design_edit.cc:841:execute$454  = \$auto$rs_design_edit.cc:841:execute$454_input_0_0 ;
    assign \$auto$clkbufmap.cc:298:execute$445_output_0_0  = \$auto$clkbufmap.cc:298:execute$445 ;
    assign \$iopadmap$din_output_0_0  = \$iopadmap$din ;
    assign \$iopadmap$oe_output_0_0  = \$iopadmap$oe ;

    //Interconnect
    fpga_interconnect \routing_segment_$auto$clkbufmap.cc:298:execute$445_output_0_0_to_dffre_q1_clock_0_0  (
        .datain(\$auto$clkbufmap.cc:298:execute$445_output_0_0 ),
        .dataout(\dffre_q1_clock_0_0 )
    );

    fpga_interconnect \routing_segment_$auto$clkbufmap.cc:298:execute$445_output_0_0_to_dffre_q2_clock_0_0  (
        .datain(\$auto$clkbufmap.cc:298:execute$445_output_0_0 ),
        .dataout(\dffre_q2_clock_0_0 )
    );

    fpga_interconnect \routing_segment_$iopadmap$din_output_0_0_to_dffre_q1_input_0_0  (
        .datain(\$iopadmap$din_output_0_0 ),
        .dataout(\dffre_q1_input_0_0 )
    );

    fpga_interconnect \routing_segment_$iopadmap$oe_output_0_0_to_lut_$iopadmap$tristate_out_input_0_0  (
        .datain(\$iopadmap$oe_output_0_0 ),
        .dataout(\lut_$iopadmap$tristate_out_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$auto$rs_design_edit.cc:841:execute$452_output_0_0_to_$auto$rs_design_edit.cc:841:execute$452_input_0_0  (
        .datain(\lut_$auto$rs_design_edit.cc:841:execute$452_output_0_0 ),
        .dataout(\$auto$rs_design_edit.cc:841:execute$452_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$auto$rs_design_edit.cc:841:execute$453_output_0_0_to_$auto$rs_design_edit.cc:841:execute$453_input_0_0  (
        .datain(\lut_$auto$rs_design_edit.cc:841:execute$453_output_0_0 ),
        .dataout(\$auto$rs_design_edit.cc:841:execute$453_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$auto$rs_design_edit.cc:841:execute$454_output_0_0_to_$auto$rs_design_edit.cc:841:execute$454_input_0_0  (
        .datain(\lut_$auto$rs_design_edit.cc:841:execute$454_output_0_0 ),
        .dataout(\$auto$rs_design_edit.cc:841:execute$454_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$iopadmap$tristate_out_output_0_0_to_$iopadmap$tristate_out_input_0_0  (
        .datain(\lut_$iopadmap$tristate_out_output_0_0 ),
        .dataout(\$iopadmap$tristate_out_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_lut_$auto$rs_design_edit.cc:841:execute$454_input_0_4  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\lut_$auto$rs_design_edit.cc:841:execute$454_input_0_4 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_lut_$auto$rs_design_edit.cc:841:execute$453_input_0_4  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\lut_$auto$rs_design_edit.cc:841:execute$453_input_0_4 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_lut_$auto$rs_design_edit.cc:841:execute$452_input_0_4  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\lut_$auto$rs_design_edit.cc:841:execute$452_input_0_4 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_q1_input_1_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_q1_input_1_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_q1_input_2_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_q1_input_2_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_q2_input_1_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_q2_input_1_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_q2_input_2_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_q2_input_2_0 )
    );

    fpga_interconnect \routing_segment_dffre_q1_output_0_0_to_dffre_q2_input_0_0  (
        .datain(\dffre_q1_output_0_0 ),
        .dataout(\dffre_q2_input_0_0 )
    );

    fpga_interconnect \routing_segment_dffre_q2_output_0_0_to_lut_$iopadmap$tristate_out_input_0_2  (
        .datain(\dffre_q2_output_0_0 ),
        .dataout(\lut_$iopadmap$tristate_out_input_0_2 )
    );


    //Cell instances
    LUT_K #(
        .K(5),
        .LUT_MASK(32'b00000000000000010000000000000000)
    ) \lut_$auto$rs_design_edit.cc:841:execute$454  (
        .in({
            \lut_$auto$rs_design_edit.cc:841:execute$454_input_0_4 ,
            1'b0,
            1'b0,
            1'b0,
            1'b0
         }),
        .out(\lut_$auto$rs_design_edit.cc:841:execute$454_output_0_0 )
    );

    LUT_K #(
        .K(5),
        .LUT_MASK(32'b00000000000000010000000000000000)
    ) \lut_$auto$rs_design_edit.cc:841:execute$453  (
        .in({
            \lut_$auto$rs_design_edit.cc:841:execute$453_input_0_4 ,
            1'b0,
            1'b0,
            1'b0,
            1'b0
         }),
        .out(\lut_$auto$rs_design_edit.cc:841:execute$453_output_0_0 )
    );

    LUT_K #(
        .K(5),
        .LUT_MASK(32'b00000000000000010000000000000000)
    ) \lut_$auto$rs_design_edit.cc:841:execute$452  (
        .in({
            \lut_$auto$rs_design_edit.cc:841:execute$452_input_0_4 ,
            1'b0,
            1'b0,
            1'b0,
            1'b0
         }),
        .out(\lut_$auto$rs_design_edit.cc:841:execute$452_output_0_0 )
    );

    LUT_K #(
        .K(5),
        .LUT_MASK(32'b00000000000000000000000000000001)
    ) \lut_$true  (
        .in({
            1'b0,
            1'b0,
            1'b0,
            1'b0,
            1'b0
         }),
        .out(\lut_$true_output_0_0 )
    );

    DFFRE #(
    ) \dffre_q1  (
        .C(\dffre_q1_clock_0_0 ),
        .D(\dffre_q1_input_0_0 ),
        .E(\dffre_q1_input_2_0 ),
        .R(\dffre_q1_input_1_0 ),
        .Q(\dffre_q1_output_0_0 )
    );

    DFFRE #(
    ) \dffre_q2  (
        .C(\dffre_q2_clock_0_0 ),
        .D(\dffre_q2_input_0_0 ),
        .E(\dffre_q2_input_2_0 ),
        .R(\dffre_q2_input_1_0 ),
        .Q(\dffre_q2_output_0_0 )
    );

    LUT_K #(
        .K(5),
        .LUT_MASK(32'b00000000000000000000000000100000)
    ) \lut_$iopadmap$tristate_out  (
        .in({
            1'b0,
            1'b0,
            \lut_$iopadmap$tristate_out_input_0_2 ,
            1'b0,
            \lut_$iopadmap$tristate_out_input_0_0 
         }),
        .out(\lut_$iopadmap$tristate_out_output_0_0 )
    );


endmodule
