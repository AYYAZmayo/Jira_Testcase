
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.18+10 (git sha1 07c42e625, gcc 11.2.1 -fPIC -Os)


-- Executing script file `memset.ys' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CARRY_CHAIN'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v
Parsing Verilog input from `/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v' to AST representation.
Generating RTLIL representation for module `\memory_controller'.
Note: Assuming pure combinatorial block at /nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:50.1-68.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\memset'.
Note: Assuming pure combinatorial block at /nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:279.1-290.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\single_port_ram'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \memset
Used module:     \memory_controller
Used module:         \single_port_ram

3.2. Analyzing design hierarchy..
Top module:  \memset
Used module:     \memory_controller
Used module:         \single_port_ram
Removed 0 unused modules.
Mapping positional arguments of cell memset.memtroll (memory_controller).

4. Executing synth_rs pass: v0.4.218

4.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v' to AST representation.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v:10.1-19.10.
Generating RTLIL representation for module `\CARRY'.
Successfully finished Verilog frontend.

4.3. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:20.1-34.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:48.1-62.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:81.1-97.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:115.1-131.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:150.1-166.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:184.1-200.10.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

4.4. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v' to AST representation.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFRE'.
Successfully finished Verilog frontend.

4.5. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v' to AST representation.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFNRE'.
Successfully finished Verilog frontend.

4.6. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v' to AST representation.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v:10.1-21.10.
Generating RTLIL representation for module `\LUT1'.
Successfully finished Verilog frontend.

4.7. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v' to AST representation.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v:10.1-21.10.
Generating RTLIL representation for module `\LUT2'.
Successfully finished Verilog frontend.

4.8. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v' to AST representation.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v:10.1-21.10.
Generating RTLIL representation for module `\LUT3'.
Successfully finished Verilog frontend.

4.9. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v' to AST representation.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v:11.1-22.10.
Generating RTLIL representation for module `\LUT4'.
Successfully finished Verilog frontend.

4.10. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v' to AST representation.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v:10.1-21.10.
Generating RTLIL representation for module `\LUT5'.
Successfully finished Verilog frontend.

4.11. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v' to AST representation.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v:10.1-21.10.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

4.12. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v' to AST representation.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v:10.1-17.10.
Generating RTLIL representation for module `\CLK_BUF'.
Successfully finished Verilog frontend.

4.13. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v' to AST representation.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v:10.1-22.10.
Generating RTLIL representation for module `\O_BUF'.
Successfully finished Verilog frontend.

4.14. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v' to AST representation.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:10.1-324.10.
Generating RTLIL representation for module `\DSP38'.
/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:0: Warning: System task `$display' outside initial block is unsupported.
Successfully finished Verilog frontend.

4.15. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v' to AST representation.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:2.1-29.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:33.1-84.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\RS_DSP3'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:116.1-149.10.
Generating RTLIL representation for module `\DSP19X2'.
Successfully finished Verilog frontend.

4.16. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:112.1-540.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:542.1-951.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:953.1-1356.10.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.17. Executing HIERARCHY pass (managing design hierarchy).

4.17.1. Analyzing design hierarchy..
Top module:  \memset
Used module:     \memory_controller
Used module:         \single_port_ram

4.17.2. Analyzing design hierarchy..
Top module:  \memset
Used module:     \memory_controller
Used module:         \single_port_ram
Removed 0 unused modules.

4.18. Executing PROC pass (convert processes to netlists).

4.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:316$18 in module single_port_ram.
Marked 1 switch rules as full_case in process $proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:279$16 in module memset.
Marked 5 switch rules as full_case in process $proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8 in module memset.
Marked 2 switch rules as full_case in process $proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:50$7 in module memory_controller.
Removed a total of 0 dead cases.

4.18.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 11 assignments to connections.

4.18.4. Executing PROC_INIT pass (extract init attributes).

4.18.5. Executing PROC_ARST pass (detect async resets in processes).

4.18.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~10 debug messages>

4.18.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\single_port_ram.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:316$18'.
     1/4: $1$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_EN[7:0]$24
     2/4: $1$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_DATA[7:0]$23
     3/4: $1$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_ADDR[7:0]$22
     4/4: $0\out[7:0]
Creating decoders for process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:279$16'.
     1/3: $1\memory_controller_in[31:0]
     2/3: $1\memory_controller_write_enable[0:0]
     3/3: $1\memory_controller_address[31:0]
Creating decoders for process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
     1/13: $0\exitcond[0:0]
     2/13: $0\indvar_next[31:0]
     3/13: $0\s_07[31:0]
     4/13: $0\scevgep[31:0]
     5/13: $0\var0[31:0]
     6/13: $0\var2[0:0]
     7/13: $0\tmp8[31:0]
     8/13: $0\tmp[31:0]
     9/13: $0\var1[0:0]
    10/13: $0\indvar[31:0]
    11/13: $0\cur_state[3:0]
    12/13: $0\finish[0:0]
    13/13: $0\return_val[31:0]
Creating decoders for process `\memory_controller.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:50$7'.
     1/4: $1\memory_controller_out[31:0]
     2/4: $1\str_in[7:0]
     3/4: $1\str_write_enable[0:0]
     4/4: $1\str_address[4:0]
Creating decoders for process `\memory_controller.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:48$6'.

4.18.8. Executing PROC_DLATCH pass (convert process syncs to latches).
Latch inferred for signal `\memset.\memory_controller_address' from process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:279$16': $auto$proc_dlatch.cc:427:proc_dlatch$221
Latch inferred for signal `\memset.\memory_controller_write_enable' from process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:279$16': $auto$proc_dlatch.cc:427:proc_dlatch$232
Latch inferred for signal `\memset.\memory_controller_in' from process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:279$16': $auto$proc_dlatch.cc:427:proc_dlatch$243
Latch inferred for signal `\memory_controller.\memory_controller_out' from process `\memory_controller.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:50$7': $auto$proc_dlatch.cc:427:proc_dlatch$254
Latch inferred for signal `\memory_controller.\str_address' from process `\memory_controller.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:50$7': $auto$proc_dlatch.cc:427:proc_dlatch$265
Latch inferred for signal `\memory_controller.\str_write_enable' from process `\memory_controller.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:50$7': $auto$proc_dlatch.cc:427:proc_dlatch$276
Latch inferred for signal `\memory_controller.\str_in' from process `\memory_controller.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:50$7': $auto$proc_dlatch.cc:427:proc_dlatch$287

4.18.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\single_port_ram.\out' using process `\single_port_ram.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:316$18'.
  created $dff cell `$procdff$288' with positive edge clock.
Creating register for signal `\single_port_ram.$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_ADDR' using process `\single_port_ram.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:316$18'.
  created $dff cell `$procdff$289' with positive edge clock.
Creating register for signal `\single_port_ram.$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_DATA' using process `\single_port_ram.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:316$18'.
  created $dff cell `$procdff$290' with positive edge clock.
Creating register for signal `\single_port_ram.$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_EN' using process `\single_port_ram.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:316$18'.
  created $dff cell `$procdff$291' with positive edge clock.
Creating register for signal `\memset.\return_val' using process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
  created $dff cell `$procdff$292' with positive edge clock.
Creating register for signal `\memset.\finish' using process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
  created $dff cell `$procdff$293' with positive edge clock.
Creating register for signal `\memset.\cur_state' using process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
  created $dff cell `$procdff$294' with positive edge clock.
Creating register for signal `\memset.\indvar' using process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
  created $dff cell `$procdff$295' with positive edge clock.
Creating register for signal `\memset.\var1' using process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
  created $dff cell `$procdff$296' with positive edge clock.
Creating register for signal `\memset.\tmp' using process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
  created $dff cell `$procdff$297' with positive edge clock.
Creating register for signal `\memset.\tmp8' using process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
  created $dff cell `$procdff$298' with positive edge clock.
Creating register for signal `\memset.\var2' using process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
  created $dff cell `$procdff$299' with positive edge clock.
Creating register for signal `\memset.\var0' using process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
  created $dff cell `$procdff$300' with positive edge clock.
Creating register for signal `\memset.\scevgep' using process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
  created $dff cell `$procdff$301' with positive edge clock.
Creating register for signal `\memset.\s_07' using process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
  created $dff cell `$procdff$302' with positive edge clock.
Creating register for signal `\memset.\indvar_next' using process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
  created $dff cell `$procdff$303' with positive edge clock.
Creating register for signal `\memset.\exitcond' using process `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
  created $dff cell `$procdff$304' with positive edge clock.
Creating register for signal `\memory_controller.\prevTag' using process `\memory_controller.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:48$6'.
  created $dff cell `$procdff$305' with positive edge clock.

4.18.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.18.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\single_port_ram.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:316$18'.
Removing empty process `single_port_ram.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:316$18'.
Found and cleaned up 1 empty switch in `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:279$16'.
Removing empty process `memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:279$16'.
Found and cleaned up 6 empty switches in `\memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
Removing empty process `memset.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:147$8'.
Found and cleaned up 2 empty switches in `\memory_controller.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:50$7'.
Removing empty process `memory_controller.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:50$7'.
Removing empty process `memory_controller.$proc$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:48$6'.
Cleaned up 10 empty switches.

4.18.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module single_port_ram.
Optimizing module memset.
<suppressed ~20 debug messages>
Optimizing module memory_controller.
<suppressed ~32 debug messages>

4.19. Executing DEMUXMAP pass.

4.20. Executing FLATTEN pass (flatten design).
Deleting now unused module memory_controller.
Deleting now unused module single_port_ram.
<suppressed ~2 debug messages>

4.21. Executing DEMUXMAP pass.

4.22. Executing TRIBUF pass.

4.23. Executing TRIBUF pass.

4.24. Executing DEMINOUT pass (demote inout ports to input or output).

4.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 16 unused cells and 116 unused wires.
<suppressed ~18 debug messages>

4.27. Executing CHECK pass (checking for obvious problems).
Checking module memset...
Found and reported 0 problems.

4.28. Printing statistics.

=== memset ===

   Number of wires:                110
   Number of wire bits:           1194
   Number of public wires:          38
   Number of public wire bits:     573
   Number of memories:               1
   Number of memory bits:         2048
   Number of processes:              0
   Number of cells:                 95
     $and                            3
     $dff                           14
     $dlatch                         7
     $eq                            30
     $logic_not                      2
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                           30
     $pmux                           3
     $reduce_or                      4

4.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

4.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

4.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
    Consolidated identical input bits for $mux cell $flatten\memtroll.\_str.$procmux$27:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\memtroll.\_str.$0$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_EN[7:0]$21
      New ports: A=1'0, B=1'1, Y=$flatten\memtroll.\_str.$0$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_EN[7:0]$21 [0]
      New connections: $flatten\memtroll.\_str.$0$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_EN[7:0]$21 [7:1] = { $flatten\memtroll.\_str.$0$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_EN[7:0]$21 [0] $flatten\memtroll.\_str.$0$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_EN[7:0]$21 [0] $flatten\memtroll.\_str.$0$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_EN[7:0]$21 [0] $flatten\memtroll.\_str.$0$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_EN[7:0]$21 [0] $flatten\memtroll.\_str.$0$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_EN[7:0]$21 [0] $flatten\memtroll.\_str.$0$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_EN[7:0]$21 [0] $flatten\memtroll.\_str.$0$memwr$\RAM$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:320$17_EN[7:0]$21 [0] }
  Optimizing cells in module \memset.
Performed a total of 1 changes.

4.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.34. Executing OPT_SHARE pass.

4.35. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $auto$proc_dlatch.cc:427:proc_dlatch$232 ($dlatch) from module memset.
Setting constant 0-bit at position 8 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 9 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 10 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 11 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 12 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 13 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 14 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 15 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 16 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 17 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 18 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 19 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 20 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 21 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 22 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 23 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 24 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 25 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 26 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 27 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 28 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 29 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 30 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
Setting constant 0-bit at position 31 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$254 ($dlatch) from module memset.
[#visit=21, #solve=0, #remove=25, time=0.00 sec.]

4.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 17 unused wires.
<suppressed ~1 debug messages>

4.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.
<suppressed ~1 debug messages>

4.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

4.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.41. Executing OPT_SHARE pass.

4.42. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $flatten\memtroll.$auto$proc_dlatch.cc:427:proc_dlatch$276 ($dlatch) from module memset.
[#visit=20, #solve=0, #remove=1, time=0.00 sec.]

4.43. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.
<suppressed ~4 debug messages>

4.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

4.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.48. Executing OPT_SHARE pass.

4.49. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=19, #solve=0, #remove=0, time=0.00 sec.]

4.50. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

4.51. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 3

4.52. Executing FSM pass (extract and optimize FSM).

4.52.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register memset.cur_state.

4.52.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\cur_state' from module `\memset'.
  found $dff cell for state register: $procdff$294
  root of input selection tree: $0\cur_state[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: \reset
  found ctrl input: $procmux$158_CMP
  found ctrl input: $auto$rtlil.cc:2384:Not$220
  found ctrl input: $procmux$163_CMP
  found ctrl input: $procmux$164_CMP
  found ctrl input: $procmux$115_CMP
  found ctrl input: $procmux$166_CMP
  found ctrl input: $procmux$126_CMP
  found ctrl input: $procmux$171_CMP
  found ctrl input: $procmux$106_CMP
  found ctrl input: $procmux$173_CMP
  found ctrl input: $procmux$174_CMP
  found ctrl input: $procmux$178_CMP
  found ctrl input: $procmux$143_CMP
  found ctrl input: $procmux$180_CMP
  found ctrl input: $procmux$184_CMP
  found state code: 4'0000
  found ctrl input: \exitcond
  found state code: 4'1001
  found state code: 4'1110
  found state code: 4'1101
  found state code: 4'1100
  found state code: 4'1011
  found state code: 4'1010
  found ctrl input: \var2
  found state code: 4'1000
  found state code: 4'0111
  found state code: 4'0110
  found state code: 4'0101
  found ctrl input: \var1
  found state code: 4'0100
  found state code: 4'0011
  found state code: 4'0010
  found ctrl input: \start
  found state code: 4'0001
  found ctrl output: $procmux$106_CMP
  found ctrl output: $procmux$115_CMP
  found ctrl output: $procmux$126_CMP
  found ctrl output: $procmux$143_CMP
  found ctrl output: $auto$rtlil.cc:2384:Not$220
  found ctrl output: $procmux$158_CMP
  found ctrl output: $procmux$163_CMP
  found ctrl output: $procmux$164_CMP
  found ctrl output: $procmux$166_CMP
  found ctrl output: $procmux$171_CMP
  found ctrl output: $procmux$173_CMP
  found ctrl output: $procmux$174_CMP
  found ctrl output: $procmux$178_CMP
  found ctrl output: $procmux$180_CMP
  found ctrl output: $procmux$184_CMP
  ctrl inputs: { \exitcond \var2 \var1 \start \reset }
  ctrl outputs: { $auto$rtlil.cc:2384:Not$220 $procmux$184_CMP $procmux$180_CMP $procmux$178_CMP $procmux$174_CMP $procmux$173_CMP $procmux$171_CMP $procmux$166_CMP $procmux$164_CMP $procmux$163_CMP $procmux$158_CMP $procmux$143_CMP $procmux$126_CMP $procmux$115_CMP $procmux$106_CMP $0\cur_state[3:0] }
  transition:     4'0000 5'---00 ->     4'0000 19'0100000000000000000
  transition:     4'0000 5'---10 ->     4'0001 19'0100000000000000001
  transition:     4'0000 5'----1 ->     4'0000 19'0100000000000000000
  transition:     4'1000 5'----0 ->     4'1001 19'0000000000001001001
  transition:     4'1000 5'----1 ->     4'0000 19'0000000000001000000
  transition:     4'0100 5'----0 ->     4'0101 19'0000100000000000101
  transition:     4'0100 5'----1 ->     4'0000 19'0000100000000000000
  transition:     4'1100 5'----0 ->     4'1101 19'0000000001000001101
  transition:     4'1100 5'----1 ->     4'0000 19'0000000001000000000
  transition:     4'0010 5'----0 ->     4'0011 19'0000000000010000011
  transition:     4'0010 5'----1 ->     4'0000 19'0000000000010000000
  transition:     4'1010 5'----0 ->     4'1011 19'0000000000000101011
  transition:     4'1010 5'----1 ->     4'0000 19'0000000000000100000
  transition:     4'0110 5'----0 ->     4'0111 19'0000000000000010111
  transition:     4'0110 5'----1 ->     4'0000 19'0000000000000010000
  transition:     4'1110 5'----0 ->     4'0000 19'0000000000100000000
  transition:     4'1110 5'----1 ->     4'0000 19'0000000000100000000
  transition:     4'0001 5'----0 ->     4'0010 19'0010000000000000010
  transition:     4'0001 5'----1 ->     4'0000 19'0010000000000000000
  transition:     4'1001 5'----0 ->     4'1010 19'0000000100000001010
  transition:     4'1001 5'----1 ->     4'0000 19'0000000100000000000
  transition:     4'0101 5'----0 ->     4'0110 19'0000010000000000110
  transition:     4'0101 5'----1 ->     4'0000 19'0000010000000000000
  transition:     4'1101 5'0---0 ->     4'1001 19'1000000000000001001
  transition:     4'1101 5'1---0 ->     4'1110 19'1000000000000001110
  transition:     4'1101 5'----1 ->     4'0000 19'1000000000000000000
  transition:     4'0011 5'--0-0 ->     4'0100 19'0001000000000000100
  transition:     4'0011 5'--1-0 ->     4'0110 19'0001000000000000110
  transition:     4'0011 5'----1 ->     4'0000 19'0001000000000000000
  transition:     4'1011 5'----0 ->     4'1100 19'0000000010000001100
  transition:     4'1011 5'----1 ->     4'0000 19'0000000010000000000
  transition:     4'0111 5'-0--0 ->     4'1000 19'0000001000000001000
  transition:     4'0111 5'-1--0 ->     4'1110 19'0000001000000001110
  transition:     4'0111 5'----1 ->     4'0000 19'0000001000000000000

4.52.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\cur_state$308' from module `\memset'.
  Merging pattern 5'----0 and 5'----1 from group (7 0 19'0000000000100000000).
  Merging pattern 5'----1 and 5'----0 from group (7 0 19'0000000000100000000).

4.52.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 22 unused cells and 22 unused wires.
<suppressed ~23 debug messages>

4.52.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\cur_state$308' from module `\memset'.
  Removing unused output signal $0\cur_state[3:0] [0].
  Removing unused output signal $0\cur_state[3:0] [1].
  Removing unused output signal $0\cur_state[3:0] [2].
  Removing unused output signal $0\cur_state[3:0] [3].
  Removing unused output signal $procmux$166_CMP.
  Removing unused output signal $procmux$171_CMP.
  Removing unused output signal $procmux$173_CMP.
  Removing unused output signal $procmux$174_CMP.
  Removing unused output signal $procmux$178_CMP.
  Removing unused output signal $procmux$180_CMP.

4.52.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\cur_state$308' from module `\memset' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> --------------1
  1000 -> -------------1-
  0100 -> ------------1--
  1100 -> -----------1---
  0010 -> ----------1----
  1010 -> ---------1-----
  0110 -> --------1------
  1110 -> -------1-------
  0001 -> ------1--------
  1001 -> -----1---------
  0101 -> ----1----------
  1101 -> ---1-----------
  0011 -> --1------------
  1011 -> -1-------------
  0111 -> 1--------------

4.52.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\cur_state$308' from module `memset':
-------------------------------------

  Information on FSM $fsm$\cur_state$308 (\cur_state):

  Number of input signals:    5
  Number of output signals:   9
  Number of state bits:      15

  Input signals:
    0: \reset
    1: \start
    2: \var1
    3: \var2
    4: \exitcond

  Output signals:
    0: $procmux$106_CMP
    1: $procmux$115_CMP
    2: $procmux$126_CMP
    3: $procmux$143_CMP
    4: $procmux$158_CMP
    5: $procmux$163_CMP
    6: $procmux$164_CMP
    7: $procmux$184_CMP
    8: $auto$rtlil.cc:2384:Not$220

  State encoding:
    0: 15'--------------1  <RESET STATE>
    1: 15'-------------1-
    2: 15'------------1--
    3: 15'-----------1---
    4: 15'----------1----
    5: 15'---------1-----
    6: 15'--------1------
    7: 15'-------1-------
    8: 15'------1--------
    9: 15'-----1---------
   10: 15'----1----------
   11: 15'---1-----------
   12: 15'--1------------
   13: 15'-1-------------
   14: 15'1--------------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 5'---00   ->     0 9'010000000
      1:     0 5'----1   ->     0 9'010000000
      2:     0 5'---10   ->     8 9'010000000
      3:     1 5'----1   ->     0 9'000000100
      4:     1 5'----0   ->     9 9'000000100
      5:     2 5'----1   ->     0 9'000000000
      6:     2 5'----0   ->    10 9'000000000
      7:     3 5'----1   ->     0 9'000100000
      8:     3 5'----0   ->    11 9'000100000
      9:     4 5'----1   ->     0 9'000001000
     10:     4 5'----0   ->    12 9'000001000
     11:     5 5'----1   ->     0 9'000000010
     12:     5 5'----0   ->    13 9'000000010
     13:     6 5'----1   ->     0 9'000000001
     14:     6 5'----0   ->    14 9'000000001
     15:     7 5'-----   ->     0 9'000010000
     16:     8 5'----1   ->     0 9'000000000
     17:     8 5'----0   ->     4 9'000000000
     18:     9 5'----1   ->     0 9'000000000
     19:     9 5'----0   ->     5 9'000000000
     20:    10 5'----1   ->     0 9'000000000
     21:    10 5'----0   ->     6 9'000000000
     22:    11 5'----1   ->     0 9'100000000
     23:    11 5'1---0   ->     7 9'100000000
     24:    11 5'0---0   ->     9 9'100000000
     25:    12 5'----1   ->     0 9'000000000
     26:    12 5'--0-0   ->     2 9'000000000
     27:    12 5'--1-0   ->     6 9'000000000
     28:    13 5'----1   ->     0 9'001000000
     29:    13 5'----0   ->     3 9'001000000
     30:    14 5'----1   ->     0 9'000000000
     31:    14 5'-0--0   ->     1 9'000000000
     32:    14 5'-1--0   ->     7 9'000000000

-------------------------------------

4.52.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\cur_state$308' from module `\memset'.

4.53. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell memset.$auto$fsm_map.cc:77:implement_pattern_cache$341 ($eq).
Removed top 1 bits (of 2) from port B of cell memset.$auto$fsm_map.cc:77:implement_pattern_cache$337 ($eq).
Removed top 1 bits (of 2) from port B of cell memset.$auto$fsm_map.cc:77:implement_pattern_cache$330 ($eq).
Removed top 1 bits (of 2) from port B of cell memset.$auto$fsm_map.cc:77:implement_pattern_cache$379 ($eq).

4.54. Executing PEEPOPT pass (run peephole optimizers).

4.55. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 18 unused wires.
<suppressed ~1 debug messages>

4.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.
<suppressed ~15 debug messages>

4.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

4.58. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

4.59. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.60. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.61. Executing OPT_SHARE pass.

4.62. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$304 ($dff) from module memset (D = $eq$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:242$15_Y, Q = \exitcond).
Adding EN signal on $procdff$303 ($dff) from module memset (D = \indvar, Q = \indvar_next).
Adding EN signal on $procdff$302 ($dff) from module memset (D = \scevgep, Q = \s_07).
Adding EN signal on $procdff$301 ($dff) from module memset (D = $and$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:240$14_Y, Q = \scevgep).
Adding EN signal on $procdff$299 ($dff) from module memset (D = $reduce_or$/nfs_project/cxl/DV/bilal_malik/Validation/RTL_testcases/Benchmarking_QoR_testcases/ch_intrinsics/results_dir/.././rtl/ch_intrinsics.v:202$12_Y, Q = \var2).
Adding EN signal on $procdff$298 ($dff) from module memset (D = \indvar, Q = \tmp8).
Adding EN signal on $procdff$297 ($dff) from module memset (D = \n, Q = \tmp).
Adding EN signal on $procdff$296 ($dff) from module memset (D = 1'0, Q = \var1).
Adding EN signal on $procdff$295 ($dff) from module memset (D = $procmux$151_Y, Q = \indvar).
Adding EN signal on $procdff$293 ($dff) from module memset (D = $procmux$188_Y, Q = \finish).
Adding EN signal on $procdff$292 ($dff) from module memset (D = \m, Q = \return_val).
Setting constant 0-bit at position 0 on memset:var1_442 ($dffe) from module memset.
[#visit=19, #solve=0, #remove=1, time=0.00 sec.]

4.63. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 22 unused cells and 32 unused wires.
<suppressed ~23 debug messages>

4.64. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.
<suppressed ~5 debug messages>

4.65. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.66. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.67. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

4.68. Executing OPT_SHARE pass.

4.69. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=17, #solve=0, #remove=0, time=0.00 sec.]

4.70. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

4.71. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.72. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.73. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.74. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.75. Executing OPT_SHARE pass.

4.76. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=17, #solve=0, #remove=0, time=0.00 sec.]

4.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.78. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 3

4.79. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.81. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.82. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.84. Executing OPT_SHARE pass.

4.85. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=17, #solve=0, #remove=0, time=0.00 sec.]

4.86. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.88. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.89. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.90. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.91. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.92. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.93. Executing OPT_SHARE pass.

4.94. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=17, #solve=0, #remove=0, time=0.00 sec.]

4.95. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=17, #solve=0, #remove=0, time=0.00 sec.]

4.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.98. Executing WREDUCE pass (reducing word size of cells).

4.99. Executing PEEPOPT pass (run peephole optimizers).

4.100. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.101. Executing DEMUXMAP pass.

4.102. Printing statistics.

=== memset ===

   Number of wires:                 84
   Number of wire bits:            744
   Number of public wires:          38
   Number of public wire bits:     584
   Number of memories:               1
   Number of memory bits:         2048
   Number of processes:              0
   Number of cells:                 67
     $and                           19
     $dff                            3
     $dffe                           9
     $dlatch                         5
     $eq                             4
     $logic_not                      4
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                            1
     $ne                             1
     $not                            1
     $pmux                           2
     $reduce_and                     8
     $reduce_bool                    2
     $reduce_or                      6

4.103. Executing RS_DSP_MULTADD pass.

4.104. Executing WREDUCE pass (reducing word size of cells).

4.105. Executing RS_DSP_MACC pass.

4.106. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.107. Executing TECHMAP pass (map to technology primitives).

4.107.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.107.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.108. Printing statistics.

=== memset ===

   Number of wires:                 84
   Number of wire bits:            744
   Number of public wires:          38
   Number of public wire bits:     584
   Number of memories:               1
   Number of memory bits:         2048
   Number of processes:              0
   Number of cells:                 67
     $and                           19
     $dff                            3
     $dffe                           9
     $dlatch                         5
     $eq                             4
     $logic_not                      4
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                            1
     $ne                             1
     $not                            1
     $pmux                           2
     $reduce_and                     8
     $reduce_bool                    2
     $reduce_or                      6

4.109. Executing TECHMAP pass (map to technology primitives).

4.109.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.109.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.110. Printing statistics.

=== memset ===

   Number of wires:                 84
   Number of wire bits:            744
   Number of public wires:          38
   Number of public wire bits:     584
   Number of memories:               1
   Number of memory bits:         2048
   Number of processes:              0
   Number of cells:                 67
     $and                           19
     $dff                            3
     $dffe                           9
     $dlatch                         5
     $eq                             4
     $logic_not                      4
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                            1
     $ne                             1
     $not                            1
     $pmux                           2
     $reduce_and                     8
     $reduce_bool                    2
     $reduce_or                      6

4.111. Executing TECHMAP pass (map to technology primitives).

4.111.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.111.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.112. Executing TECHMAP pass (map to technology primitives).

4.112.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.112.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.113. Executing TECHMAP pass (map to technology primitives).

4.113.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

4.113.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.114. Executing RS_DSP_SIMD pass.

4.115. Executing TECHMAP pass (map to technology primitives).

4.115.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

4.115.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.116. Executing TECHMAP pass (map to technology primitives).

4.116.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.116.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

4.117. Executing rs_pack_dsp_regs pass.

4.118. Executing RS_DSP_IO_REGS pass.

4.119. Executing TECHMAP pass (map to technology primitives).

4.119.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Successfully finished Verilog frontend.

4.119.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~14 debug messages>

4.120. Executing TECHMAP pass (map to technology primitives).

4.120.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.120.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

4.121. Printing statistics.

=== memset ===

   Number of wires:                 84
   Number of wire bits:            744
   Number of public wires:          38
   Number of public wire bits:     584
   Number of memories:               1
   Number of memory bits:         2048
   Number of processes:              0
   Number of cells:                 67
     $and                           19
     $dff                            3
     $dffe                           9
     $dlatch                         5
     $eq                             4
     $logic_not                      4
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                            1
     $ne                             1
     $not                            1
     $pmux                           2
     $reduce_and                     8
     $reduce_bool                    2
     $reduce_or                      6

4.122. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module memset:
  created 0 $alu and 0 $macc cells.

4.123. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.125. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.126. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.127. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.128. Executing OPT_SHARE pass.

4.129. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=17, #solve=0, #remove=0, time=0.00 sec.]

4.130. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.131. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.132. Printing statistics.

=== memset ===

   Number of wires:                 84
   Number of wire bits:            744
   Number of public wires:          38
   Number of public wire bits:     584
   Number of memories:               1
   Number of memory bits:         2048
   Number of processes:              0
   Number of cells:                 67
     $and                           19
     $dff                            3
     $dffe                           9
     $dlatch                         5
     $eq                             4
     $logic_not                      4
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                            1
     $ne                             1
     $not                            1
     $pmux                           2
     $reduce_and                     8
     $reduce_bool                    2
     $reduce_or                      6

4.133. Executing MEMORY pass.

4.133.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.133.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.133.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing memset.memtroll._str.RAM write port 0.

4.133.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.133.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\memtroll._str.RAM'[0] in module `\memset': merging output FF to cell.
    Write port 0: non-transparent.

4.133.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 1 unused cells and 9 unused wires.
<suppressed ~2 debug messages>

4.133.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.133.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.133.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.133.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.134. Printing statistics.

=== memset ===

   Number of wires:                 83
   Number of wire bits:            736
   Number of public wires:          38
   Number of public wire bits:     584
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 65
     $and                           19
     $dff                            2
     $dffe                           9
     $dlatch                         5
     $eq                             4
     $logic_not                      4
     $mem_v2                         1
     $mux                            1
     $ne                             1
     $not                            1
     $pmux                           2
     $reduce_and                     8
     $reduce_bool                    2
     $reduce_or                      6

4.135. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~2 debug messages>

4.136. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.137. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.138. Executing MEMORY_LIBMAP pass (mapping memories to cells).
mapping memory memset.memtroll._str.RAM via $__RS_FACTOR_BRAM18_SDP
<suppressed ~182 debug messages>

4.139. Executing Rs_BRAM_Split pass.

4.140. Executing TECHMAP pass (map to technology primitives).

4.140.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

4.140.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~30 debug messages>

4.141. Executing TECHMAP pass (map to technology primitives).

4.141.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

4.141.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~32 debug messages>

4.142. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

4.143. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.
<suppressed ~1 debug messages>

4.144. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.145. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.146. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.147. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.148. Executing OPT_SHARE pass.

4.149. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=16, #solve=0, #remove=0, time=0.00 sec.]

4.150. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 53 unused wires.
<suppressed ~1 debug messages>

4.151. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.152. Executing PMUXTREE pass.

4.153. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~3 debug messages>

4.154. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

4.155. Executing TECHMAP pass (map to technology primitives).

4.155.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.155.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

4.155.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $dlatch.
Using extmapper simplemap for cells of type $ne.
No more expansions possible.
<suppressed ~135 debug messages>

4.156. Printing statistics.

=== memset ===

   Number of wires:                153
   Number of wire bits:           1099
   Number of public wires:          38
   Number of public wire bits:     584
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                604
     $_AND_                         59
     $_DFFE_PP_                    195
     $_DFF_P_                       16
     $_DLATCH_N_                    21
     $_DLATCH_P_                    64
     $_MUX_                         65
     $_NOT_                          9
     $_OR_                         134
     $_XOR_                         40
     TDP_RAM18KX2                    1

4.157. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.
<suppressed ~10 debug messages>

4.158. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

4.159. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.160. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.161. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.162. Executing OPT_SHARE pass.

4.163. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=296, #solve=0, #remove=0, time=0.00 sec.]

4.164. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 36 unused wires.
<suppressed ~1 debug messages>

4.165. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.166. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.
<suppressed ~103 debug messages>

4.167. Executing TECHMAP pass (map to technology primitives).

4.167.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.167.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

4.168. Printing statistics.

=== memset ===

   Number of wires:                122
   Number of wire bits:           1033
   Number of public wires:          38
   Number of public wire bits:     584
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                560
     $_AND_                         86
     $_DFFE_PP_                    195
     $_DFF_P_                       16
     $_DLATCH_N_                    21
     $_DLATCH_P_                    64
     $_NOT_                         12
     $_OR_                         133
     $_XOR_                         32
     TDP_RAM18KX2                    1

4.169. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.170. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.171. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.172. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.173. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.174. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=296, #solve=0, #remove=0, time=0.00 sec.]

4.175. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

4.176. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.177. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.178. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.179. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.180. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.181. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.182. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=296, #solve=0, #remove=0, time=0.00 sec.]

4.183. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.184. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.185. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.186. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.187. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.188. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.189. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.190. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=296, #solve=0, #remove=0, time=0.00 sec.]

4.191. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=296, #solve=0, #remove=0, time=0.00 sec.]

4.192. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.193. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.194. Printing statistics.

=== memset ===

   Number of wires:                111
   Number of wire bits:            940
   Number of public wires:          38
   Number of public wire bits:     584
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                560
     $_AND_                         86
     $_DFFE_PP_                    195
     $_DFF_P_                       16
     $_DLATCH_N_                    21
     $_DLATCH_P_                    64
     $_NOT_                         12
     $_OR_                         133
     $_XOR_                         32
     TDP_RAM18KX2                    1

   Number of Generic REGs:          296

ABC-DFF iteration : 1

4.195. Executing ABC pass (technology mapping using ABC).

4.195.1. Summary of detected clock domains:
  31 cells in clk=\clk, en=$auto$fsm_map.cc:118:implement_pattern_cache$405, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$fsm_map.cc:118:implement_pattern_cache$384, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$fsm_map.cc:118:implement_pattern_cache$393, arst={ }, srst={ }
  33 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$466, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$fsm_map.cc:118:implement_pattern_cache$401, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$454, arst={ }, srst={ }
  2 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$461, arst={ }, srst={ }
  100 cells in clk=\clk, en=$auto$fsm_map.cc:118:implement_pattern_cache$346, arst={ }, srst={ }
  164 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 9

4.195.2. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 110 gates and 185 wires to a netlist network with 75 inputs and 21 outputs (dfl=1).

4.195.2.1. Executing ABC.
[Time = 0.05 sec.]

4.195.3. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$fsm_map.cc:118:implement_pattern_cache$346
Extracted 100 gates and 199 wires to a netlist network with 99 inputs and 36 outputs (dfl=1).

4.195.3.1. Executing ABC.
[Time = 0.05 sec.]

4.195.4. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$fsm_map.cc:118:implement_pattern_cache$384
Extracted 65 gates and 131 wires to a netlist network with 66 inputs and 65 outputs (dfl=1).

4.195.4.1. Executing ABC.
[Time = 0.05 sec.]

4.195.5. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$fsm_map.cc:118:implement_pattern_cache$393
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=1).

4.195.5.1. Executing ABC.
[Time = 0.05 sec.]

4.195.6. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$fsm_map.cc:118:implement_pattern_cache$401
Extracted 65 gates and 100 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

4.195.6.1. Executing ABC.
[Time = 0.05 sec.]

4.195.7. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$454
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 33 outputs (dfl=1).

4.195.7.1. Executing ABC.
[Time = 0.04 sec.]

4.195.8. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$466
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=1).

4.195.8.1. Executing ABC.
[Time = 0.05 sec.]

4.195.9. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$fsm_map.cc:118:implement_pattern_cache$405
Extracted 31 gates and 62 wires to a netlist network with 31 inputs and 4 outputs (dfl=1).

4.195.9.1. Executing ABC.
[Time = 0.04 sec.]

4.195.10. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$461
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs (dfl=1).

4.195.10.1. Executing ABC.
[Time = 0.04 sec.]

4.196. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.197. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.198. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.199. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.200. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.201. Executing OPT_SHARE pass.

4.202. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=296, #solve=0, #remove=0, time=0.00 sec.]

4.203. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 1069 unused wires.
<suppressed ~1 debug messages>

4.204. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 2

4.205. Executing ABC pass (technology mapping using ABC).

4.205.1. Summary of detected clock domains:
  2 cells in clk=\clk, en=$abc$2189$auto$opt_dff.cc:220:make_patterns_logic$461, arst={ }, srst={ }
  31 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$405, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$2058$auto$opt_dff.cc:220:make_patterns_logic$466, arst={ }, srst={ }
  67 cells in clk=\clk, en=$abc$1958$auto$opt_dff.cc:220:make_patterns_logic$454, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$401, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$393, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$384, arst={ }, srst={ }
  68 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$346, arst={ }, srst={ }
  156 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 9

4.205.2. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 102 gates and 177 wires to a netlist network with 75 inputs and 20 outputs (dfl=1).

4.205.2.1. Executing ABC.
[Time = 0.05 sec.]

4.205.3. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$401
Extracted 97 gates and 195 wires to a netlist network with 98 inputs and 97 outputs (dfl=1).

4.205.3.1. Executing ABC.
[Time = 0.05 sec.]

4.205.4. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$346
Extracted 68 gates and 134 wires to a netlist network with 66 inputs and 37 outputs (dfl=1).

4.205.4.1. Executing ABC.
[Time = 0.05 sec.]

4.205.5. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1958$auto$opt_dff.cc:220:make_patterns_logic$454
Extracted 67 gates and 104 wires to a netlist network with 37 inputs and 33 outputs (dfl=1).

4.205.5.1. Executing ABC.
[Time = 0.05 sec.]

4.205.6. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$393
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=1).

4.205.6.1. Executing ABC.
[Time = 0.04 sec.]

4.205.7. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2058$auto$opt_dff.cc:220:make_patterns_logic$466
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=1).

4.205.7.1. Executing ABC.
[Time = 0.04 sec.]

4.205.8. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$384
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=1).

4.205.8.1. Executing ABC.
[Time = 0.04 sec.]

4.205.9. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$405
Extracted 31 gates and 62 wires to a netlist network with 31 inputs and 4 outputs (dfl=1).

4.205.9.1. Executing ABC.
[Time = 0.04 sec.]

4.205.10. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2189$auto$opt_dff.cc:220:make_patterns_logic$461
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs (dfl=1).

4.205.10.1. Executing ABC.
[Time = 0.04 sec.]

4.206. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.207. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.208. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.209. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.210. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.211. Executing OPT_SHARE pass.

4.212. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=296, #solve=0, #remove=0, time=0.00 sec.]

4.213. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 1255 unused wires.
<suppressed ~1 debug messages>

4.214. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

4.215. Executing ABC pass (technology mapping using ABC).

4.215.1. Summary of detected clock domains:
  2 cells in clk=\clk, en=$abc$2189$auto$opt_dff.cc:220:make_patterns_logic$461, arst={ }, srst={ }
  31 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$405, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$384, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$2058$auto$opt_dff.cc:220:make_patterns_logic$466, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$393, arst={ }, srst={ }
  67 cells in clk=\clk, en=$abc$1958$auto$opt_dff.cc:220:make_patterns_logic$454, arst={ }, srst={ }
  99 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$346, arst={ }, srst={ }
  34 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$401, arst={ }, srst={ }
  156 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 9

4.215.2. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 102 gates and 177 wires to a netlist network with 75 inputs and 20 outputs (dfl=2).

4.215.2.1. Executing ABC.
[Time = 0.06 sec.]

4.215.3. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$346
Extracted 99 gates and 197 wires to a netlist network with 98 inputs and 36 outputs (dfl=2).

4.215.3.1. Executing ABC.
[Time = 0.05 sec.]

4.215.4. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1958$auto$opt_dff.cc:220:make_patterns_logic$454
Extracted 67 gates and 104 wires to a netlist network with 37 inputs and 33 outputs (dfl=2).

4.215.4.1. Executing ABC.
[Time = 0.05 sec.]

4.215.5. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$384
Extracted 65 gates and 131 wires to a netlist network with 66 inputs and 65 outputs (dfl=2).

4.215.5.1. Executing ABC.
[Time = 0.05 sec.]

4.215.6. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$393
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=2).

4.215.6.1. Executing ABC.
[Time = 0.04 sec.]

4.215.7. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$401
Extracted 34 gates and 68 wires to a netlist network with 34 inputs and 34 outputs (dfl=2).

4.215.7.1. Executing ABC.
[Time = 0.05 sec.]

4.215.8. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2058$auto$opt_dff.cc:220:make_patterns_logic$466
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=2).

4.215.8.1. Executing ABC.
[Time = 0.05 sec.]

4.215.9. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$405
Extracted 31 gates and 62 wires to a netlist network with 31 inputs and 4 outputs (dfl=2).

4.215.9.1. Executing ABC.
[Time = 0.05 sec.]

4.215.10. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2189$auto$opt_dff.cc:220:make_patterns_logic$461
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs (dfl=2).

4.215.10.1. Executing ABC.
[Time = 0.04 sec.]

4.216. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.217. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.218. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.219. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.220. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.221. Executing OPT_SHARE pass.

4.222. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=296, #solve=0, #remove=0, time=0.00 sec.]

4.223. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 1223 unused wires.
<suppressed ~1 debug messages>

4.224. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

4.225. Executing ABC pass (technology mapping using ABC).

4.225.1. Summary of detected clock domains:
  2 cells in clk=\clk, en=$abc$2189$auto$opt_dff.cc:220:make_patterns_logic$461, arst={ }, srst={ }
  31 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$405, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$2058$auto$opt_dff.cc:220:make_patterns_logic$466, arst={ }, srst={ }
  129 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$401, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$393, arst={ }, srst={ }
  34 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$384, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$1958$auto$opt_dff.cc:220:make_patterns_logic$454, arst={ }, srst={ }
  67 cells in clk=\clk, en=$abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$346, arst={ }, srst={ }
  154 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 9

4.225.2. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 100 gates and 175 wires to a netlist network with 75 inputs and 20 outputs (dfl=2).

4.225.2.1. Executing ABC.
[Time = 0.06 sec.]

4.225.3. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$401
Extracted 129 gates and 228 wires to a netlist network with 99 inputs and 129 outputs (dfl=2).

4.225.3.1. Executing ABC.
[Time = 0.06 sec.]

4.225.4. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$346
Extracted 67 gates and 133 wires to a netlist network with 66 inputs and 36 outputs (dfl=2).

4.225.4.1. Executing ABC.
[Time = 0.05 sec.]

4.225.5. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$393
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=2).

4.225.5.1. Executing ABC.
[Time = 0.05 sec.]

4.225.6. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1958$auto$opt_dff.cc:220:make_patterns_logic$454
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 33 outputs (dfl=2).

4.225.6.1. Executing ABC.
[Time = 0.05 sec.]

4.225.7. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$384
Extracted 34 gates and 68 wires to a netlist network with 34 inputs and 34 outputs (dfl=2).

4.225.7.1. Executing ABC.
[Time = 0.04 sec.]

4.225.8. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2058$auto$opt_dff.cc:220:make_patterns_logic$466
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=2).

4.225.8.1. Executing ABC.
[Time = 0.05 sec.]

4.225.9. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$1342$auto$fsm_map.cc:118:implement_pattern_cache$405
Extracted 31 gates and 62 wires to a netlist network with 31 inputs and 4 outputs (dfl=2).

4.225.9.1. Executing ABC.
[Time = 0.05 sec.]

4.225.10. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2189$auto$opt_dff.cc:220:make_patterns_logic$461
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs (dfl=2).

4.225.10.1. Executing ABC.
[Time = 0.04 sec.]

4.226. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.227. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.228. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.229. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.230. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.231. Executing OPT_SHARE pass.

4.232. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=296, #solve=0, #remove=0, time=0.00 sec.]

4.233. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 1285 unused wires.
<suppressed ~1 debug messages>

4.234. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1
select with DFL1 synthesis (thresh_logic=0.920000, thresh_dff=0.980000)

4.235. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
   Number of Generic REGs:          296

ABC-DFF iteration : 1

4.236. Executing ABC pass (technology mapping using ABC).

4.236.1. Summary of detected clock domains:
  31 cells in clk=\clk, en=$auto$fsm_map.cc:118:implement_pattern_cache$405, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$fsm_map.cc:118:implement_pattern_cache$384, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$fsm_map.cc:118:implement_pattern_cache$393, arst={ }, srst={ }
  33 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$466, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$fsm_map.cc:118:implement_pattern_cache$401, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$454, arst={ }, srst={ }
  2 cells in clk=\clk, en=$auto$opt_dff.cc:220:make_patterns_logic$461, arst={ }, srst={ }
  100 cells in clk=\clk, en=$auto$fsm_map.cc:118:implement_pattern_cache$346, arst={ }, srst={ }
  164 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 9

4.236.2. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 110 gates and 185 wires to a netlist network with 75 inputs and 21 outputs (dfl=1).

4.236.2.1. Executing ABC.
[Time = 0.05 sec.]

4.236.3. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$fsm_map.cc:118:implement_pattern_cache$346
Extracted 100 gates and 199 wires to a netlist network with 99 inputs and 36 outputs (dfl=1).

4.236.3.1. Executing ABC.
[Time = 0.05 sec.]

4.236.4. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$fsm_map.cc:118:implement_pattern_cache$384
Extracted 65 gates and 131 wires to a netlist network with 66 inputs and 65 outputs (dfl=1).

4.236.4.1. Executing ABC.
[Time = 0.04 sec.]

4.236.5. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$fsm_map.cc:118:implement_pattern_cache$393
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=1).

4.236.5.1. Executing ABC.
[Time = 0.04 sec.]

4.236.6. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$fsm_map.cc:118:implement_pattern_cache$401
Extracted 65 gates and 100 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

4.236.6.1. Executing ABC.
[Time = 0.04 sec.]

4.236.7. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$454
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 33 outputs (dfl=1).

4.236.7.1. Executing ABC.
[Time = 0.04 sec.]

4.236.8. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$466
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=1).

4.236.8.1. Executing ABC.
[Time = 0.04 sec.]

4.236.9. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$fsm_map.cc:118:implement_pattern_cache$405
Extracted 31 gates and 62 wires to a netlist network with 31 inputs and 4 outputs (dfl=1).

4.236.9.1. Executing ABC.
[Time = 0.04 sec.]

4.236.10. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:220:make_patterns_logic$461
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs (dfl=1).

4.236.10.1. Executing ABC.
[Time = 0.04 sec.]

4.237. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=296, #solve=0, #remove=0, time=0.00 sec.]

4.238. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.239. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 1068 unused wires.
<suppressed ~1 debug messages>

4.240. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=296, #solve=0, #remove=0, time=0.00 sec.]

4.241. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.242. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.243. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=296, #solve=0, #remove=0, time=0.00 sec.]

4.244. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.245. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.246. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 2

4.247. Executing ABC pass (technology mapping using ABC).

4.247.1. Summary of detected clock domains:
  748 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.247.2. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 662 gates and 792 wires to a netlist network with 130 inputs and 212 outputs (dfl=1).

4.247.2.1. Executing ABC.
[Time = 0.08 sec.]

4.248. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=168, #solve=0, #remove=0, time=0.00 sec.]

4.249. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.250. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 875 unused wires.
<suppressed ~1 debug messages>

4.251. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_868 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_869 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_870 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_871 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_872 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_873 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_874 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_875 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_876 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_877 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_878 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_879 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_880 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_881 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_882 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_883 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_884 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_885 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_886 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_887 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_888 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_889 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_890 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_891 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_892 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_893 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_894 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_895 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_896 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_897 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_898 ($_DLATCH_P_) from module memset.
Setting constant 0-bit at position 0 on memset:memory_controller_address[0]_899 ($_DLATCH_P_) from module memset.
[#visit=168, #solve=0, #remove=32, time=0.00 sec.]

4.252. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.253. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.254. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6055 ($_DFF_P_) from module memset (D = $abc$5988$new_n785_, Q = \exitcond).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6054 ($_DFF_P_) from module memset (D = \n [0], Q = \tmp [0]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6053 ($_DFF_P_) from module memset (D = \n [1], Q = \tmp [1]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6052 ($_DFF_P_) from module memset (D = \n [2], Q = \tmp [2]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6051 ($_DFF_P_) from module memset (D = \n [3], Q = \tmp [3]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6050 ($_DFF_P_) from module memset (D = \n [4], Q = \tmp [4]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6049 ($_DFF_P_) from module memset (D = \n [5], Q = \tmp [5]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6048 ($_DFF_P_) from module memset (D = \n [6], Q = \tmp [6]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6047 ($_DFF_P_) from module memset (D = \n [7], Q = \tmp [7]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6046 ($_DFF_P_) from module memset (D = \n [8], Q = \tmp [8]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6045 ($_DFF_P_) from module memset (D = \n [9], Q = \tmp [9]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6044 ($_DFF_P_) from module memset (D = \n [10], Q = \tmp [10]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6043 ($_DFF_P_) from module memset (D = \n [11], Q = \tmp [11]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6042 ($_DFF_P_) from module memset (D = \n [12], Q = \tmp [12]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6041 ($_DFF_P_) from module memset (D = \n [13], Q = \tmp [13]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6040 ($_DFF_P_) from module memset (D = \n [14], Q = \tmp [14]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6039 ($_DFF_P_) from module memset (D = \n [15], Q = \tmp [15]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6038 ($_DFF_P_) from module memset (D = \n [16], Q = \tmp [16]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6037 ($_DFF_P_) from module memset (D = \n [17], Q = \tmp [17]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6036 ($_DFF_P_) from module memset (D = \n [18], Q = \tmp [18]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6035 ($_DFF_P_) from module memset (D = \n [19], Q = \tmp [19]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6034 ($_DFF_P_) from module memset (D = \n [20], Q = \tmp [20]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6033 ($_DFF_P_) from module memset (D = \n [21], Q = \tmp [21]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6032 ($_DFF_P_) from module memset (D = \n [22], Q = \tmp [22]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6031 ($_DFF_P_) from module memset (D = \n [23], Q = \tmp [23]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6030 ($_DFF_P_) from module memset (D = \n [24], Q = \tmp [24]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6029 ($_DFF_P_) from module memset (D = \n [25], Q = \tmp [25]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6028 ($_DFF_P_) from module memset (D = \n [26], Q = \tmp [26]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6027 ($_DFF_P_) from module memset (D = \n [27], Q = \tmp [27]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6026 ($_DFF_P_) from module memset (D = \n [28], Q = \tmp [28]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6025 ($_DFF_P_) from module memset (D = \n [29], Q = \tmp [29]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6024 ($_DFF_P_) from module memset (D = \n [30], Q = \tmp [30]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6023 ($_DFF_P_) from module memset (D = \n [31], Q = \tmp [31]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6022 ($_DFF_P_) from module memset (D = \m [0], Q = \return_val [0]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6021 ($_DFF_P_) from module memset (D = \m [1], Q = \return_val [1]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6020 ($_DFF_P_) from module memset (D = \m [2], Q = \return_val [2]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6019 ($_DFF_P_) from module memset (D = \m [3], Q = \return_val [3]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6018 ($_DFF_P_) from module memset (D = \m [4], Q = \return_val [4]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6017 ($_DFF_P_) from module memset (D = \m [5], Q = \return_val [5]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6016 ($_DFF_P_) from module memset (D = \m [6], Q = \return_val [6]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6015 ($_DFF_P_) from module memset (D = \m [7], Q = \return_val [7]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6014 ($_DFF_P_) from module memset (D = \m [8], Q = \return_val [8]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6013 ($_DFF_P_) from module memset (D = \m [9], Q = \return_val [9]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6012 ($_DFF_P_) from module memset (D = \m [10], Q = \return_val [10]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6011 ($_DFF_P_) from module memset (D = \m [11], Q = \return_val [11]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6010 ($_DFF_P_) from module memset (D = \m [12], Q = \return_val [12]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6009 ($_DFF_P_) from module memset (D = \m [13], Q = \return_val [13]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6008 ($_DFF_P_) from module memset (D = \m [14], Q = \return_val [14]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6007 ($_DFF_P_) from module memset (D = \m [15], Q = \return_val [15]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6006 ($_DFF_P_) from module memset (D = \m [16], Q = \return_val [16]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6005 ($_DFF_P_) from module memset (D = \m [17], Q = \return_val [17]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6004 ($_DFF_P_) from module memset (D = \m [18], Q = \return_val [18]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6003 ($_DFF_P_) from module memset (D = \m [19], Q = \return_val [19]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6002 ($_DFF_P_) from module memset (D = \m [20], Q = \return_val [20]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6001 ($_DFF_P_) from module memset (D = \m [21], Q = \return_val [21]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$6000 ($_DFF_P_) from module memset (D = \m [22], Q = \return_val [22]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$5999 ($_DFF_P_) from module memset (D = \m [23], Q = \return_val [23]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$5998 ($_DFF_P_) from module memset (D = \m [24], Q = \return_val [24]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$5997 ($_DFF_P_) from module memset (D = \m [25], Q = \return_val [25]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$5996 ($_DFF_P_) from module memset (D = \m [26], Q = \return_val [26]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$5995 ($_DFF_P_) from module memset (D = \m [27], Q = \return_val [27]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$5994 ($_DFF_P_) from module memset (D = \m [28], Q = \return_val [28]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$5993 ($_DFF_P_) from module memset (D = \m [29], Q = \return_val [29]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$5992 ($_DFF_P_) from module memset (D = \m [30], Q = \return_val [30]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$5991 ($_DFF_P_) from module memset (D = \m [31], Q = \return_val [31]).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$5990 ($_DFF_P_) from module memset (D = $abc$5988$new_n687_, Q = \var2).
Adding EN signal on $abc$5988$auto$blifparse.cc:362:parse_blif$5989 ($_DFF_P_) from module memset (D = \cur_state [7], Q = \finish).
Setting constant 0-bit at position 0 on memset:memtroll.str_address[0]_1169 ($_DLATCH_N_) from module memset.
Setting constant 0-bit at position 0 on memset:memtroll.str_address[0]_1170 ($_DLATCH_N_) from module memset.
Setting constant 0-bit at position 0 on memset:memtroll.str_address[0]_1171 ($_DLATCH_N_) from module memset.
Setting constant 0-bit at position 0 on memset:memtroll.str_address[0]_1172 ($_DLATCH_N_) from module memset.
Setting constant 0-bit at position 0 on memset:memtroll.str_address[0]_1173 ($_DLATCH_N_) from module memset.
[#visit=136, #solve=0, #remove=5, time=0.00 sec.]

4.255. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.256. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 67 unused cells and 67 unused wires.
<suppressed ~68 debug messages>

4.257. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 3

4.258. Executing ABC pass (technology mapping using ABC).

4.258.1. Summary of detected clock domains:
  351 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.258.2. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 302 gates and 401 wires to a netlist network with 98 inputs and 84 outputs (dfl=2).

4.258.2.1. Executing ABC.
[Time = 0.10 sec.]

4.259. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=130, #solve=0, #remove=0, time=0.00 sec.]

4.260. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.261. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 482 unused wires.
<suppressed ~1 debug messages>

4.262. Executing OPT_DFF pass (perform DFF optimizations).
Handling always-active async load on memset:memtroll.str_in[0]_1181 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.str_in[0]_1180 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.str_in[0]_1179 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.str_in[0]_1178 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.str_in[0]_1177 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.str_in[0]_1176 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.str_in[0]_1175 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.str_in[0]_1174 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.memory_controller_out[0]_908 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.memory_controller_out[0]_907 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.memory_controller_out[0]_906 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.memory_controller_out[0]_905 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.memory_controller_out[0]_904 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.memory_controller_out[0]_903 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.memory_controller_out[0]_902 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
Handling always-active async load on memset:memtroll.memory_controller_out[0]_901 ($_DLATCH_N_) from module memset (changing to combinatorial circuit).
[#visit=114, #solve=0, #remove=0, time=0.00 sec.]

4.263. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.264. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.265. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6768 ($_DFF_P_) from module memset (D = \m [0], Q = \return_val [0]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6767 ($_DFF_P_) from module memset (D = \m [10], Q = \return_val [10]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6766 ($_DFF_P_) from module memset (D = \m [11], Q = \return_val [11]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6765 ($_DFF_P_) from module memset (D = \m [12], Q = \return_val [12]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6764 ($_DFF_P_) from module memset (D = \m [13], Q = \return_val [13]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6763 ($_DFF_P_) from module memset (D = \m [14], Q = \return_val [14]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6762 ($_DFF_P_) from module memset (D = \m [15], Q = \return_val [15]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6761 ($_DFF_P_) from module memset (D = \m [16], Q = \return_val [16]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6760 ($_DFF_P_) from module memset (D = \m [17], Q = \return_val [17]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6759 ($_DFF_P_) from module memset (D = \m [18], Q = \return_val [18]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6758 ($_DFF_P_) from module memset (D = \m [19], Q = \return_val [19]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6757 ($_DFF_P_) from module memset (D = \m [1], Q = \return_val [1]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6756 ($_DFF_P_) from module memset (D = \m [20], Q = \return_val [20]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6755 ($_DFF_P_) from module memset (D = \m [21], Q = \return_val [21]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6754 ($_DFF_P_) from module memset (D = \m [22], Q = \return_val [22]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6753 ($_DFF_P_) from module memset (D = \m [23], Q = \return_val [23]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6752 ($_DFF_P_) from module memset (D = \m [24], Q = \return_val [24]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6751 ($_DFF_P_) from module memset (D = \m [25], Q = \return_val [25]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6750 ($_DFF_P_) from module memset (D = \m [26], Q = \return_val [26]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6749 ($_DFF_P_) from module memset (D = \m [27], Q = \return_val [27]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6748 ($_DFF_P_) from module memset (D = \m [28], Q = \return_val [28]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6747 ($_DFF_P_) from module memset (D = \m [29], Q = \return_val [29]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6746 ($_DFF_P_) from module memset (D = \m [2], Q = \return_val [2]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6745 ($_DFF_P_) from module memset (D = \m [30], Q = \return_val [30]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6744 ($_DFF_P_) from module memset (D = \m [31], Q = \return_val [31]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6743 ($_DFF_P_) from module memset (D = \m [3], Q = \return_val [3]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6742 ($_DFF_P_) from module memset (D = \m [4], Q = \return_val [4]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6741 ($_DFF_P_) from module memset (D = \m [5], Q = \return_val [5]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6740 ($_DFF_P_) from module memset (D = \m [6], Q = \return_val [6]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6739 ($_DFF_P_) from module memset (D = \m [7], Q = \return_val [7]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6738 ($_DFF_P_) from module memset (D = \m [8], Q = \return_val [8]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6737 ($_DFF_P_) from module memset (D = \m [9], Q = \return_val [9]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6736 ($_DFF_P_) from module memset (D = \n [0], Q = \tmp [0]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6735 ($_DFF_P_) from module memset (D = \n [10], Q = \tmp [10]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6734 ($_DFF_P_) from module memset (D = \n [11], Q = \tmp [11]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6733 ($_DFF_P_) from module memset (D = \n [12], Q = \tmp [12]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6732 ($_DFF_P_) from module memset (D = \n [13], Q = \tmp [13]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6731 ($_DFF_P_) from module memset (D = \n [14], Q = \tmp [14]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6730 ($_DFF_P_) from module memset (D = \n [15], Q = \tmp [15]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6729 ($_DFF_P_) from module memset (D = \n [16], Q = \tmp [16]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6728 ($_DFF_P_) from module memset (D = \n [17], Q = \tmp [17]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6727 ($_DFF_P_) from module memset (D = \n [18], Q = \tmp [18]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6726 ($_DFF_P_) from module memset (D = \n [19], Q = \tmp [19]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6725 ($_DFF_P_) from module memset (D = \n [1], Q = \tmp [1]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6724 ($_DFF_P_) from module memset (D = \n [20], Q = \tmp [20]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6723 ($_DFF_P_) from module memset (D = \n [21], Q = \tmp [21]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6722 ($_DFF_P_) from module memset (D = \n [22], Q = \tmp [22]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6721 ($_DFF_P_) from module memset (D = \n [23], Q = \tmp [23]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6720 ($_DFF_P_) from module memset (D = \n [24], Q = \tmp [24]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6719 ($_DFF_P_) from module memset (D = \n [25], Q = \tmp [25]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6718 ($_DFF_P_) from module memset (D = \n [26], Q = \tmp [26]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6717 ($_DFF_P_) from module memset (D = \n [27], Q = \tmp [27]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6716 ($_DFF_P_) from module memset (D = \n [28], Q = \tmp [28]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6715 ($_DFF_P_) from module memset (D = \n [29], Q = \tmp [29]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6714 ($_DFF_P_) from module memset (D = \n [2], Q = \tmp [2]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6713 ($_DFF_P_) from module memset (D = \n [30], Q = \tmp [30]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6712 ($_DFF_P_) from module memset (D = \n [31], Q = \tmp [31]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6711 ($_DFF_P_) from module memset (D = \n [3], Q = \tmp [3]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6710 ($_DFF_P_) from module memset (D = \n [4], Q = \tmp [4]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6709 ($_DFF_P_) from module memset (D = \n [5], Q = \tmp [5]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6708 ($_DFF_P_) from module memset (D = \n [6], Q = \tmp [6]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6707 ($_DFF_P_) from module memset (D = \n [7], Q = \tmp [7]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6706 ($_DFF_P_) from module memset (D = \n [8], Q = \tmp [8]).
Adding EN signal on $abc$6703$auto$blifparse.cc:362:parse_blif$6705 ($_DFF_P_) from module memset (D = \n [9], Q = \tmp [9]).
[#visit=114, #solve=0, #remove=0, time=0.00 sec.]

4.266. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.267. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 64 unused cells and 64 unused wires.
<suppressed ~65 debug messages>

4.268. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 4

4.269. Executing ABC pass (technology mapping using ABC).

4.269.1. Summary of detected clock domains:
  271 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.269.2. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 238 gates and 304 wires to a netlist network with 66 inputs and 82 outputs (dfl=2).

4.269.2.1. Executing ABC.
[Time = 0.10 sec.]

4.270. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=114, #solve=0, #remove=0, time=0.00 sec.]

4.271. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.272. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 386 unused wires.
<suppressed ~1 debug messages>

4.273. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=114, #solve=0, #remove=0, time=0.00 sec.]

4.274. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.275. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.276. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7282 ($_DFF_P_) from module memset (D = \m [0], Q = \return_val [0]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7281 ($_DFF_P_) from module memset (D = \m [10], Q = \return_val [10]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7280 ($_DFF_P_) from module memset (D = \m [11], Q = \return_val [11]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7279 ($_DFF_P_) from module memset (D = \m [12], Q = \return_val [12]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7278 ($_DFF_P_) from module memset (D = \m [13], Q = \return_val [13]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7277 ($_DFF_P_) from module memset (D = \m [14], Q = \return_val [14]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7276 ($_DFF_P_) from module memset (D = \m [15], Q = \return_val [15]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7275 ($_DFF_P_) from module memset (D = \m [16], Q = \return_val [16]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7274 ($_DFF_P_) from module memset (D = \m [17], Q = \return_val [17]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7273 ($_DFF_P_) from module memset (D = \m [18], Q = \return_val [18]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7272 ($_DFF_P_) from module memset (D = \m [19], Q = \return_val [19]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7271 ($_DFF_P_) from module memset (D = \m [1], Q = \return_val [1]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7270 ($_DFF_P_) from module memset (D = \m [20], Q = \return_val [20]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7269 ($_DFF_P_) from module memset (D = \m [21], Q = \return_val [21]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7268 ($_DFF_P_) from module memset (D = \m [22], Q = \return_val [22]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7267 ($_DFF_P_) from module memset (D = \m [23], Q = \return_val [23]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7266 ($_DFF_P_) from module memset (D = \m [24], Q = \return_val [24]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7265 ($_DFF_P_) from module memset (D = \m [25], Q = \return_val [25]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7264 ($_DFF_P_) from module memset (D = \m [26], Q = \return_val [26]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7263 ($_DFF_P_) from module memset (D = \m [27], Q = \return_val [27]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7262 ($_DFF_P_) from module memset (D = \m [28], Q = \return_val [28]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7261 ($_DFF_P_) from module memset (D = \m [29], Q = \return_val [29]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7260 ($_DFF_P_) from module memset (D = \m [2], Q = \return_val [2]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7259 ($_DFF_P_) from module memset (D = \m [30], Q = \return_val [30]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7258 ($_DFF_P_) from module memset (D = \m [31], Q = \return_val [31]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7257 ($_DFF_P_) from module memset (D = \m [3], Q = \return_val [3]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7256 ($_DFF_P_) from module memset (D = \m [4], Q = \return_val [4]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7255 ($_DFF_P_) from module memset (D = \m [5], Q = \return_val [5]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7254 ($_DFF_P_) from module memset (D = \m [6], Q = \return_val [6]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7253 ($_DFF_P_) from module memset (D = \m [7], Q = \return_val [7]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7252 ($_DFF_P_) from module memset (D = \m [8], Q = \return_val [8]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7251 ($_DFF_P_) from module memset (D = \m [9], Q = \return_val [9]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7250 ($_DFF_P_) from module memset (D = \n [0], Q = \tmp [0]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7249 ($_DFF_P_) from module memset (D = \n [10], Q = \tmp [10]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7248 ($_DFF_P_) from module memset (D = \n [11], Q = \tmp [11]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7247 ($_DFF_P_) from module memset (D = \n [12], Q = \tmp [12]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7246 ($_DFF_P_) from module memset (D = \n [13], Q = \tmp [13]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7245 ($_DFF_P_) from module memset (D = \n [14], Q = \tmp [14]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7244 ($_DFF_P_) from module memset (D = \n [15], Q = \tmp [15]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7243 ($_DFF_P_) from module memset (D = \n [16], Q = \tmp [16]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7242 ($_DFF_P_) from module memset (D = \n [17], Q = \tmp [17]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7241 ($_DFF_P_) from module memset (D = \n [18], Q = \tmp [18]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7240 ($_DFF_P_) from module memset (D = \n [19], Q = \tmp [19]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7239 ($_DFF_P_) from module memset (D = \n [1], Q = \tmp [1]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7238 ($_DFF_P_) from module memset (D = \n [20], Q = \tmp [20]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7237 ($_DFF_P_) from module memset (D = \n [21], Q = \tmp [21]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7236 ($_DFF_P_) from module memset (D = \n [22], Q = \tmp [22]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7235 ($_DFF_P_) from module memset (D = \n [23], Q = \tmp [23]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7234 ($_DFF_P_) from module memset (D = \n [24], Q = \tmp [24]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7233 ($_DFF_P_) from module memset (D = \n [25], Q = \tmp [25]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7232 ($_DFF_P_) from module memset (D = \n [26], Q = \tmp [26]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7231 ($_DFF_P_) from module memset (D = \n [27], Q = \tmp [27]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7230 ($_DFF_P_) from module memset (D = \n [28], Q = \tmp [28]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7229 ($_DFF_P_) from module memset (D = \n [29], Q = \tmp [29]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7228 ($_DFF_P_) from module memset (D = \n [2], Q = \tmp [2]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7227 ($_DFF_P_) from module memset (D = \n [30], Q = \tmp [30]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7226 ($_DFF_P_) from module memset (D = \n [31], Q = \tmp [31]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7225 ($_DFF_P_) from module memset (D = \n [3], Q = \tmp [3]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7224 ($_DFF_P_) from module memset (D = \n [4], Q = \tmp [4]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7223 ($_DFF_P_) from module memset (D = \n [5], Q = \tmp [5]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7222 ($_DFF_P_) from module memset (D = \n [6], Q = \tmp [6]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7221 ($_DFF_P_) from module memset (D = \n [7], Q = \tmp [7]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7220 ($_DFF_P_) from module memset (D = \n [8], Q = \tmp [8]).
Adding EN signal on $abc$7218$auto$blifparse.cc:362:parse_blif$7219 ($_DFF_P_) from module memset (D = \n [9], Q = \tmp [9]).
[#visit=114, #solve=0, #remove=0, time=0.00 sec.]

4.277. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.278. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 64 unused cells and 64 unused wires.
<suppressed ~65 debug messages>

4.279. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).
select with DFL2 synthesis (thresh-logic=0.920000, thresh_dff=0.980000)

4.280. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
select CE remove strategy (thresh_logic=0.920000, thresh_dff=0.980000, dfl=2)

4.281. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.282. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.283. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.284. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.285. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.286. Executing OPT_SHARE pass.

4.287. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on memset:return_val[0]_7539 ($_DFF_P_) from module memset (D = \m [0], Q = \return_val [0]).
Adding EN signal on memset:return_val[10]_7540 ($_DFF_P_) from module memset (D = \m [10], Q = \return_val [10]).
Adding EN signal on memset:return_val[11]_7541 ($_DFF_P_) from module memset (D = \m [11], Q = \return_val [11]).
Adding EN signal on memset:return_val[12]_7542 ($_DFF_P_) from module memset (D = \m [12], Q = \return_val [12]).
Adding EN signal on memset:return_val[13]_7543 ($_DFF_P_) from module memset (D = \m [13], Q = \return_val [13]).
Adding EN signal on memset:return_val[14]_7544 ($_DFF_P_) from module memset (D = \m [14], Q = \return_val [14]).
Adding EN signal on memset:return_val[15]_7545 ($_DFF_P_) from module memset (D = \m [15], Q = \return_val [15]).
Adding EN signal on memset:return_val[16]_7546 ($_DFF_P_) from module memset (D = \m [16], Q = \return_val [16]).
Adding EN signal on memset:return_val[17]_7547 ($_DFF_P_) from module memset (D = \m [17], Q = \return_val [17]).
Adding EN signal on memset:return_val[18]_7548 ($_DFF_P_) from module memset (D = \m [18], Q = \return_val [18]).
Adding EN signal on memset:return_val[19]_7549 ($_DFF_P_) from module memset (D = \m [19], Q = \return_val [19]).
Adding EN signal on memset:return_val[1]_7550 ($_DFF_P_) from module memset (D = \m [1], Q = \return_val [1]).
Adding EN signal on memset:return_val[20]_7551 ($_DFF_P_) from module memset (D = \m [20], Q = \return_val [20]).
Adding EN signal on memset:return_val[21]_7552 ($_DFF_P_) from module memset (D = \m [21], Q = \return_val [21]).
Adding EN signal on memset:return_val[22]_7553 ($_DFF_P_) from module memset (D = \m [22], Q = \return_val [22]).
Adding EN signal on memset:return_val[23]_7554 ($_DFF_P_) from module memset (D = \m [23], Q = \return_val [23]).
Adding EN signal on memset:return_val[24]_7555 ($_DFF_P_) from module memset (D = \m [24], Q = \return_val [24]).
Adding EN signal on memset:return_val[25]_7556 ($_DFF_P_) from module memset (D = \m [25], Q = \return_val [25]).
Adding EN signal on memset:return_val[26]_7557 ($_DFF_P_) from module memset (D = \m [26], Q = \return_val [26]).
Adding EN signal on memset:return_val[27]_7558 ($_DFF_P_) from module memset (D = \m [27], Q = \return_val [27]).
Adding EN signal on memset:return_val[28]_7559 ($_DFF_P_) from module memset (D = \m [28], Q = \return_val [28]).
Adding EN signal on memset:return_val[29]_7560 ($_DFF_P_) from module memset (D = \m [29], Q = \return_val [29]).
Adding EN signal on memset:return_val[2]_7561 ($_DFF_P_) from module memset (D = \m [2], Q = \return_val [2]).
Adding EN signal on memset:return_val[30]_7562 ($_DFF_P_) from module memset (D = \m [30], Q = \return_val [30]).
Adding EN signal on memset:return_val[31]_7563 ($_DFF_P_) from module memset (D = \m [31], Q = \return_val [31]).
Adding EN signal on memset:return_val[3]_7564 ($_DFF_P_) from module memset (D = \m [3], Q = \return_val [3]).
Adding EN signal on memset:return_val[4]_7565 ($_DFF_P_) from module memset (D = \m [4], Q = \return_val [4]).
Adding EN signal on memset:return_val[5]_7566 ($_DFF_P_) from module memset (D = \m [5], Q = \return_val [5]).
Adding EN signal on memset:return_val[6]_7567 ($_DFF_P_) from module memset (D = \m [6], Q = \return_val [6]).
Adding EN signal on memset:return_val[7]_7568 ($_DFF_P_) from module memset (D = \m [7], Q = \return_val [7]).
Adding EN signal on memset:return_val[8]_7569 ($_DFF_P_) from module memset (D = \m [8], Q = \return_val [8]).
Adding EN signal on memset:return_val[9]_7570 ($_DFF_P_) from module memset (D = \m [9], Q = \return_val [9]).
Adding EN signal on memset:tmp[0]_7571 ($_DFF_P_) from module memset (D = \n [0], Q = \tmp [0]).
Adding EN signal on memset:tmp[10]_7572 ($_DFF_P_) from module memset (D = \n [10], Q = \tmp [10]).
Adding EN signal on memset:tmp[11]_7573 ($_DFF_P_) from module memset (D = \n [11], Q = \tmp [11]).
Adding EN signal on memset:tmp[12]_7574 ($_DFF_P_) from module memset (D = \n [12], Q = \tmp [12]).
Adding EN signal on memset:tmp[13]_7575 ($_DFF_P_) from module memset (D = \n [13], Q = \tmp [13]).
Adding EN signal on memset:tmp[14]_7576 ($_DFF_P_) from module memset (D = \n [14], Q = \tmp [14]).
Adding EN signal on memset:tmp[15]_7577 ($_DFF_P_) from module memset (D = \n [15], Q = \tmp [15]).
Adding EN signal on memset:tmp[16]_7578 ($_DFF_P_) from module memset (D = \n [16], Q = \tmp [16]).
Adding EN signal on memset:tmp[17]_7579 ($_DFF_P_) from module memset (D = \n [17], Q = \tmp [17]).
Adding EN signal on memset:tmp[18]_7580 ($_DFF_P_) from module memset (D = \n [18], Q = \tmp [18]).
Adding EN signal on memset:tmp[19]_7581 ($_DFF_P_) from module memset (D = \n [19], Q = \tmp [19]).
Adding EN signal on memset:tmp[1]_7582 ($_DFF_P_) from module memset (D = \n [1], Q = \tmp [1]).
Adding EN signal on memset:tmp[20]_7583 ($_DFF_P_) from module memset (D = \n [20], Q = \tmp [20]).
Adding EN signal on memset:tmp[21]_7584 ($_DFF_P_) from module memset (D = \n [21], Q = \tmp [21]).
Adding EN signal on memset:tmp[22]_7585 ($_DFF_P_) from module memset (D = \n [22], Q = \tmp [22]).
Adding EN signal on memset:tmp[23]_7586 ($_DFF_P_) from module memset (D = \n [23], Q = \tmp [23]).
Adding EN signal on memset:tmp[24]_7587 ($_DFF_P_) from module memset (D = \n [24], Q = \tmp [24]).
Adding EN signal on memset:tmp[25]_7588 ($_DFF_P_) from module memset (D = \n [25], Q = \tmp [25]).
Adding EN signal on memset:tmp[26]_7589 ($_DFF_P_) from module memset (D = \n [26], Q = \tmp [26]).
Adding EN signal on memset:tmp[27]_7590 ($_DFF_P_) from module memset (D = \n [27], Q = \tmp [27]).
Adding EN signal on memset:tmp[28]_7591 ($_DFF_P_) from module memset (D = \n [28], Q = \tmp [28]).
Adding EN signal on memset:tmp[29]_7592 ($_DFF_P_) from module memset (D = \n [29], Q = \tmp [29]).
Adding EN signal on memset:tmp[2]_7593 ($_DFF_P_) from module memset (D = \n [2], Q = \tmp [2]).
Adding EN signal on memset:tmp[30]_7594 ($_DFF_P_) from module memset (D = \n [30], Q = \tmp [30]).
Adding EN signal on memset:tmp[31]_7595 ($_DFF_P_) from module memset (D = \n [31], Q = \tmp [31]).
Adding EN signal on memset:tmp[3]_7596 ($_DFF_P_) from module memset (D = \n [3], Q = \tmp [3]).
Adding EN signal on memset:tmp[4]_7597 ($_DFF_P_) from module memset (D = \n [4], Q = \tmp [4]).
Adding EN signal on memset:tmp[5]_7598 ($_DFF_P_) from module memset (D = \n [5], Q = \tmp [5]).
Adding EN signal on memset:tmp[6]_7599 ($_DFF_P_) from module memset (D = \n [6], Q = \tmp [6]).
Adding EN signal on memset:tmp[7]_7600 ($_DFF_P_) from module memset (D = \n [7], Q = \tmp [7]).
Adding EN signal on memset:tmp[8]_7601 ($_DFF_P_) from module memset (D = \n [8], Q = \tmp [8]).
Adding EN signal on memset:tmp[9]_7602 ($_DFF_P_) from module memset (D = \n [9], Q = \tmp [9]).
[#visit=114, #solve=0, #remove=0, time=0.00 sec.]

4.288. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 64 unused cells and 64 unused wires.
<suppressed ~65 debug messages>

4.289. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.290. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.291. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.292. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.293. Executing OPT_SHARE pass.

4.294. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=114, #solve=0, #remove=0, time=0.00 sec.]

4.295. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.296. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 2

4.297. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.298. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.299. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.300. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.301. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.302. Executing OPT_SHARE pass.

4.303. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=114, #solve=0, #remove=0, time=0.00 sec.]

4.304. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.305. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.306. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.307. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.308. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.309. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.310. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.311. Executing OPT_SHARE pass.

4.312. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=114, #solve=0, #remove=0, time=0.00 sec.]

4.313. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=114, #solve=0, #remove=0, time=0.00 sec.]

4.314. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.315. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.316. Executing BMUXMAP pass.

4.317. Executing DEMUXMAP pass.

4.318. Executing ABC pass (technology mapping using ABC).

4.318.1. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Extracted 92 gates and 172 wires to a netlist network with 80 inputs and 20 outputs (dfl=1).

4.318.1.1. Executing ABC.
DE:   Version : 7.5
DE:   #PIs =  80  #Luts =    37  Max Lvl =   3  Avg Lvl =   1.20  [   0.06 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  80  #Luts =    35  Max Lvl =   3  Avg Lvl =   1.20  [   0.08 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.12 sec. at Pass 2]{map}[6]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.17 sec. at Pass 3]{postMap}[12]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.19 sec. at Pass 4]{map}[36]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.56 sec. at Pass 5]{postMap}[72]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.53 sec. at Pass 6]{pushMap}[72]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.54 sec. at Pass 7]{pushMap}[72]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.54 sec. at Pass 7]{pushMap}[72]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.50 sec. at Pass 8]{finalMap}[72]
DE:   
DE:   total time =    3.37 sec.
[Time = 5.43 sec.]

4.319. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.320. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.321. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.322. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.323. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.324. Executing OPT_SHARE pass.

4.325. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=114, #solve=0, #remove=0, time=0.00 sec.]

4.326. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 172 unused wires.
<suppressed ~1 debug messages>

4.327. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.328. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

4.329. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.330. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.331. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.332. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.333. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.334. Executing OPT_SHARE pass.

4.335. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=114, #solve=0, #remove=0, time=0.00 sec.]

4.336. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.337. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.338. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.339. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.340. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.341. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.342. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.343. Executing OPT_SHARE pass.

4.344. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=114, #solve=0, #remove=0, time=0.00 sec.]

4.345. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=114, #solve=0, #remove=0, time=0.00 sec.]

4.346. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..

4.347. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.348. Printing statistics.

=== memset ===

   Number of wires:                 75
   Number of wire bits:            697
   Number of public wires:          38
   Number of public wire bits:     584
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                146
     $_DFFE_PN_                     64
     $_DFF_P_                       18
     $_DLATCH_P_                    32
     $lut                           31
     TDP_RAM18KX2                    1

4.349. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.350. Executing RS_DFFSR_CONV pass.

4.351. Printing statistics.

=== memset ===

   Number of wires:                 75
   Number of wire bits:            697
   Number of public wires:          38
   Number of public wire bits:     584
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                146
     $_DFFE_PP0N_                   64
     $_DFF_P_                       18
     $_DLATCH_P_                    32
     $lut                           31
     TDP_RAM18KX2                    1

4.352. Executing TECHMAP pass (map to technology primitives).

4.352.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.352.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

4.352.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~393 debug messages>

4.353. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.
<suppressed ~845 debug messages>

4.354. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.355. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.356. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
<suppressed ~246 debug messages>
Removed a total of 82 cells.

4.357. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.358. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 643 unused wires.
<suppressed ~1 debug messages>

4.359. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.
<suppressed ~3 debug messages>

4.360. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.361. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.362. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.363. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.364. Executing OPT_SHARE pass.

4.365. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.366. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.367. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.368. Executing TECHMAP pass (map to technology primitives).

4.368.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.368.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

4.369. Executing ABC pass (technology mapping using ABC).

4.369.1. Extracting gate netlist of module `\memset' to `<abc-temp-dir>/input.blif'..
Extracted 111 gates and 193 wires to a netlist network with 80 inputs and 20 outputs (dfl=1).

4.369.1.1. Executing ABC.
DE:   Version : 7.5
DE:   #PIs =  80  #Luts =    32  Max Lvl =   3  Avg Lvl =   1.20  [   0.08 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  80  #Luts =    32  Max Lvl =   3  Avg Lvl =   1.20  [   0.09 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.09 sec. at Pass 2]{map}[6]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.14 sec. at Pass 3]{postMap}[12]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.20 sec. at Pass 4]{map}[36]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.54 sec. at Pass 5]{postMap}[72]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.54 sec. at Pass 6]{pushMap}[72]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.54 sec. at Pass 7]{pushMap}[72]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.56 sec. at Pass 7]{pushMap}[72]
DE:   #PIs =  80  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.20  [   0.51 sec. at Pass 8]{finalMap}[72]
DE:   
DE:   total time =    3.38 sec.
[Time = 5.43 sec.]

4.370. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

4.371. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.372. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \memset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.373. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \memset.
Performed a total of 0 changes.

4.374. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\memset'.
Removed a total of 0 cells.

4.375. Executing OPT_SHARE pass.

4.376. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.377. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 189 unused wires.
<suppressed ~1 debug messages>

4.378. Executing OPT_EXPR pass (perform const folding).
Optimizing module memset.

RUN-OPT ITERATIONS DONE : 1

4.379. Executing HIERARCHY pass (managing design hierarchy).

4.379.1. Analyzing design hierarchy..
Top module:  \memset

4.379.2. Analyzing design hierarchy..
Top module:  \memset
Removed 0 unused modules.

4.380. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \memset..
Removed 0 unused cells and 17 unused wires.
<suppressed ~17 debug messages>

4.381. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__IO_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.382. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Replacing existing blackbox module `\BOOT_CLOCK' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:9.1-14.10.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:24.1-31.10.
Generating RTLIL representation for module `\CARRY'.
Replacing existing blackbox module `\CARRY_CHAIN' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:41.1-48.10.
Generating RTLIL representation for module `\CARRY_CHAIN'.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:58.1-63.10.
Generating RTLIL representation for module `\CLK_BUF'.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:73.1-81.10.
Generating RTLIL representation for module `\DFFNRE'.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:91.1-99.10.
Generating RTLIL representation for module `\DFFRE'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:109.1-143.10.
Generating RTLIL representation for module `\DSP19X2'.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:153.1-179.10.
Generating RTLIL representation for module `\DSP38'.
Replacing existing blackbox module `\FIFO18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:189.1-236.10.
Generating RTLIL representation for module `\FIFO18KX2'.
Replacing existing blackbox module `\FIFO36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:246.1-271.10.
Generating RTLIL representation for module `\FIFO36K'.
Replacing existing blackbox module `\I_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:281.1-291.10.
Generating RTLIL representation for module `\I_BUF'.
Replacing existing blackbox module `\I_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:301.1-313.10.
Generating RTLIL representation for module `\I_BUF_DS'.
Replacing existing blackbox module `\I_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:323.1-330.10.
Generating RTLIL representation for module `\I_DDR'.
Replacing existing blackbox module `\I_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:340.1-351.10.
Generating RTLIL representation for module `\I_DELAY'.
Replacing existing blackbox module `\I_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:361.1-379.10.
Generating RTLIL representation for module `\I_SERDES'.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:389.1-395.10.
Generating RTLIL representation for module `\LUT1'.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:405.1-411.10.
Generating RTLIL representation for module `\LUT2'.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:421.1-427.10.
Generating RTLIL representation for module `\LUT3'.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:437.1-443.10.
Generating RTLIL representation for module `\LUT4'.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:453.1-459.10.
Generating RTLIL representation for module `\LUT5'.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:469.1-475.10.
Generating RTLIL representation for module `\LUT6'.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:485.1-497.10.
Generating RTLIL representation for module `\O_BUF'.
Replacing existing blackbox module `\O_BUFT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:507.1-519.10.
Generating RTLIL representation for module `\O_BUFT'.
Replacing existing blackbox module `\O_BUFT_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:529.1-541.10.
Generating RTLIL representation for module `\O_BUFT_DS'.
Replacing existing blackbox module `\O_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:551.1-563.10.
Generating RTLIL representation for module `\O_BUF_DS'.
Replacing existing blackbox module `\O_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:573.1-580.10.
Generating RTLIL representation for module `\O_DDR'.
Replacing existing blackbox module `\O_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:590.1-601.10.
Generating RTLIL representation for module `\O_DELAY'.
Replacing existing blackbox module `\O_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:611.1-627.10.
Generating RTLIL representation for module `\O_SERDES'.
Replacing existing blackbox module `\O_SERDES_CLK' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:637.1-646.10.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Replacing existing blackbox module `\PLL' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:656.1-671.10.
Generating RTLIL representation for module `\PLL'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_M' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:681.1-695.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_S' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:705.1-722.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M0' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:732.1-771.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M1' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:781.1-820.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Replacing existing blackbox module `\SOC_FPGA_INTF_DMA' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:830.1-836.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Replacing existing blackbox module `\SOC_FPGA_INTF_IRQ' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:846.1-852.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Replacing existing blackbox module `\SOC_FPGA_INTF_JTAG' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:862.1-870.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Replacing existing blackbox module `\SOC_FPGA_TEMPERATURE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:880.1-888.10.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:898.1-951.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:961.1-990.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1007.1-1012.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1020.1-1025.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1034.1-1040.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1048.1-1054.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1063.1-1069.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1078.1-1084.10.
Generating RTLIL representation for module `\LATCHNS'.
Replacing existing blackbox module `\RS_DSP' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1091.1-1116.10.
Generating RTLIL representation for module `\RS_DSP'.
Replacing existing blackbox module `\RS_DSP_MULT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1122.1-1135.10.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Replacing existing blackbox module `\RS_DSP_MULT_REGIN' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1140.1-1156.10.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Replacing existing blackbox module `\RS_DSP_MULT_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1161.1-1178.10.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULT_REGIN_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1184.1-1202.10.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTADD' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1208.1-1235.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Replacing existing blackbox module `\RS_DSP_MULTADD_REGIN' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1240.1-1266.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Replacing existing blackbox module `\RS_DSP_MULTADD_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1271.1-1297.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTADD_REGIN_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1302.1-1327.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTACC' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1332.1-1353.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Replacing existing blackbox module `\RS_DSP_MULTACC_REGIN' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1358.1-1382.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Replacing existing blackbox module `\RS_DSP_MULTACC_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1387.1-1409.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTACC_REGIN_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1414.1-1436.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Replacing existing blackbox module `\RS_TDP36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1443.1-1514.10.
Generating RTLIL representation for module `\RS_TDP36K'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1520.1-1570.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1575.1-1609.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1614.1-1660.12.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.383. Executing TECHMAP pass (map to technology primitives).

4.383.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.383.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

4.384. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port memset.c using rs__I_BUF.
Mapping port memset.clk using rs__I_BUF.
Mapping port memset.finish using rs__O_BUF.
Mapping port memset.m using rs__I_BUF.
Mapping port memset.memory_controller_address using rs__O_BUF.
Mapping port memset.memory_controller_in using rs__O_BUF.
Mapping port memset.memory_controller_out using rs__O_BUF.
Mapping port memset.memory_controller_write_enable using rs__O_BUF.
Mapping port memset.n using rs__I_BUF.
Mapping port memset.reset using rs__I_BUF.
Mapping port memset.return_val using rs__O_BUF.
Mapping port memset.start using rs__I_BUF.

4.385. Executing TECHMAP pass (map to technology primitives).

4.385.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.385.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~235 debug messages>

4.386. Printing statistics.

=== memset ===

   Number of wires:                757
   Number of wire bits:           1436
   Number of public wires:          21
   Number of public wire bits:     407
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                375
     $lut                           31
     DFFRE                          82
     I_BUF                          99
     LATCH                          32
     O_BUF                         130
     TDP_RAM18KX2                    1

4.387. Executing TECHMAP pass (map to technology primitives).

4.387.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_11_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.387.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~190 debug messages>

4.388. Printing statistics.

=== memset ===

   Number of wires:                819
   Number of wire bits:           1591
   Number of public wires:          21
   Number of public wire bits:     407
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                375
     DFFRE                          82
     I_BUF                          99
     LATCH                          32
     LUT2                           12
     LUT3                            2
     LUT4                            3
     LUT5                            2
     LUT6                           12
     O_BUF                         130
     TDP_RAM18KX2                    1

   Number of LUTs:                  31
   Number of REGs:                  82
   Number of CARRY ADDERs:           0

5. Executing Verilog backend.
Dumping module `\memset'.

6. Executing BLIF backend.

7. Executing Verilog backend.
Dumping module `\memset'.
Dumping module `\interface_memset'.

8. Executing BLIF backend.

9. Executing Verilog backend.
Dumping module `\fabric_memset'.

10. Executing BLIF backend.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 247ef5ede5, CPU: user 2.48s system 0.19s, MEM: 36.95 MB peak
Yosys 0.18+10 (git sha1 07c42e625, gcc 11.2.1 -fPIC -Os)
Time spent: 98% 10x abc (187 sec), 0% 66x opt_expr (0 sec), ...
