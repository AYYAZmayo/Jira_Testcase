/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.09
Build    : 1.2.9
Hash     : 59d0f0d
Date     : Sep 27 2024
Type     : Engineering
Log Time   : Fri Sep 27 10:33:08 2024 GMT
/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.09
Build    : 1.2.9
Hash     : 59d0f0d
Date     : Sep 27 2024
Type     : Engineering
Log Time   : Fri Sep 27 06:20:29 2024 GMT
/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.09
Build    : 1.2.9
Hash     : 59d0f0d
Date     : Sep 27 2024
Type     : Engineering
Log Time   : Fri Sep 27 06:20:29 2024 GMT

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 52417c1f4, gcc 11.2.1 -fPIC -Os)


-- Executing script file `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/bitonic_mesh/run_1/synth_1_1/analysis/bitonic_mesh_analyzer.cmd' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_27_2024_09_15_02/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_27_2024_09_15_02/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FCLK_BUF'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_FAB'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\MIPI_RX'.
Generating RTLIL representation for module `\MIPI_TX'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_FAB'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/addersub_slt.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/addersub_slt.v' to AST representation.
Generating RTLIL representation for module `\addersub'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/branchresolve.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/branchresolve.v' to AST representation.
Generating RTLIL representation for module `\branchresolve'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/components.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/components.v' to AST representation.
Generating RTLIL representation for module `\register'.
Generating RTLIL representation for module `\register_sync'.
Generating RTLIL representation for module `\pipereg'.
Generating RTLIL representation for module `\onecyclestall'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/components.v:121.3-127.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\multicyclestall'.
Generating RTLIL representation for module `\pipedelayreg'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/components.v:178.3-184.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\fakedelay'.
Generating RTLIL representation for module `\zeroer'.
Generating RTLIL representation for module `\nop'.
Generating RTLIL representation for module `\constant'.
Generating RTLIL representation for module `\branch_detector'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/data_mem_stall.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/data_mem_stall.v' to AST representation.
Generating RTLIL representation for module `\data_mem'.
Generating RTLIL representation for module `\store_data_translator'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/data_mem_stall.v:173.1-219.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\load_data_translator'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/data_mem_stall.v:243.1-267.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/fifo.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/fifo.v' to AST representation.
Generating RTLIL representation for module `\fifo'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/hi_reg.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/hi_reg.v' to AST representation.
Generating RTLIL representation for module `\hi_reg'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/ifetch_pipe.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/ifetch_pipe.v' to AST representation.
Generating RTLIL representation for module `\ifetch'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/isa.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/isa.v' to AST representation.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/lo_reg.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/lo_reg.v' to AST representation.
Generating RTLIL representation for module `\lo_reg'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/logic_unit.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/logic_unit.v' to AST representation.
Generating RTLIL representation for module `\logic_unit'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/logic_unit.v:26.1-36.12 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/lpm_counter.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/lpm_counter.v' to AST representation.
Generating RTLIL representation for module `\lpm_counter'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/merge26lo.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/merge26lo.v' to AST representation.
Generating RTLIL representation for module `\merge26lo'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/mul.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/mul.v' to AST representation.
Generating RTLIL representation for module `\mul'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/pcadder.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/pcadder.v' to AST representation.
Generating RTLIL representation for module `\pcadder'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/reg_file.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/reg_file.v' to AST representation.
Generating RTLIL representation for module `\reg_file'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/shifter_perbit_pipe.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/shifter_perbit_pipe.v' to AST representation.
Generating RTLIL representation for module `\shifter'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/signext16.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/signext16.v' to AST representation.
Generating RTLIL representation for module `\signext16'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/system.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/system.v' to AST representation.
Generating RTLIL representation for module `\system'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/system.v:440.1-871.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/system.v:873.1-878.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/system.v:880.1-1352.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/system.v:1354.1-1668.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/system.v:1701: Warning: Identifier `\ctrl_ifetch_squashn' is implicitly declared.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/system100.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/system100.v' to AST representation.
Generating RTLIL representation for module `\system100'.
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/t_dpram_sclk_be.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/t_dpram_sclk_be.v' to AST representation.
Generating RTLIL representation for module `\t_dpram_sclk_be'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/t_dpram_sclka.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/t_dpram_sclka.v' to AST representation.
Generating RTLIL representation for module `\t_dpram_sclka'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/t_dpram_sclkb.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/t_dpram_sclkb.v' to AST representation.
Generating RTLIL representation for module `\t_dpram_sclkb'.
Successfully finished Verilog frontend.

-- Running command `hierarchy -top system100' --

24. Executing HIERARCHY pass (managing design hierarchy).

24.1. Analyzing design hierarchy..
Top module:  \system100
Used module:     \fifo
Used module:     \system
Used module:         \pipereg
Used module:         \zeroer
Used module:         \nop
Used module:         \fakedelay
Used module:         \constant
Used module:         \lo_reg
Used module:         \hi_reg
Used module:         \branchresolve
Used module:         \merge26lo
Used module:         \reg_file
Used module:             \t_dpram_sclka
Used module:         \signext16
Used module:         \pcadder
Used module:         \data_mem
Used module:             \onecyclestall
Used module:             \t_dpram_sclk_be
Used module:             \load_data_translator
Used module:             \store_data_translator
Used module:             \register
Used module:         \ifetch
Used module:             \t_dpram_sclkb
Used module:             \lpm_counter
Used module:         \mul
Used module:         \shifter
Used module:         \logic_unit
Used module:         \addersub
Parameter \WIDTH = 2

24.2. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \WIDTH = 2
Generating RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000000010'.
Parameter \AWIDTH = 8
Parameter \DWIDTH = 32
Parameter \DEPTH = 256

24.3. Executing AST frontend in derive mode using pre-parsed AST for module `\t_dpram_sclkb'.
Parameter \AWIDTH = 8
Parameter \DWIDTH = 32
Parameter \DEPTH = 256
Generating RTLIL representation for module `$paramod$8a1aeca44f1ec31328d024f5f4db4c4640aa24b1\t_dpram_sclkb'.
Parameter \WIDTH = 1

24.4. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \WIDTH = 1
Generating RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000000001'.
Parameter \WIDTH = 30

24.5. Executing AST frontend in derive mode using pre-parsed AST for module `\lpm_counter'.
Parameter \WIDTH = 30
Generating RTLIL representation for module `$paramod\lpm_counter\WIDTH=s32'00000000000000000000000000011110'.
Parameter \AWIDTH = 5
Parameter \DWIDTH = 32
Parameter \DEPTH = 32

24.6. Executing AST frontend in derive mode using pre-parsed AST for module `\t_dpram_sclka'.
Parameter \AWIDTH = 5
Parameter \DWIDTH = 32
Parameter \DEPTH = 32
Generating RTLIL representation for module `$paramod$56a3c3dee00f7dfe3de378355f714859c4ad2fd3\t_dpram_sclka'.
Parameter \AWIDTH = 5
Parameter \DWIDTH = 32
Parameter \DEPTH = 32
Found cached RTLIL representation for module `$paramod$56a3c3dee00f7dfe3de378355f714859c4ad2fd3\t_dpram_sclka'.
Parameter \WIDTH = 1
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000000001'.
Parameter \WIDTH = 1
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000000001'.
Parameter \WIDTH = 5

24.7. Executing AST frontend in derive mode using pre-parsed AST for module `\pipereg'.
Parameter \WIDTH = 5
Generating RTLIL representation for module `$paramod\pipereg\WIDTH=s32'00000000000000000000000000000101'.
Parameter \WIDTH = 6

24.8. Executing AST frontend in derive mode using pre-parsed AST for module `\pipereg'.
Parameter \WIDTH = 6
Generating RTLIL representation for module `$paramod\pipereg\WIDTH=s32'00000000000000000000000000000110'.
Parameter \WIDTH = 6
Found cached RTLIL representation for module `$paramod\pipereg\WIDTH=s32'00000000000000000000000000000110'.
Parameter \WIDTH = 5

24.9. Executing AST frontend in derive mode using pre-parsed AST for module `\zeroer'.
Parameter \WIDTH = 5
Generating RTLIL representation for module `$paramod\zeroer\WIDTH=s32'00000000000000000000000000000101'.
Parameter \WIDTH = 5
Found cached RTLIL representation for module `$paramod\zeroer\WIDTH=s32'00000000000000000000000000000101'.
Parameter \WIDTH = 5
Found cached RTLIL representation for module `$paramod\zeroer\WIDTH=s32'00000000000000000000000000000101'.
Parameter \WIDTH = 32

24.10. Executing AST frontend in derive mode using pre-parsed AST for module `\nop'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\nop\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

24.11. Executing AST frontend in derive mode using pre-parsed AST for module `\fakedelay'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\fakedelay\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

24.12. Executing AST frontend in derive mode using pre-parsed AST for module `\pipereg'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\pipereg\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 5
Found cached RTLIL representation for module `$paramod\pipereg\WIDTH=s32'00000000000000000000000000000101'.
Parameter \WIDTH = 5
Found cached RTLIL representation for module `$paramod\pipereg\WIDTH=s32'00000000000000000000000000000101'.
Parameter \WIDTH = 26

24.13. Executing AST frontend in derive mode using pre-parsed AST for module `\pipereg'.
Parameter \WIDTH = 26
Generating RTLIL representation for module `$paramod\pipereg\WIDTH=s32'00000000000000000000000000011010'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\pipereg\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Parameter \VAL = 31

24.14. Executing AST frontend in derive mode using pre-parsed AST for module `\constant'.
Parameter \WIDTH = 32
Parameter \VAL = 31
Generating RTLIL representation for module `$paramod$026b8bef4e8f300040e00233ac4814dd51bc5fa2\constant'.
Parameter \WIDTH = 32
Parameter \VAL = 16

24.15. Executing AST frontend in derive mode using pre-parsed AST for module `\constant'.
Parameter \WIDTH = 32
Parameter \VAL = 16
Generating RTLIL representation for module `$paramod$836606f854671b45ed167eb5e3a33c1ab545c97e\constant'.
Parameter \WIDTH = 32
Parameter \VAL = 0

24.16. Executing AST frontend in derive mode using pre-parsed AST for module `\constant'.
Parameter \WIDTH = 32
Parameter \VAL = 0
Generating RTLIL representation for module `$paramod$5bef9758c56d3128c8e7c3be881dfc78f4fc49cc\constant'.
Parameter \WIDTH = 32

24.17. Executing AST frontend in derive mode using pre-parsed AST for module `\lo_reg'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\lo_reg\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

24.18. Executing AST frontend in derive mode using pre-parsed AST for module `\hi_reg'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\hi_reg\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

24.19. Executing AST frontend in derive mode using pre-parsed AST for module `\branchresolve'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\branchresolve\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

24.20. Executing AST frontend in derive mode using pre-parsed AST for module `\mul'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\mul\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

24.21. Executing AST frontend in derive mode using pre-parsed AST for module `\shifter'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\shifter\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

24.22. Executing AST frontend in derive mode using pre-parsed AST for module `\logic_unit'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\logic_unit\WIDTH=s32'00000000000000000000000000100000'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os-fpga/Validation/RTL_testcases/titan_benchmarks/bitonic_mesh/./rtl/logic_unit.v:26.1-36.12 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Parameter \WIDTH = 32

24.23. Executing AST frontend in derive mode using pre-parsed AST for module `\addersub'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\addersub\WIDTH=s32'00000000000000000000000000100000'.

24.24. Analyzing design hierarchy..
Top module:  \system100
Used module:     \fifo
Used module:     \system
Used module:         $paramod\pipereg\WIDTH=s32'00000000000000000000000000000101
Used module:         $paramod\pipereg\WIDTH=s32'00000000000000000000000000000110
Used module:         $paramod\zeroer\WIDTH=s32'00000000000000000000000000000101
Used module:         $paramod\nop\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\fakedelay\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\pipereg\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\pipereg\WIDTH=s32'00000000000000000000000000011010
Used module:         $paramod$026b8bef4e8f300040e00233ac4814dd51bc5fa2\constant
Used module:         $paramod$836606f854671b45ed167eb5e3a33c1ab545c97e\constant
Used module:         $paramod$5bef9758c56d3128c8e7c3be881dfc78f4fc49cc\constant
Used module:         $paramod\lo_reg\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\hi_reg\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\branchresolve\WIDTH=s32'00000000000000000000000000100000
Used module:         \merge26lo
Used module:         \reg_file
Used module:             $paramod$56a3c3dee00f7dfe3de378355f714859c4ad2fd3\t_dpram_sclka
Used module:         \signext16
Used module:         \pcadder
Used module:         \data_mem
Used module:             \onecyclestall
Used module:             \t_dpram_sclk_be
Used module:             \load_data_translator
Used module:             \store_data_translator
Used module:             $paramod\register\WIDTH=s32'00000000000000000000000000000010
Used module:         \ifetch
Used module:             $paramod$8a1aeca44f1ec31328d024f5f4db4c4640aa24b1\t_dpram_sclkb
Used module:             $paramod\register\WIDTH=s32'00000000000000000000000000000001
Used module:             $paramod\lpm_counter\WIDTH=s32'00000000000000000000000000011110
Used module:         $paramod\mul\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\shifter\WIDTH=s32'00000000000000000000000000100000
Used module:             \register
Used module:         $paramod\logic_unit\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\addersub\WIDTH=s32'00000000000000000000000000100000
Parameter \WIDTH = 1
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000000001'.
Parameter \WIDTH = 1
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000000001'.

24.25. Analyzing design hierarchy..
Top module:  \system100
Used module:     \fifo
Used module:     \system
Used module:         $paramod\pipereg\WIDTH=s32'00000000000000000000000000000101
Used module:         $paramod\pipereg\WIDTH=s32'00000000000000000000000000000110
Used module:         $paramod\zeroer\WIDTH=s32'00000000000000000000000000000101
Used module:         $paramod\nop\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\fakedelay\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\pipereg\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\pipereg\WIDTH=s32'00000000000000000000000000011010
Used module:         $paramod$026b8bef4e8f300040e00233ac4814dd51bc5fa2\constant
Used module:         $paramod$836606f854671b45ed167eb5e3a33c1ab545c97e\constant
Used module:         $paramod$5bef9758c56d3128c8e7c3be881dfc78f4fc49cc\constant
Used module:         $paramod\lo_reg\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\hi_reg\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\branchresolve\WIDTH=s32'00000000000000000000000000100000
Used module:         \merge26lo
Used module:         \reg_file
Used module:             $paramod$56a3c3dee00f7dfe3de378355f714859c4ad2fd3\t_dpram_sclka
Used module:         \signext16
Used module:         \pcadder
Used module:         \data_mem
Used module:             \onecyclestall
Used module:             \t_dpram_sclk_be
Used module:             \load_data_translator
Used module:             \store_data_translator
Used module:             $paramod\register\WIDTH=s32'00000000000000000000000000000010
Used module:         \ifetch
Used module:             $paramod$8a1aeca44f1ec31328d024f5f4db4c4640aa24b1\t_dpram_sclkb
Used module:             $paramod\register\WIDTH=s32'00000000000000000000000000000001
Used module:             $paramod\lpm_counter\WIDTH=s32'00000000000000000000000000011110
Used module:         $paramod\mul\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\shifter\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\logic_unit\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\addersub\WIDTH=s32'00000000000000000000000000100000

24.26. Analyzing design hierarchy..
Top module:  \system100
Used module:     \fifo
Used module:     \system
Used module:         $paramod\pipereg\WIDTH=s32'00000000000000000000000000000101
Used module:         $paramod\pipereg\WIDTH=s32'00000000000000000000000000000110
Used module:         $paramod\zeroer\WIDTH=s32'00000000000000000000000000000101
Used module:         $paramod\nop\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\fakedelay\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\pipereg\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\pipereg\WIDTH=s32'00000000000000000000000000011010
Used module:         $paramod$026b8bef4e8f300040e00233ac4814dd51bc5fa2\constant
Used module:         $paramod$836606f854671b45ed167eb5e3a33c1ab545c97e\constant
Used module:         $paramod$5bef9758c56d3128c8e7c3be881dfc78f4fc49cc\constant
Used module:         $paramod\lo_reg\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\hi_reg\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\branchresolve\WIDTH=s32'00000000000000000000000000100000
Used module:         \merge26lo
Used module:         \reg_file
Used module:             $paramod$56a3c3dee00f7dfe3de378355f714859c4ad2fd3\t_dpram_sclka
Used module:         \signext16
Used module:         \pcadder
Used module:         \data_mem
Used module:             \onecyclestall
Used module:             \t_dpram_sclk_be
Used module:             \load_data_translator
Used module:             \store_data_translator
Used module:             $paramod\register\WIDTH=s32'00000000000000000000000000000010
Used module:         \ifetch
Used module:             $paramod$8a1aeca44f1ec31328d024f5f4db4c4640aa24b1\t_dpram_sclkb
Used module:             $paramod\register\WIDTH=s32'00000000000000000000000000000001
Used module:             $paramod\lpm_counter\WIDTH=s32'00000000000000000000000000011110
Used module:         $paramod\mul\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\shifter\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\logic_unit\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\addersub\WIDTH=s32'00000000000000000000000000100000
Removing unused module `\t_dpram_sclkb'.
Removing unused module `\t_dpram_sclka'.
Removing unused module `\shifter'.
Removing unused module `\mul'.
Removing unused module `\lpm_counter'.
Removing unused module `\logic_unit'.
Removing unused module `\lo_reg'.
Removing unused module `\hi_reg'.
Removing unused module `\branch_detector'.
Removing unused module `\constant'.
Removing unused module `\nop'.
Removing unused module `\zeroer'.
Removing unused module `\fakedelay'.
Removing unused module `\pipedelayreg'.
Removing unused module `\multicyclestall'.
Removing unused module `\pipereg'.
Removing unused module `\register_sync'.
Removing unused module `\register'.
Removing unused module `\branchresolve'.
Removing unused module `\addersub'.
Removed 20 unused modules.
Mapping positional arguments of cell $paramod\shifter\WIDTH=s32'00000000000000000000000000100000.was_zeroshift_reg ($paramod\register\WIDTH=s32'00000000000000000000000000000001).
Mapping positional arguments of cell $paramod\shifter\WIDTH=s32'00000000000000000000000000100000.wasjustbusy_reg ($paramod\register\WIDTH=s32'00000000000000000000000000000001).
Mapping positional arguments of cell ifetch.sync_pcs_up ($paramod\register\WIDTH=s32'00000000000000000000000000000001).
Mapping positional arguments of cell data_mem.staller (onecyclestall).
Mapping positional arguments of cell data_mem.d_address_reg ($paramod\register\WIDTH=s32'00000000000000000000000000000010).
Warning: Resizing cell port system100.proc99.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc99.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc98.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc98.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc97.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc97.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc96.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc96.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc95.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc95.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc94.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc94.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc93.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc93.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc92.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc92.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc91.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc91.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc90.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc90.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc89.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc89.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc88.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc88.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc87.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc87.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc86.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc86.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc85.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc85.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc84.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc84.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc83.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc83.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc82.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc82.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc81.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc81.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc80.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc80.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc79.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc79.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc78.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc78.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc77.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc77.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc76.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc76.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc75.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc75.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc74.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc74.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc73.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc73.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc72.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc72.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc71.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc71.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc70.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc70.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc69.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc69.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc68.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc68.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc67.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc67.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc66.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc66.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc65.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc65.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc64.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc64.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc63.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc63.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc62.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc62.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc61.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc61.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc60.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc60.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc59.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc59.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc58.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc58.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc57.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc57.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc56.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc56.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc55.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc55.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc54.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc54.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc53.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc53.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc52.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc52.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc51.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc51.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc50.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc50.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc49.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc49.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc48.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc48.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc47.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc47.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc46.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc46.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc45.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc45.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc44.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc44.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc43.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc43.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc42.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc42.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc41.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc41.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc40.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc40.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc39.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc39.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc38.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc38.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc37.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc37.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc36.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc36.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc35.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc35.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc34.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc34.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc33.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc33.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc32.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc32.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc31.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc31.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc30.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc30.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc29.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc29.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc28.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc28.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc27.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc27.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc26.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc26.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc25.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc25.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc24.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc24.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc23.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc23.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc22.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc22.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc21.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc21.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc20.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc20.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc19.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc19.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc18.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc18.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc17.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc17.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc16.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc16.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc15.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc15.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc14.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc14.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc13.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc13.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc12.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc12.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc11.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc11.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc10.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc10.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc9.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc9.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc8.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc8.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc7.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc7.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc6.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc6.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc5.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc5.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc4.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc4.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc3.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc3.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc2.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc2.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc1.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc1.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc0.boot_daddr from 14 bits to 32 bits.
Warning: Resizing cell port system100.proc0.boot_iaddr from 14 bits to 32 bits.
Warning: Resizing cell port system.ifetch.next_pc from 32 bits to 30 bits.
Warning: Resizing cell port ifetch.imem.addr_b from 32 bits to 8 bits.
Warning: Resizing cell port data_mem.dmem.addr_b from 32 bits to 6 bits.
Warning: Resizing cell port data_mem.dmem.addr_a from 8 bits to 6 bits.

Dumping file hier_info.json ...
 Process module "$paramod$026b8bef4e8f300040e00233ac4814dd51bc5fa2\\constant"
 Process module "$paramod$56a3c3dee00f7dfe3de378355f714859c4ad2fd3\\t_dpram_sclka"
 Process module "$paramod$5bef9758c56d3128c8e7c3be881dfc78f4fc49cc\\constant"
 Process module "$paramod$836606f854671b45ed167eb5e3a33c1ab545c97e\\constant"
 Process module "$paramod$8a1aeca44f1ec31328d024f5f4db4c4640aa24b1\\t_dpram_sclkb"
 Process module "$paramod\\addersub\\WIDTH=s32'00000000000000000000000000100000"
 Process module "$paramod\\branchresolve\\WIDTH=s32'00000000000000000000000000100000"
 Process module "$paramod\\fakedelay\\WIDTH=s32'00000000000000000000000000100000"
 Process module "$paramod\\hi_reg\\WIDTH=s32'00000000000000000000000000100000"
 Process module "$paramod\\lo_reg\\WIDTH=s32'00000000000000000000000000100000"
 Process module "$paramod\\logic_unit\\WIDTH=s32'00000000000000000000000000100000"
 Process module "$paramod\\lpm_counter\\WIDTH=s32'00000000000000000000000000011110"
 Process module "$paramod\\mul\\WIDTH=s32'00000000000000000000000000100000"
 Process module "$paramod\\nop\\WIDTH=s32'00000000000000000000000000100000"
 Process module "$paramod\\pipereg\\WIDTH=s32'00000000000000000000000000000101"
 Process module "$paramod\\pipereg\\WIDTH=s32'00000000000000000000000000000110"
 Process module "$paramod\\pipereg\\WIDTH=s32'00000000000000000000000000011010"
 Process module "$paramod\\pipereg\\WIDTH=s32'00000000000000000000000000100000"
 Process module "$paramod\\register\\WIDTH=s32'00000000000000000000000000000001"
 Process module "$paramod\\register\\WIDTH=s32'00000000000000000000000000000010"
 Process module "$paramod\\shifter\\WIDTH=s32'00000000000000000000000000100000"
 Process module "$paramod\\zeroer\\WIDTH=s32'00000000000000000000000000000101"
 Process module "data_mem"
 Process module "fifo"
 Process module "ifetch"
 Process module "load_data_translator"
 Process module "merge26lo"
 Process module "onecyclestall"
 Process module "pcadder"
 Process module "reg_file"
 Process module "signext16"
 Process module "store_data_translator"
 Process module "system"
 Process module "t_dpram_sclk_be"
Dumping file port_info.json ...

Warnings: 205 unique messages, 205 total
End of script. Logfile hash: f2204e8720, CPU: user 1.45s system 0.06s, MEM: 93.57 MB peak
Yosys 0.38 (git sha1 52417c1f4, gcc 11.2.1 -fPIC -Os)
Time spent: 96% 46x read_verilog (1 sec), 2% 1x hierarchy (0 sec), ...
