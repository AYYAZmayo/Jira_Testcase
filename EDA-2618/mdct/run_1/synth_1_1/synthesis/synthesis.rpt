/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.03
Build    : 1.0.17
Hash     : 7566e6a
Date     : Mar 20 2024
Type     : Engineering
Log Time   : Wed Mar 20 11:08:52 2024 GMT

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.18+10 (git sha1 22058a10a, gcc 11.2.1 -fPIC -Os)


-- Executing script file `mdct.ys' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing GHDL.
Importing module MDCT.
Importing module dct1d.
Importing module dct2d.
Importing module ram.
Importing module dbufctl.
Importing module rome.
Importing module romo.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \MDCT
Used module:     \romo
Used module:     \rome
Used module:     \dbufctl
Used module:     \ram
Used module:     \dct2d
Used module:     \dct1d

3.2. Analyzing design hierarchy..
Top module:  \MDCT
Used module:     \romo
Used module:     \rome
Used module:     \dbufctl
Used module:     \ram
Used module:     \dct2d
Used module:     \dct1d
Removed 0 unused modules.

4. Executing synth_rs pass: v0.4.218

4.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v' to AST representation.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v:10.1-19.10.
Generating RTLIL representation for module `\CARRY'.
Successfully finished Verilog frontend.

4.3. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:20.1-34.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:48.1-62.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:81.1-97.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:115.1-131.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:150.1-166.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:184.1-200.10.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

4.4. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v' to AST representation.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFRE'.
Successfully finished Verilog frontend.

4.5. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v' to AST representation.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFNRE'.
Successfully finished Verilog frontend.

4.6. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v' to AST representation.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v:10.1-20.10.
Generating RTLIL representation for module `\LUT1'.
Successfully finished Verilog frontend.

4.7. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v' to AST representation.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v:10.1-21.10.
Generating RTLIL representation for module `\LUT2'.
Successfully finished Verilog frontend.

4.8. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v' to AST representation.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v:10.1-22.10.
Generating RTLIL representation for module `\LUT3'.
Successfully finished Verilog frontend.

4.9. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v' to AST representation.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v:11.1-25.10.
Generating RTLIL representation for module `\LUT4'.
Successfully finished Verilog frontend.

4.10. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v' to AST representation.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v:10.1-24.10.
Generating RTLIL representation for module `\LUT5'.
Successfully finished Verilog frontend.

4.11. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v' to AST representation.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v:10.1-25.10.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

4.12. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v' to AST representation.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v:10.1-17.10.
Generating RTLIL representation for module `\CLK_BUF'.
Successfully finished Verilog frontend.

4.13. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v' to AST representation.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v:10.1-22.10.
Generating RTLIL representation for module `\O_BUF'.
Successfully finished Verilog frontend.

4.14. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v' to AST representation.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:10.1-324.10.
Generating RTLIL representation for module `\DSP38'.
/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:0: Warning: System task `$display' outside initial block is unsupported.
Successfully finished Verilog frontend.

4.15. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v' to AST representation.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:2.1-29.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:33.1-84.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\RS_DSP3'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:116.1-149.10.
Generating RTLIL representation for module `\DSP19X2'.
Successfully finished Verilog frontend.

4.16. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:112.1-540.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:542.1-951.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:953.1-1356.10.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.17. Executing HIERARCHY pass (managing design hierarchy).

4.17.1. Analyzing design hierarchy..
Top module:  \MDCT
Used module:     \romo
Used module:     \rome
Used module:     \dbufctl
Used module:     \ram
Used module:     \dct2d
Used module:     \dct1d

4.17.2. Analyzing design hierarchy..
Top module:  \MDCT
Used module:     \romo
Used module:     \rome
Used module:     \dbufctl
Used module:     \ram
Used module:     \dct2d
Used module:     \dct1d
Removed 0 unused modules.

4.18. Executing PROC pass (convert processes to netlists).

4.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.18.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

4.18.4. Executing PROC_INIT pass (extract init attributes).

4.18.5. Executing PROC_ARST pass (detect async resets in processes).

4.18.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

4.18.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.18.8. Executing PROC_DLATCH pass (convert process syncs to latches).

4.18.9. Executing PROC_DFF pass (convert process syncs to FFs).

4.18.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.18.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module romo.
Optimizing module rome.
Optimizing module dbufctl.
Optimizing module ram.
Optimizing module dct2d.
<suppressed ~6 debug messages>
Optimizing module dct1d.
<suppressed ~5 debug messages>
Optimizing module MDCT.
<suppressed ~2 debug messages>

4.19. Executing DEMUXMAP pass.

4.20. Executing FLATTEN pass (flatten design).
Deleting now unused module dbufctl.
Deleting now unused module dct1d.
Deleting now unused module dct2d.
Deleting now unused module ram.
Deleting now unused module rome.
Deleting now unused module romo.
<suppressed ~45 debug messages>

4.21. Executing DEMUXMAP pass.

4.22. Executing TRIBUF pass.

4.23. Executing TRIBUF pass.

4.24. Executing DEMINOUT pass (demote inout ports to input or output).

4.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 12 unused cells and 241 unused wires.
<suppressed ~13 debug messages>

4.27. Executing CHECK pass (checking for obvious problems).
Checking module MDCT...
Found and reported 0 problems.

4.28. Printing statistics.

=== MDCT ===

   Number of wires:                455
   Number of wire bits:           7263
   Number of public wires:         275
   Number of public wire bits:    5319
   Number of memories:              42
   Number of memory bits:        37120
   Number of processes:              0
   Number of cells:                349
     $add                           51
     $adff                          79
     $and                           14
     $dff                            3
     $eq                             5
     $logic_not                      1
     $lt                             2
     $meminit                       40
     $memrd_v2                      42
     $memwr_v2                       2
     $mux                           51
     $ne                             1
     $not                            3
     $sub                           55

4.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

4.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

4.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.34. Executing OPT_SHARE pass.

4.35. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=81, #solve=0, #remove=0, time=0.02 sec.]

4.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

4.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

4.38. Executing FSM pass (extract and optimize FSM).

4.38.1. Executing FSM_DETECT pass (finding FSMs in design).

4.38.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.38.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.38.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.38.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.38.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.38.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.39. Executing WREDUCE pass (reducing word size of cells).
Removed top 126 bits (of 154) from FF cell MDCT.u_dct2d.1247 ($adff).
Removed top 126 bits (of 154) from FF cell MDCT.u_dct2d.1248 ($adff).
Removed top 2 bits (of 3) from port B of cell MDCT.u_dct2d.664 ($add).
Removed top 2 bits (of 3) from port B of cell MDCT.u_dct2d.666 ($add).
Removed top 2 bits (of 3) from port B of cell MDCT.u_dct2d.670 ($add).
Removed top 2 bits (of 3) from port B of cell MDCT.u_dct2d.675 ($add).
Removed top 2 bits (of 6) from port B of cell MDCT.u_dct2d.730 ($lt).
Removed top 5 bits (of 6) from port B of cell MDCT.u_dct2d.732 ($add).
Removed top 2 bits (of 3) from port B of cell MDCT.u_dct2d.734 ($add).
Removed top 2 bits (of 3) from port B of cell MDCT.u_dct1d.132 ($add).
Removed top 1 bits (of 9) from port A of cell MDCT.u_dct1d.137 ($sub).
Removed top 1 bits (of 9) from port B of cell MDCT.u_dct1d.137 ($sub).
Removed top 2 bits (of 6) from port B of cell MDCT.u_dct1d.183 ($lt).
Removed top 5 bits (of 6) from port B of cell MDCT.u_dct1d.185 ($add).
Removed top 2 bits (of 3) from port B of cell MDCT.u_dct1d.188 ($add).
Removed top 2 bits (of 3) from port B of cell MDCT.u_dct1d.190 ($add).
Removed top 2 bits (of 3) from port B of cell MDCT.u_dct1d.194 ($add).
Removed top 98 bits (of 126) from FF cell MDCT.u_dct1d.640 ($adff).
Removed top 98 bits (of 126) from FF cell MDCT.u_dct1d.641 ($adff).
Removed top 98 bits (of 154) from FF cell MDCT.u_dct2d.1245 ($adff).
Removed top 98 bits (of 154) from FF cell MDCT.u_dct2d.1246 ($adff).
Removed top 70 bits (of 126) from FF cell MDCT.u_dct1d.638 ($adff).
Removed top 70 bits (of 126) from FF cell MDCT.u_dct1d.639 ($adff).
Removed top 70 bits (of 154) from FF cell MDCT.u_dct2d.1243 ($adff).
Removed top 70 bits (of 154) from FF cell MDCT.u_dct2d.1244 ($adff).
Removed top 42 bits (of 126) from FF cell MDCT.u_dct1d.636 ($adff).
Removed top 42 bits (of 126) from FF cell MDCT.u_dct1d.637 ($adff).
Removed top 42 bits (of 154) from FF cell MDCT.u_dct2d.1241 ($adff).
Removed top 42 bits (of 154) from FF cell MDCT.u_dct2d.1242 ($adff).

4.40. Executing PEEPOPT pass (run peephole optimizers).

4.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.42. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.44. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

4.45. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.46. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.47. Executing OPT_SHARE pass.

4.48. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on u_dct2d.1253 ($dff) from module MDCT (D = $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$211, Q = \u_dbufctl.datareadyack).
Adding EN signal on u_dct2d.1223 ($adff) from module MDCT (D = $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$208, Q = \u_dct2d.stage2_cnt_reg).
Adding EN signal on u_dct2d.1221 ($adff) from module MDCT (D = $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$214, Q = \u_dct2d.stage1_reg).
Adding EN signal on u_dct2d.1220 ($adff) from module MDCT (D = $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$178, Q = \u_dct2d.rmemsel_reg).
Adding EN signal on u_dct2d.1218 ($adff) from module MDCT (D = $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$174, Q = \u_dct2d.rowr_reg).
Adding EN signal on u_dct2d.1216 ($adff) from module MDCT (D = $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$213, Q = \u_dct2d.colr_reg).
Adding EN signal on u_dct2d.1215 ($adff) from module MDCT (D = $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$176, Q = \u_dct2d.rowram_reg).
Adding EN signal on u_dct2d.1213 ($adff) from module MDCT (D = $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$212, Q = \u_dct2d.colram_reg).
Adding EN signal on u_dct2d.1210 ($adff) from module MDCT (D = $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$207, Q = \u_dct2d.col_reg).
Adding EN signal on u_dct2d.1209 ($adff) from module MDCT (D = { \u_dct2d.ramdatao [9] \u_dct2d.ramdatao \u_dct2d.latchbuf_reg [87:11] }, Q = \u_dct2d.latchbuf_reg).
Adding EN signal on u_dct2d.1207 ($adff) from module MDCT (D = { $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$188 $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$187 $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$186 $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$185 $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$184 $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$183 $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$182 $flatten\u_dct2d.$auto$ghdl.cc:806:import_module$181 }, Q = \u_dct2d.databuf_reg).
Adding EN signal on u_dct1d.619 ($adff) from module MDCT (D = { \u_dct1d.col_2_reg \u_dct1d.row_reg }, Q = \u_dct1d.ramwaddro_s).
Adding EN signal on u_dct1d.617 ($adff) from module MDCT (D = $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$101, Q = \u_dct1d.col_2_reg).
Adding EN signal on u_dct1d.616 ($adff) from module MDCT (D = $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$100, Q = \u_dct1d.stage2_cnt_reg).
Adding EN signal on u_dct1d.614 ($adff) from module MDCT (D = $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$89, Q = \u_dct1d.wmemsel_reg).
Adding EN signal on u_dct1d.611 ($adff) from module MDCT (D = $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$66, Q = \u_dct1d.inpcnt_reg).
Adding EN signal on u_dct1d.608 ($adff) from module MDCT (D = $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$87, Q = \u_dct1d.row_reg).
Adding EN signal on u_dct1d.606 ($adff) from module MDCT (D = $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$99, Q = \u_dct1d.col_reg).
Adding EN signal on u_dct1d.605 ($adff) from module MDCT (D = { $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$67 \u_dct1d.latchbuf_reg [71:9] }, Q = \u_dct1d.latchbuf_reg).
Adding EN signal on u_dct1d.603 ($adff) from module MDCT (D = { $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$78 $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$77 $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$76 $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$75 $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$73 $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$72 $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$71 $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$70 }, Q = \u_dct1d.databuf_reg).
Adding EN signal on u_dbufctl.1293 ($adff) from module MDCT (D = $flatten\u_dbufctl.$auto$ghdl.cc:806:import_module$296, Q = \u_dct2d.dataready).
[#visit=81, #solve=0, #remove=0, time=0.01 sec.]

4.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 12 unused cells and 12 unused wires.
<suppressed ~13 debug messages>

4.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.
<suppressed ~9 debug messages>

4.51. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

4.52. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.53. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

4.54. Executing OPT_SHARE pass.

4.55. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=81, #solve=0, #remove=0, time=0.01 sec.]

4.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

4.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.58. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

4.59. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.60. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.61. Executing OPT_SHARE pass.

4.62. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=81, #solve=0, #remove=0, time=0.01 sec.]

4.63. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.64. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 3

4.65. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.67. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

4.68. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.70. Executing OPT_SHARE pass.

4.71. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=81, #solve=0, #remove=0, time=0.01 sec.]

4.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.73. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

4.74. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.76. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

4.77. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.78. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.79. Executing OPT_SHARE pass.

4.80. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=81, #solve=0, #remove=0, time=0.01 sec.]

4.81. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=81, #solve=1765, #remove=0, time=1.44 sec.]

4.82. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.83. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

4.84. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 88) from FF cell MDCT.$auto$ff.cc:294:slice$324 ($adffe).

4.85. Executing PEEPOPT pass (run peephole optimizers).

4.86. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.87. Executing DEMUXMAP pass.

4.88. Printing statistics.

=== MDCT ===

   Number of wires:                441
   Number of wire bits:           6904
   Number of public wires:         275
   Number of public wire bits:    5319
   Number of memories:              42
   Number of memory bits:        37120
   Number of processes:              0
   Number of cells:                334
     $add                           51
     $adff                          59
     $adffe                         20
     $and                            9
     $dff                            1
     $dffe                           1
     $eq                             5
     $logic_not                      1
     $lt                             2
     $meminit                       40
     $memrd_v2                      42
     $memwr_v2                       2
     $mux                           39
     $ne                             1
     $not                            3
     $reduce_bool                    5
     $sub                           53

4.89. Executing RS_DSP_MULTADD pass.

4.90. Executing WREDUCE pass (reducing word size of cells).

4.91. Executing RS_DSP_MACC pass.

4.92. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.93. Executing TECHMAP pass (map to technology primitives).

4.93.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.93.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.94. Printing statistics.

=== MDCT ===

   Number of wires:                441
   Number of wire bits:           6904
   Number of public wires:         275
   Number of public wire bits:    5319
   Number of memories:              42
   Number of memory bits:        37120
   Number of processes:              0
   Number of cells:                334
     $add                           51
     $adff                          59
     $adffe                         20
     $and                            9
     $dff                            1
     $dffe                           1
     $eq                             5
     $logic_not                      1
     $lt                             2
     $meminit                       40
     $memrd_v2                      42
     $memwr_v2                       2
     $mux                           39
     $ne                             1
     $not                            3
     $reduce_bool                    5
     $sub                           53

4.95. Executing TECHMAP pass (map to technology primitives).

4.95.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.95.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.96. Printing statistics.

=== MDCT ===

   Number of wires:                441
   Number of wire bits:           6904
   Number of public wires:         275
   Number of public wire bits:    5319
   Number of memories:              42
   Number of memory bits:        37120
   Number of processes:              0
   Number of cells:                334
     $add                           51
     $adff                          59
     $adffe                         20
     $and                            9
     $dff                            1
     $dffe                           1
     $eq                             5
     $logic_not                      1
     $lt                             2
     $meminit                       40
     $memrd_v2                      42
     $memwr_v2                       2
     $mux                           39
     $ne                             1
     $not                            3
     $reduce_bool                    5
     $sub                           53

4.97. Executing TECHMAP pass (map to technology primitives).

4.97.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.97.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.98. Executing TECHMAP pass (map to technology primitives).

4.98.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.98.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.99. Executing TECHMAP pass (map to technology primitives).

4.99.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

4.99.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.100. Executing RS_DSP_SIMD pass.

4.101. Executing TECHMAP pass (map to technology primitives).

4.101.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

4.101.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.102. Executing TECHMAP pass (map to technology primitives).

4.102.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.102.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

4.103. Executing rs_pack_dsp_regs pass.

4.104. Executing RS_DSP_IO_REGS pass.

4.105. Executing TECHMAP pass (map to technology primitives).

4.105.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Successfully finished Verilog frontend.

4.105.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~14 debug messages>

4.106. Executing TECHMAP pass (map to technology primitives).

4.106.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.106.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

4.107. Printing statistics.

=== MDCT ===

   Number of wires:                441
   Number of wire bits:           6904
   Number of public wires:         275
   Number of public wire bits:    5319
   Number of memories:              42
   Number of memory bits:        37120
   Number of processes:              0
   Number of cells:                334
     $add                           51
     $adff                          59
     $adffe                         20
     $and                            9
     $dff                            1
     $dffe                           1
     $eq                             5
     $logic_not                      1
     $lt                             2
     $meminit                       40
     $memrd_v2                      42
     $memwr_v2                       2
     $mux                           39
     $ne                             1
     $not                            3
     $reduce_bool                    5
     $sub                           53

4.108. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module MDCT:
  creating $macc model for g_rom_st1:1.u1_rome.1300 ($sub).
  creating $macc model for g_rom_st1:1.u1_romo.1316 ($sub).
  creating $macc model for g_rom_st1:2.u1_rome.1300 ($sub).
  creating $macc model for g_rom_st1:2.u1_romo.1316 ($sub).
  creating $macc model for g_rom_st1:3.u1_rome.1300 ($sub).
  creating $macc model for g_rom_st1:3.u1_romo.1316 ($sub).
  creating $macc model for g_rom_st1:4.u1_rome.1300 ($sub).
  creating $macc model for g_rom_st1:4.u1_romo.1316 ($sub).
  creating $macc model for g_rom_st1:5.u1_rome.1300 ($sub).
  creating $macc model for g_rom_st1:5.u1_romo.1316 ($sub).
  creating $macc model for g_rom_st1:6.u1_rome.1300 ($sub).
  creating $macc model for g_rom_st1:6.u1_romo.1316 ($sub).
  creating $macc model for g_rom_st1:7.u1_rome.1300 ($sub).
  creating $macc model for g_rom_st1:7.u1_romo.1316 ($sub).
  creating $macc model for g_rom_st1:8.u1_rome.1300 ($sub).
  creating $macc model for g_rom_st1:8.u1_romo.1316 ($sub).
  creating $macc model for g_rom_st1:9.u1_rome.1300 ($sub).
  creating $macc model for g_rom_st1:9.u1_romo.1316 ($sub).
  creating $macc model for g_rom_st2:1.u2_rome.1300 ($sub).
  creating $macc model for g_rom_st2:1.u2_romo.1316 ($sub).
  creating $macc model for g_rom_st2:10.u2_rome.1300 ($sub).
  creating $macc model for g_rom_st2:10.u2_romo.1316 ($sub).
  creating $macc model for g_rom_st2:11.u2_rome.1300 ($sub).
  creating $macc model for g_rom_st2:11.u2_romo.1316 ($sub).
  creating $macc model for g_rom_st2:2.u2_rome.1300 ($sub).
  creating $macc model for g_rom_st2:2.u2_romo.1316 ($sub).
  creating $macc model for g_rom_st2:3.u2_rome.1300 ($sub).
  creating $macc model for g_rom_st2:3.u2_romo.1316 ($sub).
  creating $macc model for g_rom_st2:4.u2_rome.1300 ($sub).
  creating $macc model for g_rom_st2:4.u2_romo.1316 ($sub).
  creating $macc model for g_rom_st2:5.u2_rome.1300 ($sub).
  creating $macc model for g_rom_st2:5.u2_romo.1316 ($sub).
  creating $macc model for g_rom_st2:6.u2_rome.1300 ($sub).
  creating $macc model for g_rom_st2:6.u2_romo.1316 ($sub).
  creating $macc model for g_rom_st2:7.u2_rome.1300 ($sub).
  creating $macc model for g_rom_st2:7.u2_romo.1316 ($sub).
  creating $macc model for g_rom_st2:8.u2_rome.1300 ($sub).
  creating $macc model for g_rom_st2:8.u2_romo.1316 ($sub).
  creating $macc model for g_rom_st2:9.u2_rome.1300 ($sub).
  creating $macc model for g_rom_st2:9.u2_romo.1316 ($sub).
  creating $macc model for u_dct1d.132 ($add).
  creating $macc model for u_dct1d.137 ($sub).
  creating $macc model for u_dct1d.145 ($add).
  creating $macc model for u_dct1d.148 ($add).
  creating $macc model for u_dct1d.151 ($add).
  creating $macc model for u_dct1d.154 ($add).
  creating $macc model for u_dct1d.160 ($sub).
  creating $macc model for u_dct1d.163 ($sub).
  creating $macc model for u_dct1d.166 ($sub).
  creating $macc model for u_dct1d.169 ($sub).
  creating $macc model for u_dct1d.185 ($add).
  creating $macc model for u_dct1d.188 ($add).
  creating $macc model for u_dct1d.190 ($add).
  creating $macc model for u_dct1d.194 ($add).
  creating $macc model for u_dct1d.264 ($add).
  creating $macc model for u_dct1d.269 ($add).
  creating $macc model for u_dct1d.276 ($add).
  creating $macc model for u_dct1d.281 ($add).
  creating $macc model for u_dct1d.288 ($add).
  creating $macc model for u_dct1d.293 ($add).
  creating $macc model for u_dct1d.298 ($add).
  creating $macc model for u_dct1d.303 ($add).
  creating $macc model for u_dct1d.310 ($add).
  creating $macc model for u_dct1d.315 ($add).
  creating $macc model for u_dct1d.320 ($add).
  creating $macc model for u_dct1d.325 ($add).
  creating $macc model for u_dct1d.332 ($add).
  creating $macc model for u_dct1d.336 ($sub).
  creating $macc model for u_dct1d.341 ($add).
  creating $macc model for u_dct1d.345 ($sub).
  creating $macc model for u_dct2d.664 ($add).
  creating $macc model for u_dct2d.666 ($add).
  creating $macc model for u_dct2d.670 ($add).
  creating $macc model for u_dct2d.675 ($add).
  creating $macc model for u_dct2d.686 ($add).
  creating $macc model for u_dct2d.689 ($add).
  creating $macc model for u_dct2d.692 ($add).
  creating $macc model for u_dct2d.695 ($add).
  creating $macc model for u_dct2d.698 ($sub).
  creating $macc model for u_dct2d.701 ($sub).
  creating $macc model for u_dct2d.704 ($sub).
  creating $macc model for u_dct2d.707 ($sub).
  creating $macc model for u_dct2d.732 ($add).
  creating $macc model for u_dct2d.734 ($add).
  creating $macc model for u_dct2d.818 ($add).
  creating $macc model for u_dct2d.823 ($add).
  creating $macc model for u_dct2d.830 ($add).
  creating $macc model for u_dct2d.835 ($add).
  creating $macc model for u_dct2d.842 ($add).
  creating $macc model for u_dct2d.847 ($add).
  creating $macc model for u_dct2d.852 ($add).
  creating $macc model for u_dct2d.857 ($add).
  creating $macc model for u_dct2d.864 ($add).
  creating $macc model for u_dct2d.869 ($add).
  creating $macc model for u_dct2d.874 ($add).
  creating $macc model for u_dct2d.879 ($add).
  creating $macc model for u_dct2d.886 ($add).
  creating $macc model for u_dct2d.891 ($add).
  creating $macc model for u_dct2d.896 ($add).
  creating $macc model for u_dct2d.901 ($add).
  creating $macc model for u_dct2d.908 ($add).
  creating $macc model for u_dct2d.912 ($sub).
  creating $macc model for u_dct2d.917 ($add).
  creating $macc model for u_dct2d.921 ($sub).
  merging $macc model for u_dct2d.917 into u_dct2d.921.
  merging $macc model for u_dct2d.908 into u_dct2d.912.
  merging $macc model for u_dct2d.896 into u_dct2d.901.
  merging $macc model for u_dct2d.886 into u_dct2d.891.
  merging $macc model for u_dct2d.874 into u_dct2d.879.
  merging $macc model for u_dct2d.864 into u_dct2d.869.
  merging $macc model for u_dct2d.852 into u_dct2d.857.
  merging $macc model for u_dct2d.842 into u_dct2d.847.
  merging $macc model for u_dct2d.830 into u_dct2d.835.
  merging $macc model for u_dct2d.818 into u_dct2d.823.
  merging $macc model for u_dct1d.341 into u_dct1d.345.
  merging $macc model for u_dct1d.332 into u_dct1d.336.
  merging $macc model for u_dct1d.320 into u_dct1d.325.
  merging $macc model for u_dct1d.310 into u_dct1d.315.
  merging $macc model for u_dct1d.298 into u_dct1d.303.
  merging $macc model for u_dct1d.288 into u_dct1d.293.
  merging $macc model for u_dct1d.276 into u_dct1d.281.
  merging $macc model for u_dct1d.264 into u_dct1d.269.
  creating $alu model for $macc u_dct2d.734.
  creating $alu model for $macc u_dct2d.732.
  creating $alu model for $macc u_dct2d.707.
  creating $alu model for $macc u_dct2d.704.
  creating $alu model for $macc u_dct2d.701.
  creating $alu model for $macc u_dct2d.698.
  creating $alu model for $macc u_dct2d.695.
  creating $alu model for $macc u_dct2d.692.
  creating $alu model for $macc u_dct2d.689.
  creating $alu model for $macc u_dct2d.686.
  creating $alu model for $macc u_dct2d.675.
  creating $alu model for $macc u_dct2d.670.
  creating $alu model for $macc u_dct2d.666.
  creating $alu model for $macc u_dct2d.664.
  creating $alu model for $macc u_dct1d.194.
  creating $alu model for $macc u_dct1d.190.
  creating $alu model for $macc u_dct1d.188.
  creating $alu model for $macc u_dct1d.185.
  creating $alu model for $macc u_dct1d.169.
  creating $alu model for $macc u_dct1d.166.
  creating $alu model for $macc u_dct1d.163.
  creating $alu model for $macc u_dct1d.160.
  creating $alu model for $macc u_dct1d.154.
  creating $alu model for $macc u_dct1d.151.
  creating $alu model for $macc u_dct1d.148.
  creating $alu model for $macc u_dct1d.145.
  creating $alu model for $macc u_dct1d.137.
  creating $alu model for $macc u_dct1d.132.
  creating $alu model for $macc g_rom_st2:9.u2_romo.1316.
  creating $alu model for $macc g_rom_st2:9.u2_rome.1300.
  creating $alu model for $macc g_rom_st2:8.u2_romo.1316.
  creating $alu model for $macc g_rom_st2:8.u2_rome.1300.
  creating $alu model for $macc g_rom_st2:7.u2_romo.1316.
  creating $alu model for $macc g_rom_st2:7.u2_rome.1300.
  creating $alu model for $macc g_rom_st2:6.u2_romo.1316.
  creating $alu model for $macc g_rom_st2:6.u2_rome.1300.
  creating $alu model for $macc g_rom_st2:5.u2_romo.1316.
  creating $alu model for $macc g_rom_st2:5.u2_rome.1300.
  creating $alu model for $macc g_rom_st2:4.u2_romo.1316.
  creating $alu model for $macc g_rom_st2:4.u2_rome.1300.
  creating $alu model for $macc g_rom_st2:3.u2_romo.1316.
  creating $alu model for $macc g_rom_st2:3.u2_rome.1300.
  creating $alu model for $macc g_rom_st2:2.u2_romo.1316.
  creating $alu model for $macc g_rom_st2:2.u2_rome.1300.
  creating $alu model for $macc g_rom_st2:11.u2_romo.1316.
  creating $alu model for $macc g_rom_st2:11.u2_rome.1300.
  creating $alu model for $macc g_rom_st2:10.u2_romo.1316.
  creating $alu model for $macc g_rom_st2:10.u2_rome.1300.
  creating $alu model for $macc g_rom_st2:1.u2_romo.1316.
  creating $alu model for $macc g_rom_st2:1.u2_rome.1300.
  creating $alu model for $macc g_rom_st1:9.u1_romo.1316.
  creating $alu model for $macc g_rom_st1:9.u1_rome.1300.
  creating $alu model for $macc g_rom_st1:8.u1_romo.1316.
  creating $alu model for $macc g_rom_st1:8.u1_rome.1300.
  creating $alu model for $macc g_rom_st1:7.u1_romo.1316.
  creating $alu model for $macc g_rom_st1:7.u1_rome.1300.
  creating $alu model for $macc g_rom_st1:6.u1_romo.1316.
  creating $alu model for $macc g_rom_st1:6.u1_rome.1300.
  creating $alu model for $macc g_rom_st1:5.u1_romo.1316.
  creating $alu model for $macc g_rom_st1:5.u1_rome.1300.
  creating $alu model for $macc g_rom_st1:4.u1_romo.1316.
  creating $alu model for $macc g_rom_st1:4.u1_rome.1300.
  creating $alu model for $macc g_rom_st1:3.u1_romo.1316.
  creating $alu model for $macc g_rom_st1:3.u1_rome.1300.
  creating $alu model for $macc g_rom_st1:2.u1_romo.1316.
  creating $alu model for $macc g_rom_st1:2.u1_rome.1300.
  creating $alu model for $macc g_rom_st1:1.u1_romo.1316.
  creating $alu model for $macc g_rom_st1:1.u1_rome.1300.
  creating $macc cell for u_dct2d.847: $auto$alumacc.cc:365:replace_macc$344
  creating $macc cell for u_dct1d.345: $auto$alumacc.cc:365:replace_macc$345
  creating $macc cell for u_dct2d.921: $auto$alumacc.cc:365:replace_macc$346
  creating $macc cell for u_dct1d.269: $auto$alumacc.cc:365:replace_macc$347
  creating $macc cell for u_dct2d.857: $auto$alumacc.cc:365:replace_macc$348
  creating $macc cell for u_dct1d.281: $auto$alumacc.cc:365:replace_macc$349
  creating $macc cell for u_dct2d.912: $auto$alumacc.cc:365:replace_macc$350
  creating $macc cell for u_dct1d.293: $auto$alumacc.cc:365:replace_macc$351
  creating $macc cell for u_dct2d.835: $auto$alumacc.cc:365:replace_macc$352
  creating $macc cell for u_dct1d.303: $auto$alumacc.cc:365:replace_macc$353
  creating $macc cell for u_dct2d.901: $auto$alumacc.cc:365:replace_macc$354
  creating $macc cell for u_dct1d.315: $auto$alumacc.cc:365:replace_macc$355
  creating $macc cell for u_dct2d.869: $auto$alumacc.cc:365:replace_macc$356
  creating $macc cell for u_dct1d.325: $auto$alumacc.cc:365:replace_macc$357
  creating $macc cell for u_dct2d.891: $auto$alumacc.cc:365:replace_macc$358
  creating $macc cell for u_dct1d.336: $auto$alumacc.cc:365:replace_macc$359
  creating $macc cell for u_dct2d.879: $auto$alumacc.cc:365:replace_macc$360
  creating $macc cell for u_dct2d.823: $auto$alumacc.cc:365:replace_macc$361
  creating $alu model for u_dct1d.183 ($lt): new $alu
  creating $alu model for u_dct2d.730 ($lt): new $alu
  creating $alu cell for u_dct2d.730: $auto$alumacc.cc:485:replace_alu$364
  creating $alu cell for u_dct1d.183: $auto$alumacc.cc:485:replace_alu$375
  creating $alu cell for g_rom_st1:1.u1_rome.1300: $auto$alumacc.cc:485:replace_alu$386
  creating $alu cell for g_rom_st1:1.u1_romo.1316: $auto$alumacc.cc:485:replace_alu$389
  creating $alu cell for g_rom_st1:2.u1_rome.1300: $auto$alumacc.cc:485:replace_alu$392
  creating $alu cell for g_rom_st1:2.u1_romo.1316: $auto$alumacc.cc:485:replace_alu$395
  creating $alu cell for g_rom_st1:3.u1_rome.1300: $auto$alumacc.cc:485:replace_alu$398
  creating $alu cell for g_rom_st1:3.u1_romo.1316: $auto$alumacc.cc:485:replace_alu$401
  creating $alu cell for g_rom_st1:4.u1_rome.1300: $auto$alumacc.cc:485:replace_alu$404
  creating $alu cell for g_rom_st1:4.u1_romo.1316: $auto$alumacc.cc:485:replace_alu$407
  creating $alu cell for g_rom_st1:5.u1_rome.1300: $auto$alumacc.cc:485:replace_alu$410
  creating $alu cell for g_rom_st1:5.u1_romo.1316: $auto$alumacc.cc:485:replace_alu$413
  creating $alu cell for g_rom_st1:6.u1_rome.1300: $auto$alumacc.cc:485:replace_alu$416
  creating $alu cell for g_rom_st1:6.u1_romo.1316: $auto$alumacc.cc:485:replace_alu$419
  creating $alu cell for g_rom_st1:7.u1_rome.1300: $auto$alumacc.cc:485:replace_alu$422
  creating $alu cell for g_rom_st1:7.u1_romo.1316: $auto$alumacc.cc:485:replace_alu$425
  creating $alu cell for g_rom_st1:8.u1_rome.1300: $auto$alumacc.cc:485:replace_alu$428
  creating $alu cell for g_rom_st1:8.u1_romo.1316: $auto$alumacc.cc:485:replace_alu$431
  creating $alu cell for g_rom_st1:9.u1_rome.1300: $auto$alumacc.cc:485:replace_alu$434
  creating $alu cell for g_rom_st1:9.u1_romo.1316: $auto$alumacc.cc:485:replace_alu$437
  creating $alu cell for g_rom_st2:1.u2_rome.1300: $auto$alumacc.cc:485:replace_alu$440
  creating $alu cell for g_rom_st2:1.u2_romo.1316: $auto$alumacc.cc:485:replace_alu$443
  creating $alu cell for g_rom_st2:10.u2_rome.1300: $auto$alumacc.cc:485:replace_alu$446
  creating $alu cell for g_rom_st2:10.u2_romo.1316: $auto$alumacc.cc:485:replace_alu$449
  creating $alu cell for g_rom_st2:11.u2_rome.1300: $auto$alumacc.cc:485:replace_alu$452
  creating $alu cell for g_rom_st2:11.u2_romo.1316: $auto$alumacc.cc:485:replace_alu$455
  creating $alu cell for g_rom_st2:2.u2_rome.1300: $auto$alumacc.cc:485:replace_alu$458
  creating $alu cell for g_rom_st2:2.u2_romo.1316: $auto$alumacc.cc:485:replace_alu$461
  creating $alu cell for g_rom_st2:3.u2_rome.1300: $auto$alumacc.cc:485:replace_alu$464
  creating $alu cell for g_rom_st2:3.u2_romo.1316: $auto$alumacc.cc:485:replace_alu$467
  creating $alu cell for g_rom_st2:4.u2_rome.1300: $auto$alumacc.cc:485:replace_alu$470
  creating $alu cell for g_rom_st2:4.u2_romo.1316: $auto$alumacc.cc:485:replace_alu$473
  creating $alu cell for g_rom_st2:5.u2_rome.1300: $auto$alumacc.cc:485:replace_alu$476
  creating $alu cell for g_rom_st2:5.u2_romo.1316: $auto$alumacc.cc:485:replace_alu$479
  creating $alu cell for g_rom_st2:6.u2_rome.1300: $auto$alumacc.cc:485:replace_alu$482
  creating $alu cell for g_rom_st2:6.u2_romo.1316: $auto$alumacc.cc:485:replace_alu$485
  creating $alu cell for g_rom_st2:7.u2_rome.1300: $auto$alumacc.cc:485:replace_alu$488
  creating $alu cell for g_rom_st2:7.u2_romo.1316: $auto$alumacc.cc:485:replace_alu$491
  creating $alu cell for g_rom_st2:8.u2_rome.1300: $auto$alumacc.cc:485:replace_alu$494
  creating $alu cell for g_rom_st2:8.u2_romo.1316: $auto$alumacc.cc:485:replace_alu$497
  creating $alu cell for g_rom_st2:9.u2_rome.1300: $auto$alumacc.cc:485:replace_alu$500
  creating $alu cell for g_rom_st2:9.u2_romo.1316: $auto$alumacc.cc:485:replace_alu$503
  creating $alu cell for u_dct1d.132: $auto$alumacc.cc:485:replace_alu$506
  creating $alu cell for u_dct1d.137: $auto$alumacc.cc:485:replace_alu$509
  creating $alu cell for u_dct1d.145: $auto$alumacc.cc:485:replace_alu$512
  creating $alu cell for u_dct1d.154: $auto$alumacc.cc:485:replace_alu$515
  creating $alu cell for u_dct1d.160: $auto$alumacc.cc:485:replace_alu$518
  creating $alu cell for u_dct1d.148: $auto$alumacc.cc:485:replace_alu$521
  creating $alu cell for u_dct1d.163: $auto$alumacc.cc:485:replace_alu$524
  creating $alu cell for u_dct1d.151: $auto$alumacc.cc:485:replace_alu$527
  creating $alu cell for u_dct1d.166: $auto$alumacc.cc:485:replace_alu$530
  creating $alu cell for u_dct1d.169: $auto$alumacc.cc:485:replace_alu$533
  creating $alu cell for u_dct1d.185: $auto$alumacc.cc:485:replace_alu$536
  creating $alu cell for u_dct1d.188: $auto$alumacc.cc:485:replace_alu$539
  creating $alu cell for u_dct1d.190: $auto$alumacc.cc:485:replace_alu$542
  creating $alu cell for u_dct1d.194: $auto$alumacc.cc:485:replace_alu$545
  creating $alu cell for u_dct2d.664: $auto$alumacc.cc:485:replace_alu$548
  creating $alu cell for u_dct2d.666: $auto$alumacc.cc:485:replace_alu$551
  creating $alu cell for u_dct2d.670: $auto$alumacc.cc:485:replace_alu$554
  creating $alu cell for u_dct2d.675: $auto$alumacc.cc:485:replace_alu$557
  creating $alu cell for u_dct2d.692: $auto$alumacc.cc:485:replace_alu$560
  creating $alu cell for u_dct2d.686: $auto$alumacc.cc:485:replace_alu$563
  creating $alu cell for u_dct2d.698: $auto$alumacc.cc:485:replace_alu$566
  creating $alu cell for u_dct2d.689: $auto$alumacc.cc:485:replace_alu$569
  creating $alu cell for u_dct2d.701: $auto$alumacc.cc:485:replace_alu$572
  creating $alu cell for u_dct2d.704: $auto$alumacc.cc:485:replace_alu$575
  creating $alu cell for u_dct2d.695: $auto$alumacc.cc:485:replace_alu$578
  creating $alu cell for u_dct2d.707: $auto$alumacc.cc:485:replace_alu$581
  creating $alu cell for u_dct2d.732: $auto$alumacc.cc:485:replace_alu$584
  creating $alu cell for u_dct2d.734: $auto$alumacc.cc:485:replace_alu$587
  created 70 $alu and 18 $macc cells.

4.109. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.
<suppressed ~8 debug messages>

4.110. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.111. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

4.112. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.113. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.114. Executing OPT_SHARE pass.

4.115. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=81, #solve=0, #remove=0, time=0.01 sec.]

4.116. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 18 unused cells and 20 unused wires.
<suppressed ~19 debug messages>

4.117. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.118. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

4.119. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.120. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.121. Executing OPT_SHARE pass.

4.122. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=81, #solve=0, #remove=0, time=0.01 sec.]

4.123. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.124. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 2

4.125. Printing statistics.

=== MDCT ===

   Number of wires:                571
   Number of wire bits:           7426
   Number of public wires:         275
   Number of public wire bits:    5319
   Number of memories:              42
   Number of memory bits:        37120
   Number of processes:              0
   Number of cells:                324
     $adff                          59
     $adffe                         20
     $alu                           70
     $and                            9
     $dff                            1
     $dffe                           1
     $eq                             5
     $logic_not                      1
     $macc                          18
     $meminit                       40
     $memrd_v2                      42
     $memwr_v2                       2
     $mux                           39
     $ne                             1
     $not                            7
     $or                             2
     $reduce_and                     2
     $reduce_bool                    5

4.126. Executing MEMORY pass.

4.126.1. Executing OPT_MEM pass (optimize memories).
MDCT.g_rom_st1:1.u1_rome.1307: removing const-0 lane 0
MDCT.g_rom_st1:1.u1_rome.1307: removing const-0 lane 1
MDCT.g_rom_st1:2.u1_rome.1307: removing const-0 lane 0
MDCT.g_rom_st1:2.u1_rome.1307: removing const-0 lane 1
MDCT.g_rom_st1:3.u1_rome.1307: removing const-0 lane 0
MDCT.g_rom_st1:3.u1_rome.1307: removing const-0 lane 1
MDCT.g_rom_st1:4.u1_rome.1307: removing const-0 lane 0
MDCT.g_rom_st1:4.u1_rome.1307: removing const-0 lane 1
MDCT.g_rom_st1:5.u1_rome.1307: removing const-0 lane 0
MDCT.g_rom_st1:5.u1_rome.1307: removing const-0 lane 1
MDCT.g_rom_st1:6.u1_rome.1307: removing const-0 lane 0
MDCT.g_rom_st1:6.u1_rome.1307: removing const-0 lane 1
MDCT.g_rom_st1:7.u1_rome.1307: removing const-0 lane 0
MDCT.g_rom_st1:7.u1_rome.1307: removing const-0 lane 1
MDCT.g_rom_st1:8.u1_rome.1307: removing const-0 lane 0
MDCT.g_rom_st1:8.u1_rome.1307: removing const-0 lane 1
MDCT.g_rom_st1:9.u1_rome.1307: removing const-0 lane 0
MDCT.g_rom_st1:9.u1_rome.1307: removing const-0 lane 1
MDCT.g_rom_st2:1.u2_rome.1307: removing const-0 lane 0
MDCT.g_rom_st2:1.u2_rome.1307: removing const-0 lane 1
MDCT.g_rom_st2:10.u2_rome.1307: removing const-0 lane 0
MDCT.g_rom_st2:10.u2_rome.1307: removing const-0 lane 1
MDCT.g_rom_st2:11.u2_rome.1307: removing const-0 lane 0
MDCT.g_rom_st2:11.u2_rome.1307: removing const-0 lane 1
MDCT.g_rom_st2:2.u2_rome.1307: removing const-0 lane 0
MDCT.g_rom_st2:2.u2_rome.1307: removing const-0 lane 1
MDCT.g_rom_st2:3.u2_rome.1307: removing const-0 lane 0
MDCT.g_rom_st2:3.u2_rome.1307: removing const-0 lane 1
MDCT.g_rom_st2:4.u2_rome.1307: removing const-0 lane 0
MDCT.g_rom_st2:4.u2_rome.1307: removing const-0 lane 1
MDCT.g_rom_st2:5.u2_rome.1307: removing const-0 lane 0
MDCT.g_rom_st2:5.u2_rome.1307: removing const-0 lane 1
MDCT.g_rom_st2:6.u2_rome.1307: removing const-0 lane 0
MDCT.g_rom_st2:6.u2_rome.1307: removing const-0 lane 1
MDCT.g_rom_st2:7.u2_rome.1307: removing const-0 lane 0
MDCT.g_rom_st2:7.u2_rome.1307: removing const-0 lane 1
MDCT.g_rom_st2:8.u2_rome.1307: removing const-0 lane 0
MDCT.g_rom_st2:8.u2_rome.1307: removing const-0 lane 1
MDCT.g_rom_st2:9.u2_rome.1307: removing const-0 lane 0
MDCT.g_rom_st2:9.u2_rome.1307: removing const-0 lane 1
Performed a total of 20 transformations.

4.126.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.126.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing MDCT.u1_ram.mem write port 0.
  Analyzing MDCT.u2_ram.mem write port 0.

4.126.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.126.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\u1_ram.mem'[0] in module `\MDCT': no output FF found.
Checking read port `\u2_ram.mem'[0] in module `\MDCT': no output FF found.
Checking read port address `\u1_ram.mem'[0] in module `\MDCT': merged address FF to cell.
Checking read port address `\u2_ram.mem'[0] in module `\MDCT': merged address FF to cell.

4.126.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 1 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

4.126.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.126.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.126.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.126.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.127. Printing statistics.

=== MDCT ===

   Number of wires:                569
   Number of wire bits:           7414
   Number of public wires:         273
   Number of public wire bits:    5307
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                321
     $adff                          59
     $adffe                         20
     $alu                           70
     $and                            9
     $dff                           40
     $dffe                           1
     $eq                             5
     $logic_not                      1
     $macc                          18
     $mem_v2                        42
     $mux                           39
     $ne                             1
     $not                            7
     $or                             2
     $reduce_and                     2
     $reduce_bool                    5

4.128. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~32 debug messages>

4.129. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.130. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.131. Executing MEMORY_LIBMAP pass (mapping memories to cells).
mapping memory MDCT.g_rom_st1:1.u1_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:1.u1_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:2.u1_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:2.u1_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:3.u1_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:3.u1_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:4.u1_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:4.u1_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:5.u1_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:5.u1_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:6.u1_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:6.u1_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:7.u1_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:7.u1_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:8.u1_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:8.u1_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:9.u1_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st1:9.u1_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:1.u2_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:1.u2_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:10.u2_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:10.u2_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:11.u2_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:11.u2_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:2.u2_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:2.u2_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:3.u2_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:3.u2_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:4.u2_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:4.u2_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:5.u2_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:5.u2_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:6.u2_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:6.u2_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:7.u2_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:7.u2_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:8.u2_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:8.u2_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:9.u2_rome.1307 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.g_rom_st2:9.u2_romo.1323 via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.u1_ram.mem via $__RS_FACTOR_BRAM18_SDP
mapping memory MDCT.u2_ram.mem via $__RS_FACTOR_BRAM18_SDP
<suppressed ~4222 debug messages>

4.132. Executing Rs_BRAM_Split pass.
 BRAM: u2_ram.mem.0.0 ($__RS_FACTOR_BRAM18_SDP) + u1_ram.mem.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_u2_ram.mem.0.0_u1_ram.mem.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st1:1.u1_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st1:1.u1_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st1:1.u1_rome.1307.0.0_g_rom_st1:1.u1_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st1:2.u1_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st1:2.u1_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st1:2.u1_rome.1307.0.0_g_rom_st1:2.u1_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st1:3.u1_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st1:3.u1_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st1:3.u1_rome.1307.0.0_g_rom_st1:3.u1_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st1:4.u1_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st1:4.u1_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st1:4.u1_rome.1307.0.0_g_rom_st1:4.u1_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st1:5.u1_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st1:5.u1_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st1:5.u1_rome.1307.0.0_g_rom_st1:5.u1_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st1:6.u1_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st1:6.u1_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st1:6.u1_rome.1307.0.0_g_rom_st1:6.u1_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st1:7.u1_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st1:7.u1_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st1:7.u1_rome.1307.0.0_g_rom_st1:7.u1_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st1:8.u1_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st1:8.u1_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st1:8.u1_rome.1307.0.0_g_rom_st1:8.u1_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st1:9.u1_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st1:9.u1_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st1:9.u1_rome.1307.0.0_g_rom_st1:9.u1_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st2:1.u2_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st2:1.u2_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st2:1.u2_rome.1307.0.0_g_rom_st2:1.u2_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st2:10.u2_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st2:10.u2_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st2:10.u2_rome.1307.0.0_g_rom_st2:10.u2_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st2:11.u2_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st2:11.u2_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st2:11.u2_rome.1307.0.0_g_rom_st2:11.u2_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st2:2.u2_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st2:2.u2_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st2:2.u2_rome.1307.0.0_g_rom_st2:2.u2_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st2:3.u2_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st2:3.u2_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st2:3.u2_rome.1307.0.0_g_rom_st2:3.u2_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st2:4.u2_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st2:4.u2_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st2:4.u2_rome.1307.0.0_g_rom_st2:4.u2_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st2:5.u2_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st2:5.u2_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st2:5.u2_rome.1307.0.0_g_rom_st2:5.u2_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st2:6.u2_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st2:6.u2_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st2:6.u2_rome.1307.0.0_g_rom_st2:6.u2_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st2:7.u2_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st2:7.u2_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st2:7.u2_rome.1307.0.0_g_rom_st2:7.u2_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st2:8.u2_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st2:8.u2_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st2:8.u2_rome.1307.0.0_g_rom_st2:8.u2_romo.1323.0.0 (BRAM2x18_SDP)
 BRAM: g_rom_st2:9.u2_rome.1307.0.0 ($__RS_FACTOR_BRAM18_SDP) + g_rom_st2:9.u2_romo.1323.0.0 ($__RS_FACTOR_BRAM18_SDP) => bram_g_rom_st2:9.u2_rome.1307.0.0_g_rom_st2:9.u2_romo.1323.0.0 (BRAM2x18_SDP)

4.133. Executing TECHMAP pass (map to technology primitives).

4.133.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

4.133.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

4.134. Executing TECHMAP pass (map to technology primitives).

4.134.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

4.134.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~617 debug messages>

4.135. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

4.136. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.
<suppressed ~6 debug messages>

4.137. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
<suppressed ~117 debug messages>
Removed a total of 39 cells.

4.138. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

4.139. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.140. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.141. Executing OPT_SHARE pass.

4.142. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_mem.cc:125:execute$590 ($dff) from module MDCT.
[#visit=81, #solve=0, #remove=1, time=0.02 sec.]

4.143. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 1140 unused wires.
<suppressed ~1 debug messages>

4.144. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.145. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

4.146. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.147. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.148. Executing OPT_SHARE pass.

4.149. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on u_dct1d.636 ($adff) from module MDCT.
Setting constant 0-bit at position 1 on u_dct1d.636 ($adff) from module MDCT.
Setting constant 0-bit at position 14 on u_dct1d.636 ($adff) from module MDCT.
Setting constant 0-bit at position 15 on u_dct1d.636 ($adff) from module MDCT.
Setting constant 0-bit at position 28 on u_dct1d.636 ($adff) from module MDCT.
Setting constant 0-bit at position 29 on u_dct1d.636 ($adff) from module MDCT.
Setting constant 0-bit at position 42 on u_dct1d.636 ($adff) from module MDCT.
Setting constant 0-bit at position 43 on u_dct1d.636 ($adff) from module MDCT.
Setting constant 0-bit at position 56 on u_dct1d.636 ($adff) from module MDCT.
Setting constant 0-bit at position 57 on u_dct1d.636 ($adff) from module MDCT.
Setting constant 0-bit at position 70 on u_dct1d.636 ($adff) from module MDCT.
Setting constant 0-bit at position 71 on u_dct1d.636 ($adff) from module MDCT.
Setting constant 0-bit at position 0 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 1 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 14 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 15 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 28 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 29 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 42 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 43 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 56 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 57 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 70 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 71 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 84 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 85 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 98 on u_dct2d.1241 ($adff) from module MDCT.
Setting constant 0-bit at position 99 on u_dct2d.1241 ($adff) from module MDCT.
[#visit=80, #solve=0, #remove=28, time=0.02 sec.]

4.150. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.151. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 2

4.152. Executing PMUXTREE pass.

4.153. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~32 debug messages>

4.154. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

4.155. Executing TECHMAP pass (map to technology primitives).

4.155.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.155.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

4.155.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper maccmap for cells of type $macc.
  add \u_dct1d.dcto_1 (22 bits, unsigned)
  add { \u_dct1d.romodatao_d1 [69] \u_dct1d.romodatao_d1 [69] \u_dct1d.romodatao_d1 [69] \u_dct1d.romodatao_d1 [69] \u_dct1d.romodatao_d1 [69:56] 4'0000 } (22 bits, unsigned)
  add { \u_dct1d.romodatao_d1 [83] \u_dct1d.romodatao_d1 [83] \u_dct1d.romodatao_d1 [83] \u_dct1d.romodatao_d1 [83] \u_dct1d.romodatao_d1 [83] \u_dct1d.romodatao_d1 [83:70] 3'000 } (22 bits, unsigned)
  add \u_dct1d.dcto_3 (22 bits, unsigned)
  sub { \u_dct1d.romodatao_d3 [13:0] 8'00000000 } (22 bits, unsigned)
  add { \u_dct1d.romodatao_d3 [27] \u_dct1d.romodatao_d3 [27:14] 7'0000000 } (22 bits, unsigned)
  add { \g_rom_st1:1.u1_romo.datao [13] \g_rom_st1:1.u1_romo.datao [13] \g_rom_st1:1.u1_romo.datao [13] \g_rom_st1:1.u1_romo.datao [13] \g_rom_st1:1.u1_romo.datao [13] \g_rom_st1:1.u1_romo.datao [13] \g_rom_st1:1.u1_romo.datao [13] \g_rom_st1:1.u1_romo.datao [13] \g_rom_st1:1.u1_romo.datao } (22 bits, unsigned)
  add { \g_rom_st1:3.u1_romo.datao [13] \g_rom_st1:3.u1_romo.datao [13] \g_rom_st1:3.u1_romo.datao [13] \g_rom_st1:3.u1_romo.datao [13] \g_rom_st1:3.u1_romo.datao [13] \g_rom_st1:3.u1_romo.datao [13] \g_rom_st1:3.u1_romo.datao 2'00 } (22 bits, unsigned)
  add { \g_rom_st1:2.u1_romo.datao [13] \g_rom_st1:2.u1_romo.datao [13] \g_rom_st1:2.u1_romo.datao [13] \g_rom_st1:2.u1_romo.datao [13] \g_rom_st1:2.u1_romo.datao [13] \g_rom_st1:2.u1_romo.datao [13] \g_rom_st1:2.u1_romo.datao [13] \g_rom_st1:2.u1_romo.datao 1'0 } (22 bits, unsigned)
  add \u_dct1d.dcto_2 (22 bits, unsigned)
  add { \u_dct1d.romodatao_d2 [41] \u_dct1d.romodatao_d2 [41] \u_dct1d.romodatao_d2 [41:28] 6'000000 } (22 bits, unsigned)
  add { \u_dct1d.romodatao_d2 [55] \u_dct1d.romodatao_d2 [55] \u_dct1d.romodatao_d2 [55] \u_dct1d.romodatao_d2 [55:42] 5'00000 } (22 bits, unsigned)
  add { \g_rom_st2:1.u2_rome.datao [13] \g_rom_st2:1.u2_rome.datao [13] \g_rom_st2:1.u2_rome.datao [13] \g_rom_st2:1.u2_rome.datao [13] \g_rom_st2:1.u2_rome.datao [13] \g_rom_st2:1.u2_rome.datao [13] \g_rom_st2:1.u2_rome.datao [13] \g_rom_st2:1.u2_rome.datao [13] \g_rom_st2:1.u2_rome.datao [13] \g_rom_st2:1.u2_rome.datao [13] \g_rom_st2:1.u2_rome.datao [13:2] 2'00 } (24 bits, unsigned)
  add { \g_rom_st2:3.u2_rome.datao [13] \g_rom_st2:3.u2_rome.datao [13] \g_rom_st2:3.u2_rome.datao [13] \g_rom_st2:3.u2_rome.datao [13] \g_rom_st2:3.u2_rome.datao [13] \g_rom_st2:3.u2_rome.datao [13] \g_rom_st2:3.u2_rome.datao [13] \g_rom_st2:3.u2_rome.datao [13] \g_rom_st2:3.u2_rome.datao [13:2] 4'0000 } (24 bits, unsigned)
  add { \g_rom_st2:2.u2_rome.datao [13] \g_rom_st2:2.u2_rome.datao [13] \g_rom_st2:2.u2_rome.datao [13] \g_rom_st2:2.u2_rome.datao [13] \g_rom_st2:2.u2_rome.datao [13] \g_rom_st2:2.u2_rome.datao [13] \g_rom_st2:2.u2_rome.datao [13] \g_rom_st2:2.u2_rome.datao [13] \g_rom_st2:2.u2_rome.datao [13] \g_rom_st2:2.u2_rome.datao [13:2] 3'000 } (24 bits, unsigned)
  add \u_dct1d.dcto_3 (22 bits, unsigned)
  sub { \u_dct1d.romedatao_d3 [13:0] 8'00000000 } (22 bits, unsigned)
  add { \u_dct1d.romedatao_d3 [27] \u_dct1d.romedatao_d3 [27:14] 7'0000000 } (22 bits, unsigned)
  add \u_dct1d.dcto_2 (22 bits, unsigned)
  add { \u_dct1d.romedatao_d2 [41] \u_dct1d.romedatao_d2 [41] \u_dct1d.romedatao_d2 [41:28] 6'000000 } (22 bits, unsigned)
  add { \u_dct1d.romedatao_d2 [55] \u_dct1d.romedatao_d2 [55] \u_dct1d.romedatao_d2 [55] \u_dct1d.romedatao_d2 [55:42] 5'00000 } (22 bits, unsigned)
  add \u_dct1d.dcto_1 (22 bits, unsigned)
  add { \u_dct1d.romedatao_d1 [69] \u_dct1d.romedatao_d1 [69] \u_dct1d.romedatao_d1 [69] \u_dct1d.romedatao_d1 [69] \u_dct1d.romedatao_d1 [69:58] 6'000000 } (22 bits, unsigned)
  add { \u_dct1d.romedatao_d1 [83] \u_dct1d.romedatao_d1 [83] \u_dct1d.romedatao_d1 [83] \u_dct1d.romedatao_d1 [83] \u_dct1d.romedatao_d1 [83] \u_dct1d.romedatao_d1 [83:72] 5'00000 } (22 bits, unsigned)
  add { \g_rom_st1:1.u1_rome.datao [13] \g_rom_st1:1.u1_rome.datao [13] \g_rom_st1:1.u1_rome.datao [13] \g_rom_st1:1.u1_rome.datao [13] \g_rom_st1:1.u1_rome.datao [13] \g_rom_st1:1.u1_rome.datao [13] \g_rom_st1:1.u1_rome.datao [13] \g_rom_st1:1.u1_rome.datao [13] \g_rom_st1:1.u1_rome.datao [13:2] 2'00 } (22 bits, unsigned)
  add { \g_rom_st1:3.u1_rome.datao [13] \g_rom_st1:3.u1_rome.datao [13] \g_rom_st1:3.u1_rome.datao [13] \g_rom_st1:3.u1_rome.datao [13] \g_rom_st1:3.u1_rome.datao [13] \g_rom_st1:3.u1_rome.datao [13] \g_rom_st1:3.u1_rome.datao [13:2] 4'0000 } (22 bits, unsigned)
  add { \g_rom_st1:2.u1_rome.datao [13] \g_rom_st1:2.u1_rome.datao [13] \g_rom_st1:2.u1_rome.datao [13] \g_rom_st1:2.u1_rome.datao [13] \g_rom_st1:2.u1_rome.datao [13] \g_rom_st1:2.u1_rome.datao [13] \g_rom_st1:2.u1_rome.datao [13] \g_rom_st1:2.u1_rome.datao [13:2] 3'000 } (22 bits, unsigned)
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $logic_not.
  add \u_dct2d.dcto_1 (24 bits, unsigned)
  add { \u_dct2d.romodatao_d1 [97] \u_dct2d.romodatao_d1 [97] \u_dct2d.romodatao_d1 [97] \u_dct2d.romodatao_d1 [97] \u_dct2d.romodatao_d1 [97] \u_dct2d.romodatao_d1 [97] \u_dct2d.romodatao_d1 [97:84] 4'0000 } (24 bits, unsigned)
  add { \u_dct2d.romodatao_d1 [111] \u_dct2d.romodatao_d1 [111] \u_dct2d.romodatao_d1 [111] \u_dct2d.romodatao_d1 [111] \u_dct2d.romodatao_d1 [111] \u_dct2d.romodatao_d1 [111] \u_dct2d.romodatao_d1 [111] \u_dct2d.romodatao_d1 [111:98] 3'000 } (24 bits, unsigned)
  add \u_dct2d.dcto_4 (24 bits, unsigned)
  sub { \u_dct2d.romedatao_d4 [13:0] 10'0000000000 } (24 bits, unsigned)
  add { \u_dct2d.romedatao_d4 [27] \u_dct2d.romedatao_d4 [27:14] 9'000000000 } (24 bits, unsigned)
  add { \g_rom_st2:1.u2_romo.datao [13] \g_rom_st2:1.u2_romo.datao [13] \g_rom_st2:1.u2_romo.datao [13] \g_rom_st2:1.u2_romo.datao [13] \g_rom_st2:1.u2_romo.datao [13] \g_rom_st2:1.u2_romo.datao [13] \g_rom_st2:1.u2_romo.datao [13] \g_rom_st2:1.u2_romo.datao [13] \g_rom_st2:1.u2_romo.datao [13] \g_rom_st2:1.u2_romo.datao [13] \g_rom_st2:1.u2_romo.datao } (24 bits, unsigned)
  add { \g_rom_st2:3.u2_romo.datao [13] \g_rom_st2:3.u2_romo.datao [13] \g_rom_st2:3.u2_romo.datao [13] \g_rom_st2:3.u2_romo.datao [13] \g_rom_st2:3.u2_romo.datao [13] \g_rom_st2:3.u2_romo.datao [13] \g_rom_st2:3.u2_romo.datao [13] \g_rom_st2:3.u2_romo.datao [13] \g_rom_st2:3.u2_romo.datao 2'00 } (24 bits, unsigned)
  add { \g_rom_st2:2.u2_romo.datao [13] \g_rom_st2:2.u2_romo.datao [13] \g_rom_st2:2.u2_romo.datao [13] \g_rom_st2:2.u2_romo.datao [13] \g_rom_st2:2.u2_romo.datao [13] \g_rom_st2:2.u2_romo.datao [13] \g_rom_st2:2.u2_romo.datao [13] \g_rom_st2:2.u2_romo.datao [13] \g_rom_st2:2.u2_romo.datao [13] \g_rom_st2:2.u2_romo.datao 1'0 } (24 bits, unsigned)
  add \u_dct2d.dcto_3 (24 bits, unsigned)
  add { \u_dct2d.romodatao_d3 [41] \u_dct2d.romodatao_d3 [41] \u_dct2d.romodatao_d3 [41:28] 8'00000000 } (24 bits, unsigned)
  add { \u_dct2d.romodatao_d3 [55] \u_dct2d.romodatao_d3 [55] \u_dct2d.romodatao_d3 [55] \u_dct2d.romodatao_d3 [55:42] 7'0000000 } (24 bits, unsigned)
  add \u_dct2d.dcto_2 (24 bits, unsigned)
  add { \u_dct2d.romedatao_d2 [69] \u_dct2d.romedatao_d2 [69] \u_dct2d.romedatao_d2 [69] \u_dct2d.romedatao_d2 [69] \u_dct2d.romedatao_d2 [69:56] 6'000000 } (24 bits, unsigned)
  add { \u_dct2d.romedatao_d2 [83] \u_dct2d.romedatao_d2 [83] \u_dct2d.romedatao_d2 [83] \u_dct2d.romedatao_d2 [83] \u_dct2d.romedatao_d2 [83] \u_dct2d.romedatao_d2 [83:70] 5'00000 } (24 bits, unsigned)
  add \u_dct2d.dcto_3 (24 bits, unsigned)
  add { \u_dct2d.romedatao_d3 [41] \u_dct2d.romedatao_d3 [41] \u_dct2d.romedatao_d3 [41:28] 8'00000000 } (24 bits, unsigned)
  add { \u_dct2d.romedatao_d3 [55] \u_dct2d.romedatao_d3 [55] \u_dct2d.romedatao_d3 [55] \u_dct2d.romedatao_d3 [55:42] 7'0000000 } (24 bits, unsigned)
  add \u_dct2d.dcto_2 (24 bits, unsigned)
  add { \u_dct2d.romodatao_d2 [69] \u_dct2d.romodatao_d2 [69] \u_dct2d.romodatao_d2 [69] \u_dct2d.romodatao_d2 [69] \u_dct2d.romodatao_d2 [69:56] 6'000000 } (24 bits, unsigned)
  add { \u_dct2d.romodatao_d2 [83] \u_dct2d.romodatao_d2 [83] \u_dct2d.romodatao_d2 [83] \u_dct2d.romodatao_d2 [83] \u_dct2d.romodatao_d2 [83] \u_dct2d.romodatao_d2 [83:70] 5'00000 } (24 bits, unsigned)
  add \u_dct2d.dcto_4 (24 bits, unsigned)
  sub { \u_dct2d.romodatao_d4 [13:0] 10'0000000000 } (24 bits, unsigned)
  add { \u_dct2d.romodatao_d4 [27] \u_dct2d.romodatao_d4 [27:14] 9'000000000 } (24 bits, unsigned)
Using extmapper simplemap for cells of type $reduce_and.
  add \u_dct2d.dcto_1 (24 bits, unsigned)
  add { \u_dct2d.romedatao_d1 [97] \u_dct2d.romedatao_d1 [97] \u_dct2d.romedatao_d1 [97] \u_dct2d.romedatao_d1 [97] \u_dct2d.romedatao_d1 [97] \u_dct2d.romedatao_d1 [97] \u_dct2d.romedatao_d1 [97:86] 6'000000 } (24 bits, unsigned)
  add { \u_dct2d.romedatao_d1 [111] \u_dct2d.romedatao_d1 [111] \u_dct2d.romedatao_d1 [111] \u_dct2d.romedatao_d1 [111] \u_dct2d.romedatao_d1 [111] \u_dct2d.romedatao_d1 [111] \u_dct2d.romedatao_d1 [111] \u_dct2d.romedatao_d1 [111:100] 5'00000 } (24 bits, unsigned)
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~5683 debug messages>

4.156. Printing statistics.

=== MDCT ===

   Number of wires:               5483
   Number of wire bits:         131468
   Number of public wires:         273
   Number of public wire bits:    5307
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              11880
     $_AND_                       3523
     $_DFFE_PN_                      1
     $_DFFE_PP0N_                    6
     $_DFFE_PP0P_                  350
     $_DFFE_PP1P_                   12
     $_DFF_PP0_                   1368
     $_MUX_                       1167
     $_NOT_                        981
     $_OR_                        1771
     $_XOR_                       2680
     TDP_RAM18KX2                   21

4.157. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.
<suppressed ~3603 debug messages>

4.158. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
<suppressed ~2901 debug messages>
Removed a total of 967 cells.

4.159. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.160. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.161. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.162. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$2326 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$6647
        $auto$simplemap.cc:86:simplemap_bitop$7667

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$2061 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$10666
        $auto$simplemap.cc:86:simplemap_bitop$9220

4.163. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on MDCT:u_dct1d.romedatao_d2[0]_2781 ($_DFF_PP0_) from module MDCT.
[#visit=1621, #solve=0, #remove=1, time=0.09 sec.]

4.164. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 853 unused cells and 3752 unused wires.
<suppressed ~854 debug messages>

4.165. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.
<suppressed ~60 debug messages>

4.166. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.167. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.168. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

4.169. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$2021 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$9580
        $auto$simplemap.cc:86:simplemap_bitop$10062

4.170. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on MDCT:u_dct1d.romedatao_d3[0]_2865 ($_DFF_PP0_) from module MDCT.
[#visit=1570, #solve=0, #remove=1, time=0.12 sec.]

4.171. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 6 unused cells and 40 unused wires.
<suppressed ~7 debug messages>

4.172. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.
<suppressed ~33 debug messages>

4.173. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.174. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.175. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.176. Executing OPT_SHARE pass.

4.177. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on MDCT:u_dct2d.romedatao_d4[0]_1582 ($_DFF_PP0_) from module MDCT.
[#visit=1569, #solve=0, #remove=1, time=0.10 sec.]

4.178. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 1 unused cells and 7 unused wires.
<suppressed ~2 debug messages>

4.179. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.
<suppressed ~11 debug messages>

4.180. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.181. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.182. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.183. Executing OPT_SHARE pass.

4.184. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1568, #solve=0, #remove=0, time=0.09 sec.]

4.185. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

4.186. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 4

4.187. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.
<suppressed ~762 debug messages>

4.188. Executing TECHMAP pass (map to technology primitives).

4.188.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.188.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
No more expansions possible.
<suppressed ~72 debug messages>

Dumping port properties into 'port_info.json' file.

4.189. Printing statistics.

=== MDCT ===

   Number of wires:               2185
   Number of wire bits:          13910
   Number of public wires:         273
   Number of public wire bits:    5307
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6802
     $_AND_                       2035
     $_DFFE_PN_                      1
     $_DFFE_PP0N_                    6
     $_DFFE_PP0P_                  324
     $_DFFE_PP1P_                   12
     $_DFF_PP0_                   1225
     $_MUX_                        197
     $_NOT_                        366
     $_OR_                        1078
     $_XOR_                       1537
     TDP_RAM18KX2                   21

4.190. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.191. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

4.192. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.193. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.194. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.195. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1568, #solve=0, #remove=0, time=0.11 sec.]

4.196. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

4.197. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

4.198. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.199. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.200. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.201. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.202. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.203. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1568, #solve=0, #remove=0, time=0.10 sec.]

4.204. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.205. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

4.206. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.207. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.208. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.209. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.210. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.211. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1568, #solve=0, #remove=0, time=0.11 sec.]

4.212. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1568, #solve=1563, #remove=0, time=0.25 sec.]

4.213. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.214. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

4.215. Printing statistics.

=== MDCT ===

   Number of wires:               2173
   Number of wire bits:          13878
   Number of public wires:         273
   Number of public wire bits:    5307
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6800
     $_AND_                       2033
     $_DFFE_PN_                      1
     $_DFFE_PP0N_                    6
     $_DFFE_PP0P_                  324
     $_DFFE_PP1P_                   12
     $_DFF_PP0_                   1225
     $_MUX_                        197
     $_NOT_                        366
     $_OR_                        1078
     $_XOR_                       1537
     TDP_RAM18KX2                   21

   Number of Generic REGs:          1568

ABC-DFF iteration : 1

4.216. Executing ABC pass (technology mapping using ABC).

4.216.1. Summary of detected clock domains:
  12 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$310, arst=\rst, srst={ }
  8 cells in clk=\clk, en=$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$197, arst=\rst, srst={ }
  12 cells in clk=\clk, en=$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$198, arst=\rst, srst={ }
  270 cells in clk=\clk, en=\u_dct2d.stage1_reg, arst=\rst, srst={ }
  3 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$342, arst=\rst, srst={ }
  449 cells in clk=\clk, en=$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$193, arst=\rst, srst={ }
  26 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$315, arst=\rst, srst={ }
  30 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$307, arst=\rst, srst={ }
  7 cells in clk=\clk, en=$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$96, arst=\rst, srst={ }
  11 cells in clk=\clk, en=$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$94, arst=\rst, srst={ }
  14 cells in clk=\clk, en=!$auto$rtlil.cc:2425:Or$383, arst=\rst, srst={ }
  271 cells in clk=\clk, en=\idv, arst=\rst, srst={ }
  352 cells in clk=\clk, en=$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$80, arst=\rst, srst={ }
  39 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$328, arst=\rst, srst={ }
  1 cells in clk=\clk, en=!\rst, arst={ }, srst={ }
  5295 cells in clk=\clk, en={ }, arst=\rst, srst={ }

  #logic partitions = 16

4.216.2. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 5275 gates and 6004 wires to a netlist network with 728 inputs and 1496 outputs (dfl=1).

4.216.2.1. Executing ABC.
[Time = 0.52 sec.]

4.216.3. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$193, asynchronously reset by \rst
Extracted 449 gates and 609 wires to a netlist network with 160 inputs and 94 outputs (dfl=1).

4.216.3.1. Executing ABC.
[Time = 0.10 sec.]

4.216.4. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$80, asynchronously reset by \rst
Extracted 352 gates and 488 wires to a netlist network with 136 inputs and 72 outputs (dfl=1).

4.216.4.1. Executing ABC.
[Time = 0.10 sec.]

4.216.5. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \idv, asynchronously reset by \rst
Extracted 271 gates and 279 wires to a netlist network with 8 inputs and 205 outputs (dfl=1).

4.216.5.1. Executing ABC.
[Time = 0.09 sec.]

4.216.6. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \u_dct2d.stage1_reg, asynchronously reset by \rst
Extracted 270 gates and 280 wires to a netlist network with 10 inputs and 230 outputs (dfl=1).

4.216.6.1. Executing ABC.
[Time = 0.11 sec.]

4.216.7. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$auto$opt_dff.cc:195:make_patterns_logic$328, asynchronously reset by \rst
Extracted 39 gates and 51 wires to a netlist network with 12 inputs and 30 outputs (dfl=1).

4.216.7.1. Executing ABC.
[Time = 0.06 sec.]

4.216.8. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$auto$opt_dff.cc:195:make_patterns_logic$307, asynchronously reset by \rst
Extracted 30 gates and 39 wires to a netlist network with 9 inputs and 23 outputs (dfl=1).

4.216.8.1. Executing ABC.
[Time = 0.08 sec.]

4.216.9. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$315, asynchronously reset by \rst
Extracted 26 gates and 29 wires to a netlist network with 2 inputs and 10 outputs (dfl=1).

4.216.9.1. Executing ABC.
[Time = 0.11 sec.]

4.216.10. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$auto$rtlil.cc:2425:Or$383, asynchronously reset by \rst
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 7 outputs (dfl=1).

4.216.10.1. Executing ABC.
[Time = 0.07 sec.]

4.216.11. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$310, asynchronously reset by \rst
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 7 outputs (dfl=1).

4.216.11.1. Executing ABC.
[Time = 0.08 sec.]

4.216.12. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23007$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$198, asynchronously reset by \rst
Extracted 12 gates and 32 wires to a netlist network with 20 inputs and 11 outputs (dfl=1).

4.216.12.1. Executing ABC.
[Time = 0.11 sec.]

4.216.13. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$94, asynchronously reset by \rst
Extracted 11 gates and 13 wires to a netlist network with 2 inputs and 8 outputs (dfl=1).

4.216.13.1. Executing ABC.
[Time = 0.10 sec.]

4.216.14. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23007$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$197, asynchronously reset by \rst
Extracted 7 gates and 7 wires to a netlist network with 0 inputs and 3 outputs (dfl=1).

4.216.14.1. Executing ABC.
[Time = 0.07 sec.]

4.216.15. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$96, asynchronously reset by \rst
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 3 outputs (dfl=1).

4.216.15.1. Executing ABC.
[Time = 0.09 sec.]

4.216.16. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$342, asynchronously reset by \rst
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs (dfl=1).

4.216.16.1. Executing ABC.
[Time = 0.09 sec.]

4.216.17. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !\rst
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs (dfl=1).

4.216.17.1. Executing ABC.
[Time = 0.08 sec.]

4.217. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.
<suppressed ~1 debug messages>

4.218. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
<suppressed ~318 debug messages>
Removed a total of 106 cells.

4.219. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.220. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.221. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.222. Executing OPT_SHARE pass.

4.223. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1528, #solve=0, #remove=0, time=0.09 sec.]

4.224. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 7742 unused wires.
<suppressed ~1 debug messages>

4.225. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 2

4.226. Executing ABC pass (technology mapping using ABC).

4.226.1. Summary of detected clock domains:
  4 cells in clk=\clk, en=!\rst, arst={ }, srst={ }
  1 cells in clk=\clk, en=$abc$23069$auto$opt_dff.cc:195:make_patterns_logic$342, arst=\rst, srst={ }
  7 cells in clk=\clk, en=$abc$23061$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$96, arst=\rst, srst={ }
  10 cells in clk=\clk, en=$abc$23007$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$197, arst=\rst, srst={ }
  10 cells in clk=\clk, en=$abc$23034$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$94, arst=\rst, srst={ }
  13 cells in clk=\clk, en=$abc$23007$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$198, arst=\rst, srst={ }
  6 cells in clk=\clk, en=$abc$23007$auto$opt_dff.cc:195:make_patterns_logic$310, arst=\rst, srst={ }
  9 cells in clk=\clk, en=!$abc$14444$auto$rtlil.cc:2425:Or$383, arst=\rst, srst={ }
  28 cells in clk=\clk, en=$abc$23007$auto$opt_dff.cc:195:make_patterns_logic$315, arst=\rst, srst={ }
  45 cells in clk=\clk, en=$abc$14444$auto$opt_dff.cc:195:make_patterns_logic$307, arst=\rst, srst={ }
  60 cells in clk=\clk, en=$abc$14444$auto$opt_dff.cc:195:make_patterns_logic$328, arst=\rst, srst={ }
  230 cells in clk=\clk, en=\u_dct2d.stage1_reg, arst=\rst, srst={ }
  162 cells in clk=\clk, en=\idv, arst=\rst, srst={ }
  379 cells in clk=\clk, en=$abc$14444$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$80, arst=\rst, srst={ }
  449 cells in clk=\clk, en=$abc$14444$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$193, arst=\rst, srst={ }
  4342 cells in clk=\clk, en={ }, arst=\rst, srst={ }

  #logic partitions = 16

4.226.2. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 4322 gates and 5026 wires to a netlist network with 704 inputs and 1372 outputs (dfl=1).

4.226.2.1. Executing ABC.
[Time = 0.52 sec.]

4.226.3. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$193, asynchronously reset by \rst
Extracted 449 gates and 609 wires to a netlist network with 160 inputs and 94 outputs (dfl=1).

4.226.3.1. Executing ABC.
[Time = 0.15 sec.]

4.226.4. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$80, asynchronously reset by \rst
Extracted 379 gates and 479 wires to a netlist network with 100 inputs and 69 outputs (dfl=1).

4.226.4.1. Executing ABC.
[Time = 0.14 sec.]

4.226.5. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \u_dct2d.stage1_reg, asynchronously reset by \rst
Extracted 230 gates and 240 wires to a netlist network with 10 inputs and 230 outputs (dfl=1).

4.226.5.1. Executing ABC.
[Time = 0.13 sec.]

4.226.6. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \idv, asynchronously reset by \rst
Extracted 162 gates and 170 wires to a netlist network with 8 inputs and 158 outputs (dfl=1).

4.226.6.1. Executing ABC.
[Time = 0.12 sec.]

4.226.7. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$auto$opt_dff.cc:195:make_patterns_logic$328, asynchronously reset by \rst
Extracted 60 gates and 68 wires to a netlist network with 8 inputs and 28 outputs (dfl=1).

4.226.7.1. Executing ABC.
[Time = 0.10 sec.]

4.226.8. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$auto$opt_dff.cc:195:make_patterns_logic$307, asynchronously reset by \rst
Extracted 45 gates and 52 wires to a netlist network with 7 inputs and 24 outputs (dfl=1).

4.226.8.1. Executing ABC.
[Time = 0.12 sec.]

4.226.9. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23007$auto$opt_dff.cc:195:make_patterns_logic$315, asynchronously reset by \rst
Extracted 28 gates and 33 wires to a netlist network with 5 inputs and 11 outputs (dfl=1).

4.226.9.1. Executing ABC.
[Time = 0.13 sec.]

4.226.10. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23007$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$198, asynchronously reset by \rst
Extracted 13 gates and 35 wires to a netlist network with 22 inputs and 12 outputs (dfl=1).

4.226.10.1. Executing ABC.
[Time = 0.14 sec.]

4.226.11. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23007$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$197, asynchronously reset by \rst
Extracted 9 gates and 12 wires to a netlist network with 3 inputs and 4 outputs (dfl=1).

4.226.11.1. Executing ABC.
[Time = 0.10 sec.]

4.226.12. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23034$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$94, asynchronously reset by \rst
Extracted 10 gates and 12 wires to a netlist network with 2 inputs and 7 outputs (dfl=1).

4.226.12.1. Executing ABC.
[Time = 0.10 sec.]

4.226.13. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$14444$auto$rtlil.cc:2425:Or$383, asynchronously reset by \rst
Extracted 9 gates and 18 wires to a netlist network with 9 inputs and 7 outputs (dfl=1).

4.226.13.1. Executing ABC.
[Time = 0.08 sec.]

4.226.14. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23061$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$96, asynchronously reset by \rst
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 3 outputs (dfl=1).

4.226.14.1. Executing ABC.
[Time = 0.09 sec.]

4.226.15. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23007$auto$opt_dff.cc:195:make_patterns_logic$310, asynchronously reset by \rst
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 5 outputs (dfl=1).

4.226.15.1. Executing ABC.
[Time = 0.11 sec.]

4.226.16. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !\rst
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 4 outputs (dfl=1).

4.226.16.1. Executing ABC.
[Time = 0.13 sec.]

4.226.17. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31512$abc$23069$auto$opt_dff.cc:195:make_patterns_logic$342, asynchronously reset by \rst
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs (dfl=1).

4.226.17.1. Executing ABC.
[Time = 0.12 sec.]

4.227. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.228. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

4.229. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.230. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.231. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.232. Executing OPT_SHARE pass.

4.233. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1527, #solve=0, #remove=0, time=0.11 sec.]

4.234. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 9486 unused wires.
<suppressed ~1 debug messages>

4.235. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

4.236. Executing ABC pass (technology mapping using ABC).

4.236.1. Summary of detected clock domains:
  4 cells in clk=\clk, en=$abc$23069$auto$opt_dff.cc:195:make_patterns_logic$342, arst=\rst, srst={ }
  1 cells in clk=\clk, en=!\rst, arst={ }, srst={ }
  9 cells in clk=\clk, en=$abc$23007$auto$opt_dff.cc:195:make_patterns_logic$310, arst=\rst, srst={ }
  3 cells in clk=\clk, en=$abc$23061$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$96, arst=\rst, srst={ }
  9 cells in clk=\clk, en=!$abc$14444$auto$rtlil.cc:2425:Or$383, arst=\rst, srst={ }
  10 cells in clk=\clk, en=$abc$23034$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$94, arst=\rst, srst={ }
  8 cells in clk=\clk, en=$abc$23007$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$197, arst=\rst, srst={ }
  12 cells in clk=\clk, en=$abc$23007$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$198, arst=\rst, srst={ }
  29 cells in clk=\clk, en=$abc$23007$auto$opt_dff.cc:195:make_patterns_logic$315, arst=\rst, srst={ }
  41 cells in clk=\clk, en=$abc$14444$auto$opt_dff.cc:195:make_patterns_logic$307, arst=\rst, srst={ }
  60 cells in clk=\clk, en=$abc$14444$auto$opt_dff.cc:195:make_patterns_logic$328, arst=\rst, srst={ }
  162 cells in clk=\clk, en=\idv, arst=\rst, srst={ }
  230 cells in clk=\clk, en=\u_dct2d.stage1_reg, arst=\rst, srst={ }
  350 cells in clk=\clk, en=$abc$14444$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$80, arst=\rst, srst={ }
  449 cells in clk=\clk, en=$abc$14444$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$193, arst=\rst, srst={ }
  4341 cells in clk=\clk, en={ }, arst=\rst, srst={ }

  #logic partitions = 16

4.236.2. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 4321 gates and 5025 wires to a netlist network with 704 inputs and 1372 outputs (dfl=2).

4.236.2.1. Executing ABC.
[Time = 1.25 sec.]

4.236.3. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$193, asynchronously reset by \rst
Extracted 449 gates and 609 wires to a netlist network with 160 inputs and 94 outputs (dfl=2).

4.236.3.1. Executing ABC.
[Time = 0.18 sec.]

4.236.4. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$80, asynchronously reset by \rst
Extracted 350 gates and 450 wires to a netlist network with 100 inputs and 69 outputs (dfl=2).

4.236.4.1. Executing ABC.
[Time = 0.13 sec.]

4.236.5. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \u_dct2d.stage1_reg, asynchronously reset by \rst
Extracted 230 gates and 240 wires to a netlist network with 10 inputs and 230 outputs (dfl=2).

4.236.5.1. Executing ABC.
[Time = 0.15 sec.]

4.236.6. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \idv, asynchronously reset by \rst
Extracted 162 gates and 170 wires to a netlist network with 8 inputs and 158 outputs (dfl=2).

4.236.6.1. Executing ABC.
[Time = 0.13 sec.]

4.236.7. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$auto$opt_dff.cc:195:make_patterns_logic$328, asynchronously reset by \rst
Extracted 60 gates and 70 wires to a netlist network with 10 inputs and 29 outputs (dfl=2).

4.236.7.1. Executing ABC.
[Time = 0.11 sec.]

4.236.8. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$auto$opt_dff.cc:195:make_patterns_logic$307, asynchronously reset by \rst
Extracted 41 gates and 48 wires to a netlist network with 7 inputs and 23 outputs (dfl=2).

4.236.8.1. Executing ABC.
[Time = 0.13 sec.]

4.236.9. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23007$auto$opt_dff.cc:195:make_patterns_logic$315, asynchronously reset by \rst
Extracted 29 gates and 34 wires to a netlist network with 5 inputs and 11 outputs (dfl=2).

4.236.9.1. Executing ABC.
[Time = 0.11 sec.]

4.236.10. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23007$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$198, asynchronously reset by \rst
Extracted 12 gates and 32 wires to a netlist network with 20 inputs and 11 outputs (dfl=2).

4.236.10.1. Executing ABC.
[Time = 0.14 sec.]

4.236.11. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23034$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$94, asynchronously reset by \rst
Extracted 10 gates and 12 wires to a netlist network with 2 inputs and 7 outputs (dfl=2).

4.236.11.1. Executing ABC.
[Time = 0.09 sec.]

4.236.12. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23007$auto$opt_dff.cc:195:make_patterns_logic$310, asynchronously reset by \rst
Extracted 9 gates and 15 wires to a netlist network with 6 inputs and 7 outputs (dfl=2).

4.236.12.1. Executing ABC.
[Time = 0.10 sec.]

4.236.13. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$14444$auto$rtlil.cc:2425:Or$383, asynchronously reset by \rst
Extracted 9 gates and 18 wires to a netlist network with 9 inputs and 7 outputs (dfl=2).

4.236.13.1. Executing ABC.
[Time = 0.11 sec.]

4.236.14. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$39296$abc$23007$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$197, asynchronously reset by \rst
Extracted 7 gates and 7 wires to a netlist network with 0 inputs and 3 outputs (dfl=2).

4.236.14.1. Executing ABC.
[Time = 0.11 sec.]

4.236.15. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23069$auto$opt_dff.cc:195:make_patterns_logic$342, asynchronously reset by \rst
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 3 outputs (dfl=2).

4.236.15.1. Executing ABC.
[Time = 0.10 sec.]

4.236.16. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23061$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$96, asynchronously reset by \rst
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs (dfl=2).

4.236.16.1. Executing ABC.
[Time = 0.10 sec.]

4.236.17. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !\rst
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs (dfl=2).

4.236.17.1. Executing ABC.
[Time = 0.10 sec.]

4.237. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.238. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

4.239. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.240. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.241. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.242. Executing OPT_SHARE pass.

4.243. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1527, #solve=0, #remove=0, time=0.10 sec.]

4.244. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 9475 unused wires.
<suppressed ~1 debug messages>

4.245. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

4.246. Executing ABC pass (technology mapping using ABC).

4.246.1. Summary of detected clock domains:
  4 cells in clk=\clk, en=!\rst, arst={ }, srst={ }
  3 cells in clk=\clk, en=$abc$23061$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$96, arst=\rst, srst={ }
  1 cells in clk=\clk, en=$abc$23069$auto$opt_dff.cc:195:make_patterns_logic$342, arst=\rst, srst={ }
  10 cells in clk=\clk, en=$abc$23007$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$197, arst=\rst, srst={ }
  9 cells in clk=\clk, en=!$abc$14444$auto$rtlil.cc:2425:Or$383, arst=\rst, srst={ }
  7 cells in clk=\clk, en=$abc$23007$auto$opt_dff.cc:195:make_patterns_logic$310, arst=\rst, srst={ }
  10 cells in clk=\clk, en=$abc$23034$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$94, arst=\rst, srst={ }
  12 cells in clk=\clk, en=$abc$23007$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$198, arst=\rst, srst={ }
  28 cells in clk=\clk, en=$abc$23007$auto$opt_dff.cc:195:make_patterns_logic$315, arst=\rst, srst={ }
  38 cells in clk=\clk, en=$abc$14444$auto$opt_dff.cc:195:make_patterns_logic$307, arst=\rst, srst={ }
  54 cells in clk=\clk, en=$abc$14444$auto$opt_dff.cc:195:make_patterns_logic$328, arst=\rst, srst={ }
  162 cells in clk=\clk, en=\idv, arst=\rst, srst={ }
  230 cells in clk=\clk, en=\u_dct2d.stage1_reg, arst=\rst, srst={ }
  254 cells in clk=\clk, en=$abc$14444$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$80, arst=\rst, srst={ }
  329 cells in clk=\clk, en=$abc$14444$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$193, arst=\rst, srst={ }
  3956 cells in clk=\clk, en={ }, arst=\rst, srst={ }

  #logic partitions = 16

4.246.2. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 3936 gates and 4646 wires to a netlist network with 710 inputs and 1375 outputs (dfl=2).

4.246.2.1. Executing ABC.
[Time = 1.07 sec.]

4.246.3. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$193, asynchronously reset by \rst
Extracted 329 gates and 489 wires to a netlist network with 160 inputs and 94 outputs (dfl=2).

4.246.3.1. Executing ABC.
[Time = 0.23 sec.]

4.246.4. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$80, asynchronously reset by \rst
Extracted 254 gates and 354 wires to a netlist network with 100 inputs and 69 outputs (dfl=2).

4.246.4.1. Executing ABC.
[Time = 0.31 sec.]

4.246.5. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \u_dct2d.stage1_reg, asynchronously reset by \rst
Extracted 230 gates and 240 wires to a netlist network with 10 inputs and 230 outputs (dfl=2).

4.246.5.1. Executing ABC.
[Time = 0.18 sec.]

4.246.6. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \idv, asynchronously reset by \rst
Extracted 162 gates and 170 wires to a netlist network with 8 inputs and 158 outputs (dfl=2).

4.246.6.1. Executing ABC.
[Time = 0.17 sec.]

4.246.7. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$auto$opt_dff.cc:195:make_patterns_logic$328, asynchronously reset by \rst
Extracted 54 gates and 66 wires to a netlist network with 12 inputs and 32 outputs (dfl=2).

4.246.7.1. Executing ABC.
[Time = 0.16 sec.]

4.246.8. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14444$auto$opt_dff.cc:195:make_patterns_logic$307, asynchronously reset by \rst
Extracted 38 gates and 46 wires to a netlist network with 8 inputs and 25 outputs (dfl=2).

4.246.8.1. Executing ABC.
[Time = 0.17 sec.]

4.246.9. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23007$auto$opt_dff.cc:195:make_patterns_logic$315, asynchronously reset by \rst
Extracted 28 gates and 33 wires to a netlist network with 5 inputs and 11 outputs (dfl=2).

4.246.9.1. Executing ABC.
[Time = 0.14 sec.]

4.246.10. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23007$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$198, asynchronously reset by \rst
Extracted 12 gates and 32 wires to a netlist network with 20 inputs and 11 outputs (dfl=2).

4.246.10.1. Executing ABC.
[Time = 0.15 sec.]

4.246.11. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23007$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$197, asynchronously reset by \rst
Extracted 9 gates and 12 wires to a netlist network with 3 inputs and 4 outputs (dfl=2).

4.246.11.1. Executing ABC.
[Time = 0.11 sec.]

4.246.12. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23034$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$94, asynchronously reset by \rst
Extracted 10 gates and 12 wires to a netlist network with 2 inputs and 7 outputs (dfl=2).

4.246.12.1. Executing ABC.
[Time = 0.12 sec.]

4.246.13. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$14444$auto$rtlil.cc:2425:Or$383, asynchronously reset by \rst
Extracted 9 gates and 19 wires to a netlist network with 10 inputs and 7 outputs (dfl=2).

4.246.13.1. Executing ABC.
[Time = 0.11 sec.]

4.246.14. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23007$auto$opt_dff.cc:195:make_patterns_logic$310, asynchronously reset by \rst
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 6 outputs (dfl=2).

4.246.14.1. Executing ABC.
[Time = 0.16 sec.]

4.246.15. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !\rst
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 4 outputs (dfl=2).

4.246.15.1. Executing ABC.
[Time = 0.14 sec.]

4.246.16. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23061$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$96, asynchronously reset by \rst
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs (dfl=2).

4.246.16.1. Executing ABC.
[Time = 0.11 sec.]

4.246.17. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$47192$abc$23069$auto$opt_dff.cc:195:make_patterns_logic$342, asynchronously reset by \rst
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs (dfl=2).

4.246.17.1. Executing ABC.
[Time = 0.10 sec.]

4.247. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.248. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

4.249. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.250. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.251. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.252. Executing OPT_SHARE pass.

4.253. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1527, #solve=0, #remove=0, time=0.10 sec.]

4.254. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 8874 unused wires.
<suppressed ~1 debug messages>

4.255. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1
select with DFL2 synthesis (thresh-logic=0.920000, thresh_dff=0.980000)

4.256. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
   Number of Generic REGs:          1568

ABC-DFF iteration : 1

4.257. Executing ABC pass (technology mapping using ABC).

4.257.1. Summary of detected clock domains:
  12 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$310, arst=\rst, srst={ }
  8 cells in clk=\clk, en=$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$197, arst=\rst, srst={ }
  12 cells in clk=\clk, en=$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$198, arst=\rst, srst={ }
  270 cells in clk=\clk, en=\u_dct2d.stage1_reg, arst=\rst, srst={ }
  3 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$342, arst=\rst, srst={ }
  449 cells in clk=\clk, en=$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$193, arst=\rst, srst={ }
  26 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$315, arst=\rst, srst={ }
  30 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$307, arst=\rst, srst={ }
  7 cells in clk=\clk, en=$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$96, arst=\rst, srst={ }
  11 cells in clk=\clk, en=$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$94, arst=\rst, srst={ }
  14 cells in clk=\clk, en=!$auto$rtlil.cc:2425:Or$383, arst=\rst, srst={ }
  271 cells in clk=\clk, en=\idv, arst=\rst, srst={ }
  352 cells in clk=\clk, en=$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$80, arst=\rst, srst={ }
  39 cells in clk=\clk, en=$auto$opt_dff.cc:195:make_patterns_logic$328, arst=\rst, srst={ }
  1 cells in clk=\clk, en=!\rst, arst={ }, srst={ }
  5295 cells in clk=\clk, en={ }, arst=\rst, srst={ }

  #logic partitions = 16

4.257.2. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 5275 gates and 6004 wires to a netlist network with 728 inputs and 1496 outputs (dfl=1).

4.257.2.1. Executing ABC.
[Time = 0.61 sec.]

4.257.3. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$47208$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$193, asynchronously reset by \rst
Extracted 449 gates and 609 wires to a netlist network with 160 inputs and 94 outputs (dfl=1).

4.257.3.1. Executing ABC.
[Time = 0.15 sec.]

4.257.4. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$47208$flatten\u_dct1d.$auto$ghdl.cc:806:import_module$80, asynchronously reset by \rst
Extracted 352 gates and 488 wires to a netlist network with 136 inputs and 72 outputs (dfl=1).

4.257.4.1. Executing ABC.
[Time = 0.17 sec.]

4.257.5. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \idv, asynchronously reset by \rst
Extracted 271 gates and 279 wires to a netlist network with 8 inputs and 205 outputs (dfl=1).

4.257.5.1. Executing ABC.
[Time = 0.12 sec.]

4.257.6. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \u_dct2d.stage1_reg, asynchronously reset by \rst
Extracted 270 gates and 280 wires to a netlist network with 10 inputs and 230 outputs (dfl=1).

4.257.6.1. Executing ABC.
[Time = 0.14 sec.]

4.257.7. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$47208$auto$opt_dff.cc:195:make_patterns_logic$328, asynchronously reset by \rst
Extracted 39 gates and 51 wires to a netlist network with 12 inputs and 30 outputs (dfl=1).

4.257.7.1. Executing ABC.
[Time = 0.13 sec.]

4.257.8. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$47208$auto$opt_dff.cc:195:make_patterns_logic$307, asynchronously reset by \rst
Extracted 30 gates and 39 wires to a netlist network with 9 inputs and 23 outputs (dfl=1).

4.257.8.1. Executing ABC.
[Time = 0.14 sec.]

4.257.9. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$315, asynchronously reset by \rst
Extracted 26 gates and 29 wires to a netlist network with 2 inputs and 10 outputs (dfl=1).

4.257.9.1. Executing ABC.
[Time = 0.14 sec.]

4.257.10. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$auto$rtlil.cc:2425:Or$383, asynchronously reset by \rst
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 7 outputs (dfl=1).

4.257.10.1. Executing ABC.
[Time = 0.16 sec.]

4.257.11. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$310, asynchronously reset by \rst
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 7 outputs (dfl=1).

4.257.11.1. Executing ABC.
[Time = 0.14 sec.]

4.257.12. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55771$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$198, asynchronously reset by \rst
Extracted 12 gates and 32 wires to a netlist network with 20 inputs and 11 outputs (dfl=1).

4.257.12.1. Executing ABC.
[Time = 0.12 sec.]

4.257.13. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$94, asynchronously reset by \rst
Extracted 11 gates and 13 wires to a netlist network with 2 inputs and 8 outputs (dfl=1).

4.257.13.1. Executing ABC.
[Time = 0.14 sec.]

4.257.14. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55771$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$197, asynchronously reset by \rst
Extracted 7 gates and 7 wires to a netlist network with 0 inputs and 3 outputs (dfl=1).

4.257.14.1. Executing ABC.
[Time = 0.07 sec.]

4.257.15. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\u_dct1d.$auto$ghdl.cc:806:import_module$96, asynchronously reset by \rst
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 3 outputs (dfl=1).

4.257.15.1. Executing ABC.
[Time = 0.16 sec.]

4.257.16. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:195:make_patterns_logic$342, asynchronously reset by \rst
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs (dfl=1).

4.257.16.1. Executing ABC.
[Time = 0.14 sec.]

4.257.17. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !\rst
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs (dfl=1).

4.257.17.1. Executing ABC.
[Time = 0.10 sec.]

4.258. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1536, #solve=0, #remove=0, time=0.07 sec.]

4.259. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.
<suppressed ~1 debug messages>

4.260. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 7693 unused wires.
<suppressed ~1 debug messages>

4.261. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1536, #solve=0, #remove=0, time=0.09 sec.]

4.262. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.263. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.264. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1536, #solve=0, #remove=0, time=0.07 sec.]

4.265. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.266. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.267. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 2

4.268. Executing ABC pass (technology mapping using ABC).

4.268.1. Summary of detected clock domains:
  6193 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  4 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 2

4.268.2. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 6172 gates and 6721 wires to a netlist network with 549 inputs and 1791 outputs (dfl=1).

4.268.2.1. Executing ABC.
[Time = 1.01 sec.]

4.268.3. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 3 outputs (dfl=1).

4.268.3.1. Executing ABC.
[Time = 0.14 sec.]

4.269. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1517, #solve=0, #remove=0, time=0.13 sec.]

4.270. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.271. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 9022 unused wires.
<suppressed ~1 debug messages>

4.272. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1517, #solve=0, #remove=0, time=0.08 sec.]

4.273. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.274. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.275. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$65118$auto$blifparse.cc:362:parse_blif$65119 ($_DFF_P_) from module MDCT (D = $abc$55713$flatten\u_dct2d.$auto$ghdl.cc:806:import_module$210, Q = \u_dbufctl.datareadyack).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56838 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8350_, Q = \u_dct2d.databuf_reg [1]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56837 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8348_, Q = \u_dct2d.databuf_reg [2]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56836 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8346_, Q = \u_dct2d.databuf_reg [3]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56835 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8342_, Q = \u_dct2d.databuf_reg [4]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56834 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8340_, Q = \u_dct2d.databuf_reg [5]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56833 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8336_, Q = \u_dct2d.databuf_reg [6]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56832 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8334_, Q = \u_dct2d.databuf_reg [7]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56831 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8328_, Q = \u_dct2d.databuf_reg [8]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56830 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8326_, Q = \u_dct2d.databuf_reg [9]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56829 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8322_, Q = \u_dct2d.databuf_reg [10]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56828 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8296_, Q = \u_dct2d.databuf_reg [12]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56827 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8294_, Q = \u_dct2d.databuf_reg [13]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56826 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8292_, Q = \u_dct2d.databuf_reg [14]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56825 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8288_, Q = \u_dct2d.databuf_reg [15]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56824 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8286_, Q = \u_dct2d.databuf_reg [16]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56823 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8282_, Q = \u_dct2d.databuf_reg [17]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56822 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8280_, Q = \u_dct2d.databuf_reg [18]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56821 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8274_, Q = \u_dct2d.databuf_reg [19]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56820 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8272_, Q = \u_dct2d.databuf_reg [20]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56819 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8268_, Q = \u_dct2d.databuf_reg [21]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56818 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8242_, Q = \u_dct2d.databuf_reg [23]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56817 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8240_, Q = \u_dct2d.databuf_reg [24]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56816 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8238_, Q = \u_dct2d.databuf_reg [25]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56815 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8234_, Q = \u_dct2d.databuf_reg [26]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56814 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8232_, Q = \u_dct2d.databuf_reg [27]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56813 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8228_, Q = \u_dct2d.databuf_reg [28]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56812 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8226_, Q = \u_dct2d.databuf_reg [29]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56811 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8220_, Q = \u_dct2d.databuf_reg [30]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56810 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8218_, Q = \u_dct2d.databuf_reg [31]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56809 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8214_, Q = \u_dct2d.databuf_reg [32]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56808 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8188_, Q = \u_dct2d.databuf_reg [34]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56807 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8186_, Q = \u_dct2d.databuf_reg [35]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56806 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8184_, Q = \u_dct2d.databuf_reg [36]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56805 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8180_, Q = \u_dct2d.databuf_reg [37]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56804 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8178_, Q = \u_dct2d.databuf_reg [38]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56803 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8174_, Q = \u_dct2d.databuf_reg [39]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56802 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8172_, Q = \u_dct2d.databuf_reg [40]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56801 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8166_, Q = \u_dct2d.databuf_reg [41]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56800 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8164_, Q = \u_dct2d.databuf_reg [42]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56799 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8160_, Q = \u_dct2d.databuf_reg [43]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56798 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8084_, Q = \u_dct2d.databuf_reg [44]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56797 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8133_, Q = \u_dct2d.databuf_reg [45]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56796 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8131_, Q = \u_dct2d.databuf_reg [46]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56795 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8129_, Q = \u_dct2d.databuf_reg [47]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56794 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8125_, Q = \u_dct2d.databuf_reg [48]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56793 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8123_, Q = \u_dct2d.databuf_reg [49]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56792 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8119_, Q = \u_dct2d.databuf_reg [50]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56791 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8117_, Q = \u_dct2d.databuf_reg [51]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56790 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8111_, Q = \u_dct2d.databuf_reg [52]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56789 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8109_, Q = \u_dct2d.databuf_reg [53]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56788 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8105_, Q = \u_dct2d.databuf_reg [54]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56787 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7999_, Q = \u_dct2d.databuf_reg [55]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56786 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8048_, Q = \u_dct2d.databuf_reg [56]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56785 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8046_, Q = \u_dct2d.databuf_reg [57]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56784 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8044_, Q = \u_dct2d.databuf_reg [58]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56783 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8040_, Q = \u_dct2d.databuf_reg [59]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56782 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8038_, Q = \u_dct2d.databuf_reg [60]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56781 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8034_, Q = \u_dct2d.databuf_reg [61]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56780 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8032_, Q = \u_dct2d.databuf_reg [62]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56779 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8026_, Q = \u_dct2d.databuf_reg [63]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56778 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8024_, Q = \u_dct2d.databuf_reg [64]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56777 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n8020_, Q = \u_dct2d.databuf_reg [65]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56776 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7909_, Q = \u_dct2d.databuf_reg [66]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56775 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7958_, Q = \u_dct2d.databuf_reg [67]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56774 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7956_, Q = \u_dct2d.databuf_reg [68]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56773 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7954_, Q = \u_dct2d.databuf_reg [69]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56772 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7950_, Q = \u_dct2d.databuf_reg [70]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56771 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7948_, Q = \u_dct2d.databuf_reg [71]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56770 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7944_, Q = \u_dct2d.databuf_reg [72]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56769 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7942_, Q = \u_dct2d.databuf_reg [73]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56768 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7936_, Q = \u_dct2d.databuf_reg [74]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56767 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7934_, Q = \u_dct2d.databuf_reg [75]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56766 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7930_, Q = \u_dct2d.databuf_reg [76]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56765 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7819_, Q = \u_dct2d.databuf_reg [77]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56764 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7868_, Q = \u_dct2d.databuf_reg [78]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56763 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7866_, Q = \u_dct2d.databuf_reg [79]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56762 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7864_, Q = \u_dct2d.databuf_reg [80]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56761 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7860_, Q = \u_dct2d.databuf_reg [81]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56760 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7858_, Q = \u_dct2d.databuf_reg [82]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56759 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7854_, Q = \u_dct2d.databuf_reg [83]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56758 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7852_, Q = \u_dct2d.databuf_reg [84]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56757 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7846_, Q = \u_dct2d.databuf_reg [85]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56756 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7844_, Q = \u_dct2d.databuf_reg [86]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56755 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7840_, Q = \u_dct2d.databuf_reg [87]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56753 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7778_, Q = \u_dct2d.rowram_reg [1]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56752 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7776_, Q = \u_dct2d.rowram_reg [2]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56751 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7774_, Q = \u_dct1d.databuf_reg [1]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56750 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7772_, Q = \u_dct1d.databuf_reg [2]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56749 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7770_, Q = \u_dct1d.databuf_reg [3]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56748 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7766_, Q = \u_dct1d.databuf_reg [4]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56747 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7764_, Q = \u_dct1d.databuf_reg [5]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56746 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7760_, Q = \u_dct1d.databuf_reg [6]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56745 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7758_, Q = \u_dct1d.databuf_reg [7]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56744 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7752_, Q = \u_dct1d.databuf_reg [8]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56743 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7723_, Q = \u_dct1d.databuf_reg [10]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56742 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7721_, Q = \u_dct1d.databuf_reg [11]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56741 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7719_, Q = \u_dct1d.databuf_reg [12]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56740 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7715_, Q = \u_dct1d.databuf_reg [13]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56739 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7713_, Q = \u_dct1d.databuf_reg [14]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56738 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7709_, Q = \u_dct1d.databuf_reg [15]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56737 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7707_, Q = \u_dct1d.databuf_reg [16]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56736 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7701_, Q = \u_dct1d.databuf_reg [17]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56735 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7680_, Q = \u_dct1d.databuf_reg [19]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56734 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7678_, Q = \u_dct1d.databuf_reg [20]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56733 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7676_, Q = \u_dct1d.databuf_reg [21]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56732 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7672_, Q = \u_dct1d.databuf_reg [22]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56731 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7670_, Q = \u_dct1d.databuf_reg [23]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56730 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7666_, Q = \u_dct1d.databuf_reg [24]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56729 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7664_, Q = \u_dct1d.databuf_reg [25]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56728 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7658_, Q = \u_dct1d.databuf_reg [26]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56727 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7637_, Q = \u_dct1d.databuf_reg [28]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56726 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7635_, Q = \u_dct1d.databuf_reg [29]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56725 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7633_, Q = \u_dct1d.databuf_reg [30]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56724 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7629_, Q = \u_dct1d.databuf_reg [31]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56723 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7627_, Q = \u_dct1d.databuf_reg [32]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56722 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7623_, Q = \u_dct1d.databuf_reg [33]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56721 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7621_, Q = \u_dct1d.databuf_reg [34]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56720 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7615_, Q = \u_dct1d.databuf_reg [35]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56719 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7594_, Q = \u_dct1d.databuf_reg [36]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56718 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7592_, Q = \u_dct1d.databuf_reg [37]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56717 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7590_, Q = \u_dct1d.databuf_reg [38]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56716 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7588_, Q = \u_dct1d.databuf_reg [39]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56715 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7584_, Q = \u_dct1d.databuf_reg [40]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56714 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7582_, Q = \u_dct1d.databuf_reg [41]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56713 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7578_, Q = \u_dct1d.databuf_reg [42]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56712 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7576_, Q = \u_dct1d.databuf_reg [43]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56711 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7570_, Q = \u_dct1d.databuf_reg [44]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56710 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7489_, Q = \u_dct1d.databuf_reg [45]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56709 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7527_, Q = \u_dct1d.databuf_reg [46]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56708 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7525_, Q = \u_dct1d.databuf_reg [47]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56707 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7523_, Q = \u_dct1d.databuf_reg [48]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56706 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7519_, Q = \u_dct1d.databuf_reg [49]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56705 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7517_, Q = \u_dct1d.databuf_reg [50]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56704 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7513_, Q = \u_dct1d.databuf_reg [51]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56703 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7511_, Q = \u_dct1d.databuf_reg [52]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56702 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7505_, Q = \u_dct1d.databuf_reg [53]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56701 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7417_, Q = \u_dct1d.databuf_reg [54]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56700 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7455_, Q = \u_dct1d.databuf_reg [55]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56699 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7453_, Q = \u_dct1d.databuf_reg [56]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56698 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7451_, Q = \u_dct1d.databuf_reg [57]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56697 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7447_, Q = \u_dct1d.databuf_reg [58]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56696 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7445_, Q = \u_dct1d.databuf_reg [59]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56695 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7441_, Q = \u_dct1d.databuf_reg [60]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56694 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7439_, Q = \u_dct1d.databuf_reg [61]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56693 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7433_, Q = \u_dct1d.databuf_reg [62]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56692 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7345_, Q = \u_dct1d.databuf_reg [63]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56691 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7383_, Q = \u_dct1d.databuf_reg [64]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56690 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7381_, Q = \u_dct1d.databuf_reg [65]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56689 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7379_, Q = \u_dct1d.databuf_reg [66]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56688 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7375_, Q = \u_dct1d.databuf_reg [67]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56687 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7373_, Q = \u_dct1d.databuf_reg [68]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56686 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7369_, Q = \u_dct1d.databuf_reg [69]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56685 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7367_, Q = \u_dct1d.databuf_reg [70]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56684 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7361_, Q = \u_dct1d.databuf_reg [71]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56682 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7309_, Q = \u_dct1d.inpcnt_reg [1]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56681 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7307_, Q = \u_dct1d.inpcnt_reg [2]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56680 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [27], Q = \u_dct1d.latchbuf_reg [18]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56679 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [18], Q = \u_dct1d.latchbuf_reg [9]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56678 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [28], Q = \u_dct1d.latchbuf_reg [19]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56677 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [19], Q = \u_dct1d.latchbuf_reg [10]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56676 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [29], Q = \u_dct1d.latchbuf_reg [20]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56675 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [20], Q = \u_dct1d.latchbuf_reg [11]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56674 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [30], Q = \u_dct1d.latchbuf_reg [21]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56673 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [21], Q = \u_dct1d.latchbuf_reg [12]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56672 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [31], Q = \u_dct1d.latchbuf_reg [22]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56671 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [22], Q = \u_dct1d.latchbuf_reg [13]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56670 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [32], Q = \u_dct1d.latchbuf_reg [23]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56669 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [23], Q = \u_dct1d.latchbuf_reg [14]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56668 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [33], Q = \u_dct1d.latchbuf_reg [24]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56667 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [24], Q = \u_dct1d.latchbuf_reg [15]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56666 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [35], Q = \u_dct1d.latchbuf_reg [26]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56665 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [26], Q = \u_dct1d.latchbuf_reg [17]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56664 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [36], Q = \u_dct1d.latchbuf_reg [27]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56663 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [37], Q = \u_dct1d.latchbuf_reg [28]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56662 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [38], Q = \u_dct1d.latchbuf_reg [29]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56661 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [39], Q = \u_dct1d.latchbuf_reg [30]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56660 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [40], Q = \u_dct1d.latchbuf_reg [31]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56659 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [41], Q = \u_dct1d.latchbuf_reg [32]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56658 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [42], Q = \u_dct1d.latchbuf_reg [33]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56657 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [44], Q = \u_dct1d.latchbuf_reg [35]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56656 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [45], Q = \u_dct1d.latchbuf_reg [36]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56655 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [46], Q = \u_dct1d.latchbuf_reg [37]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56654 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [47], Q = \u_dct1d.latchbuf_reg [38]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56653 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [48], Q = \u_dct1d.latchbuf_reg [39]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56652 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [49], Q = \u_dct1d.latchbuf_reg [40]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56651 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [50], Q = \u_dct1d.latchbuf_reg [41]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56650 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [51], Q = \u_dct1d.latchbuf_reg [42]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56649 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [53], Q = \u_dct1d.latchbuf_reg [44]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56648 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [54], Q = \u_dct1d.latchbuf_reg [45]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56647 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [55], Q = \u_dct1d.latchbuf_reg [46]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56646 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [56], Q = \u_dct1d.latchbuf_reg [47]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56645 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [57], Q = \u_dct1d.latchbuf_reg [48]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56644 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [58], Q = \u_dct1d.latchbuf_reg [49]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56643 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [59], Q = \u_dct1d.latchbuf_reg [50]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56642 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [60], Q = \u_dct1d.latchbuf_reg [51]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56641 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [62], Q = \u_dct1d.latchbuf_reg [53]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56640 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [63], Q = \u_dct1d.latchbuf_reg [54]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56639 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [64], Q = \u_dct1d.latchbuf_reg [55]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56638 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [65], Q = \u_dct1d.latchbuf_reg [56]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56637 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [66], Q = \u_dct1d.latchbuf_reg [57]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56636 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [67], Q = \u_dct1d.latchbuf_reg [58]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56635 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [68], Q = \u_dct1d.latchbuf_reg [59]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56634 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [69], Q = \u_dct1d.latchbuf_reg [60]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56633 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [71], Q = \u_dct1d.latchbuf_reg [62]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56632 ($_DFF_PP0_) from module MDCT (D = \dcti [0], Q = \u_dct1d.latchbuf_reg [63]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56631 ($_DFF_PP0_) from module MDCT (D = \dcti [1], Q = \u_dct1d.latchbuf_reg [64]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56630 ($_DFF_PP0_) from module MDCT (D = \dcti [2], Q = \u_dct1d.latchbuf_reg [65]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56629 ($_DFF_PP0_) from module MDCT (D = \dcti [3], Q = \u_dct1d.latchbuf_reg [66]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56628 ($_DFF_PP0_) from module MDCT (D = \dcti [4], Q = \u_dct1d.latchbuf_reg [67]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56627 ($_DFF_PP0_) from module MDCT (D = \dcti [5], Q = \u_dct1d.latchbuf_reg [68]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56626 ($_DFF_PP0_) from module MDCT (D = \dcti [6], Q = \u_dct1d.latchbuf_reg [69]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56625 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n6889_, Q = \u_dct1d.latchbuf_reg [71]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56624 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [84], Q = \u_dct2d.latchbuf_reg [73]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56623 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [73], Q = \u_dct2d.latchbuf_reg [62]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56622 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [85], Q = \u_dct2d.latchbuf_reg [74]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56621 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [74], Q = \u_dct2d.latchbuf_reg [63]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56620 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [87], Q = \u_dct2d.latchbuf_reg [76]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56619 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [76], Q = \u_dct2d.latchbuf_reg [65]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56618 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7242_, Q = \u_dct2d.latchbuf_reg [77]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56617 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [77], Q = \u_dct2d.latchbuf_reg [66]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56616 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7239_, Q = \u_dct2d.latchbuf_reg [78]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56615 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [78], Q = \u_dct2d.latchbuf_reg [67]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56614 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7236_, Q = \u_dct2d.latchbuf_reg [79]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56613 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [79], Q = \u_dct2d.latchbuf_reg [68]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56612 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7233_, Q = \u_dct2d.latchbuf_reg [80]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56611 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [80], Q = \u_dct2d.latchbuf_reg [69]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56610 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7230_, Q = \u_dct2d.latchbuf_reg [81]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56609 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [81], Q = \u_dct2d.latchbuf_reg [70]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56608 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7227_, Q = \u_dct2d.latchbuf_reg [82]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56607 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [82], Q = \u_dct2d.latchbuf_reg [71]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56606 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7224_, Q = \u_dct2d.latchbuf_reg [83]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56605 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [83], Q = \u_dct2d.latchbuf_reg [72]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56604 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7221_, Q = \u_dct2d.latchbuf_reg [84]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56603 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7219_, Q = \u_dct2d.latchbuf_reg [85]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56602 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7217_, Q = \u_dct2d.latchbuf_reg [87]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56601 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [33], Q = \u_dct2d.latchbuf_reg [22]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56600 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [22], Q = \u_dct2d.latchbuf_reg [11]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56599 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [34], Q = \u_dct2d.latchbuf_reg [23]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56598 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [23], Q = \u_dct2d.latchbuf_reg [12]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56597 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [35], Q = \u_dct2d.latchbuf_reg [24]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56596 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [24], Q = \u_dct2d.latchbuf_reg [13]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56595 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [36], Q = \u_dct2d.latchbuf_reg [25]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56594 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [25], Q = \u_dct2d.latchbuf_reg [14]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56593 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [37], Q = \u_dct2d.latchbuf_reg [26]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56592 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [26], Q = \u_dct2d.latchbuf_reg [15]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56591 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [38], Q = \u_dct2d.latchbuf_reg [27]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56590 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [27], Q = \u_dct2d.latchbuf_reg [16]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56589 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [39], Q = \u_dct2d.latchbuf_reg [28]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56588 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [28], Q = \u_dct2d.latchbuf_reg [17]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56587 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [40], Q = \u_dct2d.latchbuf_reg [29]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56586 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [29], Q = \u_dct2d.latchbuf_reg [18]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56585 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [41], Q = \u_dct2d.latchbuf_reg [30]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56584 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [30], Q = \u_dct2d.latchbuf_reg [19]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56583 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [43], Q = \u_dct2d.latchbuf_reg [32]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56582 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [32], Q = \u_dct2d.latchbuf_reg [21]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56581 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [44], Q = \u_dct2d.latchbuf_reg [33]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56580 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [45], Q = \u_dct2d.latchbuf_reg [34]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56579 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [46], Q = \u_dct2d.latchbuf_reg [35]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56578 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [47], Q = \u_dct2d.latchbuf_reg [36]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56577 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [48], Q = \u_dct2d.latchbuf_reg [37]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56576 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [49], Q = \u_dct2d.latchbuf_reg [38]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56575 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [50], Q = \u_dct2d.latchbuf_reg [39]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56574 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [51], Q = \u_dct2d.latchbuf_reg [40]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56573 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [52], Q = \u_dct2d.latchbuf_reg [41]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56572 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [54], Q = \u_dct2d.latchbuf_reg [43]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56571 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [55], Q = \u_dct2d.latchbuf_reg [44]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56570 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [56], Q = \u_dct2d.latchbuf_reg [45]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56569 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [57], Q = \u_dct2d.latchbuf_reg [46]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56568 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [58], Q = \u_dct2d.latchbuf_reg [47]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56567 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [59], Q = \u_dct2d.latchbuf_reg [48]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56566 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [60], Q = \u_dct2d.latchbuf_reg [49]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56565 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [61], Q = \u_dct2d.latchbuf_reg [50]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56564 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [62], Q = \u_dct2d.latchbuf_reg [51]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56563 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [63], Q = \u_dct2d.latchbuf_reg [52]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56562 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [65], Q = \u_dct2d.latchbuf_reg [54]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56561 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [66], Q = \u_dct2d.latchbuf_reg [55]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56560 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [67], Q = \u_dct2d.latchbuf_reg [56]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56559 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [68], Q = \u_dct2d.latchbuf_reg [57]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56558 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [69], Q = \u_dct2d.latchbuf_reg [58]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56557 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [70], Q = \u_dct2d.latchbuf_reg [59]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56556 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [71], Q = \u_dct2d.latchbuf_reg [60]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56555 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [72], Q = \u_dct2d.latchbuf_reg [61]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56554 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7168_, Q = \u_dct1d.col_2_reg [0]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56553 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7166_, Q = \u_dct1d.col_2_reg [1]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56552 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7163_, Q = \u_dct1d.col_2_reg [2]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56551 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7159_, Q = \u_dct1d.col_reg [0]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56550 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7156_, Q = \u_dct1d.col_reg [1]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56549 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7153_, Q = \u_dct1d.col_reg [2]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56548 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7149_, Q = $auto$alumacc.cc:485:replace_alu$375.BB [0]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56547 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7147_, Q = $auto$alumacc.cc:485:replace_alu$375.BB [1]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56546 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7144_, Q = $abc$55602$lo08).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56543 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7134_, Q = \u_dct2d.col_reg [1]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56542 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7132_, Q = \u_dct2d.col_reg [2]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56541 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7128_, Q = \u_dct2d.col_reg [0]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56540 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7126_, Q = $auto$alumacc.cc:485:replace_alu$364.BB [1]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56539 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7124_, Q = $abc$55665$lo5).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56530 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.row_reg [0], Q = \u_dct1d.ramwaddro_s [0]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56529 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.row_reg [1], Q = \u_dct1d.ramwaddro_s [1]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56528 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.row_reg [2], Q = \u_dct1d.ramwaddro_s [2]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56527 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.col_2_reg [0], Q = \u_dct1d.ramwaddro_s [3]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56526 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.col_2_reg [1], Q = \u_dct1d.ramwaddro_s [4]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56525 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.col_2_reg [2], Q = \u_dct1d.ramwaddro_s [5]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56521 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7080_, Q = \u_dct1d.row_reg [1]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56520 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7078_, Q = \u_dct1d.row_reg [2]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56518 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7074_, Q = \u_dct2d.rowr_reg [1]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56517 ($_DFF_PP0_) from module MDCT (D = $abc$56514$new_n7072_, Q = \u_dct2d.rowr_reg [2]).
Adding EN signal on $abc$56514$auto$blifparse.cc:362:parse_blif$56515 ($_DFF_PP0_) from module MDCT (D = $abc$55833$li0_li0, Q = \u_dct2d.dataready).
[#visit=1517, #solve=0, #remove=0, time=0.09 sec.]

4.276. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.277. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 308 unused cells and 308 unused wires.
<suppressed ~309 debug messages>

4.278. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 3

4.279. Executing ABC pass (technology mapping using ABC).

4.279.1. Summary of detected clock domains:
  5 cells in clk=\clk, en={ }, arst={ }, srst={ }
  6034 cells in clk=\clk, en={ }, arst=\rst, srst={ }

  #logic partitions = 2

4.279.2. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 6013 gates and 6562 wires to a netlist network with 549 inputs and 1772 outputs (dfl=2).

4.279.2.1. Executing ABC.
[Time = 1.80 sec.]

4.279.3. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 3 outputs (dfl=2).

4.279.3.1. Executing ABC.
[Time = 0.11 sec.]

4.280. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1517, #solve=0, #remove=0, time=0.12 sec.]

4.281. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.
<suppressed ~2 debug messages>

4.282. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 9141 unused wires.
<suppressed ~1 debug messages>

4.283. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1517, #solve=0, #remove=0, time=0.07 sec.]

4.284. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.285. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.286. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$74017$auto$blifparse.cc:362:parse_blif$74018 ($_DFF_P_) from module MDCT (D = $abc$74017$new_n10_, Q = \u_dbufctl.datareadyack).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66351 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8064_, Q = $auto$alumacc.cc:485:replace_alu$375.BB [1]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66344 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8047_, Q = \u_dct1d.databuf_reg [10]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66343 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8045_, Q = \u_dct1d.databuf_reg [11]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66342 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8043_, Q = \u_dct1d.databuf_reg [12]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66341 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8041_, Q = \u_dct1d.databuf_reg [13]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66340 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8039_, Q = \u_dct1d.databuf_reg [14]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66339 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8037_, Q = \u_dct1d.databuf_reg [15]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66338 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8035_, Q = \u_dct1d.databuf_reg [16]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66336 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8014_, Q = \u_dct1d.databuf_reg [19]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66335 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8012_, Q = \u_dct1d.databuf_reg [1]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66334 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8010_, Q = \u_dct1d.databuf_reg [20]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66333 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8008_, Q = \u_dct1d.databuf_reg [21]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66332 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8006_, Q = \u_dct1d.databuf_reg [22]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66331 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8004_, Q = \u_dct1d.databuf_reg [23]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66330 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8002_, Q = \u_dct1d.databuf_reg [24]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66329 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n8000_, Q = \u_dct1d.databuf_reg [25]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66327 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7979_, Q = \u_dct1d.databuf_reg [28]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66326 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7977_, Q = \u_dct1d.databuf_reg [29]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66325 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7975_, Q = \u_dct1d.databuf_reg [2]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66324 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7973_, Q = \u_dct1d.databuf_reg [30]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66323 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7971_, Q = \u_dct1d.databuf_reg [31]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66322 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7969_, Q = \u_dct1d.databuf_reg [32]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66321 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7967_, Q = \u_dct1d.databuf_reg [33]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66320 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7965_, Q = \u_dct1d.databuf_reg [34]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66318 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7944_, Q = \u_dct1d.databuf_reg [36]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66317 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7942_, Q = \u_dct1d.databuf_reg [37]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66316 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7940_, Q = \u_dct1d.databuf_reg [38]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66315 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7938_, Q = \u_dct1d.databuf_reg [39]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66314 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7936_, Q = \u_dct1d.databuf_reg [3]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66313 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7934_, Q = \u_dct1d.databuf_reg [40]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66312 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7932_, Q = \u_dct1d.databuf_reg [41]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66311 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7930_, Q = \u_dct1d.databuf_reg [42]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66310 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7928_, Q = \u_dct1d.databuf_reg [43]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66308 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7907_, Q = \u_dct1d.databuf_reg [45]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66307 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7904_, Q = \u_dct1d.databuf_reg [46]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66306 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7902_, Q = \u_dct1d.databuf_reg [47]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66305 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7900_, Q = \u_dct1d.databuf_reg [48]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66304 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7895_, Q = \u_dct1d.databuf_reg [49]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66303 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7893_, Q = \u_dct1d.databuf_reg [4]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66302 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7891_, Q = \u_dct1d.databuf_reg [50]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66301 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7886_, Q = \u_dct1d.databuf_reg [51]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66300 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7884_, Q = \u_dct1d.databuf_reg [52]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66298 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7846_, Q = \u_dct1d.databuf_reg [54]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66297 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7843_, Q = \u_dct1d.databuf_reg [55]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66296 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7841_, Q = \u_dct1d.databuf_reg [56]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66295 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7839_, Q = \u_dct1d.databuf_reg [57]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66294 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7834_, Q = \u_dct1d.databuf_reg [58]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66293 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7832_, Q = \u_dct1d.databuf_reg [59]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66292 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7827_, Q = \u_dct1d.databuf_reg [5]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66291 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7825_, Q = \u_dct1d.databuf_reg [60]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66290 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7823_, Q = \u_dct1d.databuf_reg [61]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66288 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7785_, Q = \u_dct1d.databuf_reg [63]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66287 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7782_, Q = \u_dct1d.databuf_reg [64]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66286 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7780_, Q = \u_dct1d.databuf_reg [65]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66285 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7778_, Q = \u_dct1d.databuf_reg [66]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66284 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7773_, Q = \u_dct1d.databuf_reg [67]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66283 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7771_, Q = \u_dct1d.databuf_reg [68]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66282 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7766_, Q = \u_dct1d.databuf_reg [69]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66281 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7764_, Q = \u_dct1d.databuf_reg [6]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66280 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7762_, Q = \u_dct1d.databuf_reg [70]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66278 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7724_, Q = \u_dct1d.databuf_reg [7]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66274 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [19], Q = \u_dct1d.latchbuf_reg [10]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66273 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [20], Q = \u_dct1d.latchbuf_reg [11]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66272 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [21], Q = \u_dct1d.latchbuf_reg [12]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66271 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [22], Q = \u_dct1d.latchbuf_reg [13]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66270 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [23], Q = \u_dct1d.latchbuf_reg [14]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66269 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [24], Q = \u_dct1d.latchbuf_reg [15]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66268 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [26], Q = \u_dct1d.latchbuf_reg [17]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66267 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [27], Q = \u_dct1d.latchbuf_reg [18]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66266 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [28], Q = \u_dct1d.latchbuf_reg [19]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66265 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [29], Q = \u_dct1d.latchbuf_reg [20]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66264 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [30], Q = \u_dct1d.latchbuf_reg [21]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66263 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [31], Q = \u_dct1d.latchbuf_reg [22]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66262 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [32], Q = \u_dct1d.latchbuf_reg [23]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66261 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [33], Q = \u_dct1d.latchbuf_reg [24]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66260 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [35], Q = \u_dct1d.latchbuf_reg [26]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66259 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [36], Q = \u_dct1d.latchbuf_reg [27]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66258 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [37], Q = \u_dct1d.latchbuf_reg [28]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66257 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [38], Q = \u_dct1d.latchbuf_reg [29]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66256 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [39], Q = \u_dct1d.latchbuf_reg [30]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66255 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [40], Q = \u_dct1d.latchbuf_reg [31]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66254 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [41], Q = \u_dct1d.latchbuf_reg [32]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66253 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [42], Q = \u_dct1d.latchbuf_reg [33]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66252 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [44], Q = \u_dct1d.latchbuf_reg [35]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66251 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [45], Q = \u_dct1d.latchbuf_reg [36]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66250 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [46], Q = \u_dct1d.latchbuf_reg [37]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66249 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [47], Q = \u_dct1d.latchbuf_reg [38]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66248 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [48], Q = \u_dct1d.latchbuf_reg [39]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66247 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [49], Q = \u_dct1d.latchbuf_reg [40]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66246 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [50], Q = \u_dct1d.latchbuf_reg [41]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66245 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [51], Q = \u_dct1d.latchbuf_reg [42]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66244 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [53], Q = \u_dct1d.latchbuf_reg [44]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66243 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [54], Q = \u_dct1d.latchbuf_reg [45]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66242 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [55], Q = \u_dct1d.latchbuf_reg [46]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66241 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [56], Q = \u_dct1d.latchbuf_reg [47]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66240 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [57], Q = \u_dct1d.latchbuf_reg [48]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66239 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [58], Q = \u_dct1d.latchbuf_reg [49]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66238 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [59], Q = \u_dct1d.latchbuf_reg [50]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66237 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [60], Q = \u_dct1d.latchbuf_reg [51]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66236 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [62], Q = \u_dct1d.latchbuf_reg [53]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66235 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [63], Q = \u_dct1d.latchbuf_reg [54]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66234 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [64], Q = \u_dct1d.latchbuf_reg [55]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66233 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [65], Q = \u_dct1d.latchbuf_reg [56]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66232 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [66], Q = \u_dct1d.latchbuf_reg [57]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66231 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [67], Q = \u_dct1d.latchbuf_reg [58]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66230 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [68], Q = \u_dct1d.latchbuf_reg [59]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66229 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [69], Q = \u_dct1d.latchbuf_reg [60]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66228 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [71], Q = \u_dct1d.latchbuf_reg [62]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66227 ($_DFF_PP0_) from module MDCT (D = \dcti [0], Q = \u_dct1d.latchbuf_reg [63]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66226 ($_DFF_PP0_) from module MDCT (D = \dcti [1], Q = \u_dct1d.latchbuf_reg [64]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66225 ($_DFF_PP0_) from module MDCT (D = \dcti [2], Q = \u_dct1d.latchbuf_reg [65]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66224 ($_DFF_PP0_) from module MDCT (D = \dcti [3], Q = \u_dct1d.latchbuf_reg [66]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66223 ($_DFF_PP0_) from module MDCT (D = \dcti [4], Q = \u_dct1d.latchbuf_reg [67]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66222 ($_DFF_PP0_) from module MDCT (D = \dcti [5], Q = \u_dct1d.latchbuf_reg [68]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66221 ($_DFF_PP0_) from module MDCT (D = \dcti [6], Q = \u_dct1d.latchbuf_reg [69]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66220 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n6870_, Q = \u_dct1d.latchbuf_reg [71]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66219 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [18], Q = \u_dct1d.latchbuf_reg [9]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66218 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.row_reg [0], Q = \u_dct1d.ramwaddro_s [0]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66217 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.row_reg [1], Q = \u_dct1d.ramwaddro_s [1]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66216 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.row_reg [2], Q = \u_dct1d.ramwaddro_s [2]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66206 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7590_, Q = \u_dct2d.databuf_reg [12]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66205 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7588_, Q = \u_dct2d.databuf_reg [13]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66204 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7586_, Q = \u_dct2d.databuf_reg [14]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66203 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7584_, Q = \u_dct2d.databuf_reg [15]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66202 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7582_, Q = \u_dct2d.databuf_reg [16]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66201 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7580_, Q = \u_dct2d.databuf_reg [17]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66200 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7578_, Q = \u_dct2d.databuf_reg [18]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66199 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7576_, Q = \u_dct2d.databuf_reg [19]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66198 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7574_, Q = \u_dct2d.databuf_reg [1]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66197 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7572_, Q = \u_dct2d.databuf_reg [20]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66195 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7546_, Q = \u_dct2d.databuf_reg [23]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66194 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7544_, Q = \u_dct2d.databuf_reg [24]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66193 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7542_, Q = \u_dct2d.databuf_reg [25]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66192 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7540_, Q = \u_dct2d.databuf_reg [26]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66191 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7538_, Q = \u_dct2d.databuf_reg [27]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66190 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7536_, Q = \u_dct2d.databuf_reg [28]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66189 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7534_, Q = \u_dct2d.databuf_reg [29]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66188 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7532_, Q = \u_dct2d.databuf_reg [2]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66187 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7530_, Q = \u_dct2d.databuf_reg [30]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66186 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7528_, Q = \u_dct2d.databuf_reg [31]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66184 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7502_, Q = \u_dct2d.databuf_reg [34]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66183 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7500_, Q = \u_dct2d.databuf_reg [35]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66182 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7498_, Q = \u_dct2d.databuf_reg [36]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66181 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7496_, Q = \u_dct2d.databuf_reg [37]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66180 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7494_, Q = \u_dct2d.databuf_reg [38]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66179 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7492_, Q = \u_dct2d.databuf_reg [39]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66178 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7490_, Q = \u_dct2d.databuf_reg [3]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66177 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7488_, Q = \u_dct2d.databuf_reg [40]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66176 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7486_, Q = \u_dct2d.databuf_reg [41]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66175 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7484_, Q = \u_dct2d.databuf_reg [42]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66173 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7458_, Q = \u_dct2d.databuf_reg [44]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66172 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7456_, Q = \u_dct2d.databuf_reg [45]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66171 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7454_, Q = \u_dct2d.databuf_reg [46]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66170 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7452_, Q = \u_dct2d.databuf_reg [47]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66169 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7449_, Q = \u_dct2d.databuf_reg [48]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66168 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7447_, Q = \u_dct2d.databuf_reg [49]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66167 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7445_, Q = \u_dct2d.databuf_reg [4]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66166 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7443_, Q = \u_dct2d.databuf_reg [50]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66165 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7441_, Q = \u_dct2d.databuf_reg [51]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66164 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7439_, Q = \u_dct2d.databuf_reg [52]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66163 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7437_, Q = \u_dct2d.databuf_reg [53]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66161 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7411_, Q = \u_dct2d.databuf_reg [55]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66160 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7408_, Q = \u_dct2d.databuf_reg [56]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66159 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7406_, Q = \u_dct2d.databuf_reg [57]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66158 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7404_, Q = \u_dct2d.databuf_reg [58]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66157 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7399_, Q = \u_dct2d.databuf_reg [59]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66156 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7397_, Q = \u_dct2d.databuf_reg [5]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66155 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7392_, Q = \u_dct2d.databuf_reg [60]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66154 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7387_, Q = \u_dct2d.databuf_reg [61]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66153 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7385_, Q = \u_dct2d.databuf_reg [62]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66152 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7380_, Q = \u_dct2d.databuf_reg [63]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66151 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7378_, Q = \u_dct2d.databuf_reg [64]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66149 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7332_, Q = \u_dct2d.databuf_reg [66]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66148 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7329_, Q = \u_dct2d.databuf_reg [67]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66147 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7327_, Q = \u_dct2d.databuf_reg [68]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66146 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7325_, Q = \u_dct2d.databuf_reg [69]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66145 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7320_, Q = \u_dct2d.databuf_reg [6]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66144 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7318_, Q = \u_dct2d.databuf_reg [70]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66143 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7316_, Q = \u_dct2d.databuf_reg [71]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66142 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7314_, Q = \u_dct2d.databuf_reg [72]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66141 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7312_, Q = \u_dct2d.databuf_reg [73]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66140 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7310_, Q = \u_dct2d.databuf_reg [74]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66139 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7308_, Q = \u_dct2d.databuf_reg [75]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66137 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7258_, Q = \u_dct2d.databuf_reg [77]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66136 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7255_, Q = \u_dct2d.databuf_reg [78]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66135 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7253_, Q = \u_dct2d.databuf_reg [79]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66134 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7251_, Q = \u_dct2d.databuf_reg [7]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66133 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7246_, Q = \u_dct2d.databuf_reg [80]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66132 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7241_, Q = \u_dct2d.databuf_reg [81]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66131 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7239_, Q = \u_dct2d.databuf_reg [82]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66130 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7234_, Q = \u_dct2d.databuf_reg [83]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66129 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7232_, Q = \u_dct2d.databuf_reg [84]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66128 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7227_, Q = \u_dct2d.databuf_reg [85]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66127 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7225_, Q = \u_dct2d.databuf_reg [86]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66125 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7179_, Q = \u_dct2d.databuf_reg [8]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66124 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7177_, Q = \u_dct2d.databuf_reg [9]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66123 ($_DFF_PP0_) from module MDCT (D = $abc$55833$li0_li0, Q = \u_dct2d.dataready).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66122 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [22], Q = \u_dct2d.latchbuf_reg [11]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66121 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [23], Q = \u_dct2d.latchbuf_reg [12]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66120 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [24], Q = \u_dct2d.latchbuf_reg [13]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66119 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [25], Q = \u_dct2d.latchbuf_reg [14]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66118 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [26], Q = \u_dct2d.latchbuf_reg [15]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66117 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [27], Q = \u_dct2d.latchbuf_reg [16]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66116 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [28], Q = \u_dct2d.latchbuf_reg [17]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66115 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [29], Q = \u_dct2d.latchbuf_reg [18]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66114 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [30], Q = \u_dct2d.latchbuf_reg [19]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66113 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [32], Q = \u_dct2d.latchbuf_reg [21]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66112 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [33], Q = \u_dct2d.latchbuf_reg [22]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66111 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [34], Q = \u_dct2d.latchbuf_reg [23]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66110 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [35], Q = \u_dct2d.latchbuf_reg [24]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66109 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [36], Q = \u_dct2d.latchbuf_reg [25]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66108 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [37], Q = \u_dct2d.latchbuf_reg [26]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66107 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [38], Q = \u_dct2d.latchbuf_reg [27]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66106 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [39], Q = \u_dct2d.latchbuf_reg [28]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66105 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [40], Q = \u_dct2d.latchbuf_reg [29]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66104 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [41], Q = \u_dct2d.latchbuf_reg [30]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66103 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [43], Q = \u_dct2d.latchbuf_reg [32]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66102 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [44], Q = \u_dct2d.latchbuf_reg [33]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66101 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [45], Q = \u_dct2d.latchbuf_reg [34]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66100 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [46], Q = \u_dct2d.latchbuf_reg [35]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66099 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [47], Q = \u_dct2d.latchbuf_reg [36]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66098 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [48], Q = \u_dct2d.latchbuf_reg [37]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66097 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [49], Q = \u_dct2d.latchbuf_reg [38]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66096 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [50], Q = \u_dct2d.latchbuf_reg [39]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66095 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [51], Q = \u_dct2d.latchbuf_reg [40]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66094 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [52], Q = \u_dct2d.latchbuf_reg [41]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66093 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [54], Q = \u_dct2d.latchbuf_reg [43]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66092 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [55], Q = \u_dct2d.latchbuf_reg [44]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66091 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [56], Q = \u_dct2d.latchbuf_reg [45]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66090 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [57], Q = \u_dct2d.latchbuf_reg [46]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66089 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [58], Q = \u_dct2d.latchbuf_reg [47]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66088 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [59], Q = \u_dct2d.latchbuf_reg [48]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66087 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [60], Q = \u_dct2d.latchbuf_reg [49]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66086 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [61], Q = \u_dct2d.latchbuf_reg [50]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66085 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [62], Q = \u_dct2d.latchbuf_reg [51]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66084 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [63], Q = \u_dct2d.latchbuf_reg [52]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66083 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [65], Q = \u_dct2d.latchbuf_reg [54]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66082 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [66], Q = \u_dct2d.latchbuf_reg [55]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66081 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [67], Q = \u_dct2d.latchbuf_reg [56]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66080 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [68], Q = \u_dct2d.latchbuf_reg [57]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66079 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [69], Q = \u_dct2d.latchbuf_reg [58]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66078 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [70], Q = \u_dct2d.latchbuf_reg [59]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66077 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [71], Q = \u_dct2d.latchbuf_reg [60]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66076 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [72], Q = \u_dct2d.latchbuf_reg [61]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66075 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [73], Q = \u_dct2d.latchbuf_reg [62]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66074 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [74], Q = \u_dct2d.latchbuf_reg [63]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66073 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [76], Q = \u_dct2d.latchbuf_reg [65]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66072 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [77], Q = \u_dct2d.latchbuf_reg [66]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66071 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [78], Q = \u_dct2d.latchbuf_reg [67]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66070 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [79], Q = \u_dct2d.latchbuf_reg [68]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66069 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [80], Q = \u_dct2d.latchbuf_reg [69]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66068 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [81], Q = \u_dct2d.latchbuf_reg [70]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66067 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [82], Q = \u_dct2d.latchbuf_reg [71]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66066 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [83], Q = \u_dct2d.latchbuf_reg [72]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66065 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [84], Q = \u_dct2d.latchbuf_reg [73]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66064 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [85], Q = \u_dct2d.latchbuf_reg [74]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66063 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [87], Q = \u_dct2d.latchbuf_reg [76]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66062 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7072_, Q = \u_dct2d.latchbuf_reg [77]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66061 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7070_, Q = \u_dct2d.latchbuf_reg [78]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66060 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7068_, Q = \u_dct2d.latchbuf_reg [79]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66059 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7066_, Q = \u_dct2d.latchbuf_reg [80]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66058 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7064_, Q = \u_dct2d.latchbuf_reg [81]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66057 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7062_, Q = \u_dct2d.latchbuf_reg [82]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66056 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7060_, Q = \u_dct2d.latchbuf_reg [83]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66055 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7058_, Q = \u_dct2d.latchbuf_reg [84]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66054 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7056_, Q = \u_dct2d.latchbuf_reg [85]).
Adding EN signal on $abc$66048$auto$blifparse.cc:362:parse_blif$66053 ($_DFF_PP0_) from module MDCT (D = $abc$66048$new_n7054_, Q = \u_dct2d.latchbuf_reg [87]).
[#visit=1517, #solve=0, #remove=0, time=0.07 sec.]

4.287. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.288. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 268 unused cells and 268 unused wires.
<suppressed ~269 debug messages>

4.289. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 4

4.290. Executing ABC pass (technology mapping using ABC).

4.290.1. Summary of detected clock domains:
  5 cells in clk=\clk, en={ }, arst={ }, srst={ }
  5419 cells in clk=\clk, en={ }, arst=\rst, srst={ }

  #logic partitions = 2

4.290.2. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 5398 gates and 5947 wires to a netlist network with 549 inputs and 1772 outputs (dfl=2).

4.290.2.1. Executing ABC.
[Time = 1.21 sec.]

4.290.3. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 3 outputs (dfl=2).

4.290.3.1. Executing ABC.
[Time = 0.12 sec.]

4.291. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1517, #solve=0, #remove=0, time=0.11 sec.]

4.292. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.
<suppressed ~1 debug messages>

4.293. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 8526 unused wires.
<suppressed ~1 debug messages>

4.294. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1517, #solve=0, #remove=0, time=0.07 sec.]

4.295. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.296. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.297. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$82810$auto$blifparse.cc:362:parse_blif$82811 ($_DFF_P_) from module MDCT (D = $abc$82810$new_n10_, Q = \u_dbufctl.datareadyack).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75095 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7946_, Q = $auto$alumacc.cc:485:replace_alu$375.BB [1]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75094 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7939_, Q = \u_dct1d.databuf_reg [10]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75093 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7937_, Q = \u_dct1d.databuf_reg [11]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75092 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7935_, Q = \u_dct1d.databuf_reg [12]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75091 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7933_, Q = \u_dct1d.databuf_reg [13]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75090 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7931_, Q = \u_dct1d.databuf_reg [14]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75089 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7929_, Q = \u_dct1d.databuf_reg [15]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75088 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7927_, Q = \u_dct1d.databuf_reg [16]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75087 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7910_, Q = \u_dct1d.databuf_reg [19]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75086 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7908_, Q = \u_dct1d.databuf_reg [1]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75085 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7906_, Q = \u_dct1d.databuf_reg [20]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75084 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7904_, Q = \u_dct1d.databuf_reg [21]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75083 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7902_, Q = \u_dct1d.databuf_reg [22]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75082 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7900_, Q = \u_dct1d.databuf_reg [23]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75081 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7898_, Q = \u_dct1d.databuf_reg [24]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75080 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7896_, Q = \u_dct1d.databuf_reg [25]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75079 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7879_, Q = \u_dct1d.databuf_reg [28]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75078 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7877_, Q = \u_dct1d.databuf_reg [29]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75077 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7875_, Q = \u_dct1d.databuf_reg [2]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75076 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7873_, Q = \u_dct1d.databuf_reg [30]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75075 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7871_, Q = \u_dct1d.databuf_reg [31]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75074 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7869_, Q = \u_dct1d.databuf_reg [32]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75073 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7867_, Q = \u_dct1d.databuf_reg [33]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75072 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7865_, Q = \u_dct1d.databuf_reg [34]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75071 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7848_, Q = \u_dct1d.databuf_reg [36]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75070 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7846_, Q = \u_dct1d.databuf_reg [37]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75069 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7844_, Q = \u_dct1d.databuf_reg [38]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75068 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7842_, Q = \u_dct1d.databuf_reg [39]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75067 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7840_, Q = \u_dct1d.databuf_reg [3]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75066 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7838_, Q = \u_dct1d.databuf_reg [40]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75065 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7836_, Q = \u_dct1d.databuf_reg [41]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75064 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7834_, Q = \u_dct1d.databuf_reg [42]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75063 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7832_, Q = \u_dct1d.databuf_reg [43]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75062 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7813_, Q = \u_dct1d.databuf_reg [45]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75061 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7810_, Q = \u_dct1d.databuf_reg [46]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75060 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7808_, Q = \u_dct1d.databuf_reg [47]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75059 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7806_, Q = \u_dct1d.databuf_reg [48]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75058 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7801_, Q = \u_dct1d.databuf_reg [49]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75057 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7799_, Q = \u_dct1d.databuf_reg [4]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75056 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7797_, Q = \u_dct1d.databuf_reg [50]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75055 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7792_, Q = \u_dct1d.databuf_reg [51]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75054 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7790_, Q = \u_dct1d.databuf_reg [52]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75053 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7757_, Q = \u_dct1d.databuf_reg [54]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75052 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7754_, Q = \u_dct1d.databuf_reg [55]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75051 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7752_, Q = \u_dct1d.databuf_reg [56]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75050 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7750_, Q = \u_dct1d.databuf_reg [57]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75049 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7745_, Q = \u_dct1d.databuf_reg [58]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75048 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7743_, Q = \u_dct1d.databuf_reg [59]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75047 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7738_, Q = \u_dct1d.databuf_reg [5]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75046 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7736_, Q = \u_dct1d.databuf_reg [60]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75045 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7734_, Q = \u_dct1d.databuf_reg [61]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75044 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7701_, Q = \u_dct1d.databuf_reg [63]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75043 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7698_, Q = \u_dct1d.databuf_reg [64]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75042 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7696_, Q = \u_dct1d.databuf_reg [65]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75041 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7694_, Q = \u_dct1d.databuf_reg [66]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75040 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7689_, Q = \u_dct1d.databuf_reg [67]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75039 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7687_, Q = \u_dct1d.databuf_reg [68]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75038 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7682_, Q = \u_dct1d.databuf_reg [69]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75037 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7680_, Q = \u_dct1d.databuf_reg [6]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75036 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7678_, Q = \u_dct1d.databuf_reg [70]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75035 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7645_, Q = \u_dct1d.databuf_reg [7]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75034 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [19], Q = \u_dct1d.latchbuf_reg [10]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75033 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [20], Q = \u_dct1d.latchbuf_reg [11]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75032 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [21], Q = \u_dct1d.latchbuf_reg [12]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75031 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [22], Q = \u_dct1d.latchbuf_reg [13]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75030 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [23], Q = \u_dct1d.latchbuf_reg [14]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75029 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [24], Q = \u_dct1d.latchbuf_reg [15]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75028 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [26], Q = \u_dct1d.latchbuf_reg [17]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75027 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [27], Q = \u_dct1d.latchbuf_reg [18]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75026 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [28], Q = \u_dct1d.latchbuf_reg [19]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75025 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [29], Q = \u_dct1d.latchbuf_reg [20]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75024 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [30], Q = \u_dct1d.latchbuf_reg [21]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75023 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [31], Q = \u_dct1d.latchbuf_reg [22]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75022 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [32], Q = \u_dct1d.latchbuf_reg [23]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75021 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [33], Q = \u_dct1d.latchbuf_reg [24]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75020 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [35], Q = \u_dct1d.latchbuf_reg [26]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75019 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [36], Q = \u_dct1d.latchbuf_reg [27]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75018 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [37], Q = \u_dct1d.latchbuf_reg [28]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75017 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [38], Q = \u_dct1d.latchbuf_reg [29]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75016 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [39], Q = \u_dct1d.latchbuf_reg [30]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75015 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [40], Q = \u_dct1d.latchbuf_reg [31]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75014 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [41], Q = \u_dct1d.latchbuf_reg [32]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75013 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [42], Q = \u_dct1d.latchbuf_reg [33]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75012 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [44], Q = \u_dct1d.latchbuf_reg [35]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75011 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [45], Q = \u_dct1d.latchbuf_reg [36]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75010 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [46], Q = \u_dct1d.latchbuf_reg [37]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75009 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [47], Q = \u_dct1d.latchbuf_reg [38]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75008 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [48], Q = \u_dct1d.latchbuf_reg [39]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75007 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [49], Q = \u_dct1d.latchbuf_reg [40]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75006 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [50], Q = \u_dct1d.latchbuf_reg [41]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75005 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [51], Q = \u_dct1d.latchbuf_reg [42]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75004 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [53], Q = \u_dct1d.latchbuf_reg [44]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75003 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [54], Q = \u_dct1d.latchbuf_reg [45]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75002 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [55], Q = \u_dct1d.latchbuf_reg [46]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75001 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [56], Q = \u_dct1d.latchbuf_reg [47]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$75000 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [57], Q = \u_dct1d.latchbuf_reg [48]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74999 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [58], Q = \u_dct1d.latchbuf_reg [49]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74998 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [59], Q = \u_dct1d.latchbuf_reg [50]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74997 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [60], Q = \u_dct1d.latchbuf_reg [51]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74996 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [62], Q = \u_dct1d.latchbuf_reg [53]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74995 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [63], Q = \u_dct1d.latchbuf_reg [54]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74994 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [64], Q = \u_dct1d.latchbuf_reg [55]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74993 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [65], Q = \u_dct1d.latchbuf_reg [56]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74992 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [66], Q = \u_dct1d.latchbuf_reg [57]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74991 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [67], Q = \u_dct1d.latchbuf_reg [58]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74990 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [68], Q = \u_dct1d.latchbuf_reg [59]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74989 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [69], Q = \u_dct1d.latchbuf_reg [60]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74988 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [71], Q = \u_dct1d.latchbuf_reg [62]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74987 ($_DFF_PP0_) from module MDCT (D = \dcti [0], Q = \u_dct1d.latchbuf_reg [63]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74986 ($_DFF_PP0_) from module MDCT (D = \dcti [1], Q = \u_dct1d.latchbuf_reg [64]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74985 ($_DFF_PP0_) from module MDCT (D = \dcti [2], Q = \u_dct1d.latchbuf_reg [65]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74984 ($_DFF_PP0_) from module MDCT (D = \dcti [3], Q = \u_dct1d.latchbuf_reg [66]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74983 ($_DFF_PP0_) from module MDCT (D = \dcti [4], Q = \u_dct1d.latchbuf_reg [67]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74982 ($_DFF_PP0_) from module MDCT (D = \dcti [5], Q = \u_dct1d.latchbuf_reg [68]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74981 ($_DFF_PP0_) from module MDCT (D = \dcti [6], Q = \u_dct1d.latchbuf_reg [69]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74980 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n6870_, Q = \u_dct1d.latchbuf_reg [71]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74979 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.latchbuf_reg [18], Q = \u_dct1d.latchbuf_reg [9]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74978 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.row_reg [0], Q = \u_dct1d.ramwaddro_s [0]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74977 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.row_reg [1], Q = \u_dct1d.ramwaddro_s [1]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74976 ($_DFF_PP0_) from module MDCT (D = \u_dct1d.row_reg [2], Q = \u_dct1d.ramwaddro_s [2]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74975 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7549_, Q = \u_dct2d.databuf_reg [12]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74974 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7547_, Q = \u_dct2d.databuf_reg [13]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74973 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7545_, Q = \u_dct2d.databuf_reg [14]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74972 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7543_, Q = \u_dct2d.databuf_reg [15]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74971 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7541_, Q = \u_dct2d.databuf_reg [16]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74970 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7539_, Q = \u_dct2d.databuf_reg [17]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74969 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7537_, Q = \u_dct2d.databuf_reg [18]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74968 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7535_, Q = \u_dct2d.databuf_reg [19]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74967 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7533_, Q = \u_dct2d.databuf_reg [1]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74966 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7531_, Q = \u_dct2d.databuf_reg [20]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74965 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7510_, Q = \u_dct2d.databuf_reg [23]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74964 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7508_, Q = \u_dct2d.databuf_reg [24]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74963 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7506_, Q = \u_dct2d.databuf_reg [25]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74962 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7504_, Q = \u_dct2d.databuf_reg [26]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74961 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7502_, Q = \u_dct2d.databuf_reg [27]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74960 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7500_, Q = \u_dct2d.databuf_reg [28]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74959 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7498_, Q = \u_dct2d.databuf_reg [29]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74958 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7496_, Q = \u_dct2d.databuf_reg [2]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74957 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7494_, Q = \u_dct2d.databuf_reg [30]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74956 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7492_, Q = \u_dct2d.databuf_reg [31]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74955 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7472_, Q = \u_dct2d.databuf_reg [34]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74954 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7470_, Q = \u_dct2d.databuf_reg [35]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74953 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7468_, Q = \u_dct2d.databuf_reg [36]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74952 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7466_, Q = \u_dct2d.databuf_reg [37]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74951 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7464_, Q = \u_dct2d.databuf_reg [38]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74950 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7462_, Q = \u_dct2d.databuf_reg [39]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74949 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7460_, Q = \u_dct2d.databuf_reg [3]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74948 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7458_, Q = \u_dct2d.databuf_reg [40]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74947 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7456_, Q = \u_dct2d.databuf_reg [41]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74946 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7454_, Q = \u_dct2d.databuf_reg [42]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74945 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7433_, Q = \u_dct2d.databuf_reg [44]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74944 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7431_, Q = \u_dct2d.databuf_reg [45]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74943 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7429_, Q = \u_dct2d.databuf_reg [46]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74942 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7427_, Q = \u_dct2d.databuf_reg [47]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74941 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7424_, Q = \u_dct2d.databuf_reg [48]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74940 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7422_, Q = \u_dct2d.databuf_reg [49]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74939 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7420_, Q = \u_dct2d.databuf_reg [4]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74938 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7418_, Q = \u_dct2d.databuf_reg [50]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74937 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7416_, Q = \u_dct2d.databuf_reg [51]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74936 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7414_, Q = \u_dct2d.databuf_reg [52]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74935 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7412_, Q = \u_dct2d.databuf_reg [53]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74934 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7390_, Q = \u_dct2d.databuf_reg [55]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74933 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7387_, Q = \u_dct2d.databuf_reg [56]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74932 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7385_, Q = \u_dct2d.databuf_reg [57]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74931 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7383_, Q = \u_dct2d.databuf_reg [58]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74930 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7378_, Q = \u_dct2d.databuf_reg [59]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74929 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7376_, Q = \u_dct2d.databuf_reg [5]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74928 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7371_, Q = \u_dct2d.databuf_reg [60]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74927 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7366_, Q = \u_dct2d.databuf_reg [61]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74926 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7364_, Q = \u_dct2d.databuf_reg [62]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74925 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7359_, Q = \u_dct2d.databuf_reg [63]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74924 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7357_, Q = \u_dct2d.databuf_reg [64]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74923 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7315_, Q = \u_dct2d.databuf_reg [66]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74922 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7312_, Q = \u_dct2d.databuf_reg [67]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74921 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7310_, Q = \u_dct2d.databuf_reg [68]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74920 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7308_, Q = \u_dct2d.databuf_reg [69]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74919 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7303_, Q = \u_dct2d.databuf_reg [6]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74918 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7301_, Q = \u_dct2d.databuf_reg [70]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74917 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7299_, Q = \u_dct2d.databuf_reg [71]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74916 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7297_, Q = \u_dct2d.databuf_reg [72]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74915 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7295_, Q = \u_dct2d.databuf_reg [73]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74914 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7293_, Q = \u_dct2d.databuf_reg [74]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74913 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7291_, Q = \u_dct2d.databuf_reg [75]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74912 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7244_, Q = \u_dct2d.databuf_reg [77]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74911 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7241_, Q = \u_dct2d.databuf_reg [78]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74910 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7239_, Q = \u_dct2d.databuf_reg [79]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74909 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7237_, Q = \u_dct2d.databuf_reg [7]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74908 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7232_, Q = \u_dct2d.databuf_reg [80]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74907 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7227_, Q = \u_dct2d.databuf_reg [81]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74906 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7225_, Q = \u_dct2d.databuf_reg [82]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74905 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7220_, Q = \u_dct2d.databuf_reg [83]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74904 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7218_, Q = \u_dct2d.databuf_reg [84]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74903 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7213_, Q = \u_dct2d.databuf_reg [85]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74902 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7211_, Q = \u_dct2d.databuf_reg [86]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74901 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7169_, Q = \u_dct2d.databuf_reg [8]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74900 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7167_, Q = \u_dct2d.databuf_reg [9]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74899 ($_DFF_PP0_) from module MDCT (D = $abc$55833$li0_li0, Q = \u_dct2d.dataready).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74898 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [22], Q = \u_dct2d.latchbuf_reg [11]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74897 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [23], Q = \u_dct2d.latchbuf_reg [12]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74896 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [24], Q = \u_dct2d.latchbuf_reg [13]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74895 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [25], Q = \u_dct2d.latchbuf_reg [14]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74894 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [26], Q = \u_dct2d.latchbuf_reg [15]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74893 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [27], Q = \u_dct2d.latchbuf_reg [16]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74892 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [28], Q = \u_dct2d.latchbuf_reg [17]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74891 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [29], Q = \u_dct2d.latchbuf_reg [18]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74890 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [30], Q = \u_dct2d.latchbuf_reg [19]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74889 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [32], Q = \u_dct2d.latchbuf_reg [21]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74888 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [33], Q = \u_dct2d.latchbuf_reg [22]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74887 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [34], Q = \u_dct2d.latchbuf_reg [23]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74886 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [35], Q = \u_dct2d.latchbuf_reg [24]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74885 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [36], Q = \u_dct2d.latchbuf_reg [25]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74884 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [37], Q = \u_dct2d.latchbuf_reg [26]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74883 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [38], Q = \u_dct2d.latchbuf_reg [27]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74882 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [39], Q = \u_dct2d.latchbuf_reg [28]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74881 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [40], Q = \u_dct2d.latchbuf_reg [29]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74880 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [41], Q = \u_dct2d.latchbuf_reg [30]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74879 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [43], Q = \u_dct2d.latchbuf_reg [32]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74878 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [44], Q = \u_dct2d.latchbuf_reg [33]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74877 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [45], Q = \u_dct2d.latchbuf_reg [34]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74876 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [46], Q = \u_dct2d.latchbuf_reg [35]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74875 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [47], Q = \u_dct2d.latchbuf_reg [36]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74874 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [48], Q = \u_dct2d.latchbuf_reg [37]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74873 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [49], Q = \u_dct2d.latchbuf_reg [38]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74872 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [50], Q = \u_dct2d.latchbuf_reg [39]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74871 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [51], Q = \u_dct2d.latchbuf_reg [40]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74870 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [52], Q = \u_dct2d.latchbuf_reg [41]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74869 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [54], Q = \u_dct2d.latchbuf_reg [43]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74868 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [55], Q = \u_dct2d.latchbuf_reg [44]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74867 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [56], Q = \u_dct2d.latchbuf_reg [45]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74866 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [57], Q = \u_dct2d.latchbuf_reg [46]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74865 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [58], Q = \u_dct2d.latchbuf_reg [47]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74864 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [59], Q = \u_dct2d.latchbuf_reg [48]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74863 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [60], Q = \u_dct2d.latchbuf_reg [49]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74862 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [61], Q = \u_dct2d.latchbuf_reg [50]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74861 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [62], Q = \u_dct2d.latchbuf_reg [51]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74860 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [63], Q = \u_dct2d.latchbuf_reg [52]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74859 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [65], Q = \u_dct2d.latchbuf_reg [54]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74858 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [66], Q = \u_dct2d.latchbuf_reg [55]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74857 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [67], Q = \u_dct2d.latchbuf_reg [56]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74856 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [68], Q = \u_dct2d.latchbuf_reg [57]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74855 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [69], Q = \u_dct2d.latchbuf_reg [58]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74854 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [70], Q = \u_dct2d.latchbuf_reg [59]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74853 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [71], Q = \u_dct2d.latchbuf_reg [60]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74852 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [72], Q = \u_dct2d.latchbuf_reg [61]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74851 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [73], Q = \u_dct2d.latchbuf_reg [62]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74850 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [74], Q = \u_dct2d.latchbuf_reg [63]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74849 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [76], Q = \u_dct2d.latchbuf_reg [65]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74848 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [77], Q = \u_dct2d.latchbuf_reg [66]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74847 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [78], Q = \u_dct2d.latchbuf_reg [67]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74846 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [79], Q = \u_dct2d.latchbuf_reg [68]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74845 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [80], Q = \u_dct2d.latchbuf_reg [69]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74844 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [81], Q = \u_dct2d.latchbuf_reg [70]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74843 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [82], Q = \u_dct2d.latchbuf_reg [71]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74842 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [83], Q = \u_dct2d.latchbuf_reg [72]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74841 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [84], Q = \u_dct2d.latchbuf_reg [73]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74840 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [85], Q = \u_dct2d.latchbuf_reg [74]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74839 ($_DFF_PP0_) from module MDCT (D = \u_dct2d.latchbuf_reg [87], Q = \u_dct2d.latchbuf_reg [76]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74838 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7059_, Q = \u_dct2d.latchbuf_reg [77]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74837 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7057_, Q = \u_dct2d.latchbuf_reg [78]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74836 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7055_, Q = \u_dct2d.latchbuf_reg [79]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74835 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7053_, Q = \u_dct2d.latchbuf_reg [80]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74834 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7051_, Q = \u_dct2d.latchbuf_reg [81]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74833 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7049_, Q = \u_dct2d.latchbuf_reg [82]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74832 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7047_, Q = \u_dct2d.latchbuf_reg [83]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74831 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7045_, Q = \u_dct2d.latchbuf_reg [84]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74830 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7043_, Q = \u_dct2d.latchbuf_reg [85]).
Adding EN signal on $abc$74828$auto$blifparse.cc:362:parse_blif$74829 ($_DFF_PP0_) from module MDCT (D = $abc$74828$new_n7041_, Q = \u_dct2d.latchbuf_reg [87]).
[#visit=1517, #solve=0, #remove=0, time=0.09 sec.]

4.298. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.299. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 268 unused cells and 268 unused wires.
<suppressed ~269 debug messages>

4.300. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).
select with DFL2 synthesis (thresh-logic=0.920000, thresh_dff=0.980000)

4.301. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
select CE keep strategy (thresh_logic=0.920000, thresh_dff=0.980000, dfl=2)

4.302. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.303. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.304. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.305. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.306. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.307. Executing OPT_SHARE pass.

4.308. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1527, #solve=0, #remove=0, time=0.08 sec.]

4.309. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.310. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

4.311. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.312. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.313. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.314. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.315. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.316. Executing OPT_SHARE pass.

4.317. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1527, #solve=0, #remove=0, time=0.07 sec.]

4.318. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.319. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

4.320. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.321. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.322. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.323. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.324. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.325. Executing OPT_SHARE pass.

4.326. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1527, #solve=0, #remove=0, time=0.07 sec.]

4.327. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1527, #solve=1519, #remove=0, time=0.17 sec.]

4.328. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.329. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

4.330. Executing BMUXMAP pass.

4.331. Executing DEMUXMAP pass.

4.332. Executing ABC pass (technology mapping using ABC).

4.332.1. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Extracted 3579 gates and 4568 wires to a netlist network with 989 inputs and 531 outputs (dfl=1).

4.332.1.1. Executing ABC.
DE:   Version : 7.6
DE:   #PIs = 989  #Luts =  1281  Max Lvl =   7  Avg Lvl =   2.02  [   0.26 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 989  #Luts =  1336  Max Lvl =   6  Avg Lvl =   1.99  [   3.25 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 989  #Luts =  1251  Max Lvl =   6  Avg Lvl =   1.99  [   4.65 sec. at Pass 2]{map}[6]
DE:   #PIs = 989  #Luts =  1238  Max Lvl =   6  Avg Lvl =   1.99  [   5.10 sec. at Pass 3]{postMap}[12]
DE:   #PIs = 989  #Luts =  1232  Max Lvl =   6  Avg Lvl =   2.00  [   5.24 sec. at Pass 4]{map}[16]
DE:   #PIs = 989  #Luts =  1221  Max Lvl =   6  Avg Lvl =   2.01  [   5.09 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 989  #Luts =  1221  Max Lvl =   6  Avg Lvl =   2.01  [   5.42 sec. at Pass 6]{map}[16]
DE:   #PIs = 989  #Luts =  1221  Max Lvl =   6  Avg Lvl =   2.01  [   5.43 sec. at Pass 7]{postMap}[16]
DE:   #PIs = 989  #Luts =  1218  Max Lvl =   6  Avg Lvl =   2.00  [   5.49 sec. at Pass 8]{map}[16]
DE:   #PIs = 989  #Luts =  1217  Max Lvl =   6  Avg Lvl =   2.00  [   5.22 sec. at Pass 9]{postMap}[16]
DE:   #PIs = 989  #Luts =  1217  Max Lvl =   6  Avg Lvl =   2.00  [   5.24 sec. at Pass 10]{map}[16]
DE:   #PIs = 989  #Luts =  1217  Max Lvl =   6  Avg Lvl =   2.00  [   4.94 sec. at Pass 11]{postMap}[16]
DE:   #PIs = 989  #Luts =  1217  Max Lvl =   6  Avg Lvl =   2.00  [   5.57 sec. at Pass 12]{map}[16]
DE:   #PIs = 989  #Luts =  1217  Max Lvl =   6  Avg Lvl =   2.00  [   3.82 sec. at Pass 13]{pushMap}[16]
DE:   #PIs = 989  #Luts =  1217  Max Lvl =   6  Avg Lvl =   2.00  [   3.97 sec. at Pass 14]{pushMap}[16]
DE:   #PIs = 989  #Luts =  1217  Max Lvl =   6  Avg Lvl =   2.00  [   3.65 sec. at Pass 14]{pushMap}[16]
DE:   #PIs = 989  #Luts =  1217  Max Lvl =   6  Avg Lvl =   2.00  [   1.71 sec. at Pass 15]{finalMap}[16]
DE:   
DE:   total time =   74.13 sec.
[Time = 76.33 sec.]

4.333. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.334. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

4.335. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.336. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.337. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.338. Executing OPT_SHARE pass.

4.339. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1519, #solve=0, #remove=0, time=0.05 sec.]

4.340. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 4347 unused wires.
<suppressed ~1 debug messages>

4.341. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

4.342. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

4.343. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.344. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.345. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.346. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.347. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.348. Executing OPT_SHARE pass.

4.349. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1519, #solve=0, #remove=0, time=0.04 sec.]

4.350. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.351. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

4.352. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.353. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.354. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.355. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.356. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.357. Executing OPT_SHARE pass.

4.358. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1519, #solve=0, #remove=0, time=0.04 sec.]

4.359. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1519, #solve=1511, #remove=0, time=0.44 sec.]

4.360. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..

4.361. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

4.362. Printing statistics.

=== MDCT ===

   Number of wires:               1430
   Number of wire bits:           8156
   Number of public wires:         273
   Number of public wire bits:    5307
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2749
     $_DFFE_PN_                      1
     $_DFFE_PP0N_                    6
     $_DFFE_PP0P_                  320
     $_DFF_PP0_                   1192
     $lut                         1209
     TDP_RAM18KX2                   21

4.363. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.364. Executing RS_DFFSR_CONV pass.

4.365. Printing statistics.

=== MDCT ===

   Number of wires:               1430
   Number of wire bits:           8156
   Number of public wires:         273
   Number of public wire bits:    5307
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2749
     $_DFFE_PP0N_                    7
     $_DFFE_PP0P_                  320
     $_DFF_PP0_                   1192
     $lut                         1209
     TDP_RAM18KX2                   21

4.366. Executing TECHMAP pass (map to technology primitives).

4.366.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.366.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

4.366.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~4374 debug messages>

4.367. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.
<suppressed ~18350 debug messages>

4.368. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.369. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.370. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
<suppressed ~34050 debug messages>
Removed a total of 11350 cells.

4.371. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.14 sec.]

4.372. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 1 unused cells and 10062 unused wires.
<suppressed ~2 debug messages>

4.373. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.
<suppressed ~461 debug messages>

4.374. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

4.375. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.376. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.377. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.378. Executing OPT_SHARE pass.

4.379. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.14 sec.]

4.380. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 47 unused wires.
<suppressed ~1 debug messages>

4.381. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

4.382. Executing TECHMAP pass (map to technology primitives).

4.382.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.382.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

4.383. Executing ABC pass (technology mapping using ABC).

4.383.1. Extracting gate netlist of module `\MDCT' to `<abc-temp-dir>/input.blif'..
Extracted 7177 gates and 8165 wires to a netlist network with 986 inputs and 523 outputs (dfl=1).

4.383.1.1. Executing ABC.
DE:   Version : 7.6
DE:   #PIs = 986  #Luts =  1213  Max Lvl =   6  Avg Lvl =   2.01  [   0.27 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 986  #Luts =  1213  Max Lvl =   6  Avg Lvl =   2.01  [   3.63 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 986  #Luts =  1213  Max Lvl =   6  Avg Lvl =   2.01  [   3.57 sec. at Pass 2]{map}[6]
DE:   #PIs = 986  #Luts =  1213  Max Lvl =   6  Avg Lvl =   2.01  [   4.18 sec. at Pass 3]{postMap}[12]
DE:   #PIs = 986  #Luts =  1213  Max Lvl =   6  Avg Lvl =   2.01  [   5.50 sec. at Pass 4]{map}[16]
DE:   #PIs = 986  #Luts =  1204  Max Lvl =   6  Avg Lvl =   2.05  [   4.97 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 986  #Luts =  1204  Max Lvl =   6  Avg Lvl =   2.05  [   5.01 sec. at Pass 6]{map}[16]
DE:   #PIs = 986  #Luts =  1204  Max Lvl =   6  Avg Lvl =   2.05  [   5.02 sec. at Pass 7]{postMap}[16]
DE:   #PIs = 986  #Luts =  1203  Max Lvl =   6  Avg Lvl =   2.06  [   5.06 sec. at Pass 8]{map}[16]
DE:   #PIs = 986  #Luts =  1197  Max Lvl =   6  Avg Lvl =   2.06  [   5.06 sec. at Pass 9]{postMap}[16]
DE:   #PIs = 986  #Luts =  1197  Max Lvl =   6  Avg Lvl =   2.06  [   5.14 sec. at Pass 10]{map}[16]
DE:   #PIs = 986  #Luts =  1197  Max Lvl =   6  Avg Lvl =   2.06  [   4.88 sec. at Pass 11]{postMap}[16]
DE:   #PIs = 986  #Luts =  1197  Max Lvl =   6  Avg Lvl =   2.06  [   4.98 sec. at Pass 12]{map}[16]
DE:   #PIs = 986  #Luts =  1197  Max Lvl =   6  Avg Lvl =   2.06  [   3.48 sec. at Pass 13]{pushMap}[16]
DE:   #PIs = 986  #Luts =  1197  Max Lvl =   6  Avg Lvl =   2.06  [   3.97 sec. at Pass 14]{pushMap}[16]
DE:   #PIs = 986  #Luts =  1197  Max Lvl =   6  Avg Lvl =   2.06  [   3.94 sec. at Pass 14]{pushMap}[16]
DE:   #PIs = 986  #Luts =  1197  Max Lvl =   6  Avg Lvl =   2.06  [   1.71 sec. at Pass 15]{finalMap}[16]
DE:   
DE:   total time =   70.44 sec.
[Time = 72.68 sec.]

4.384. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

4.385. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.386. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MDCT..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.387. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MDCT.
Performed a total of 0 changes.

4.388. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MDCT'.
Removed a total of 0 cells.

4.389. Executing OPT_SHARE pass.

4.390. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.04 sec.]

4.391. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 5003 unused wires.
<suppressed ~1 debug messages>

4.392. Executing OPT_EXPR pass (perform const folding).
Optimizing module MDCT.

RUN-OPT ITERATIONS DONE : 1

4.393. Executing HIERARCHY pass (managing design hierarchy).

4.393.1. Analyzing design hierarchy..
Top module:  \MDCT

4.393.2. Analyzing design hierarchy..
Top module:  \MDCT
Removed 0 unused modules.
Warning: Resizing cell port MDCT.bram_g_rom_st1:1.u1_rome.1307.0.0_g_rom_st1:1.u1_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st1:2.u1_rome.1307.0.0_g_rom_st1:2.u1_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st1:3.u1_rome.1307.0.0_g_rom_st1:3.u1_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st1:4.u1_rome.1307.0.0_g_rom_st1:4.u1_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st1:5.u1_rome.1307.0.0_g_rom_st1:5.u1_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st1:6.u1_rome.1307.0.0_g_rom_st1:6.u1_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st1:7.u1_rome.1307.0.0_g_rom_st1:7.u1_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st1:8.u1_rome.1307.0.0_g_rom_st1:8.u1_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st1:9.u1_rome.1307.0.0_g_rom_st1:9.u1_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st2:1.u2_rome.1307.0.0_g_rom_st2:1.u2_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st2:10.u2_rome.1307.0.0_g_rom_st2:10.u2_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st2:11.u2_rome.1307.0.0_g_rom_st2:11.u2_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st2:2.u2_rome.1307.0.0_g_rom_st2:2.u2_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st2:3.u2_rome.1307.0.0_g_rom_st2:3.u2_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st2:4.u2_rome.1307.0.0_g_rom_st2:4.u2_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st2:5.u2_rome.1307.0.0_g_rom_st2:5.u2_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st2:6.u2_rome.1307.0.0_g_rom_st2:6.u2_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st2:7.u2_rome.1307.0.0_g_rom_st2:7.u2_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st2:8.u2_rome.1307.0.0_g_rom_st2:8.u2_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_g_rom_st2:9.u2_rome.1307.0.0_g_rom_st2:9.u2_romo.1323.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_u2_ram.mem.0.0_u1_ram.mem.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port MDCT.bram_u2_ram.mem.0.0_u1_ram.mem.0.0.ADDR_B1 from 15 bits to 14 bits.

4.394. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MDCT..
Removed 0 unused cells and 141 unused wires.
<suppressed ~141 debug messages>

4.395. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__IO_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.396. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Replacing existing blackbox module `\BOOT_CLOCK' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:9.1-14.10.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:24.1-31.10.
Generating RTLIL representation for module `\CARRY'.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:41.1-46.10.
Generating RTLIL representation for module `\CLK_BUF'.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:56.1-64.10.
Generating RTLIL representation for module `\DFFNRE'.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:74.1-82.10.
Generating RTLIL representation for module `\DFFRE'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:92.1-126.10.
Generating RTLIL representation for module `\DSP19X2'.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:136.1-162.10.
Generating RTLIL representation for module `\DSP38'.
Replacing existing blackbox module `\FIFO18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:172.1-219.10.
Generating RTLIL representation for module `\FIFO18KX2'.
Replacing existing blackbox module `\FIFO36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:229.1-254.10.
Generating RTLIL representation for module `\FIFO36K'.
Replacing existing blackbox module `\I_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:264.1-274.10.
Generating RTLIL representation for module `\I_BUF'.
Replacing existing blackbox module `\I_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:284.1-296.10.
Generating RTLIL representation for module `\I_BUF_DS'.
Replacing existing blackbox module `\I_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:306.1-313.10.
Generating RTLIL representation for module `\I_DDR'.
Replacing existing blackbox module `\I_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:323.1-334.10.
Generating RTLIL representation for module `\I_DELAY'.
Replacing existing blackbox module `\I_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:344.1-362.10.
Generating RTLIL representation for module `\I_SERDES'.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:372.1-378.10.
Generating RTLIL representation for module `\LUT1'.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:388.1-394.10.
Generating RTLIL representation for module `\LUT2'.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:404.1-410.10.
Generating RTLIL representation for module `\LUT3'.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:420.1-426.10.
Generating RTLIL representation for module `\LUT4'.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:436.1-442.10.
Generating RTLIL representation for module `\LUT5'.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:452.1-458.10.
Generating RTLIL representation for module `\LUT6'.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:468.1-480.10.
Generating RTLIL representation for module `\O_BUF'.
Replacing existing blackbox module `\O_BUFT' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:490.1-502.10.
Generating RTLIL representation for module `\O_BUFT'.
Replacing existing blackbox module `\O_BUFT_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:512.1-524.10.
Generating RTLIL representation for module `\O_BUFT_DS'.
Replacing existing blackbox module `\O_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:534.1-546.10.
Generating RTLIL representation for module `\O_BUF_DS'.
Replacing existing blackbox module `\O_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:556.1-563.10.
Generating RTLIL representation for module `\O_DDR'.
Replacing existing blackbox module `\O_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:573.1-584.10.
Generating RTLIL representation for module `\O_DELAY'.
Replacing existing blackbox module `\O_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:594.1-610.10.
Generating RTLIL representation for module `\O_SERDES'.
Replacing existing blackbox module `\O_SERDES_CLK' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:620.1-629.10.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Replacing existing blackbox module `\PLL' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:639.1-654.10.
Generating RTLIL representation for module `\PLL'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_M' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:664.1-678.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_S' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:688.1-705.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M0' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:715.1-754.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M1' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:764.1-803.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Replacing existing blackbox module `\SOC_FPGA_INTF_DMA' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:813.1-819.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Replacing existing blackbox module `\SOC_FPGA_INTF_IRQ' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:829.1-835.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Replacing existing blackbox module `\SOC_FPGA_INTF_JTAG' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:845.1-853.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Replacing existing blackbox module `\SOC_FPGA_TEMPERATURE' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:863.1-871.10.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:881.1-934.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:944.1-973.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:990.1-995.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1003.1-1008.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1017.1-1023.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1031.1-1037.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1046.1-1052.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1061.1-1067.10.
Generating RTLIL representation for module `\LATCHNS'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1072.1-1122.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1127.1-1161.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1166.1-1212.12.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.397. Executing CLKBUFMAP pass (inserting clock buffers).
Inserting rs__CLK_BUF on MDCT.clk[0].

4.398. Executing TECHMAP pass (map to technology primitives).

4.398.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.398.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~7 debug messages>

4.399. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port MDCT.dcto1[0] using rs__O_BUFT.
Mapping port MDCT.dcto1[1] using rs__O_BUFT.
Mapping port MDCT.dcto1[2] using rs__O_BUFT.
Mapping port MDCT.dcto1[3] using rs__O_BUFT.
Mapping port MDCT.dcto1[4] using rs__O_BUFT.
Mapping port MDCT.dcto1[5] using rs__O_BUFT.
Mapping port MDCT.dcto1[6] using rs__O_BUFT.
Mapping port MDCT.dcto1[7] using rs__O_BUFT.
Mapping port MDCT.dcto1[8] using rs__O_BUFT.
Mapping port MDCT.dcto1[9] using rs__O_BUFT.
Mapping port MDCT.dcto1[10] using rs__O_BUFT.
Mapping port MDCT.dcto1[11] using rs__O_BUFT.
Mapping port MDCT.odv1[0] using rs__O_BUFT.
Mapping port MDCT.clk using rs__I_BUF.
Mapping port MDCT.dcti using rs__I_BUF.
Mapping port MDCT.dcto using rs__O_BUF.
Mapping port MDCT.idv using rs__I_BUF.
Mapping port MDCT.odv using rs__O_BUF.
Mapping port MDCT.rst using rs__I_BUF.

4.400. Executing TECHMAP pass (map to technology primitives).

4.400.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.400.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~43 debug messages>

4.401. Printing statistics.

=== MDCT ===

   Number of wires:               1400
   Number of wire bits:           6475
   Number of public wires:         132
   Number of public wire bits:    3486
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2775
     $lut                         1197
     CLK_BUF                         1
     DFFRE                        1519
     I_BUF                          11
     O_BUF                          13
     O_BUFT                         13
     TDP_RAM18KX2                   21

4.402. Executing TECHMAP pass (map to technology primitives).

4.402.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/03_20_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.402.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5165 debug messages>

4.403. Printing statistics.

=== MDCT ===

   Number of wires:               3794
   Number of wire bits:          12629
   Number of public wires:         132
   Number of public wire bits:    3486
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2775
     CLK_BUF                         1
     DFFRE                        1519
     I_BUF                          11
     LUT1                          177
     LUT2                           33
     LUT3                          278
     LUT4                           84
     LUT5                          206
     LUT6                          419
     O_BUF                          13
     O_BUFT                         13
     TDP_RAM18KX2                   21

   Number of LUTs:                1197
   Number of REGs:                1519
   Number of CARRY ADDERs:           0

5. Executing Verilog backend.
Dumping module `\MDCT'.

6. Executing BLIF backend.

7. Executing Verilog backend.
Dumping module `\MDCT'.
Dumping module `\interface_MDCT'.

8. Executing BLIF backend.

9. Executing Verilog backend.
Dumping module `\MDCT'.
Dumping module `\interface_MDCT'.

10. Executing BLIF backend.

11. Executing Verilog backend.
Dumping module `\fabric_MDCT'.

12. Executing BLIF backend.

Warnings: 23 unique messages, 23 total
End of script. Logfile hash: 16acb1bd16, CPU: user 60.86s system 1.93s, MEM: 151.25 MB peak
Yosys 0.18+10 (git sha1 22058a10a, gcc 11.2.1 -fPIC -Os)
Time spent: 96% 10x abc (1772 sec), 0% 80x opt_expr (17 sec), ...
