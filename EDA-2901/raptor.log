/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.05
Build    : 1.0.67
Hash     : 74decee
Date     : May 29 2024
Type     : Engineering
Log Time   : Wed May 29 10:18:13 2024 GMT

INFO: Created design: ram_simple_dp_synch_undefined_collision_1024x32. Project type: rtl
INFO: Target device: 1VG28
INFO: Device version: v1.6.244
INFO: Adding VERILOG_2001 /nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v
INFO: Adding SV_2012 /nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./sim/co_sim_tb/co_sim_ram_simple_dp_synch_undefined_collision_1024x32.v /nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v
INFO: ANL: ##################################################
INFO: ANL: Analysis for design: ram_simple_dp_synch_undefined_collision_1024x32
INFO: ANL: ##################################################
INFO: ANL: Analyze command: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/yosys -s /nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/ram_simple_dp_synch_undefined_collision_1024x32/run_1/synth_1_1/analysis/ram_simple_dp_synch_undefined_collision_1024x32_analyzer.cmd
Command: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/yosys -s /nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/ram_simple_dp_synch_undefined_collision_1024x32/run_1/synth_1_1/analysis/ram_simple_dp_synch_undefined_collision_1024x32_analyzer.cmd

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 45a28179e, gcc 11.2.1 -fPIC -Os)


-- Executing script file `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/ram_simple_dp_synch_undefined_collision_1024x32/run_1/synth_1_1/analysis/ram_simple_dp_synch_undefined_collision_1024x32_analyzer.cmd' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v' to AST representation.
Generating RTLIL representation for module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Successfully finished Verilog frontend.

-- Running command `hierarchy -top ram_simple_dp_synch_undefined_collision_1024x32' --

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \ram_simple_dp_synch_undefined_collision_1024x32

3.2. Analyzing design hierarchy..
Top module:  \ram_simple_dp_synch_undefined_collision_1024x32
Removed 0 unused modules.

Dumping file hier_info.json ...
Dumping file port_info.json ...

End of script. Logfile hash: 8da6356344, CPU: user 0.03s system 0.02s, MEM: 16.22 MB peak
Yosys 0.38 (git sha1 45a28179e, gcc 11.2.1 -fPIC -Os)
Time spent: 92% 4x read_verilog (0 sec), 5% 1x analyze (0 sec), ...
INFO: ANL: Design ram_simple_dp_synch_undefined_collision_1024x32 is analyzed
INFO: ANL: Top Modules: ram_simple_dp_synch_undefined_collision_1024x32

INFO: SYN: ##################################################
INFO: SYN: Synthesis for design: ram_simple_dp_synch_undefined_collision_1024x32
INFO: SYN: ##################################################
INFO: SYN: RS Synthesis
INFO: SYN: Synthesis command: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/yosys -s ram_simple_dp_synch_undefined_collision_1024x32.ys -l ram_simple_dp_synch_undefined_collision_1024x32_synth.log
Command: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/yosys -s ram_simple_dp_synch_undefined_collision_1024x32.ys -l ram_simple_dp_synch_undefined_collision_1024x32_synth.log

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 45a28179e, gcc 11.2.1 -fPIC -Os)


-- Executing script file `ram_simple_dp_synch_undefined_collision_1024x32.ys' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v' to AST representation.
Generating RTLIL representation for module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \ram_simple_dp_synch_undefined_collision_1024x32

3.2. Analyzing design hierarchy..
Top module:  \ram_simple_dp_synch_undefined_collision_1024x32
Removed 0 unused modules.

4. Executing synth_rs pass: v0.4.218

4.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v' to AST representation.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v:10.1-19.10.
Generating RTLIL representation for module `\CARRY'.
Successfully finished Verilog frontend.

4.3. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:20.1-34.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:48.1-62.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:81.1-97.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:115.1-131.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:150.1-166.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:184.1-200.10.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

4.4. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v' to AST representation.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFRE'.
Successfully finished Verilog frontend.

4.5. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v' to AST representation.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFNRE'.
Successfully finished Verilog frontend.

4.6. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v' to AST representation.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v:10.1-20.10.
Generating RTLIL representation for module `\LUT1'.
Successfully finished Verilog frontend.

4.7. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v' to AST representation.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v:10.1-21.10.
Generating RTLIL representation for module `\LUT2'.
Successfully finished Verilog frontend.

4.8. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v' to AST representation.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v:10.1-22.10.
Generating RTLIL representation for module `\LUT3'.
Successfully finished Verilog frontend.

4.9. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v' to AST representation.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v:11.1-25.10.
Generating RTLIL representation for module `\LUT4'.
Successfully finished Verilog frontend.

4.10. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v' to AST representation.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v:10.1-24.10.
Generating RTLIL representation for module `\LUT5'.
Successfully finished Verilog frontend.

4.11. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v' to AST representation.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v:10.1-25.10.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

4.12. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v' to AST representation.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v:10.1-17.10.
Generating RTLIL representation for module `\CLK_BUF'.
Successfully finished Verilog frontend.

4.13. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v' to AST representation.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v:10.1-22.10.
Generating RTLIL representation for module `\O_BUF'.
Successfully finished Verilog frontend.

4.14. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v' to AST representation.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:10.1-324.10.
Generating RTLIL representation for module `\DSP38'.
Successfully finished Verilog frontend.

4.15. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v' to AST representation.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:2.1-29.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:33.1-84.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\RS_DSP3'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:116.1-149.10.
Generating RTLIL representation for module `\DSP19X2'.
Successfully finished Verilog frontend.

4.16. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:112.1-540.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:542.1-951.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:953.1-1356.10.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.17. Executing HIERARCHY pass (managing design hierarchy).

4.17.1. Analyzing design hierarchy..
Top module:  \ram_simple_dp_synch_undefined_collision_1024x32

4.17.2. Analyzing design hierarchy..
Top module:  \ram_simple_dp_synch_undefined_collision_1024x32
Removed 0 unused modules.

4.18. Executing PROC pass (convert processes to netlists).

4.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:9$2 in module ram_simple_dp_synch_undefined_collision_1024x32.
Removed a total of 0 dead cases.

4.18.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 4 assignments to connections.

4.18.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\ram_simple_dp_synch_undefined_collision_1024x32.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:5$12'.
  Set init value: \dout = 0

4.18.5. Executing PROC_ARST pass (detect async resets in processes).

4.18.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~3 debug messages>

4.18.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\ram_simple_dp_synch_undefined_collision_1024x32.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:5$12'.
Creating decoders for process `\ram_simple_dp_synch_undefined_collision_1024x32.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:9$2'.
     1/4: $1$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$8
     2/4: $1$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_DATA[31:0]$7
     3/4: $1$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_ADDR[9:0]$6
     4/4: $0\dout[31:0]

4.18.8. Executing PROC_DLATCH pass (convert process syncs to latches).

4.18.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\ram_simple_dp_synch_undefined_collision_1024x32.\dout' using process `\ram_simple_dp_synch_undefined_collision_1024x32.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:9$2'.
  created $dff cell `$procdff$26' with positive edge clock.
Creating register for signal `\ram_simple_dp_synch_undefined_collision_1024x32.$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_ADDR' using process `\ram_simple_dp_synch_undefined_collision_1024x32.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:9$2'.
  created $dff cell `$procdff$27' with positive edge clock.
Creating register for signal `\ram_simple_dp_synch_undefined_collision_1024x32.$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_DATA' using process `\ram_simple_dp_synch_undefined_collision_1024x32.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:9$2'.
  created $dff cell `$procdff$28' with positive edge clock.
Creating register for signal `\ram_simple_dp_synch_undefined_collision_1024x32.$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN' using process `\ram_simple_dp_synch_undefined_collision_1024x32.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:9$2'.
  created $dff cell `$procdff$29' with positive edge clock.

4.18.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.18.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `ram_simple_dp_synch_undefined_collision_1024x32.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:5$12'.
Found and cleaned up 3 empty switches in `\ram_simple_dp_synch_undefined_collision_1024x32.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:9$2'.
Removing empty process `ram_simple_dp_synch_undefined_collision_1024x32.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:9$2'.
Cleaned up 3 empty switches.

4.18.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.19. Executing SPLITNETS pass (splitting up multi-bit signals).

4.20. Executing DEMUXMAP pass.

4.21. Executing FLATTEN pass (flatten design).

4.22. Executing DEMUXMAP pass.

4.23. Executing TRIBUF pass.
Warning: Ignored -no_iobuf because -keep_tribuf is used.

4.24. Executing DEMINOUT pass (demote inout ports to input or output).

4.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 3 unused cells and 16 unused wires.
<suppressed ~4 debug messages>

4.27. Executing CHECK pass (checking for obvious problems).
Checking module ram_simple_dp_synch_undefined_collision_1024x32...
Found and reported 0 problems.

4.28. Printing statistics.

=== ram_simple_dp_synch_undefined_collision_1024x32 ===

   Number of wires:                 15
   Number of wire bits:            259
   Number of public wires:           7
   Number of public wire bits:      87
   Number of memories:               1
   Number of memory bits:        32768
   Number of processes:              0
   Number of cells:                 10
     $dff                            1
     $eq                             1
     $logic_and                      1
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                            5

4.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

4.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
    Consolidated identical input bits for $mux cell $procmux$14:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5
      New ports: A=1'0, B=1'1, Y=$0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0]
      New connections: $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [31:1] = { $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] $0$memwr$\ram$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v:12$1_EN[31:0]$5 [0] }
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 1 changes.

4.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.34. Executing OPT_SHARE pass.

4.35. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.38. Executing FSM pass (extract and optimize FSM).

4.38.1. Executing FSM_DETECT pass (finding FSMs in design).

4.38.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.38.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.38.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.38.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.38.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.38.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.39. Executing WREDUCE pass (reducing word size of cells).

4.40. Executing PEEPOPT pass (run peephole optimizers).

4.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.42. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.44. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

4.45. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.46. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.47. Executing OPT_SHARE pass.

4.48. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$26 ($dff) from module ram_simple_dp_synch_undefined_collision_1024x32 (D = $procmux$22_Y, Q = \dout).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

4.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.51. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

4.52. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.53. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.54. Executing OPT_SHARE pass.

4.55. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 2

4.58. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.59. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.60. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

4.61. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.63. Executing OPT_SHARE pass.

4.64. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.66. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.67. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.68. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.69. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

4.70. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.71. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.72. Executing OPT_SHARE pass.

4.73. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.74. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=32, #remove=0, time=0.03 sec.]

4.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.77. Executing WREDUCE pass (reducing word size of cells).

4.78. Executing PEEPOPT pass (run peephole optimizers).

4.79. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.80. Executing DEMUXMAP pass.

4.81. Executing SPLITNETS pass (splitting up multi-bit signals).

4.82. Printing statistics.

=== ram_simple_dp_synch_undefined_collision_1024x32 ===

   Number of wires:                 14
   Number of wire bits:            227
   Number of public wires:           7
   Number of public wire bits:      87
   Number of memories:               1
   Number of memory bits:        32768
   Number of processes:              0
   Number of cells:                  9
     $dffe                           1
     $eq                             1
     $logic_and                      1
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                            4

4.83. Executing RS_DSP_MULTADD pass.

4.84. Executing WREDUCE pass (reducing word size of cells).

4.85. Executing RS_DSP_MACC pass.

4.86. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.87. Executing TECHMAP pass (map to technology primitives).

4.87.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.87.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.88. Printing statistics.

=== ram_simple_dp_synch_undefined_collision_1024x32 ===

   Number of wires:                 14
   Number of wire bits:            227
   Number of public wires:           7
   Number of public wire bits:      87
   Number of memories:               1
   Number of memory bits:        32768
   Number of processes:              0
   Number of cells:                  9
     $dffe                           1
     $eq                             1
     $logic_and                      1
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                            4

4.89. Executing TECHMAP pass (map to technology primitives).

4.89.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.89.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.90. Printing statistics.

=== ram_simple_dp_synch_undefined_collision_1024x32 ===

   Number of wires:                 14
   Number of wire bits:            227
   Number of public wires:           7
   Number of public wire bits:      87
   Number of memories:               1
   Number of memory bits:        32768
   Number of processes:              0
   Number of cells:                  9
     $dffe                           1
     $eq                             1
     $logic_and                      1
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                            4

4.91. Executing TECHMAP pass (map to technology primitives).

4.91.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.91.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.92. Executing TECHMAP pass (map to technology primitives).

4.92.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.92.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.93. Executing TECHMAP pass (map to technology primitives).

4.93.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

4.93.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.94. Executing RS_DSP_SIMD pass.

4.95. Executing TECHMAP pass (map to technology primitives).

4.95.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

4.95.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.96. Executing TECHMAP pass (map to technology primitives).

4.96.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.96.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

4.97. Executing rs_pack_dsp_regs pass.

4.98. Executing RS_DSP_IO_REGS pass.

4.99. Executing TECHMAP pass (map to technology primitives).

4.99.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Successfully finished Verilog frontend.

4.99.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~14 debug messages>

4.100. Executing TECHMAP pass (map to technology primitives).

4.100.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.100.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

4.101. Printing statistics.

=== ram_simple_dp_synch_undefined_collision_1024x32 ===

   Number of wires:                 14
   Number of wire bits:            227
   Number of public wires:           7
   Number of public wire bits:      87
   Number of memories:               1
   Number of memory bits:        32768
   Number of processes:              0
   Number of cells:                  9
     $dffe                           1
     $eq                             1
     $logic_and                      1
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                            4

4.102. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ram_simple_dp_synch_undefined_collision_1024x32:
  created 0 $alu and 0 $macc cells.

4.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.105. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

4.106. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.107. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.108. Executing OPT_SHARE pass.

4.109. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.110. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.111. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.112. Printing statistics.

=== ram_simple_dp_synch_undefined_collision_1024x32 ===

   Number of wires:                 14
   Number of wire bits:            227
   Number of public wires:           7
   Number of public wire bits:      87
   Number of memories:               1
   Number of memory bits:        32768
   Number of processes:              0
   Number of cells:                  9
     $dffe                           1
     $eq                             1
     $logic_and                      1
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                            4

4.113. Executing MEMORY pass.

4.113.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.113.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.113.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing ram_simple_dp_synch_undefined_collision_1024x32.ram write port 0.

4.113.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.113.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\ram'[0] in module `\ram_simple_dp_synch_undefined_collision_1024x32': merging output FF to cell.
    Write port 0: don't care on collision.

4.113.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 4 unused cells and 36 unused wires.
<suppressed ~5 debug messages>

4.113.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.113.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.113.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.113.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.114. Printing statistics.

=== ram_simple_dp_synch_undefined_collision_1024x32 ===

   Number of wires:                 10
   Number of wire bits:            161
   Number of public wires:           7
   Number of public wire bits:      87
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $mem_v2                         1
     $mux                            3

4.115. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~3 debug messages>

4.116. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.117. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.118. Executing MEMORY_LIBMAP pass (mapping memories to cells).
mapping memory ram_simple_dp_synch_undefined_collision_1024x32.ram via $__RS_FACTOR_BRAM36_SDP
<suppressed ~207 debug messages>

4.119. Executing Rs_BRAM_Split pass.

4.120. Executing TECHMAP pass (map to technology primitives).

4.120.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

4.120.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~30 debug messages>

4.121. Executing TECHMAP pass (map to technology primitives).

4.121.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

4.121.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.122. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

4.123. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.
<suppressed ~1 debug messages>

4.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.125. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$20.
    dead port 2/2 on $mux $procmux$20.
Removed 2 multiplexer ports.
<suppressed ~3 debug messages>

4.126. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.127. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.128. Executing OPT_SHARE pass.

4.129. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.130. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 19 unused wires.
<suppressed ~1 debug messages>

4.131. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.132. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

4.133. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.134. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.135. Executing OPT_SHARE pass.

4.136. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.137. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.138. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 2

4.139. Executing PMUXTREE pass.

4.140. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~3 debug messages>

4.141. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

4.142. Executing TECHMAP pass (map to technology primitives).

4.142.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.142.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

4.142.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
No more expansions possible.
<suppressed ~77 debug messages>

4.143. Printing statistics.

=== ram_simple_dp_synch_undefined_collision_1024x32 ===

   Number of wires:                 13
   Number of wire bits:            256
   Number of public wires:           9
   Number of public wire bits:     120
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 67
     $_DFFE_PP_                      1
     $_MUX_                         65
     TDP_RAM36K                      1

4.144. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.
<suppressed ~1 debug messages>

4.145. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.146. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.147. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.148. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.149. Executing OPT_SHARE pass.

4.150. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.151. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.152. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.
<suppressed ~64 debug messages>

4.154. Executing TECHMAP pass (map to technology primitives).

4.154.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.154.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

4.155. Printing statistics.

=== ram_simple_dp_synch_undefined_collision_1024x32 ===

   Number of wires:                 12
   Number of wire bits:            224
   Number of public wires:           9
   Number of public wire bits:     120
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 34
     $_AND_                         32
     $_DFFE_PP_                      1
     TDP_RAM36K                      1

4.156. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.158. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.159. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.160. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.161. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.162. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.166. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.167. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.168. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.169. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.170. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.172. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.173. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.174. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.175. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.176. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.177. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.178. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.179. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.180. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.181. Printing statistics.

=== ram_simple_dp_synch_undefined_collision_1024x32 ===

   Number of wires:                 11
   Number of wire bits:            192
   Number of public wires:           9
   Number of public wire bits:     120
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 34
     $_AND_                         32
     $_DFFE_PP_                      1
     TDP_RAM36K                      1

   Number of Generic REGs:          1

ABC-DFF iteration : 1

4.182. Executing ABC pass (technology mapping using ABC).

4.182.1. Summary of detected clock domains:
  34 cells in clk=\clk, en=\re, arst={ }, srst={ }

  #logic partitions = 1

4.182.2. Extracting gate netlist of module `\ram_simple_dp_synch_undefined_collision_1024x32' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \re
Extracted 33 gates and 66 wires to a netlist network with 32 inputs and 33 outputs (dfl=1).

4.182.2.1. Executing ABC.
[Time = 0.05 sec.]

4.183. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.184. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.185. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.186. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.187. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.188. Executing OPT_SHARE pass.

4.189. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.190. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 67 unused wires.
<suppressed ~1 debug messages>

4.191. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 2

4.192. Executing ABC pass (technology mapping using ABC).

4.192.1. Summary of detected clock domains:
  34 cells in clk=\clk, en=\re, arst={ }, srst={ }

  #logic partitions = 1

4.192.2. Extracting gate netlist of module `\ram_simple_dp_synch_undefined_collision_1024x32' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \re
Extracted 33 gates and 66 wires to a netlist network with 32 inputs and 33 outputs (dfl=1).

4.192.2.1. Executing ABC.
[Time = 0.04 sec.]

4.193. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.194. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.195. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.196. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.197. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.198. Executing OPT_SHARE pass.

4.199. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.200. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 67 unused wires.
<suppressed ~1 debug messages>

4.201. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

4.202. Executing ABC pass (technology mapping using ABC).

4.202.1. Summary of detected clock domains:
  34 cells in clk=\clk, en=\re, arst={ }, srst={ }

  #logic partitions = 1

4.202.2. Extracting gate netlist of module `\ram_simple_dp_synch_undefined_collision_1024x32' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \re
Extracted 33 gates and 66 wires to a netlist network with 32 inputs and 33 outputs (dfl=2).

4.202.2.1. Executing ABC.
[Time = 0.04 sec.]

4.203. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.204. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.205. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.206. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.207. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.208. Executing OPT_SHARE pass.

4.209. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.210. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 67 unused wires.
<suppressed ~1 debug messages>

4.211. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

4.212. Executing ABC pass (technology mapping using ABC).

4.212.1. Summary of detected clock domains:
  34 cells in clk=\clk, en=\re, arst={ }, srst={ }

  #logic partitions = 1

4.212.2. Extracting gate netlist of module `\ram_simple_dp_synch_undefined_collision_1024x32' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \re
Extracted 33 gates and 66 wires to a netlist network with 32 inputs and 33 outputs (dfl=2).

4.212.2.1. Executing ABC.
[Time = 0.05 sec.]

4.213. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.214. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.215. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.216. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.217. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.218. Executing OPT_SHARE pass.

4.219. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.220. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 67 unused wires.
<suppressed ~1 debug messages>

4.221. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1
select with DFL1 synthesis (thresh_logic=0.920000, thresh_dff=0.980000)

4.222. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
   Number of Generic REGs:          1

ABC-DFF iteration : 1

4.223. Executing ABC pass (technology mapping using ABC).

4.223.1. Summary of detected clock domains:
  34 cells in clk=\clk, en=\re, arst={ }, srst={ }

  #logic partitions = 1

4.223.2. Extracting gate netlist of module `\ram_simple_dp_synch_undefined_collision_1024x32' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \re
Extracted 33 gates and 66 wires to a netlist network with 32 inputs and 33 outputs (dfl=1).

4.223.2.1. Executing ABC.
[Time = 0.05 sec.]

4.224. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.225. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.226. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 67 unused wires.
<suppressed ~1 debug messages>

4.227. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.228. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.229. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.230. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.231. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.232. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.233. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 2

4.234. Executing ABC pass (technology mapping using ABC).

4.234.1. Summary of detected clock domains:
  35 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.234.2. Extracting gate netlist of module `\ram_simple_dp_synch_undefined_collision_1024x32' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 34 gates and 68 wires to a netlist network with 33 inputs and 33 outputs (dfl=1).

4.234.2.1. Executing ABC.
[Time = 0.06 sec.]

4.235. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.236. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.237. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 68 unused wires.
<suppressed ~1 debug messages>

4.238. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.239. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.240. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.241. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.242. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.243. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.244. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 3

4.245. Executing ABC pass (technology mapping using ABC).

4.245.1. Summary of detected clock domains:
  35 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.245.2. Extracting gate netlist of module `\ram_simple_dp_synch_undefined_collision_1024x32' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 34 gates and 67 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

4.245.2.1. Executing ABC.
[Time = 0.04 sec.]

4.246. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.247. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.248. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 68 unused wires.
<suppressed ~1 debug messages>

4.249. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.250. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.251. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.252. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.253. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.254. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.255. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 4

4.256. Executing ABC pass (technology mapping using ABC).

4.256.1. Summary of detected clock domains:
  35 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.256.2. Extracting gate netlist of module `\ram_simple_dp_synch_undefined_collision_1024x32' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 34 gates and 67 wires to a netlist network with 33 inputs and 33 outputs (dfl=2).

4.256.2.1. Executing ABC.
[Time = 0.05 sec.]

4.257. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.258. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.259. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 68 unused wires.
<suppressed ~1 debug messages>

4.260. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.261. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.262. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.263. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.264. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.265. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.266. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).
select with DFL1 synthesis (thresh_logic=0.920000, thresh_dff=0.980000)

4.267. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
select CE remove strategy (thresh_logic=0.920000, thresh_dff=0.980000, dfl=1)

4.268. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.269. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.270. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.271. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.272. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.273. Executing OPT_SHARE pass.

4.274. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.275. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.276. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.277. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.278. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.279. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.280. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.281. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.282. Executing OPT_SHARE pass.

4.283. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.284. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.285. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.286. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.287. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.288. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.289. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.290. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.291. Executing OPT_SHARE pass.

4.292. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.293. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=1, #remove=0, time=0.00 sec.]

4.294. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.295. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.296. Executing BMUXMAP pass.

4.297. Executing DEMUXMAP pass.

4.298. Executing SPLITNETS pass (splitting up multi-bit signals).

4.299. Executing ABC pass (technology mapping using ABC).

4.299.1. Extracting gate netlist of module `\ram_simple_dp_synch_undefined_collision_1024x32' to `<abc-temp-dir>/input.blif'..
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=1).

4.299.1.1. Executing ABC.
DE:   Version : 7.7
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.06 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.06 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.08 sec. at Pass 2]{map}[6]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.16 sec. at Pass 3]{postMap}[12]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.24 sec. at Pass 4]{map}[36]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.56 sec. at Pass 5]{postMap}[72]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.46 sec. at Pass 6]{pushMap}[72]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.46 sec. at Pass 7]{pushMap}[72]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.48 sec. at Pass 7]{pushMap}[72]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.45 sec. at Pass 8]{finalMap}[72]
DE:   
DE:   total time =    3.08 sec.
[Time = 5.14 sec.]

4.300. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.301. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.302. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.303. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.304. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.305. Executing OPT_SHARE pass.

4.306. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.307. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 67 unused wires.
<suppressed ~1 debug messages>

4.308. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.309. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

4.310. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.311. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.312. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.313. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.314. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.315. Executing OPT_SHARE pass.

4.316. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.317. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.318. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.319. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.320. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.321. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.322. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.323. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.324. Executing OPT_SHARE pass.

4.325. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=0, #remove=0, time=0.00 sec.]

4.326. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1, #solve=1, #remove=0, time=0.00 sec.]

4.327. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.328. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.329. Printing statistics.

=== ram_simple_dp_synch_undefined_collision_1024x32 ===

   Number of wires:                 12
   Number of wire bits:            193
   Number of public wires:           9
   Number of public wire bits:     120
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 35
     $_DFF_P_                        1
     $lut                           33
     TDP_RAM36K                      1

4.330. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.331. Executing RS_DFFSR_CONV pass.

4.332. Printing statistics.

=== ram_simple_dp_synch_undefined_collision_1024x32 ===

   Number of wires:                 12
   Number of wire bits:            193
   Number of public wires:           9
   Number of public wire bits:     120
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 35
     $_DFF_P_                        1
     $lut                           33
     TDP_RAM36K                      1

4.333. Executing TECHMAP pass (map to technology primitives).

4.333.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.333.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

4.333.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~156 debug messages>

4.334. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.
<suppressed ~66 debug messages>

4.335. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.336. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.337. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.338. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.339. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 69 unused wires.
<suppressed ~1 debug messages>

4.340. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.341. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.342. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.343. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.344. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.345. Executing OPT_SHARE pass.

4.346. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.347. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.348. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.349. Executing TECHMAP pass (map to technology primitives).

4.349.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.349.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

4.350. Executing ABC pass (technology mapping using ABC).

4.350.1. Extracting gate netlist of module `\ram_simple_dp_synch_undefined_collision_1024x32' to `<abc-temp-dir>/input.blif'..
Extracted 33 gates and 69 wires to a netlist network with 34 inputs and 33 outputs (dfl=1).

4.350.1.1. Executing ABC.
DE:   Version : 7.7
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.11 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.08 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.06 sec. at Pass 2]{map}[6]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.12 sec. at Pass 3]{postMap}[12]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.16 sec. at Pass 4]{map}[36]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.46 sec. at Pass 5]{postMap}[72]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.48 sec. at Pass 6]{pushMap}[72]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.45 sec. at Pass 7]{pushMap}[72]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.46 sec. at Pass 7]{pushMap}[72]
DE:   #PIs =  34  #Luts =    33  Max Lvl =   1  Avg Lvl =   1.00  [   0.45 sec. at Pass 8]{finalMap}[72]
DE:   
DE:   total time =    2.90 sec.
[Time = 4.96 sec.]

4.351. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

4.352. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.353. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ram_simple_dp_synch_undefined_collision_1024x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.354. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ram_simple_dp_synch_undefined_collision_1024x32.
Performed a total of 0 changes.

4.355. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ram_simple_dp_synch_undefined_collision_1024x32'.
Removed a total of 0 cells.

4.356. Executing OPT_SHARE pass.

4.357. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.358. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 67 unused wires.
<suppressed ~1 debug messages>

4.359. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_simple_dp_synch_undefined_collision_1024x32.

RUN-OPT ITERATIONS DONE : 1

4.360. Executing HIERARCHY pass (managing design hierarchy).

4.360.1. Analyzing design hierarchy..
Top module:  \ram_simple_dp_synch_undefined_collision_1024x32

4.360.2. Analyzing design hierarchy..
Top module:  \ram_simple_dp_synch_undefined_collision_1024x32
Removed 0 unused modules.

4.361. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..

4.362. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__IO_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.363. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Replacing existing blackbox module `\BOOT_CLOCK' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:9.1-14.10.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:24.1-31.10.
Generating RTLIL representation for module `\CARRY'.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:41.1-46.10.
Generating RTLIL representation for module `\CLK_BUF'.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:56.1-64.10.
Generating RTLIL representation for module `\DFFNRE'.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:74.1-82.10.
Generating RTLIL representation for module `\DFFRE'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:92.1-126.10.
Generating RTLIL representation for module `\DSP19X2'.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:136.1-162.10.
Generating RTLIL representation for module `\DSP38'.
Replacing existing blackbox module `\FIFO18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:172.1-219.10.
Generating RTLIL representation for module `\FIFO18KX2'.
Replacing existing blackbox module `\FIFO36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:229.1-254.10.
Generating RTLIL representation for module `\FIFO36K'.
Replacing existing blackbox module `\I_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:264.1-276.10.
Generating RTLIL representation for module `\I_BUF_DS'.
Replacing existing blackbox module `\I_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:286.1-297.10.
Generating RTLIL representation for module `\I_BUF'.
Replacing existing blackbox module `\I_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:307.1-315.10.
Generating RTLIL representation for module `\I_DDR'.
Replacing existing blackbox module `\I_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:325.1-337.10.
Generating RTLIL representation for module `\I_DELAY'.
Replacing existing blackbox module `\I_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:347.1-366.10.
Generating RTLIL representation for module `\I_SERDES'.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:376.1-382.10.
Generating RTLIL representation for module `\LUT1'.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:392.1-398.10.
Generating RTLIL representation for module `\LUT2'.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:408.1-414.10.
Generating RTLIL representation for module `\LUT3'.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:424.1-430.10.
Generating RTLIL representation for module `\LUT4'.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:440.1-446.10.
Generating RTLIL representation for module `\LUT5'.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:456.1-462.10.
Generating RTLIL representation for module `\LUT6'.
Replacing existing blackbox module `\O_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:472.1-486.10.
Generating RTLIL representation for module `\O_BUF_DS'.
Replacing existing blackbox module `\O_BUFT_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:496.1-510.10.
Generating RTLIL representation for module `\O_BUFT_DS'.
Replacing existing blackbox module `\O_BUFT' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:520.1-533.10.
Generating RTLIL representation for module `\O_BUFT'.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:543.1-556.10.
Generating RTLIL representation for module `\O_BUF'.
Replacing existing blackbox module `\O_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:566.1-574.10.
Generating RTLIL representation for module `\O_DDR'.
Replacing existing blackbox module `\O_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:584.1-596.10.
Generating RTLIL representation for module `\O_DELAY'.
Replacing existing blackbox module `\O_SERDES_CLK' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:606.1-615.10.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Replacing existing blackbox module `\O_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:625.1-642.10.
Generating RTLIL representation for module `\O_SERDES'.
Replacing existing blackbox module `\PLL' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:652.1-667.10.
Generating RTLIL representation for module `\PLL'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_M' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:677.1-691.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_S' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:701.1-718.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M0' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:728.1-767.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M1' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:777.1-816.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Replacing existing blackbox module `\SOC_FPGA_INTF_DMA' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:826.1-832.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Replacing existing blackbox module `\SOC_FPGA_INTF_IRQ' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:842.1-848.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Replacing existing blackbox module `\SOC_FPGA_INTF_JTAG' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:858.1-866.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Replacing existing blackbox module `\SOC_FPGA_TEMPERATURE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:876.1-884.10.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:894.1-947.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:957.1-986.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1003.1-1008.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1016.1-1021.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1030.1-1036.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1044.1-1050.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1059.1-1065.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1074.1-1080.10.
Generating RTLIL representation for module `\LATCHNS'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1085.1-1135.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1140.1-1174.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1179.1-1225.12.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.364. Executing CLKBUFMAP pass (inserting clock buffers).
Inserting rs__CLK_BUF on ram_simple_dp_synch_undefined_collision_1024x32.clk[0].

4.365. Executing TECHMAP pass (map to technology primitives).

4.365.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.365.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~7 debug messages>

4.366. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

4.367. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port ram_simple_dp_synch_undefined_collision_1024x32.clk using rs__I_BUF.
Mapping port ram_simple_dp_synch_undefined_collision_1024x32.din using rs__I_BUF.
Mapping port ram_simple_dp_synch_undefined_collision_1024x32.dout using rs__O_BUF.
Mapping port ram_simple_dp_synch_undefined_collision_1024x32.re using rs__I_BUF.
Mapping port ram_simple_dp_synch_undefined_collision_1024x32.read_addr using rs__I_BUF.
Mapping port ram_simple_dp_synch_undefined_collision_1024x32.we using rs__I_BUF.
Mapping port ram_simple_dp_synch_undefined_collision_1024x32.write_addr using rs__I_BUF.

4.368. Executing TECHMAP pass (map to technology primitives).

4.368.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.368.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~93 debug messages>

4.369. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 261 unused wires.
<suppressed ~1 debug messages>

4.370. Executing SPLITNETS pass (splitting up multi-bit signals).

4.371. Printing statistics.

=== ram_simple_dp_synch_undefined_collision_1024x32 ===

   Number of wires:                 20
   Number of wire bits:            281
   Number of public wires:           9
   Number of public wire bits:     120
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                123
     $lut                           33
     CLK_BUF                         1
     DFFRE                           1
     I_BUF                          55
     O_BUF                          32
     TDP_RAM36K                      1

4.372. Executing TECHMAP pass (map to technology primitives).

4.372.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.372.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~62 debug messages>

4.373. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ram_simple_dp_synch_undefined_collision_1024x32..
Removed 0 unused cells and 66 unused wires.
<suppressed ~1 debug messages>

4.374. Executing SPLITNETS pass (splitting up multi-bit signals).

4.375. Executing HIERARCHY pass (managing design hierarchy).

4.375.1. Analyzing design hierarchy..
Top module:  \ram_simple_dp_synch_undefined_collision_1024x32

4.375.2. Analyzing design hierarchy..
Top module:  \ram_simple_dp_synch_undefined_collision_1024x32
Removed 0 unused modules.

Dumping port properties into 'netlist_info.json' file.

4.376. Printing statistics.

=== ram_simple_dp_synch_undefined_collision_1024x32 ===

   Number of wires:                 20
   Number of wire bits:            281
   Number of public wires:           9
   Number of public wire bits:     120
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                123
     CLK_BUF                         1
     DFFRE                           1
     I_BUF                          55
     LUT2                           33
     O_BUF                          32
     TDP_RAM36K                      1

   Number of LUTs:                  33
   Number of REGs:                   1
   Number of CARRY ADDERs:           0

5. Executing Verilog backend.
Dumping module `\ram_simple_dp_synch_undefined_collision_1024x32'.

5.1. Executing BLIF backend.

-- Running command `write_rtlil design.rtlil' --

5.2. Executing RTLIL backend.
Output filename: design.rtlil

5.3. Executing SPLITNETS pass (splitting up multi-bit signals).
Removed 0 unused cells and 32 unused wires.

5.4. Executing FLATTEN pass (flatten design).
Deleting now unused module interface_ram_simple_dp_synch_undefined_collision_1024x32.
<suppressed ~1 debug messages>

5.5. Executing Verilog backend.
Dumping module `\ram_simple_dp_synch_undefined_collision_1024x32'.

5.5.1. Executing BLIF backend.
Run Script

5.5.2. Executing Verilog backend.
Dumping module `\ram_simple_dp_synch_undefined_collision_1024x32'.

5.5.2.1. Executing BLIF backend.

5.5.2.2. Executing Verilog backend.
Dumping module `\fabric_ram_simple_dp_synch_undefined_collision_1024x32'.

5.5.2.2.1. Executing BLIF backend.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 38c4d65245, CPU: user 1.01s system 0.09s, MEM: 26.79 MB peak
Yosys 0.38 (git sha1 45a28179e, gcc 11.2.1 -fPIC -Os)
Time spent: 99% 10x abc (156 sec), 0% 44x read_verilog (0 sec), ...
INFO: SYN: Design ram_simple_dp_synch_undefined_collision_1024x32 is synthesized
Modification completed.
INFO: SGT: ##################################################
INFO: SGT: Gate simulation for design: ram_simple_dp_synch_undefined_collision_1024x32
INFO: SGT: ##################################################
Command: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/HDL_simulator/iverilog/bin/iverilog -DIVERILOG=1 -v -s co_sim_ram_simple_dp_synch_undefined_collision_1024x32 -I../../../.././rtl -I/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl -I/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./sim/co_sim_tb -y ../../../.././rtl -Y .v -Y .sv -g2012 /nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./sim/co_sim_tb/co_sim_ram_simple_dp_synch_undefined_collision_1024x32.v /nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./rtl/ram_simple_dp_synch_undefined_collision_1024x32.v /nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/ram_simple_dp_synch_undefined_collision_1024x32/run_1/synth_1_1/synthesis/ram_simple_dp_synch_undefined_collision_1024x32_post_synth.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/simlib.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/brams_sim.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/llatches_sim.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUFT_DS.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/I_BUF_DS.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP19X2.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_SERDES_CLK.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/TDP_RAM36K.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_DDR.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/SOC_FPGA_TEMPERATURE.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/BOOT_CLOCK.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_DELAY.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF_DS.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/SOC_FPGA_INTF_JTAG.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/PLL.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/I_SERDES.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/I_DELAY.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUFT.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/I_BUF.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/FIFO36K.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/TDP_RAM18KX2.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/FIFO18KX2.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_SERDES.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v -l /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/I_DDR.v
Icarus Verilog Preprocessor version 13.0 (devel) (s20221226-498-g52d049b51)

Copyright (c) 1999-2024 Stephen Williams (steve@icarus.com)

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License along
  with this program; if not, write to the Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
Indexing library: ../../../.././rtl
Using language generation: IEEE1800-2012,no-specify,no-interconnect,xtypes,icarus-misc
PARSING INPUT
ELABORATING DESIGN
 ... done, 0.03 seconds.
RUNNING FUNCTORS
 ... done, 0.03 seconds.
 -F cprop ...
 ... Iteration detected 55 optimizations.
 ... Iteration detected 0 optimizations.
 ... Look for dangling constants
 ... done
 -F nodangle ...
 ... scan for dangling signal and event nodes. (scomplete=F, ecomplete=F)
 ... 1 iterations deleted 513 dangling signals and 0 events.
 ... scan for dangling signal and event nodes. (scomplete=T, ecomplete=F)
 ... 2 iterations deleted 513 dangling signals and 14 events.
 ... done
CALCULATING ISLANDS
 ... done, 0 seconds.CODE GENERATION

 ... invoking target_design
STATISTICS
lex_string: add_count=5287 hit_count=32584
 ... done, 0.01 seconds.
Icarus Verilog version 13.0 (devel) (s20221226-498-g52d049b51)

Copyright (c) 2000-2024 Stephen Williams (steve@icarus.com)

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License along
  with this program; if not, write to the Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

translate: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/HDL_simulator/iverilog/lib/ivl/ivlpp -v -L -F"/tmp/ivrlg24f2e9f14" -f"/tmp/ivrlg4f2e9f14" -p"/tmp/ivrli4f2e9f14" |/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/HDL_simulator/iverilog/lib/ivl/ivl -v -C"/tmp/ivrlh4f2e9f14" -C"/nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/HDL_simulator/iverilog/lib/ivl/vvp.conf" -- -
Command: /nfs_eda_sw/softwares/Raptor/instl_dir/05_29_2024_09_15_01/bin/HDL_simulator/iverilog/bin/vvp ./a.out -fst
FST info: dumpfile tb.vcd opened for output.
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 41980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 42980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 43980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 44980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 45980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 46980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 47980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 48980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 49980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 50980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 51980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 52980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 53980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 54980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 55980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 56980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 57980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 58980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 59980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60560 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60580 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60600 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60620 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60640 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60660 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60680 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60700 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60720 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60740 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60760 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60780 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60800 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60820 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60840 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60860 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60880 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60900 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60920 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60940 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60960 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 60980 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61000 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61020 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61040 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61060 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61080 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61100 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61120 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61140 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61160 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61180 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61200 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61220 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61240 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61260 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61280 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61300 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61320 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61340 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61360 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61380 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61420 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61440 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 61480 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 81980 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 82000 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 82020 ns
dout mismatch. Golden: 7a4c4df4, Netlist: xxxxxxxx, Time: 82060 ns
dout mismatch. Golden: 4c54e198, Netlist: xxxxxxxx, Time: 82100 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 82180 ns
dout mismatch. Golden: dc16d8b8, Netlist: xxxxxxxx, Time: 82220 ns
dout mismatch. Golden: dc16d8b8, Netlist: xxxxxxxx, Time: 82240 ns
dout mismatch. Golden: dc16d8b8, Netlist: xxxxxxxx, Time: 82260 ns
dout mismatch. Golden: 2bf16357, Netlist: xxxxxxxx, Time: 82360 ns
dout mismatch. Golden: 2bf16357, Netlist: xxxxxxxx, Time: 82380 ns
dout mismatch. Golden: 2bf16357, Netlist: xxxxxxxx, Time: 82400 ns
dout mismatch. Golden: 2bf16357, Netlist: xxxxxxxx, Time: 82420 ns
dout mismatch. Golden: 2bf16357, Netlist: xxxxxxxx, Time: 82440 ns
dout mismatch. Golden: 1699502, Netlist: xxxxxxxx, Time: 82500 ns
dout mismatch. Golden: 1699502, Netlist: xxxxxxxx, Time: 82520 ns
dout mismatch. Golden: 1699502, Netlist: xxxxxxxx, Time: 82540 ns
dout mismatch. Golden: 1699502, Netlist: xxxxxxxx, Time: 82560 ns
dout mismatch. Golden: 286cff50, Netlist: xxxxxxxx, Time: 82620 ns
dout mismatch. Golden: e33e50c6, Netlist: xxxxxxxx, Time: 82660 ns
dout mismatch. Golden: f2be5ae5, Netlist: xxxxxxxx, Time: 82700 ns
dout mismatch. Golden: f2be5ae5, Netlist: xxxxxxxx, Time: 82720 ns
dout mismatch. Golden: f2be5ae5, Netlist: xxxxxxxx, Time: 82740 ns
dout mismatch. Golden: f2be5ae5, Netlist: xxxxxxxx, Time: 82760 ns
dout mismatch. Golden: f2be5ae5, Netlist: xxxxxxxx, Time: 82780 ns
dout mismatch. Golden: f2be5ae5, Netlist: xxxxxxxx, Time: 82800 ns
dout mismatch. Golden: f2be5ae5, Netlist: xxxxxxxx, Time: 82820 ns
dout mismatch. Golden: 6d18e1da, Netlist: xxxxxxxx, Time: 82860 ns
dout mismatch. Golden: 3a70ef74, Netlist: xxxxxxxx, Time: 82900 ns
dout mismatch. Golden: 3a70ef74, Netlist: xxxxxxxx, Time: 82920 ns
dout mismatch. Golden: 3a70ef74, Netlist: xxxxxxxx, Time: 82940 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 83020 ns
dout mismatch. Golden: 8496d609, Netlist: xxxxxxxx, Time: 83100 ns
dout mismatch. Golden: 8496d609, Netlist: xxxxxxxx, Time: 83120 ns
dout mismatch. Golden: da899cb5, Netlist: xxxxxxxx, Time: 83160 ns
dout mismatch. Golden: da899cb5, Netlist: xxxxxxxx, Time: 83180 ns
dout mismatch. Golden: da899cb5, Netlist: xxxxxxxx, Time: 83200 ns
dout mismatch. Golden: da899cb5, Netlist: xxxxxxxx, Time: 83220 ns
dout mismatch. Golden: da899cb5, Netlist: xxxxxxxx, Time: 83240 ns
dout mismatch. Golden: da899cb5, Netlist: xxxxxxxx, Time: 83260 ns
dout mismatch. Golden: da899cb5, Netlist: xxxxxxxx, Time: 83280 ns
dout mismatch. Golden: da899cb5, Netlist: xxxxxxxx, Time: 83300 ns
dout mismatch. Golden: da899cb5, Netlist: xxxxxxxx, Time: 83320 ns
dout mismatch. Golden: c6adf48d, Netlist: xxxxxxxx, Time: 83360 ns
dout mismatch. Golden: c6adf48d, Netlist: xxxxxxxx, Time: 83380 ns
dout mismatch. Golden: 525751a4, Netlist: xxxxxxxx, Time: 83420 ns
dout mismatch. Golden: 99586632, Netlist: xxxxxxxx, Time: 83460 ns
dout mismatch. Golden: 29349952, Netlist: xxxxxxxx, Time: 83500 ns
dout mismatch. Golden: 29349952, Netlist: xxxxxxxx, Time: 83520 ns
dout mismatch. Golden: f7624eee, Netlist: xxxxxxxx, Time: 83560 ns
dout mismatch. Golden: f144ace2, Netlist: xxxxxxxx, Time: 83640 ns
dout mismatch. Golden: c508cc8a, Netlist: xxxxxxxx, Time: 83700 ns
dout mismatch. Golden: 76c657ed, Netlist: xxxxxxxx, Time: 83740 ns
dout mismatch. Golden: 76c657ed, Netlist: xxxxxxxx, Time: 83760 ns
dout mismatch. Golden: 76c657ed, Netlist: xxxxxxxx, Time: 83780 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 83900 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 83920 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 83940 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 83960 ns
dout mismatch. Golden: 38bd8d71, Netlist: xxxxxxxx, Time: 84020 ns
dout mismatch. Golden: fe75fefc, Netlist: xxxxxxxx, Time: 84060 ns
dout mismatch. Golden: e18dfec3, Netlist: xxxxxxxx, Time: 84100 ns
dout mismatch. Golden: e18dfec3, Netlist: xxxxxxxx, Time: 84120 ns
dout mismatch. Golden: 7f4ce1fe, Netlist: xxxxxxxx, Time: 84160 ns
dout mismatch. Golden: 7f4ce1fe, Netlist: xxxxxxxx, Time: 84180 ns
dout mismatch. Golden: 7f4ce1fe, Netlist: xxxxxxxx, Time: 84200 ns
dout mismatch. Golden: 7f4ce1fe, Netlist: xxxxxxxx, Time: 84220 ns
dout mismatch. Golden: 7f4ce1fe, Netlist: xxxxxxxx, Time: 84240 ns
dout mismatch. Golden: 7f4ce1fe, Netlist: xxxxxxxx, Time: 84260 ns
dout mismatch. Golden: 34c37d69, Netlist: xxxxxxxx, Time: 84340 ns
dout mismatch. Golden: c3fb4c87, Netlist: xxxxxxxx, Time: 84420 ns
dout mismatch. Golden: 38bd8d71, Netlist: xxxxxxxx, Time: 84480 ns
dout mismatch. Golden: d143eaa2, Netlist: xxxxxxxx, Time: 84540 ns
dout mismatch. Golden: c9490292, Netlist: xxxxxxxx, Time: 84620 ns
dout mismatch. Golden: 1a9af535, Netlist: xxxxxxxx, Time: 84700 ns
dout mismatch. Golden: 42249784, Netlist: xxxxxxxx, Time: 84760 ns
dout mismatch. Golden: eef5d1d, Netlist: xxxxxxxx, Time: 84800 ns
dout mismatch. Golden: 8684180d, Netlist: xxxxxxxx, Time: 84840 ns
dout mismatch. Golden: eaacb0d5, Netlist: xxxxxxxx, Time: 84880 ns
dout mismatch. Golden: c9b64c93, Netlist: xxxxxxxx, Time: 84920 ns
dout mismatch. Golden: 9abc7835, Netlist: xxxxxxxx, Time: 85020 ns
dout mismatch. Golden: fbced2f7, Netlist: xxxxxxxx, Time: 85080 ns
dout mismatch. Golden: fbced2f7, Netlist: xxxxxxxx, Time: 85100 ns
dout mismatch. Golden: fbced2f7, Netlist: xxxxxxxx, Time: 85120 ns
dout mismatch. Golden: fbced2f7, Netlist: xxxxxxxx, Time: 85140 ns
dout mismatch. Golden: 1d9a7b3b, Netlist: xxxxxxxx, Time: 85240 ns
dout mismatch. Golden: acfd4059, Netlist: xxxxxxxx, Time: 85280 ns
dout mismatch. Golden: acfd4059, Netlist: xxxxxxxx, Time: 85300 ns
dout mismatch. Golden: acfd4059, Netlist: xxxxxxxx, Time: 85320 ns
dout mismatch. Golden: acfd4059, Netlist: xxxxxxxx, Time: 85340 ns
dout mismatch. Golden: acfd4059, Netlist: xxxxxxxx, Time: 85360 ns
dout mismatch. Golden: 7c99cff9, Netlist: xxxxxxxx, Time: 85440 ns
dout mismatch. Golden: 7c99cff9, Netlist: xxxxxxxx, Time: 85460 ns
dout mismatch. Golden: 9bf8b437, Netlist: xxxxxxxx, Time: 85500 ns
dout mismatch. Golden: 9bf8b437, Netlist: xxxxxxxx, Time: 85520 ns
dout mismatch. Golden: 9bf8b437, Netlist: xxxxxxxx, Time: 85540 ns
dout mismatch. Golden: 9bf8b437, Netlist: xxxxxxxx, Time: 85560 ns
dout mismatch. Golden: 9bf8b437, Netlist: xxxxxxxx, Time: 85580 ns
dout mismatch. Golden: 9bf8b437, Netlist: xxxxxxxx, Time: 85600 ns
dout mismatch. Golden: c3c93687, Netlist: xxxxxxxx, Time: 85640 ns
dout mismatch. Golden: c3c93687, Netlist: xxxxxxxx, Time: 85660 ns
dout mismatch. Golden: c3c93687, Netlist: xxxxxxxx, Time: 85680 ns
dout mismatch. Golden: c3c93687, Netlist: xxxxxxxx, Time: 85700 ns
dout mismatch. Golden: c3c93687, Netlist: xxxxxxxx, Time: 85720 ns
dout mismatch. Golden: d43276a8, Netlist: xxxxxxxx, Time: 85760 ns
dout mismatch. Golden: d43276a8, Netlist: xxxxxxxx, Time: 85780 ns
dout mismatch. Golden: d43276a8, Netlist: xxxxxxxx, Time: 85800 ns
dout mismatch. Golden: 1a9af535, Netlist: xxxxxxxx, Time: 85840 ns
dout mismatch. Golden: 1a9af535, Netlist: xxxxxxxx, Time: 85860 ns
dout mismatch. Golden: 1a9af535, Netlist: xxxxxxxx, Time: 85880 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 85920 ns
dout mismatch. Golden: 694639d2, Netlist: xxxxxxxx, Time: 85960 ns
dout mismatch. Golden: 694639d2, Netlist: xxxxxxxx, Time: 85980 ns
dout mismatch. Golden: 8cf1111, Netlist: xxxxxxxx, Time: 86100 ns
dout mismatch. Golden: 8cf1111, Netlist: xxxxxxxx, Time: 86120 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 86160 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 86180 ns
dout mismatch. Golden: 23301b46, Netlist: xxxxxxxx, Time: 86220 ns
dout mismatch. Golden: 23301b46, Netlist: xxxxxxxx, Time: 86240 ns
dout mismatch. Golden: 23301b46, Netlist: xxxxxxxx, Time: 86260 ns
dout mismatch. Golden: d47b42a8, Netlist: xxxxxxxx, Time: 86300 ns
dout mismatch. Golden: d47b42a8, Netlist: xxxxxxxx, Time: 86320 ns
dout mismatch. Golden: b6b5506d, Netlist: xxxxxxxx, Time: 86420 ns
dout mismatch. Golden: b6b5506d, Netlist: xxxxxxxx, Time: 86440 ns
dout mismatch. Golden: b6b5506d, Netlist: xxxxxxxx, Time: 86460 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 86540 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 86560 ns
dout mismatch. Golden: 783865f0, Netlist: xxxxxxxx, Time: 86600 ns
dout mismatch. Golden: eaacb0d5, Netlist: xxxxxxxx, Time: 86660 ns
dout mismatch. Golden: eaacb0d5, Netlist: xxxxxxxx, Time: 86680 ns
dout mismatch. Golden: eaacb0d5, Netlist: xxxxxxxx, Time: 86700 ns
dout mismatch. Golden: eaacb0d5, Netlist: xxxxxxxx, Time: 86720 ns
dout mismatch. Golden: 90138420, Netlist: xxxxxxxx, Time: 86820 ns
dout mismatch. Golden: d735f1a, Netlist: xxxxxxxx, Time: 86880 ns
dout mismatch. Golden: d735f1a, Netlist: xxxxxxxx, Time: 86900 ns
dout mismatch. Golden: d735f1a, Netlist: xxxxxxxx, Time: 86920 ns
dout mismatch. Golden: 639a3fc7, Netlist: xxxxxxxx, Time: 87000 ns
dout mismatch. Golden: 639a3fc7, Netlist: xxxxxxxx, Time: 87020 ns
dout mismatch. Golden: 639a3fc7, Netlist: xxxxxxxx, Time: 87040 ns
dout mismatch. Golden: 639a3fc7, Netlist: xxxxxxxx, Time: 87060 ns
dout mismatch. Golden: e23090c4, Netlist: xxxxxxxx, Time: 87120 ns
dout mismatch. Golden: 90667620, Netlist: xxxxxxxx, Time: 87180 ns
dout mismatch. Golden: 867cde0c, Netlist: xxxxxxxx, Time: 87220 ns
dout mismatch. Golden: 867cde0c, Netlist: xxxxxxxx, Time: 87240 ns
dout mismatch. Golden: 867cde0c, Netlist: xxxxxxxx, Time: 87260 ns
dout mismatch. Golden: 9dfe943b, Netlist: xxxxxxxx, Time: 87300 ns
dout mismatch. Golden: 37890d6f, Netlist: xxxxxxxx, Time: 87340 ns
dout mismatch. Golden: 37890d6f, Netlist: xxxxxxxx, Time: 87360 ns
dout mismatch. Golden: 37890d6f, Netlist: xxxxxxxx, Time: 87380 ns
dout mismatch. Golden: b2f5e065, Netlist: xxxxxxxx, Time: 87440 ns
dout mismatch. Golden: b2f5e065, Netlist: xxxxxxxx, Time: 87460 ns
dout mismatch. Golden: dc16d8b8, Netlist: xxxxxxxx, Time: 87500 ns
dout mismatch. Golden: 7c8e27f9, Netlist: xxxxxxxx, Time: 87540 ns
dout mismatch. Golden: 39e2d773, Netlist: xxxxxxxx, Time: 87580 ns
dout mismatch. Golden: 39e2d773, Netlist: xxxxxxxx, Time: 87600 ns
dout mismatch. Golden: 39e2d773, Netlist: xxxxxxxx, Time: 87620 ns
dout mismatch. Golden: 39e2d773, Netlist: xxxxxxxx, Time: 87640 ns
dout mismatch. Golden: 39e2d773, Netlist: xxxxxxxx, Time: 87660 ns
dout mismatch. Golden: 5053dba0, Netlist: xxxxxxxx, Time: 87780 ns
dout mismatch. Golden: 12f38925, Netlist: xxxxxxxx, Time: 87820 ns
dout mismatch. Golden: 62c963c5, Netlist: xxxxxxxx, Time: 87960 ns
dout mismatch. Golden: 62c963c5, Netlist: xxxxxxxx, Time: 87980 ns
dout mismatch. Golden: f40968e8, Netlist: xxxxxxxx, Time: 88100 ns
dout mismatch. Golden: f40968e8, Netlist: xxxxxxxx, Time: 88120 ns
dout mismatch. Golden: f40968e8, Netlist: xxxxxxxx, Time: 88140 ns
dout mismatch. Golden: 76f5e9ed, Netlist: xxxxxxxx, Time: 88240 ns
dout mismatch. Golden: e1397ac2, Netlist: xxxxxxxx, Time: 88300 ns
dout mismatch. Golden: da899cb5, Netlist: xxxxxxxx, Time: 88340 ns
dout mismatch. Golden: da899cb5, Netlist: xxxxxxxx, Time: 88360 ns
dout mismatch. Golden: ecff24d9, Netlist: xxxxxxxx, Time: 88420 ns
dout mismatch. Golden: b65f1c6c, Netlist: xxxxxxxx, Time: 88540 ns
dout mismatch. Golden: dc61e2b8, Netlist: xxxxxxxx, Time: 88580 ns
dout mismatch. Golden: dc61e2b8, Netlist: xxxxxxxx, Time: 88600 ns
dout mismatch. Golden: dc61e2b8, Netlist: xxxxxxxx, Time: 88620 ns
dout mismatch. Golden: b64ae66c, Netlist: xxxxxxxx, Time: 88660 ns
dout mismatch. Golden: b64ae66c, Netlist: xxxxxxxx, Time: 88680 ns
dout mismatch. Golden: ccea8299, Netlist: xxxxxxxx, Time: 88720 ns
dout mismatch. Golden: 2a665f54, Netlist: xxxxxxxx, Time: 88760 ns
dout mismatch. Golden: 2a665f54, Netlist: xxxxxxxx, Time: 88780 ns
dout mismatch. Golden: 2a665f54, Netlist: xxxxxxxx, Time: 88800 ns
dout mismatch. Golden: 2a665f54, Netlist: xxxxxxxx, Time: 88820 ns
dout mismatch. Golden: 2a665f54, Netlist: xxxxxxxx, Time: 88840 ns
dout mismatch. Golden: bc944679, Netlist: xxxxxxxx, Time: 88880 ns
dout mismatch. Golden: d09690a1, Netlist: xxxxxxxx, Time: 88940 ns
dout mismatch. Golden: d09690a1, Netlist: xxxxxxxx, Time: 88960 ns
dout mismatch. Golden: 240f3d48, Netlist: xxxxxxxx, Time: 89000 ns
dout mismatch. Golden: 240f3d48, Netlist: xxxxxxxx, Time: 89020 ns
dout mismatch. Golden: 7ba55ff7, Netlist: xxxxxxxx, Time: 89080 ns
dout mismatch. Golden: 7ba55ff7, Netlist: xxxxxxxx, Time: 89100 ns
dout mismatch. Golden: 7ba55ff7, Netlist: xxxxxxxx, Time: 89120 ns
dout mismatch. Golden: fbced2f7, Netlist: xxxxxxxx, Time: 89160 ns
dout mismatch. Golden: bf22917, Netlist: xxxxxxxx, Time: 89220 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 89260 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 89280 ns
dout mismatch. Golden: 7a4c4df4, Netlist: xxxxxxxx, Time: 89340 ns
dout mismatch. Golden: fa8304f5, Netlist: xxxxxxxx, Time: 89380 ns
dout mismatch. Golden: abe8c057, Netlist: xxxxxxxx, Time: 89420 ns
dout mismatch. Golden: abe8c057, Netlist: xxxxxxxx, Time: 89440 ns
dout mismatch. Golden: abe8c057, Netlist: xxxxxxxx, Time: 89460 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 89500 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 89520 ns
dout mismatch. Golden: 82489004, Netlist: xxxxxxxx, Time: 89600 ns
dout mismatch. Golden: 82489004, Netlist: xxxxxxxx, Time: 89620 ns
dout mismatch. Golden: 82489004, Netlist: xxxxxxxx, Time: 89640 ns
dout mismatch. Golden: 82489004, Netlist: xxxxxxxx, Time: 89660 ns
dout mismatch. Golden: 82489004, Netlist: xxxxxxxx, Time: 89680 ns
dout mismatch. Golden: 82489004, Netlist: xxxxxxxx, Time: 89700 ns
dout mismatch. Golden: 82489004, Netlist: xxxxxxxx, Time: 89720 ns
dout mismatch. Golden: 82489004, Netlist: xxxxxxxx, Time: 89740 ns
dout mismatch. Golden: 82489004, Netlist: xxxxxxxx, Time: 89760 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 89860 ns
dout mismatch. Golden: d5bc48ab, Netlist: xxxxxxxx, Time: 89900 ns
dout mismatch. Golden: d5bc48ab, Netlist: xxxxxxxx, Time: 89920 ns
dout mismatch. Golden: d5bc48ab, Netlist: xxxxxxxx, Time: 89940 ns
dout mismatch. Golden: b5c5c06b, Netlist: xxxxxxxx, Time: 90020 ns
dout mismatch. Golden: 8a205c14, Netlist: xxxxxxxx, Time: 90080 ns
dout mismatch. Golden: 8a205c14, Netlist: xxxxxxxx, Time: 90100 ns
dout mismatch. Golden: 8a205c14, Netlist: xxxxxxxx, Time: 90120 ns
dout mismatch. Golden: 833a6206, Netlist: xxxxxxxx, Time: 90220 ns
dout mismatch. Golden: 8dd5bc1b, Netlist: xxxxxxxx, Time: 90300 ns
dout mismatch. Golden: e70a62ce, Netlist: xxxxxxxx, Time: 90340 ns
dout mismatch. Golden: a72c0e4e, Netlist: xxxxxxxx, Time: 90380 ns
dout mismatch. Golden: d22472a4, Netlist: xxxxxxxx, Time: 90460 ns
dout mismatch. Golden: d22472a4, Netlist: xxxxxxxx, Time: 90480 ns
dout mismatch. Golden: d43276a8, Netlist: xxxxxxxx, Time: 90560 ns
dout mismatch. Golden: 3a70ef74, Netlist: xxxxxxxx, Time: 90620 ns
dout mismatch. Golden: 1fdfe53f, Netlist: xxxxxxxx, Time: 90660 ns
dout mismatch. Golden: f7298cee, Netlist: xxxxxxxx, Time: 90740 ns
dout mismatch. Golden: 240f3d48, Netlist: xxxxxxxx, Time: 90780 ns
dout mismatch. Golden: fe75fefc, Netlist: xxxxxxxx, Time: 90820 ns
dout mismatch. Golden: fe75fefc, Netlist: xxxxxxxx, Time: 90840 ns
dout mismatch. Golden: 1f77b73e, Netlist: xxxxxxxx, Time: 90880 ns
dout mismatch. Golden: 45b23d8b, Netlist: xxxxxxxx, Time: 90920 ns
dout mismatch. Golden: 45b23d8b, Netlist: xxxxxxxx, Time: 90940 ns
dout mismatch. Golden: 6b834dd7, Netlist: xxxxxxxx, Time: 90980 ns
dout mismatch. Golden: 64612dc8, Netlist: xxxxxxxx, Time: 91020 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 91080 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 91100 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 91140 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 91160 ns
dout mismatch. Golden: 5abc1db5, Netlist: xxxxxxxx, Time: 91200 ns
dout mismatch. Golden: 5abc1db5, Netlist: xxxxxxxx, Time: 91220 ns
dout mismatch. Golden: 5abc1db5, Netlist: xxxxxxxx, Time: 91240 ns
dout mismatch. Golden: f80e5ef0, Netlist: xxxxxxxx, Time: 91300 ns
dout mismatch. Golden: d897f4b1, Netlist: xxxxxxxx, Time: 91340 ns
dout mismatch. Golden: 75f5b9eb, Netlist: xxxxxxxx, Time: 91400 ns
dout mismatch. Golden: d6095aac, Netlist: xxxxxxxx, Time: 91460 ns
dout mismatch. Golden: 6b834dd7, Netlist: xxxxxxxx, Time: 91560 ns
dout mismatch. Golden: 6b834dd7, Netlist: xxxxxxxx, Time: 91580 ns
dout mismatch. Golden: aee0765d, Netlist: xxxxxxxx, Time: 91620 ns
dout mismatch. Golden: aee0765d, Netlist: xxxxxxxx, Time: 91640 ns
dout mismatch. Golden: 6e2e59dc, Netlist: xxxxxxxx, Time: 91680 ns
dout mismatch. Golden: 67b4c1cf, Netlist: xxxxxxxx, Time: 91720 ns
dout mismatch. Golden: 9abc7835, Netlist: xxxxxxxx, Time: 91800 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 91840 ns
dout mismatch. Golden: f27102e4, Netlist: xxxxxxxx, Time: 91880 ns
dout mismatch. Golden: f27102e4, Netlist: xxxxxxxx, Time: 91900 ns
dout mismatch. Golden: 1d64753a, Netlist: xxxxxxxx, Time: 91940 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 91980 ns
dout mismatch. Golden: 3f3e077e, Netlist: xxxxxxxx, Time: 92040 ns
dout mismatch. Golden: 4aec3595, Netlist: xxxxxxxx, Time: 92080 ns
dout mismatch. Golden: 4aec3595, Netlist: xxxxxxxx, Time: 92100 ns
dout mismatch. Golden: 1699502, Netlist: xxxxxxxx, Time: 92180 ns
dout mismatch. Golden: 2b0da556, Netlist: xxxxxxxx, Time: 92300 ns
dout mismatch. Golden: 2b0da556, Netlist: xxxxxxxx, Time: 92320 ns
dout mismatch. Golden: 2b0da556, Netlist: xxxxxxxx, Time: 92340 ns
dout mismatch. Golden: efc5c0df, Netlist: xxxxxxxx, Time: 92440 ns
dout mismatch. Golden: 59ef51b3, Netlist: xxxxxxxx, Time: 92480 ns
dout mismatch. Golden: 59ef51b3, Netlist: xxxxxxxx, Time: 92500 ns
dout mismatch. Golden: 19cfeb33, Netlist: xxxxxxxx, Time: 92560 ns
dout mismatch. Golden: 5f90c3bf, Netlist: xxxxxxxx, Time: 92640 ns
dout mismatch. Golden: eb78e0d6, Netlist: xxxxxxxx, Time: 92680 ns
dout mismatch. Golden: eb78e0d6, Netlist: xxxxxxxx, Time: 92700 ns
dout mismatch. Golden: eb78e0d6, Netlist: xxxxxxxx, Time: 92720 ns
dout mismatch. Golden: 7f4ce1fe, Netlist: xxxxxxxx, Time: 92760 ns
dout mismatch. Golden: 7f4ce1fe, Netlist: xxxxxxxx, Time: 92780 ns
dout mismatch. Golden: a62c344c, Netlist: xxxxxxxx, Time: 92820 ns
dout mismatch. Golden: a62c344c, Netlist: xxxxxxxx, Time: 92840 ns
dout mismatch. Golden: a62c344c, Netlist: xxxxxxxx, Time: 92860 ns
dout mismatch. Golden: a62c344c, Netlist: xxxxxxxx, Time: 92880 ns
dout mismatch. Golden: a62c344c, Netlist: xxxxxxxx, Time: 92900 ns
dout mismatch. Golden: a62c344c, Netlist: xxxxxxxx, Time: 92920 ns
dout mismatch. Golden: 33bc2167, Netlist: xxxxxxxx, Time: 93000 ns
dout mismatch. Golden: 4f14c19e, Netlist: xxxxxxxx, Time: 93040 ns
dout mismatch. Golden: 7ba55ff7, Netlist: xxxxxxxx, Time: 93100 ns
dout mismatch. Golden: 7ba55ff7, Netlist: xxxxxxxx, Time: 93120 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 93180 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 93200 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 93220 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 93240 ns
dout mismatch. Golden: 42249784, Netlist: xxxxxxxx, Time: 93280 ns
dout mismatch. Golden: 42249784, Netlist: xxxxxxxx, Time: 93300 ns
dout mismatch. Golden: b2cf5665, Netlist: xxxxxxxx, Time: 93340 ns
dout mismatch. Golden: b2cf5665, Netlist: xxxxxxxx, Time: 93360 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 93400 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 93420 ns
dout mismatch. Golden: 5136a5a2, Netlist: xxxxxxxx, Time: 93520 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 93620 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 93640 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 93660 ns
dout mismatch. Golden: b2de5c65, Netlist: xxxxxxxx, Time: 93700 ns
dout mismatch. Golden: f1d758e3, Netlist: xxxxxxxx, Time: 93740 ns
dout mismatch. Golden: 77b957ef, Netlist: xxxxxxxx, Time: 93820 ns
dout mismatch. Golden: 77b957ef, Netlist: xxxxxxxx, Time: 93840 ns
dout mismatch. Golden: 77b957ef, Netlist: xxxxxxxx, Time: 93860 ns
dout mismatch. Golden: 788fb1f1, Netlist: xxxxxxxx, Time: 93940 ns
dout mismatch. Golden: 99586632, Netlist: xxxxxxxx, Time: 93980 ns
dout mismatch. Golden: 99586632, Netlist: xxxxxxxx, Time: 94000 ns
dout mismatch. Golden: 99586632, Netlist: xxxxxxxx, Time: 94020 ns
dout mismatch. Golden: 26afad4d, Netlist: xxxxxxxx, Time: 94080 ns
dout mismatch. Golden: 26afad4d, Netlist: xxxxxxxx, Time: 94100 ns
dout mismatch. Golden: 4cf1d799, Netlist: xxxxxxxx, Time: 94140 ns
dout mismatch. Golden: 4e156f9c, Netlist: xxxxxxxx, Time: 94220 ns
dout mismatch. Golden: 4e156f9c, Netlist: xxxxxxxx, Time: 94240 ns
dout mismatch. Golden: 4e156f9c, Netlist: xxxxxxxx, Time: 94260 ns
dout mismatch. Golden: 9524102a, Netlist: xxxxxxxx, Time: 94320 ns
dout mismatch. Golden: 9524102a, Netlist: xxxxxxxx, Time: 94340 ns
dout mismatch. Golden: bf22917, Netlist: xxxxxxxx, Time: 94460 ns
dout mismatch. Golden: 2730c74e, Netlist: xxxxxxxx, Time: 94500 ns
dout mismatch. Golden: 67dd53cf, Netlist: xxxxxxxx, Time: 94540 ns
dout mismatch. Golden: e07c5ec0, Netlist: xxxxxxxx, Time: 94580 ns
dout mismatch. Golden: e07c5ec0, Netlist: xxxxxxxx, Time: 94600 ns
dout mismatch. Golden: e07c5ec0, Netlist: xxxxxxxx, Time: 94620 ns
dout mismatch. Golden: e07c5ec0, Netlist: xxxxxxxx, Time: 94640 ns
dout mismatch. Golden: e07c5ec0, Netlist: xxxxxxxx, Time: 94660 ns
dout mismatch. Golden: dc16d8b8, Netlist: xxxxxxxx, Time: 94720 ns
dout mismatch. Golden: 68cd09d1, Netlist: xxxxxxxx, Time: 94780 ns
dout mismatch. Golden: 68cd09d1, Netlist: xxxxxxxx, Time: 94800 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 94920 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 94940 ns
dout mismatch. Golden: 90667620, Netlist: xxxxxxxx, Time: 94980 ns
dout mismatch. Golden: 90667620, Netlist: xxxxxxxx, Time: 95000 ns
dout mismatch. Golden: 99474432, Netlist: xxxxxxxx, Time: 95040 ns
dout mismatch. Golden: 99474432, Netlist: xxxxxxxx, Time: 95060 ns
dout mismatch. Golden: bcbbb079, Netlist: xxxxxxxx, Time: 95120 ns
dout mismatch. Golden: bcbbb079, Netlist: xxxxxxxx, Time: 95140 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 95180 ns
dout mismatch. Golden: c6adf48d, Netlist: xxxxxxxx, Time: 95220 ns
dout mismatch. Golden: c6adf48d, Netlist: xxxxxxxx, Time: 95240 ns
dout mismatch. Golden: c6adf48d, Netlist: xxxxxxxx, Time: 95260 ns
dout mismatch. Golden: 77b957ef, Netlist: xxxxxxxx, Time: 95300 ns
dout mismatch. Golden: 77b957ef, Netlist: xxxxxxxx, Time: 95320 ns
dout mismatch. Golden: 9dfe943b, Netlist: xxxxxxxx, Time: 95360 ns
dout mismatch. Golden: 9dfe943b, Netlist: xxxxxxxx, Time: 95380 ns
dout mismatch. Golden: 9dfe943b, Netlist: xxxxxxxx, Time: 95400 ns
dout mismatch. Golden: 9dfe943b, Netlist: xxxxxxxx, Time: 95420 ns
dout mismatch. Golden: 9dfe943b, Netlist: xxxxxxxx, Time: 95440 ns
dout mismatch. Golden: 39e2d773, Netlist: xxxxxxxx, Time: 95480 ns
dout mismatch. Golden: 39e2d773, Netlist: xxxxxxxx, Time: 95500 ns
dout mismatch. Golden: d21642a4, Netlist: xxxxxxxx, Time: 95620 ns
dout mismatch. Golden: d21642a4, Netlist: xxxxxxxx, Time: 95640 ns
dout mismatch. Golden: d21642a4, Netlist: xxxxxxxx, Time: 95660 ns
dout mismatch. Golden: d21642a4, Netlist: xxxxxxxx, Time: 95680 ns
dout mismatch. Golden: d21642a4, Netlist: xxxxxxxx, Time: 95700 ns
dout mismatch. Golden: eb78e0d6, Netlist: xxxxxxxx, Time: 95760 ns
dout mismatch. Golden: eb78e0d6, Netlist: xxxxxxxx, Time: 95780 ns
dout mismatch. Golden: 42a09785, Netlist: xxxxxxxx, Time: 95840 ns
dout mismatch. Golden: 42a09785, Netlist: xxxxxxxx, Time: 95860 ns
dout mismatch. Golden: be43e87c, Netlist: xxxxxxxx, Time: 95900 ns
dout mismatch. Golden: be43e87c, Netlist: xxxxxxxx, Time: 95920 ns
dout mismatch. Golden: 8550020a, Netlist: xxxxxxxx, Time: 95980 ns
dout mismatch. Golden: eef5d1d, Netlist: xxxxxxxx, Time: 96020 ns
dout mismatch. Golden: eef5d1d, Netlist: xxxxxxxx, Time: 96040 ns
dout mismatch. Golden: 878a880f, Netlist: xxxxxxxx, Time: 96120 ns
dout mismatch. Golden: 76e9dfed, Netlist: xxxxxxxx, Time: 96160 ns
dout mismatch. Golden: 9bb03e37, Netlist: xxxxxxxx, Time: 96200 ns
dout mismatch. Golden: 9bb03e37, Netlist: xxxxxxxx, Time: 96220 ns
dout mismatch. Golden: 4e156f9c, Netlist: xxxxxxxx, Time: 96260 ns
dout mismatch. Golden: 4e156f9c, Netlist: xxxxxxxx, Time: 96280 ns
dout mismatch. Golden: 5abc1db5, Netlist: xxxxxxxx, Time: 96320 ns
dout mismatch. Golden: 5abc1db5, Netlist: xxxxxxxx, Time: 96340 ns
dout mismatch. Golden: 92a8cc25, Netlist: xxxxxxxx, Time: 96400 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 96480 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 96500 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 96520 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 96540 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 96560 ns
dout mismatch. Golden: c3fb4c87, Netlist: xxxxxxxx, Time: 96620 ns
dout mismatch. Golden: c3fb4c87, Netlist: xxxxxxxx, Time: 96640 ns
dout mismatch. Golden: c3fb4c87, Netlist: xxxxxxxx, Time: 96660 ns
dout mismatch. Golden: 76e9dfed, Netlist: xxxxxxxx, Time: 96700 ns
dout mismatch. Golden: b6b5506d, Netlist: xxxxxxxx, Time: 96740 ns
dout mismatch. Golden: 5abc1db5, Netlist: xxxxxxxx, Time: 96780 ns
dout mismatch. Golden: 5abc1db5, Netlist: xxxxxxxx, Time: 96800 ns
dout mismatch. Golden: 5abc1db5, Netlist: xxxxxxxx, Time: 96820 ns
dout mismatch. Golden: ba8bac75, Netlist: xxxxxxxx, Time: 96880 ns
dout mismatch. Golden: ba8bac75, Netlist: xxxxxxxx, Time: 96900 ns
dout mismatch. Golden: ba8bac75, Netlist: xxxxxxxx, Time: 96920 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 96960 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 96980 ns
dout mismatch. Golden: 286cff50, Netlist: xxxxxxxx, Time: 97060 ns
dout mismatch. Golden: 286cff50, Netlist: xxxxxxxx, Time: 97080 ns
dout mismatch. Golden: 286cff50, Netlist: xxxxxxxx, Time: 97100 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 97140 ns
dout mismatch. Golden: 6dfcf1db, Netlist: xxxxxxxx, Time: 97180 ns
dout mismatch. Golden: 63b805c7, Netlist: xxxxxxxx, Time: 97280 ns
dout mismatch. Golden: 1699502, Netlist: xxxxxxxx, Time: 97360 ns
dout mismatch. Golden: 1699502, Netlist: xxxxxxxx, Time: 97380 ns
dout mismatch. Golden: 1699502, Netlist: xxxxxxxx, Time: 97400 ns
dout mismatch. Golden: 60fd93c1, Netlist: xxxxxxxx, Time: 97440 ns
dout mismatch. Golden: 60fd93c1, Netlist: xxxxxxxx, Time: 97460 ns
dout mismatch. Golden: 9bf8b437, Netlist: xxxxxxxx, Time: 97500 ns
dout mismatch. Golden: cb87ba97, Netlist: xxxxxxxx, Time: 97540 ns
dout mismatch. Golden: cb87ba97, Netlist: xxxxxxxx, Time: 97560 ns
dout mismatch. Golden: 7be417f7, Netlist: xxxxxxxx, Time: 97620 ns
dout mismatch. Golden: 7be417f7, Netlist: xxxxxxxx, Time: 97640 ns
dout mismatch. Golden: 7be417f7, Netlist: xxxxxxxx, Time: 97660 ns
dout mismatch. Golden: 7254d3e4, Netlist: xxxxxxxx, Time: 97720 ns
dout mismatch. Golden: 3eee637d, Netlist: xxxxxxxx, Time: 97800 ns
dout mismatch. Golden: 3eee637d, Netlist: xxxxxxxx, Time: 97820 ns
dout mismatch. Golden: 47e50f8f, Netlist: xxxxxxxx, Time: 97860 ns
dout mismatch. Golden: 105e5d20, Netlist: xxxxxxxx, Time: 97920 ns
dout mismatch. Golden: 640885c8, Netlist: xxxxxxxx, Time: 97960 ns
dout mismatch. Golden: 3b308b76, Netlist: xxxxxxxx, Time: 98020 ns
dout mismatch. Golden: 3b308b76, Netlist: xxxxxxxx, Time: 98040 ns
dout mismatch. Golden: 3f274b7e, Netlist: xxxxxxxx, Time: 98160 ns
dout mismatch. Golden: 453ad08, Netlist: xxxxxxxx, Time: 98200 ns
dout mismatch. Golden: 453ad08, Netlist: xxxxxxxx, Time: 98220 ns
dout mismatch. Golden: 453ad08, Netlist: xxxxxxxx, Time: 98240 ns
dout mismatch. Golden: 453ad08, Netlist: xxxxxxxx, Time: 98260 ns
dout mismatch. Golden: e256d0c4, Netlist: xxxxxxxx, Time: 98300 ns
dout mismatch. Golden: e256d0c4, Netlist: xxxxxxxx, Time: 98320 ns
dout mismatch. Golden: 33bc2167, Netlist: xxxxxxxx, Time: 98400 ns
dout mismatch. Golden: ef6e91d, Netlist: xxxxxxxx, Time: 98480 ns
dout mismatch. Golden: bfdde87f, Netlist: xxxxxxxx, Time: 98600 ns
dout mismatch. Golden: bfdde87f, Netlist: xxxxxxxx, Time: 98620 ns
dout mismatch. Golden: 5053dba0, Netlist: xxxxxxxx, Time: 98720 ns
dout mismatch. Golden: 5053dba0, Netlist: xxxxxxxx, Time: 98740 ns
dout mismatch. Golden: 5053dba0, Netlist: xxxxxxxx, Time: 98760 ns
dout mismatch. Golden: a767de4e, Netlist: xxxxxxxx, Time: 98860 ns
dout mismatch. Golden: 4e156f9c, Netlist: xxxxxxxx, Time: 98920 ns
dout mismatch. Golden: 4e156f9c, Netlist: xxxxxxxx, Time: 98940 ns
dout mismatch. Golden: 67962fcf, Netlist: xxxxxxxx, Time: 98980 ns
dout mismatch. Golden: e16ac4c2, Netlist: xxxxxxxx, Time: 99020 ns
dout mismatch. Golden: e16ac4c2, Netlist: xxxxxxxx, Time: 99040 ns
dout mismatch. Golden: e16ac4c2, Netlist: xxxxxxxx, Time: 99060 ns
dout mismatch. Golden: e16ac4c2, Netlist: xxxxxxxx, Time: 99080 ns
dout mismatch. Golden: e16ac4c2, Netlist: xxxxxxxx, Time: 99100 ns
dout mismatch. Golden: 93f56c27, Netlist: xxxxxxxx, Time: 99160 ns
dout mismatch. Golden: 4f14c19e, Netlist: xxxxxxxx, Time: 99200 ns
dout mismatch. Golden: 4f14c19e, Netlist: xxxxxxxx, Time: 99220 ns
dout mismatch. Golden: 99e45833, Netlist: xxxxxxxx, Time: 99280 ns
dout mismatch. Golden: 99e45833, Netlist: xxxxxxxx, Time: 99300 ns
dout mismatch. Golden: da3c32b4, Netlist: xxxxxxxx, Time: 99340 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 99440 ns
dout mismatch. Golden: 2eafd95d, Netlist: xxxxxxxx, Time: 99500 ns
dout mismatch. Golden: 2eafd95d, Netlist: xxxxxxxx, Time: 99520 ns
dout mismatch. Golden: 9abc7835, Netlist: xxxxxxxx, Time: 99580 ns
dout mismatch. Golden: 9abc7835, Netlist: xxxxxxxx, Time: 99600 ns
dout mismatch. Golden: 600b2dc0, Netlist: xxxxxxxx, Time: 99640 ns
dout mismatch. Golden: 89349412, Netlist: xxxxxxxx, Time: 99680 ns
dout mismatch. Golden: 600b2dc0, Netlist: xxxxxxxx, Time: 99740 ns
dout mismatch. Golden: 600b2dc0, Netlist: xxxxxxxx, Time: 99760 ns
dout mismatch. Golden: d01b58a0, Netlist: xxxxxxxx, Time: 99800 ns
dout mismatch. Golden: 6ca7ffd9, Netlist: xxxxxxxx, Time: 99860 ns
dout mismatch. Golden: af5d6c5e, Netlist: xxxxxxxx, Time: 99900 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 100060 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 100080 ns
dout mismatch. Golden: 86d26e0d, Netlist: xxxxxxxx, Time: 100140 ns
dout mismatch. Golden: 11c91123, Netlist: xxxxxxxx, Time: 100200 ns
dout mismatch. Golden: 11c91123, Netlist: xxxxxxxx, Time: 100220 ns
dout mismatch. Golden: 878a880f, Netlist: xxxxxxxx, Time: 100300 ns
dout mismatch. Golden: 878a880f, Netlist: xxxxxxxx, Time: 100320 ns
dout mismatch. Golden: 6d18e1da, Netlist: xxxxxxxx, Time: 100360 ns
dout mismatch. Golden: 62c963c5, Netlist: xxxxxxxx, Time: 100420 ns
dout mismatch. Golden: 374e1d6e, Netlist: xxxxxxxx, Time: 100480 ns
dout mismatch. Golden: 17fe9f2f, Netlist: xxxxxxxx, Time: 100540 ns
dout mismatch. Golden: e23090c4, Netlist: xxxxxxxx, Time: 100640 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 100680 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 100700 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 100720 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 100760 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 100780 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 100800 ns
dout mismatch. Golden: 7a4c4df4, Netlist: xxxxxxxx, Time: 100860 ns
dout mismatch. Golden: 7a4c4df4, Netlist: xxxxxxxx, Time: 100880 ns
dout mismatch. Golden: 6815d9d0, Netlist: xxxxxxxx, Time: 100920 ns
dout mismatch. Golden: 6815d9d0, Netlist: xxxxxxxx, Time: 100940 ns
dout mismatch. Golden: 6815d9d0, Netlist: xxxxxxxx, Time: 100960 ns
dout mismatch. Golden: 6815d9d0, Netlist: xxxxxxxx, Time: 100980 ns
dout mismatch. Golden: 2590394b, Netlist: xxxxxxxx, Time: 101080 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 101120 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 101140 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 101160 ns
dout mismatch. Golden: bd823a7b, Netlist: xxxxxxxx, Time: 101220 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 101260 ns
dout mismatch. Golden: 2b0da556, Netlist: xxxxxxxx, Time: 101360 ns
dout mismatch. Golden: f27102e4, Netlist: xxxxxxxx, Time: 101400 ns
dout mismatch. Golden: f27102e4, Netlist: xxxxxxxx, Time: 101420 ns
dout mismatch. Golden: f27102e4, Netlist: xxxxxxxx, Time: 101440 ns
dout mismatch. Golden: f27102e4, Netlist: xxxxxxxx, Time: 101460 ns
dout mismatch. Golden: f27102e4, Netlist: xxxxxxxx, Time: 101480 ns
dout mismatch. Golden: f27102e4, Netlist: xxxxxxxx, Time: 101500 ns
dout mismatch. Golden: 7eddcdfd, Netlist: xxxxxxxx, Time: 101540 ns
dout mismatch. Golden: 7eddcdfd, Netlist: xxxxxxxx, Time: 101560 ns
dout mismatch. Golden: 7eddcdfd, Netlist: xxxxxxxx, Time: 101580 ns
dout mismatch. Golden: 7eddcdfd, Netlist: xxxxxxxx, Time: 101600 ns
dout mismatch. Golden: 7eddcdfd, Netlist: xxxxxxxx, Time: 101620 ns
dout mismatch. Golden: 7eddcdfd, Netlist: xxxxxxxx, Time: 101640 ns
dout mismatch. Golden: b2cf5665, Netlist: xxxxxxxx, Time: 101680 ns
dout mismatch. Golden: 294c2b52, Netlist: xxxxxxxx, Time: 101780 ns
dout mismatch. Golden: 294c2b52, Netlist: xxxxxxxx, Time: 101800 ns
dout mismatch. Golden: e466e6c8, Netlist: xxxxxxxx, Time: 101860 ns
dout mismatch. Golden: d143eaa2, Netlist: xxxxxxxx, Time: 101960 ns
dout mismatch. Golden: 2ba6b157, Netlist: xxxxxxxx, Time: 102000 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 102080 ns
dout mismatch. Golden: 1608ab2c, Netlist: xxxxxxxx, Time: 102160 ns
dout mismatch. Golden: 1608ab2c, Netlist: xxxxxxxx, Time: 102180 ns
dout mismatch. Golden: 1608ab2c, Netlist: xxxxxxxx, Time: 102200 ns
dout mismatch. Golden: 1608ab2c, Netlist: xxxxxxxx, Time: 102220 ns
dout mismatch. Golden: 1608ab2c, Netlist: xxxxxxxx, Time: 102240 ns
dout mismatch. Golden: 1608ab2c, Netlist: xxxxxxxx, Time: 102260 ns
dout mismatch. Golden: 3b308b76, Netlist: xxxxxxxx, Time: 102300 ns
dout mismatch. Golden: 1e46693c, Netlist: xxxxxxxx, Time: 102340 ns
dout mismatch. Golden: 4b5a7f96, Netlist: xxxxxxxx, Time: 102380 ns
dout mismatch. Golden: 4b5a7f96, Netlist: xxxxxxxx, Time: 102400 ns
dout mismatch. Golden: 4b5a7f96, Netlist: xxxxxxxx, Time: 102420 ns
dout mismatch. Golden: 4b5a7f96, Netlist: xxxxxxxx, Time: 102440 ns
dout mismatch. Golden: 4b5a7f96, Netlist: xxxxxxxx, Time: 102460 ns
dout mismatch. Golden: 7352a7e6, Netlist: xxxxxxxx, Time: 102500 ns
dout mismatch. Golden: 48129190, Netlist: xxxxxxxx, Time: 102560 ns
dout mismatch. Golden: 48129190, Netlist: xxxxxxxx, Time: 102580 ns
dout mismatch. Golden: 48129190, Netlist: xxxxxxxx, Time: 102600 ns
dout mismatch. Golden: 6e8430d, Netlist: xxxxxxxx, Time: 102700 ns
dout mismatch. Golden: 6e8430d, Netlist: xxxxxxxx, Time: 102720 ns
dout mismatch. Golden: 6e8430d, Netlist: xxxxxxxx, Time: 102740 ns
dout mismatch. Golden: 6e8430d, Netlist: xxxxxxxx, Time: 102760 ns
dout mismatch. Golden: 6b0e30d, Netlist: xxxxxxxx, Time: 102800 ns
dout mismatch. Golden: 6b0e30d, Netlist: xxxxxxxx, Time: 102820 ns
dout mismatch. Golden: 6b0e30d, Netlist: xxxxxxxx, Time: 102840 ns
dout mismatch. Golden: 2782874f, Netlist: xxxxxxxx, Time: 102880 ns
dout mismatch. Golden: 83a4fa07, Netlist: xxxxxxxx, Time: 102940 ns
dout mismatch. Golden: 83a4fa07, Netlist: xxxxxxxx, Time: 102960 ns
dout mismatch. Golden: ef1deade, Netlist: xxxxxxxx, Time: 103000 ns
dout mismatch. Golden: ef1deade, Netlist: xxxxxxxx, Time: 103020 ns
dout mismatch. Golden: ef1deade, Netlist: xxxxxxxx, Time: 103040 ns
dout mismatch. Golden: 4f75ff9e, Netlist: xxxxxxxx, Time: 103100 ns
dout mismatch. Golden: 4f75ff9e, Netlist: xxxxxxxx, Time: 103120 ns
dout mismatch. Golden: f8dc48f1, Netlist: xxxxxxxx, Time: 103180 ns
dout mismatch. Golden: f8dc48f1, Netlist: xxxxxxxx, Time: 103200 ns
dout mismatch. Golden: b5add16, Netlist: xxxxxxxx, Time: 103340 ns
dout mismatch. Golden: 927f0024, Netlist: xxxxxxxx, Time: 103380 ns
dout mismatch. Golden: 927f0024, Netlist: xxxxxxxx, Time: 103400 ns
dout mismatch. Golden: 3f25ef7e, Netlist: xxxxxxxx, Time: 103440 ns
dout mismatch. Golden: 34771368, Netlist: xxxxxxxx, Time: 103520 ns
dout mismatch. Golden: 34771368, Netlist: xxxxxxxx, Time: 103540 ns
dout mismatch. Golden: 9535122a, Netlist: xxxxxxxx, Time: 103580 ns
dout mismatch. Golden: 9535122a, Netlist: xxxxxxxx, Time: 103600 ns
dout mismatch. Golden: 929d5825, Netlist: xxxxxxxx, Time: 103640 ns
dout mismatch. Golden: 929d5825, Netlist: xxxxxxxx, Time: 103660 ns
dout mismatch. Golden: 955e002a, Netlist: xxxxxxxx, Time: 103700 ns
dout mismatch. Golden: 955e002a, Netlist: xxxxxxxx, Time: 103720 ns
dout mismatch. Golden: bad53275, Netlist: xxxxxxxx, Time: 103800 ns
dout mismatch. Golden: 1ae40335, Netlist: xxxxxxxx, Time: 103860 ns
dout mismatch. Golden: 1ae40335, Netlist: xxxxxxxx, Time: 103880 ns
dout mismatch. Golden: 1ae40335, Netlist: xxxxxxxx, Time: 103900 ns
dout mismatch. Golden: 18285130, Netlist: xxxxxxxx, Time: 104020 ns
dout mismatch. Golden: 9d74763a, Netlist: xxxxxxxx, Time: 104060 ns
dout mismatch. Golden: 1b042136, Netlist: xxxxxxxx, Time: 104140 ns
dout mismatch. Golden: 1b042136, Netlist: xxxxxxxx, Time: 104160 ns
dout mismatch. Golden: 1ae40335, Netlist: xxxxxxxx, Time: 104200 ns
dout mismatch. Golden: 1ae40335, Netlist: xxxxxxxx, Time: 104220 ns
dout mismatch. Golden: 1c893939, Netlist: xxxxxxxx, Time: 104260 ns
dout mismatch. Golden: 1c893939, Netlist: xxxxxxxx, Time: 104280 ns
dout mismatch. Golden: 3e9b707, Netlist: xxxxxxxx, Time: 104320 ns
dout mismatch. Golden: 3e9b707, Netlist: xxxxxxxx, Time: 104340 ns
dout mismatch. Golden: 8d86e21b, Netlist: xxxxxxxx, Time: 104380 ns
dout mismatch. Golden: 8d86e21b, Netlist: xxxxxxxx, Time: 104400 ns
dout mismatch. Golden: 3dde5f7b, Netlist: xxxxxxxx, Time: 104440 ns
dout mismatch. Golden: 3dde5f7b, Netlist: xxxxxxxx, Time: 104460 ns
dout mismatch. Golden: 3dde5f7b, Netlist: xxxxxxxx, Time: 104480 ns
dout mismatch. Golden: 3dde5f7b, Netlist: xxxxxxxx, Time: 104500 ns
dout mismatch. Golden: 3dde5f7b, Netlist: xxxxxxxx, Time: 104520 ns
dout mismatch. Golden: 3dde5f7b, Netlist: xxxxxxxx, Time: 104540 ns
dout mismatch. Golden: 2dcbe75b, Netlist: xxxxxxxx, Time: 104580 ns
dout mismatch. Golden: 39fbcf73, Netlist: xxxxxxxx, Time: 104620 ns
dout mismatch. Golden: 39fbcf73, Netlist: xxxxxxxx, Time: 104640 ns
dout mismatch. Golden: a663624c, Netlist: xxxxxxxx, Time: 104680 ns
dout mismatch. Golden: 67e857cf, Netlist: xxxxxxxx, Time: 104760 ns
dout mismatch. Golden: 5fe3cbbf, Netlist: xxxxxxxx, Time: 104800 ns
dout mismatch. Golden: a95fc452, Netlist: xxxxxxxx, Time: 104900 ns
dout mismatch. Golden: a95fc452, Netlist: xxxxxxxx, Time: 104920 ns
dout mismatch. Golden: 3c581178, Netlist: xxxxxxxx, Time: 104960 ns
dout mismatch. Golden: 5fe3cbbf, Netlist: xxxxxxxx, Time: 105020 ns
dout mismatch. Golden: 93d2b827, Netlist: xxxxxxxx, Time: 105060 ns
dout mismatch. Golden: 7dfe8ffb, Netlist: xxxxxxxx, Time: 105100 ns
dout mismatch. Golden: c08eba81, Netlist: xxxxxxxx, Time: 105140 ns
dout mismatch. Golden: de7162bc, Netlist: xxxxxxxx, Time: 105200 ns
dout mismatch. Golden: 2076d04, Netlist: xxxxxxxx, Time: 105240 ns
dout mismatch. Golden: e832e6d0, Netlist: xxxxxxxx, Time: 105300 ns
dout mismatch. Golden: e832e6d0, Netlist: xxxxxxxx, Time: 105320 ns
dout mismatch. Golden: e832e6d0, Netlist: xxxxxxxx, Time: 105340 ns
dout mismatch. Golden: d7fdb6af, Netlist: xxxxxxxx, Time: 105420 ns
dout mismatch. Golden: 176cff2e, Netlist: xxxxxxxx, Time: 105460 ns
dout mismatch. Golden: 229d0b45, Netlist: xxxxxxxx, Time: 105580 ns
dout mismatch. Golden: 229d0b45, Netlist: xxxxxxxx, Time: 105600 ns
dout mismatch. Golden: 229d0b45, Netlist: xxxxxxxx, Time: 105620 ns
dout mismatch. Golden: 358b3f6b, Netlist: xxxxxxxx, Time: 105660 ns
dout mismatch. Golden: 358b3f6b, Netlist: xxxxxxxx, Time: 105680 ns
dout mismatch. Golden: 358b3f6b, Netlist: xxxxxxxx, Time: 105700 ns
dout mismatch. Golden: 358b3f6b, Netlist: xxxxxxxx, Time: 105720 ns
dout mismatch. Golden: 3904507, Netlist: xxxxxxxx, Time: 105780 ns
dout mismatch. Golden: 3904507, Netlist: xxxxxxxx, Time: 105800 ns
dout mismatch. Golden: 3904507, Netlist: xxxxxxxx, Time: 105820 ns
dout mismatch. Golden: 3904507, Netlist: xxxxxxxx, Time: 105840 ns
dout mismatch. Golden: cb86b097, Netlist: xxxxxxxx, Time: 105940 ns
dout mismatch. Golden: cb86b097, Netlist: xxxxxxxx, Time: 105960 ns
dout mismatch. Golden: 398a1973, Netlist: xxxxxxxx, Time: 106040 ns
dout mismatch. Golden: 398a1973, Netlist: xxxxxxxx, Time: 106060 ns
dout mismatch. Golden: 398a1973, Netlist: xxxxxxxx, Time: 106080 ns
dout mismatch. Golden: 398a1973, Netlist: xxxxxxxx, Time: 106100 ns
dout mismatch. Golden: 398a1973, Netlist: xxxxxxxx, Time: 106120 ns
dout mismatch. Golden: 398a1973, Netlist: xxxxxxxx, Time: 106140 ns
dout mismatch. Golden: 398a1973, Netlist: xxxxxxxx, Time: 106160 ns
dout mismatch. Golden: b8ea3a71, Netlist: xxxxxxxx, Time: 106220 ns
dout mismatch. Golden: b8ea3a71, Netlist: xxxxxxxx, Time: 106240 ns
dout mismatch. Golden: 89d3b813, Netlist: xxxxxxxx, Time: 106360 ns
dout mismatch. Golden: 229d0b45, Netlist: xxxxxxxx, Time: 106400 ns
dout mismatch. Golden: 229d0b45, Netlist: xxxxxxxx, Time: 106420 ns
dout mismatch. Golden: 229d0b45, Netlist: xxxxxxxx, Time: 106440 ns
dout mismatch. Golden: 3ac26f75, Netlist: xxxxxxxx, Time: 106480 ns
dout mismatch. Golden: 3ac26f75, Netlist: xxxxxxxx, Time: 106500 ns
dout mismatch. Golden: 3ac26f75, Netlist: xxxxxxxx, Time: 106520 ns
dout mismatch. Golden: 3ac26f75, Netlist: xxxxxxxx, Time: 106540 ns
dout mismatch. Golden: 3ac26f75, Netlist: xxxxxxxx, Time: 106560 ns
dout mismatch. Golden: 3ac26f75, Netlist: xxxxxxxx, Time: 106580 ns
dout mismatch. Golden: 3ac26f75, Netlist: xxxxxxxx, Time: 106600 ns
dout mismatch. Golden: 929d5825, Netlist: xxxxxxxx, Time: 106680 ns
dout mismatch. Golden: c76f628e, Netlist: xxxxxxxx, Time: 106720 ns
dout mismatch. Golden: 4316f386, Netlist: xxxxxxxx, Time: 106760 ns
dout mismatch. Golden: 4316f386, Netlist: xxxxxxxx, Time: 106780 ns
dout mismatch. Golden: 4316f386, Netlist: xxxxxxxx, Time: 106800 ns
dout mismatch. Golden: 4316f386, Netlist: xxxxxxxx, Time: 106820 ns
dout mismatch. Golden: d1e644a3, Netlist: xxxxxxxx, Time: 106860 ns
dout mismatch. Golden: d1e644a3, Netlist: xxxxxxxx, Time: 106880 ns
dout mismatch. Golden: 50b473a1, Netlist: xxxxxxxx, Time: 106960 ns
dout mismatch. Golden: 50b473a1, Netlist: xxxxxxxx, Time: 106980 ns
dout mismatch. Golden: 358b3f6b, Netlist: xxxxxxxx, Time: 107020 ns
dout mismatch. Golden: 358b3f6b, Netlist: xxxxxxxx, Time: 107040 ns
dout mismatch. Golden: 2a7b7954, Netlist: xxxxxxxx, Time: 107080 ns
dout mismatch. Golden: 2a7b7954, Netlist: xxxxxxxx, Time: 107100 ns
dout mismatch. Golden: 927f0024, Netlist: xxxxxxxx, Time: 107140 ns
dout mismatch. Golden: 91783222, Netlist: xxxxxxxx, Time: 107240 ns
dout mismatch. Golden: 520eefa4, Netlist: xxxxxxxx, Time: 107280 ns
dout mismatch. Golden: 3a982575, Netlist: xxxxxxxx, Time: 107420 ns
dout mismatch. Golden: 3a982575, Netlist: xxxxxxxx, Time: 107440 ns
dout mismatch. Golden: ffbbeeff, Netlist: xxxxxxxx, Time: 107500 ns
dout mismatch. Golden: ffbbeeff, Netlist: xxxxxxxx, Time: 107520 ns
dout mismatch. Golden: ffbbeeff, Netlist: xxxxxxxx, Time: 107540 ns
dout mismatch. Golden: ffbbeeff, Netlist: xxxxxxxx, Time: 107560 ns
dout mismatch. Golden: ffbbeeff, Netlist: xxxxxxxx, Time: 107580 ns
dout mismatch. Golden: ffbbeeff, Netlist: xxxxxxxx, Time: 107600 ns
dout mismatch. Golden: 1f3a273e, Netlist: xxxxxxxx, Time: 107660 ns
dout mismatch. Golden: 1f3a273e, Netlist: xxxxxxxx, Time: 107680 ns
dout mismatch. Golden: f8dc48f1, Netlist: xxxxxxxx, Time: 107760 ns
dout mismatch. Golden: f8dc48f1, Netlist: xxxxxxxx, Time: 107780 ns
dout mismatch. Golden: fb951af7, Netlist: xxxxxxxx, Time: 107820 ns
dout mismatch. Golden: 73b951e7, Netlist: xxxxxxxx, Time: 107900 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 107940 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 107960 ns
dout mismatch. Golden: 73e500, Netlist: xxxxxxxx, Time: 108000 ns
dout mismatch. Golden: 874ee40e, Netlist: xxxxxxxx, Time: 108040 ns
dout mismatch. Golden: af455e5e, Netlist: xxxxxxxx, Time: 108080 ns
dout mismatch. Golden: af455e5e, Netlist: xxxxxxxx, Time: 108100 ns
dout mismatch. Golden: fb9f1ef7, Netlist: xxxxxxxx, Time: 108180 ns
dout mismatch. Golden: fb9f1ef7, Netlist: xxxxxxxx, Time: 108200 ns
dout mismatch. Golden: fb9f1ef7, Netlist: xxxxxxxx, Time: 108220 ns
dout mismatch. Golden: dc0344b8, Netlist: xxxxxxxx, Time: 108260 ns
dout mismatch. Golden: bbd96677, Netlist: xxxxxxxx, Time: 108300 ns
dout mismatch. Golden: bbd96677, Netlist: xxxxxxxx, Time: 108320 ns
dout mismatch. Golden: bbd96677, Netlist: xxxxxxxx, Time: 108340 ns
dout mismatch. Golden: bbd96677, Netlist: xxxxxxxx, Time: 108360 ns
dout mismatch. Golden: bbd96677, Netlist: xxxxxxxx, Time: 108380 ns
dout mismatch. Golden: 2cee5f59, Netlist: xxxxxxxx, Time: 108440 ns
dout mismatch. Golden: 2cee5f59, Netlist: xxxxxxxx, Time: 108460 ns
dout mismatch. Golden: 2cee5f59, Netlist: xxxxxxxx, Time: 108480 ns
dout mismatch. Golden: 2cee5f59, Netlist: xxxxxxxx, Time: 108500 ns
dout mismatch. Golden: dbe828b7, Netlist: xxxxxxxx, Time: 108540 ns
dout mismatch. Golden: 717d4be2, Netlist: xxxxxxxx, Time: 108580 ns
dout mismatch. Golden: 717d4be2, Netlist: xxxxxxxx, Time: 108600 ns
dout mismatch. Golden: 717d4be2, Netlist: xxxxxxxx, Time: 108620 ns
dout mismatch. Golden: 2a7b7954, Netlist: xxxxxxxx, Time: 108680 ns
dout mismatch. Golden: 2a7b7954, Netlist: xxxxxxxx, Time: 108700 ns
dout mismatch. Golden: 2a7b7954, Netlist: xxxxxxxx, Time: 108720 ns
dout mismatch. Golden: ff2332fe, Netlist: xxxxxxxx, Time: 108760 ns
dout mismatch. Golden: e4d12cc9, Netlist: xxxxxxxx, Time: 108800 ns
dout mismatch. Golden: 1f3a273e, Netlist: xxxxxxxx, Time: 108840 ns
dout mismatch. Golden: 1f3a273e, Netlist: xxxxxxxx, Time: 108860 ns
dout mismatch. Golden: 1f3a273e, Netlist: xxxxxxxx, Time: 108880 ns
dout mismatch. Golden: 756f27ea, Netlist: xxxxxxxx, Time: 108920 ns
dout mismatch. Golden: 149e0729, Netlist: xxxxxxxx, Time: 109020 ns
dout mismatch. Golden: 149e0729, Netlist: xxxxxxxx, Time: 109040 ns
dout mismatch. Golden: 149e0729, Netlist: xxxxxxxx, Time: 109060 ns
dout mismatch. Golden: 70f387e1, Netlist: xxxxxxxx, Time: 109100 ns
dout mismatch. Golden: 73b951e7, Netlist: xxxxxxxx, Time: 109140 ns
dout mismatch. Golden: ae9e6c5d, Netlist: xxxxxxxx, Time: 109180 ns
dout mismatch. Golden: 1a619934, Netlist: xxxxxxxx, Time: 109220 ns
dout mismatch. Golden: 82344204, Netlist: xxxxxxxx, Time: 109320 ns
dout mismatch. Golden: 1ae40335, Netlist: xxxxxxxx, Time: 109360 ns
dout mismatch. Golden: 640083c8, Netlist: xxxxxxxx, Time: 109400 ns
dout mismatch. Golden: 27a8d04, Netlist: xxxxxxxx, Time: 109480 ns
dout mismatch. Golden: 27a8d04, Netlist: xxxxxxxx, Time: 109500 ns
dout mismatch. Golden: 27a8d04, Netlist: xxxxxxxx, Time: 109520 ns
dout mismatch. Golden: 27a8d04, Netlist: xxxxxxxx, Time: 109540 ns
dout mismatch. Golden: e9f8b6d3, Netlist: xxxxxxxx, Time: 109580 ns
dout mismatch. Golden: 4f75ff9e, Netlist: xxxxxxxx, Time: 109700 ns
dout mismatch. Golden: e4e99ac9, Netlist: xxxxxxxx, Time: 109740 ns
dout mismatch. Golden: 1fb7633f, Netlist: xxxxxxxx, Time: 109840 ns
dout mismatch. Golden: 1fb7633f, Netlist: xxxxxxxx, Time: 109860 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 109900 ns
dout mismatch. Golden: deb370bd, Netlist: xxxxxxxx, Time: 109940 ns
dout mismatch. Golden: 3d0f157a, Netlist: xxxxxxxx, Time: 109980 ns
dout mismatch. Golden: 3d0f157a, Netlist: xxxxxxxx, Time: 110000 ns
dout mismatch. Golden: 3d0f157a, Netlist: xxxxxxxx, Time: 110020 ns
dout mismatch. Golden: d659d0ac, Netlist: xxxxxxxx, Time: 110100 ns
dout mismatch. Golden: d659d0ac, Netlist: xxxxxxxx, Time: 110120 ns
dout mismatch. Golden: 75712bea, Netlist: xxxxxxxx, Time: 110180 ns
dout mismatch. Golden: 75712bea, Netlist: xxxxxxxx, Time: 110200 ns
dout mismatch. Golden: 75712bea, Netlist: xxxxxxxx, Time: 110220 ns
dout mismatch. Golden: 75712bea, Netlist: xxxxxxxx, Time: 110240 ns
dout mismatch. Golden: 4f75ff9e, Netlist: xxxxxxxx, Time: 110300 ns
dout mismatch. Golden: 4f75ff9e, Netlist: xxxxxxxx, Time: 110320 ns
dout mismatch. Golden: a82bde50, Netlist: xxxxxxxx, Time: 110380 ns
dout mismatch. Golden: a82bde50, Netlist: xxxxxxxx, Time: 110400 ns
dout mismatch. Golden: 1435f328, Netlist: xxxxxxxx, Time: 110440 ns
dout mismatch. Golden: 1435f328, Netlist: xxxxxxxx, Time: 110460 ns
dout mismatch. Golden: 1435f328, Netlist: xxxxxxxx, Time: 110480 ns
dout mismatch. Golden: 1435f328, Netlist: xxxxxxxx, Time: 110500 ns
dout mismatch. Golden: 1435f328, Netlist: xxxxxxxx, Time: 110520 ns
dout mismatch. Golden: 1435f328, Netlist: xxxxxxxx, Time: 110540 ns
dout mismatch. Golden: 1435f328, Netlist: xxxxxxxx, Time: 110560 ns
dout mismatch. Golden: 1435f328, Netlist: xxxxxxxx, Time: 110580 ns
dout mismatch. Golden: 3a982575, Netlist: xxxxxxxx, Time: 110660 ns
dout mismatch. Golden: 56ba75ad, Netlist: xxxxxxxx, Time: 110700 ns
dout mismatch. Golden: 56ba75ad, Netlist: xxxxxxxx, Time: 110720 ns
dout mismatch. Golden: 56ba75ad, Netlist: xxxxxxxx, Time: 110740 ns
dout mismatch. Golden: e7b76ecf, Netlist: xxxxxxxx, Time: 110820 ns
dout mismatch. Golden: 36a8fb6d, Netlist: xxxxxxxx, Time: 110860 ns
dout mismatch. Golden: 25fd4b4b, Netlist: xxxxxxxx, Time: 110900 ns
dout mismatch. Golden: 7d97f5fb, Netlist: xxxxxxxx, Time: 110960 ns
dout mismatch. Golden: 7d97f5fb, Netlist: xxxxxxxx, Time: 110980 ns
dout mismatch. Golden: 9475a428, Netlist: xxxxxxxx, Time: 111040 ns
dout mismatch. Golden: 9475a428, Netlist: xxxxxxxx, Time: 111060 ns
dout mismatch. Golden: abe11a57, Netlist: xxxxxxxx, Time: 111100 ns
dout mismatch. Golden: abe11a57, Netlist: xxxxxxxx, Time: 111120 ns
dout mismatch. Golden: abe11a57, Netlist: xxxxxxxx, Time: 111140 ns
dout mismatch. Golden: fef548fd, Netlist: xxxxxxxx, Time: 111200 ns
dout mismatch. Golden: fef548fd, Netlist: xxxxxxxx, Time: 111220 ns
dout mismatch. Golden: 2eb0905, Netlist: xxxxxxxx, Time: 111260 ns
dout mismatch. Golden: 468b618d, Netlist: xxxxxxxx, Time: 111300 ns
dout mismatch. Golden: 39d82973, Netlist: xxxxxxxx, Time: 111340 ns
dout mismatch. Golden: 91783222, Netlist: xxxxxxxx, Time: 111400 ns
dout mismatch. Golden: 6fccdfdf, Netlist: xxxxxxxx, Time: 111480 ns
dout mismatch. Golden: 6fccdfdf, Netlist: xxxxxxxx, Time: 111500 ns
dout mismatch. Golden: 6fccdfdf, Netlist: xxxxxxxx, Time: 111520 ns
dout mismatch. Golden: e41451c, Netlist: xxxxxxxx, Time: 111560 ns
dout mismatch. Golden: 5e5f90b, Netlist: xxxxxxxx, Time: 111620 ns
dout mismatch. Golden: 51410fa2, Netlist: xxxxxxxx, Time: 111720 ns
dout mismatch. Golden: 3a096b74, Netlist: xxxxxxxx, Time: 111760 ns
dout mismatch. Golden: 3a096b74, Netlist: xxxxxxxx, Time: 111780 ns
dout mismatch. Golden: 3a096b74, Netlist: xxxxxxxx, Time: 111800 ns
dout mismatch. Golden: 3a096b74, Netlist: xxxxxxxx, Time: 111820 ns
dout mismatch. Golden: 3a096b74, Netlist: xxxxxxxx, Time: 111840 ns
dout mismatch. Golden: d1e644a3, Netlist: xxxxxxxx, Time: 111900 ns
dout mismatch. Golden: 3656c16c, Netlist: xxxxxxxx, Time: 111980 ns
dout mismatch. Golden: 3656c16c, Netlist: xxxxxxxx, Time: 112000 ns
dout mismatch. Golden: fb951af7, Netlist: xxxxxxxx, Time: 112080 ns
dout mismatch. Golden: 9f73703e, Netlist: xxxxxxxx, Time: 112120 ns
dout mismatch. Golden: b7e0cc6f, Netlist: xxxxxxxx, Time: 112160 ns
dout mismatch. Golden: b7e0cc6f, Netlist: xxxxxxxx, Time: 112180 ns
dout mismatch. Golden: b7e0cc6f, Netlist: xxxxxxxx, Time: 112200 ns
dout mismatch. Golden: f5db14eb, Netlist: xxxxxxxx, Time: 112240 ns
dout mismatch. Golden: 17b47f2f, Netlist: xxxxxxxx, Time: 112280 ns
dout mismatch. Golden: 17b47f2f, Netlist: xxxxxxxx, Time: 112300 ns
dout mismatch. Golden: 17b47f2f, Netlist: xxxxxxxx, Time: 112320 ns
dout mismatch. Golden: 48129190, Netlist: xxxxxxxx, Time: 112380 ns
dout mismatch. Golden: 177dab2e, Netlist: xxxxxxxx, Time: 112420 ns
dout mismatch. Golden: 1725712e, Netlist: xxxxxxxx, Time: 112540 ns
dout mismatch. Golden: 1725712e, Netlist: xxxxxxxx, Time: 112560 ns
dout mismatch. Golden: 75712bea, Netlist: xxxxxxxx, Time: 112640 ns
dout mismatch. Golden: 582399b0, Netlist: xxxxxxxx, Time: 112680 ns
dout mismatch. Golden: 582399b0, Netlist: xxxxxxxx, Time: 112700 ns
dout mismatch. Golden: 582399b0, Netlist: xxxxxxxx, Time: 112720 ns
dout mismatch. Golden: 582399b0, Netlist: xxxxxxxx, Time: 112740 ns
dout mismatch. Golden: 582399b0, Netlist: xxxxxxxx, Time: 112760 ns
dout mismatch. Golden: 582399b0, Netlist: xxxxxxxx, Time: 112780 ns
dout mismatch. Golden: 582399b0, Netlist: xxxxxxxx, Time: 112800 ns
dout mismatch. Golden: 582399b0, Netlist: xxxxxxxx, Time: 112820 ns
dout mismatch. Golden: 582399b0, Netlist: xxxxxxxx, Time: 112840 ns
dout mismatch. Golden: 582399b0, Netlist: xxxxxxxx, Time: 112860 ns
dout mismatch. Golden: 582399b0, Netlist: xxxxxxxx, Time: 112880 ns
dout mismatch. Golden: de90fabd, Netlist: xxxxxxxx, Time: 112920 ns
dout mismatch. Golden: 9f73703e, Netlist: xxxxxxxx, Time: 112980 ns
dout mismatch. Golden: 9f73703e, Netlist: xxxxxxxx, Time: 113000 ns
dout mismatch. Golden: 2ab27155, Netlist: xxxxxxxx, Time: 113040 ns
dout mismatch. Golden: 293d3b52, Netlist: xxxxxxxx, Time: 113080 ns
dout mismatch. Golden: 77f6dfef, Netlist: xxxxxxxx, Time: 113140 ns
dout mismatch. Golden: 77f6dfef, Netlist: xxxxxxxx, Time: 113160 ns
dout mismatch. Golden: 913e0222, Netlist: xxxxxxxx, Time: 113260 ns
dout mismatch. Golden: 2af17355, Netlist: xxxxxxxx, Time: 113300 ns
dout mismatch. Golden: 520eefa4, Netlist: xxxxxxxx, Time: 113340 ns
dout mismatch. Golden: 520eefa4, Netlist: xxxxxxxx, Time: 113360 ns
dout mismatch. Golden: 83a4fa07, Netlist: xxxxxxxx, Time: 113440 ns
dout mismatch. Golden: 83a4fa07, Netlist: xxxxxxxx, Time: 113460 ns
dout mismatch. Golden: 91783222, Netlist: xxxxxxxx, Time: 113500 ns
dout mismatch. Golden: 29c01f53, Netlist: xxxxxxxx, Time: 113560 ns
dout mismatch. Golden: 29c01f53, Netlist: xxxxxxxx, Time: 113580 ns
dout mismatch. Golden: 2c662758, Netlist: xxxxxxxx, Time: 113620 ns
dout mismatch. Golden: 2c662758, Netlist: xxxxxxxx, Time: 113640 ns
dout mismatch. Golden: ffbbeeff, Netlist: xxxxxxxx, Time: 113720 ns
dout mismatch. Golden: ffbbeeff, Netlist: xxxxxxxx, Time: 113740 ns
dout mismatch. Golden: ffbbeeff, Netlist: xxxxxxxx, Time: 113760 ns
dout mismatch. Golden: ffbbeeff, Netlist: xxxxxxxx, Time: 113780 ns
dout mismatch. Golden: ffbbeeff, Netlist: xxxxxxxx, Time: 113800 ns
dout mismatch. Golden: 6c0b69d8, Netlist: xxxxxxxx, Time: 113840 ns
dout mismatch. Golden: 8823b410, Netlist: xxxxxxxx, Time: 113960 ns
dout mismatch. Golden: 8823b410, Netlist: xxxxxxxx, Time: 113980 ns
dout mismatch. Golden: 1b042136, Netlist: xxxxxxxx, Time: 114020 ns
dout mismatch. Golden: 1b042136, Netlist: xxxxxxxx, Time: 114040 ns
dout mismatch. Golden: 4c292798, Netlist: xxxxxxxx, Time: 114080 ns
dout mismatch. Golden: 4c292798, Netlist: xxxxxxxx, Time: 114100 ns
dout mismatch. Golden: 4c292798, Netlist: xxxxxxxx, Time: 114120 ns
dout mismatch. Golden: 4c292798, Netlist: xxxxxxxx, Time: 114140 ns
dout mismatch. Golden: 9831ca30, Netlist: xxxxxxxx, Time: 114200 ns
dout mismatch. Golden: 4ddcd99b, Netlist: xxxxxxxx, Time: 114240 ns
dout mismatch. Golden: 4ddcd99b, Netlist: xxxxxxxx, Time: 114260 ns
dout mismatch. Golden: eaaf4ad5, Netlist: xxxxxxxx, Time: 114340 ns
dout mismatch. Golden: 1ffb813f, Netlist: xxxxxxxx, Time: 114380 ns
dout mismatch. Golden: 38170770, Netlist: xxxxxxxx, Time: 114420 ns
dout mismatch. Golden: 38170770, Netlist: xxxxxxxx, Time: 114440 ns
dout mismatch. Golden: 38170770, Netlist: xxxxxxxx, Time: 114460 ns
dout mismatch. Golden: 1725712e, Netlist: xxxxxxxx, Time: 114520 ns
dout mismatch. Golden: 1725712e, Netlist: xxxxxxxx, Time: 114540 ns
dout mismatch. Golden: 1725712e, Netlist: xxxxxxxx, Time: 114560 ns
dout mismatch. Golden: 7dfe8ffb, Netlist: xxxxxxxx, Time: 114620 ns
dout mismatch. Golden: 9535122a, Netlist: xxxxxxxx, Time: 114660 ns
dout mismatch. Golden: 9535122a, Netlist: xxxxxxxx, Time: 114680 ns
dout mismatch. Golden: 9535122a, Netlist: xxxxxxxx, Time: 114700 ns
dout mismatch. Golden: 9535122a, Netlist: xxxxxxxx, Time: 114720 ns
dout mismatch. Golden: c3e3118, Netlist: xxxxxxxx, Time: 114780 ns
dout mismatch. Golden: c3e3118, Netlist: xxxxxxxx, Time: 114800 ns
dout mismatch. Golden: bad53275, Netlist: xxxxxxxx, Time: 114860 ns
dout mismatch. Golden: bad53275, Netlist: xxxxxxxx, Time: 114880 ns
dout mismatch. Golden: bad53275, Netlist: xxxxxxxx, Time: 114900 ns
dout mismatch. Golden: 78a465f1, Netlist: xxxxxxxx, Time: 115000 ns
dout mismatch. Golden: 78a465f1, Netlist: xxxxxxxx, Time: 115020 ns
dout mismatch. Golden: 78a465f1, Netlist: xxxxxxxx, Time: 115040 ns
dout mismatch. Golden: 31bb6763, Netlist: xxxxxxxx, Time: 115080 ns
dout mismatch. Golden: 31bb6763, Netlist: xxxxxxxx, Time: 115100 ns
dout mismatch. Golden: 31bb6763, Netlist: xxxxxxxx, Time: 115120 ns
dout mismatch. Golden: b585626b, Netlist: xxxxxxxx, Time: 115200 ns
dout mismatch. Golden: e3dcc6c7, Netlist: xxxxxxxx, Time: 115300 ns
dout mismatch. Golden: e3dcc6c7, Netlist: xxxxxxxx, Time: 115320 ns
dout mismatch. Golden: 3a982575, Netlist: xxxxxxxx, Time: 115360 ns
dout mismatch. Golden: 3a982575, Netlist: xxxxxxxx, Time: 115380 ns
dout mismatch. Golden: 3a982575, Netlist: xxxxxxxx, Time: 115400 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 115460 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 115480 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 115500 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 115520 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 115540 ns
dout mismatch. Golden: 1c2a1338, Netlist: xxxxxxxx, Time: 115560 ns
dout mismatch. Golden: bec8317, Netlist: xxxxxxxx, Time: 115620 ns
dout mismatch. Golden: bec8317, Netlist: xxxxxxxx, Time: 115640 ns
dout mismatch. Golden: bec8317, Netlist: xxxxxxxx, Time: 115660 ns
dout mismatch. Golden: bec8317, Netlist: xxxxxxxx, Time: 115680 ns
dout mismatch. Golden: 3656c16c, Netlist: xxxxxxxx, Time: 115780 ns
dout mismatch. Golden: 5e5f90b, Netlist: xxxxxxxx, Time: 115840 ns
dout mismatch. Golden: 5e5f90b, Netlist: xxxxxxxx, Time: 115860 ns
dout mismatch. Golden: 5e5f90b, Netlist: xxxxxxxx, Time: 115880 ns
dout mismatch. Golden: 14cfc129, Netlist: xxxxxxxx, Time: 115960 ns
dout mismatch. Golden: 14cfc129, Netlist: xxxxxxxx, Time: 115980 ns
dout mismatch. Golden: 14cfc129, Netlist: xxxxxxxx, Time: 116000 ns
dout mismatch. Golden: d1488ea2, Netlist: xxxxxxxx, Time: 116040 ns
dout mismatch. Golden: ea7626d4, Netlist: xxxxxxxx, Time: 116080 ns
dout mismatch. Golden: ea7626d4, Netlist: xxxxxxxx, Time: 116100 ns
dout mismatch. Golden: 737cede6, Netlist: xxxxxxxx, Time: 116140 ns
dout mismatch. Golden: 929d5825, Netlist: xxxxxxxx, Time: 116180 ns
dout mismatch. Golden: d6db06ad, Netlist: xxxxxxxx, Time: 116260 ns
dout mismatch. Golden: 4075db80, Netlist: xxxxxxxx, Time: 116380 ns
dout mismatch. Golden: 7b7b89f6, Netlist: xxxxxxxx, Time: 116420 ns
dout mismatch. Golden: 4fd2179f, Netlist: xxxxxxxx, Time: 116480 ns
dout mismatch. Golden: 4f75ff9e, Netlist: xxxxxxxx, Time: 116520 ns
dout mismatch. Golden: 799f09f3, Netlist: xxxxxxxx, Time: 116560 ns
dout mismatch. Golden: 799f09f3, Netlist: xxxxxxxx, Time: 116580 ns
dout mismatch. Golden: 8d50701a, Netlist: xxxxxxxx, Time: 116660 ns
dout mismatch. Golden: d1e644a3, Netlist: xxxxxxxx, Time: 116720 ns
dout mismatch. Golden: adec3a5b, Netlist: xxxxxxxx, Time: 116760 ns
dout mismatch. Golden: e4e99ac9, Netlist: xxxxxxxx, Time: 116800 ns
dout mismatch. Golden: dd0ddeba, Netlist: xxxxxxxx, Time: 116840 ns
dout mismatch. Golden: db874ab7, Netlist: xxxxxxxx, Time: 116880 ns
dout mismatch. Golden: db874ab7, Netlist: xxxxxxxx, Time: 116900 ns
dout mismatch. Golden: db874ab7, Netlist: xxxxxxxx, Time: 116920 ns
dout mismatch. Golden: bbd96677, Netlist: xxxxxxxx, Time: 117000 ns
dout mismatch. Golden: bbd96677, Netlist: xxxxxxxx, Time: 117020 ns
dout mismatch. Golden: 8d19d01a, Netlist: xxxxxxxx, Time: 117080 ns
dout mismatch. Golden: 73a06fe7, Netlist: xxxxxxxx, Time: 117120 ns
dout mismatch. Golden: d659d0ac, Netlist: xxxxxxxx, Time: 117180 ns
dout mismatch. Golden: b44c6268, Netlist: xxxxxxxx, Time: 117240 ns
dout mismatch. Golden: b44c6268, Netlist: xxxxxxxx, Time: 117260 ns
dout mismatch. Golden: 47d2a58f, Netlist: xxxxxxxx, Time: 117300 ns
dout mismatch. Golden: 47d2a58f, Netlist: xxxxxxxx, Time: 117320 ns
dout mismatch. Golden: 654befca, Netlist: xxxxxxxx, Time: 117400 ns
dout mismatch. Golden: 379ed06, Netlist: xxxxxxxx, Time: 117480 ns
dout mismatch. Golden: e70a4ece, Netlist: xxxxxxxx, Time: 117540 ns
dout mismatch. Golden: e70a4ece, Netlist: xxxxxxxx, Time: 117560 ns
dout mismatch. Golden: e70a4ece, Netlist: xxxxxxxx, Time: 117580 ns
dout mismatch. Golden: db74d2b6, Netlist: xxxxxxxx, Time: 117640 ns
dout mismatch. Golden: 99d30e33, Netlist: xxxxxxxx, Time: 117680 ns
dout mismatch. Golden: 77a8f3ef, Netlist: xxxxxxxx, Time: 117720 ns
dout mismatch. Golden: f18dc4e3, Netlist: xxxxxxxx, Time: 117800 ns
dout mismatch. Golden: f18dc4e3, Netlist: xxxxxxxx, Time: 117820 ns
dout mismatch. Golden: f99a58f3, Netlist: xxxxxxxx, Time: 117920 ns
dout mismatch. Golden: d95b40b2, Netlist: xxxxxxxx, Time: 117960 ns
dout mismatch. Golden: d95b40b2, Netlist: xxxxxxxx, Time: 117980 ns
dout mismatch. Golden: 9d12083a, Netlist: xxxxxxxx, Time: 118020 ns
dout mismatch. Golden: adec3a5b, Netlist: xxxxxxxx, Time: 118060 ns
dout mismatch. Golden: d57fecaa, Netlist: xxxxxxxx, Time: 118120 ns
dout mismatch. Golden: 12954725, Netlist: xxxxxxxx, Time: 118160 ns
dout mismatch. Golden: 12954725, Netlist: xxxxxxxx, Time: 118180 ns
dout mismatch. Golden: 12954725, Netlist: xxxxxxxx, Time: 118200 ns
dout mismatch. Golden: e2bd1cc5, Netlist: xxxxxxxx, Time: 118260 ns
dout mismatch. Golden: 1435f328, Netlist: xxxxxxxx, Time: 118320 ns
dout mismatch. Golden: 1435f328, Netlist: xxxxxxxx, Time: 118340 ns
dout mismatch. Golden: 1435f328, Netlist: xxxxxxxx, Time: 118360 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 118400 ns
dout mismatch. Golden: 398a1973, Netlist: xxxxxxxx, Time: 118460 ns
dout mismatch. Golden: a5955c4b, Netlist: xxxxxxxx, Time: 118500 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 118620 ns
dout mismatch. Golden: 22c03145, Netlist: xxxxxxxx, Time: 118660 ns
dout mismatch. Golden: 46278b8c, Netlist: xxxxxxxx, Time: 118700 ns
dout mismatch. Golden: 46278b8c, Netlist: xxxxxxxx, Time: 118720 ns
dout mismatch. Golden: 46278b8c, Netlist: xxxxxxxx, Time: 118740 ns
dout mismatch. Golden: 46278b8c, Netlist: xxxxxxxx, Time: 118760 ns
dout mismatch. Golden: 4afebf95, Netlist: xxxxxxxx, Time: 118800 ns
dout mismatch. Golden: 51410fa2, Netlist: xxxxxxxx, Time: 118840 ns
dout mismatch. Golden: d63751a, Netlist: xxxxxxxx, Time: 118880 ns
dout mismatch. Golden: d63751a, Netlist: xxxxxxxx, Time: 118900 ns
dout mismatch. Golden: d63751a, Netlist: xxxxxxxx, Time: 118920 ns
dout mismatch. Golden: d63751a, Netlist: xxxxxxxx, Time: 118940 ns
dout mismatch. Golden: e43851c, Netlist: xxxxxxxx, Time: 119020 ns
dout mismatch. Golden: e43851c, Netlist: xxxxxxxx, Time: 119040 ns
dout mismatch. Golden: e43851c, Netlist: xxxxxxxx, Time: 119060 ns
dout mismatch. Golden: d45191a, Netlist: xxxxxxxx, Time: 119120 ns
dout mismatch. Golden: 3d17f77a, Netlist: xxxxxxxx, Time: 119160 ns
dout mismatch. Golden: 83cfa407, Netlist: xxxxxxxx, Time: 119240 ns
dout mismatch. Golden: 4852bb90, Netlist: xxxxxxxx, Time: 119320 ns
dout mismatch. Golden: 4852bb90, Netlist: xxxxxxxx, Time: 119340 ns
dout mismatch. Golden: 2ab27155, Netlist: xxxxxxxx, Time: 119400 ns
dout mismatch. Golden: 43f68f87, Netlist: xxxxxxxx, Time: 119460 ns
dout mismatch. Golden: 1725712e, Netlist: xxxxxxxx, Time: 119540 ns
dout mismatch. Golden: 1725712e, Netlist: xxxxxxxx, Time: 119560 ns
dout mismatch. Golden: 8d50701a, Netlist: xxxxxxxx, Time: 119600 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 119700 ns
dout mismatch. Golden: 0, Netlist: xxxxxxxx, Time: 119720 ns
dout mismatch. Golden: aaf71e55, Netlist: xxxxxxxx, Time: 119760 ns
dout mismatch. Golden: aaf71e55, Netlist: xxxxxxxx, Time: 119780 ns
dout mismatch. Golden: aaf71e55, Netlist: xxxxxxxx, Time: 119800 ns
dout mismatch. Golden: cb5cc496, Netlist: xxxxxxxx, Time: 119880 ns
dout mismatch. Golden: cb5cc496, Netlist: xxxxxxxx, Time: 119900 ns
dout mismatch. Golden: cb227096, Netlist: xxxxxxxx, Time: 120000 ns
dout mismatch. Golden: cb227096, Netlist: xxxxxxxx, Time: 120020 ns
dout mismatch. Golden: cb227096, Netlist: xxxxxxxx, Time: 120040 ns
dout mismatch. Golden: cb227096, Netlist: xxxxxxxx, Time: 120060 ns
dout mismatch. Golden: f4a1dae9, Netlist: xxxxxxxx, Time: 120140 ns
dout mismatch. Golden: 619f21c3, Netlist: xxxxxxxx, Time: 120180 ns
dout mismatch. Golden: f0f9a8e1, Netlist: xxxxxxxx, Time: 120220 ns
dout mismatch. Golden: ff2332fe, Netlist: xxxxxxxx, Time: 120260 ns
dout mismatch. Golden: ff2332fe, Netlist: xxxxxxxx, Time: 120280 ns
dout mismatch. Golden: 6ba671d7, Netlist: xxxxxxxx, Time: 120320 ns
dout mismatch. Golden: 1cd0d739, Netlist: xxxxxxxx, Time: 120360 ns
dout mismatch. Golden: 1cd0d739, Netlist: xxxxxxxx, Time: 120380 ns
dout mismatch. Golden: 7c8eb5f9, Netlist: xxxxxxxx, Time: 120440 ns
dout mismatch. Golden: ffbbeeff, Netlist: xxxxxxxx, Time: 120480 ns
dout mismatch. Golden: fa9b6cf5, Netlist: xxxxxxxx, Time: 120520 ns
dout mismatch. Golden: dc11e0b8, Netlist: xxxxxxxx, Time: 120560 ns
dout mismatch. Golden: dc11e0b8, Netlist: xxxxxxxx, Time: 120580 ns
dout mismatch. Golden: dc11e0b8, Netlist: xxxxxxxx, Time: 120600 ns
dout mismatch. Golden: 799f09f3, Netlist: xxxxxxxx, Time: 120660 ns
dout mismatch. Golden: b87c1070, Netlist: xxxxxxxx, Time: 120700 ns
dout mismatch. Golden: b87c1070, Netlist: xxxxxxxx, Time: 120720 ns
dout mismatch. Golden: deb370bd, Netlist: xxxxxxxx, Time: 120780 ns
dout mismatch. Golden: b0358860, Netlist: xxxxxxxx, Time: 120840 ns
dout mismatch. Golden: b0358860, Netlist: xxxxxxxx, Time: 120860 ns
dout mismatch. Golden: b0358860, Netlist: xxxxxxxx, Time: 120880 ns
dout mismatch. Golden: a95fc452, Netlist: xxxxxxxx, Time: 120940 ns
dout mismatch. Golden: 398a1973, Netlist: xxxxxxxx, Time: 121040 ns
dout mismatch. Golden: d1488ea2, Netlist: xxxxxxxx, Time: 121080 ns
dout mismatch. Golden: 83f73607, Netlist: xxxxxxxx, Time: 121140 ns
dout mismatch. Golden: a6e9314, Netlist: xxxxxxxx, Time: 121200 ns
dout mismatch. Golden: a6e9314, Netlist: xxxxxxxx, Time: 121220 ns
dout mismatch. Golden: d6db06ad, Netlist: xxxxxxxx, Time: 121260 ns
dout mismatch. Golden: d6db06ad, Netlist: xxxxxxxx, Time: 121280 ns
dout mismatch. Golden: d6db06ad, Netlist: xxxxxxxx, Time: 121300 ns
dout mismatch. Golden: a5cd724b, Netlist: xxxxxxxx, Time: 121340 ns
dout mismatch. Golden: a5cd724b, Netlist: xxxxxxxx, Time: 121360 ns
dout mismatch. Golden: 794f85f2, Netlist: xxxxxxxx, Time: 121440 ns
dout mismatch. Golden: 794f85f2, Netlist: xxxxxxxx, Time: 121460 ns
dout mismatch. Golden: 794f85f2, Netlist: xxxxxxxx, Time: 121480 ns
dout mismatch. Golden: 4e84719d, Netlist: xxxxxxxx, Time: 121520 ns
dout mismatch. Golden: ba941075, Netlist: xxxxxxxx, Time: 121580 ns
dout mismatch. Golden: ba941075, Netlist: xxxxxxxx, Time: 121600 ns
dout mismatch. Golden: 5bd9b7b7, Netlist: xxxxxxxx, Time: 121640 ns
dout mismatch. Golden: 5bd9b7b7, Netlist: xxxxxxxx, Time: 121660 ns
dout mismatch. Golden: 5bd9b7b7, Netlist: xxxxxxxx, Time: 121680 ns
dout mismatch. Golden: 5bd9b7b7, Netlist: xxxxxxxx, Time: 121700 ns
dout mismatch. Golden: 5bd9b7b7, Netlist: xxxxxxxx, Time: 121720 ns
dout mismatch. Golden: 5bd9b7b7, Netlist: xxxxxxxx, Time: 121740 ns
dout mismatch. Golden: 3e9b707, Netlist: xxxxxxxx, Time: 121800 ns
dout mismatch. Golden: 3e9b707, Netlist: xxxxxxxx, Time: 121820 ns
dout mismatch. Golden: 3e9b707, Netlist: xxxxxxxx, Time: 121840 ns
dout mismatch. Golden: 3e9b707, Netlist: xxxxxxxx, Time: 121860 ns
dout mismatch. Golden: 3e9b707, Netlist: xxxxxxxx, Time: 121880 ns
dout mismatch. Golden: 3e9b707, Netlist: xxxxxxxx, Time: 121900 ns
dout mismatch. Golden: 1c893939, Netlist: xxxxxxxx, Time: 121980 ns
dout mismatch. Golden: c308fe86, Netlist: xxxxxxxx, Time: 122040 ns
dout mismatch. Golden: c308fe86, Netlist: xxxxxxxx, Time: 122060 ns
dout mismatch. Golden: 55dd8dab, Netlist: xxxxxxxx, Time: 122120 ns
dout mismatch. Golden: 3a096b74, Netlist: xxxxxxxx, Time: 122180 ns
dout mismatch. Golden: 3a096b74, Netlist: xxxxxxxx, Time: 122200 ns
dout mismatch. Golden: a1aee843, Netlist: xxxxxxxx, Time: 122260 ns
dout mismatch. Golden: 79907bf3, Netlist: xxxxxxxx, Time: 122320 ns
dout mismatch. Golden: 79907bf3, Netlist: xxxxxxxx, Time: 122340 ns
dout mismatch. Golden: 79907bf3, Netlist: xxxxxxxx, Time: 122360 ns
dout mismatch. Golden: 3c581178, Netlist: xxxxxxxx, Time: 122400 ns
dout mismatch. Golden: 3c581178, Netlist: xxxxxxxx, Time: 122420 ns
dout mismatch. Golden: 288c3551, Netlist: xxxxxxxx, Time: 122480 ns
dout mismatch. Golden: 288c3551, Netlist: xxxxxxxx, Time: 122500 ns
dout mismatch. Golden: 288c3551, Netlist: xxxxxxxx, Time: 122520 ns
dout mismatch. Golden: 288c3551, Netlist: xxxxxxxx, Time: 122540 ns
dout mismatch. Golden: e4273cc8, Netlist: xxxxxxxx, Time: 122580 ns
dout mismatch. Golden: c8e05691, Netlist: xxxxxxxx, Time: 122640 ns
dout mismatch. Golden: f18dc4e3, Netlist: xxxxxxxx, Time: 122700 ns
dout mismatch. Golden: f18dc4e3, Netlist: xxxxxxxx, Time: 122720 ns
dout mismatch. Golden: f18dc4e3, Netlist: xxxxxxxx, Time: 122740 ns
dout mismatch. Golden: f18dc4e3, Netlist: xxxxxxxx, Time: 122760 ns
dout mismatch. Golden: f18dc4e3, Netlist: xxxxxxxx, Time: 122780 ns
dout mismatch. Golden: f18dc4e3, Netlist: xxxxxxxx, Time: 122800 ns
dout mismatch. Golden: f18dc4e3, Netlist: xxxxxxxx, Time: 122820 ns
dout mismatch. Golden: 5b564bb6, Netlist: xxxxxxxx, Time: 122860 ns
dout mismatch. Golden: 5b564bb6, Netlist: xxxxxxxx, Time: 122880 ns
dout mismatch. Golden: 5b564bb6, Netlist: xxxxxxxx, Time: 122900 ns
2066 comparison(s) mismatched
ERROR: SIM: Simulation Failed
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/1NEW/1111111111111111/Validation/RTL_testcases/Memory_Designs/ram_simple_dp_synch_undefined_collision_1024x32/EDA-2901/./sim/co_sim_tb/co_sim_ram_simple_dp_synch_undefined_collision_1024x32.v:92: $finish called at 123100000 (1ps)
INFO: SGT: Gate simulation for design: ram_simple_dp_synch_undefined_collision_1024x32 had ended
