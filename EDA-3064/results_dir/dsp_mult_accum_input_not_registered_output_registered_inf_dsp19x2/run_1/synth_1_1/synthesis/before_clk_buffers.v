/* Generated by Yosys 0.38 (git sha1 d2189b06a, gcc 11.2.1 -fPIC -Os) */

module dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2(clk, reset, subtract, A1, A2, B1, B2, P);
  input subtract;
  input [9:0] A1;
  input [9:0] A2;
  input [8:0] B1;
  output [37:0] P;
  input [8:0] B2;
  input clk;
  input reset;
  wire subtract;
  wire _000_;
  wire _001_;
  wire _002_;
  wire [8:0] _003_;
  wire [8:0] _004_;
  wire [9:0] _005_;
  wire [9:0] _006_;
  wire [32:0] _007_;
  wire [31:0] _008_;
  wire [31:0] _009_;
  wire [32:0] _010_;
  wire [31:0] _011_;
  wire [32:0] _012_;
  wire [31:0] _013_;
  wire [31:0] _014_;
  wire [32:0] _015_;
  wire [31:0] _016_;
  wire [31:0] _017_;
  wire [31:0] _018_;
  wire [9:0] A1;
  wire [9:0] A2;
  wire [8:0] B1;
  wire [37:0] P;
  wire [63:0] add_or_sub;
  wire [8:0] B2;
  wire [18:0] mult1;
  wire [18:0] mult2;
  wire clk;
  wire reset;
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_subtract /* _019_ */ (
    .O(_000_),
    .I(subtract)
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_reset /* _020_ */ (
    .O(_001_),
    .I(reset)
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_clk /* _021_ */ (
    .O(_002_),
    .I(clk)
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_8 /* _022_ */ (
    .O(_003_[8]),
    .I(B2[8])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_7 /* _023_ */ (
    .O(_003_[7]),
    .I(B2[7])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_6 /* _024_ */ (
    .O(_003_[6]),
    .I(B2[6])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_5 /* _025_ */ (
    .O(_003_[5]),
    .I(B2[5])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_4 /* _026_ */ (
    .O(_003_[4]),
    .I(B2[4])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_3 /* _027_ */ (
    .O(_003_[3]),
    .I(B2[3])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_2 /* _028_ */ (
    .O(_003_[2]),
    .I(B2[2])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_1 /* _029_ */ (
    .O(_003_[1]),
    .I(B2[1])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2 /* _030_ */ (
    .O(_003_[0]),
    .I(B2[0])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_8 /* _031_ */ (
    .O(_004_[8]),
    .I(B1[8])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_7 /* _032_ */ (
    .O(_004_[7]),
    .I(B1[7])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_6 /* _033_ */ (
    .O(_004_[6]),
    .I(B1[6])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_5 /* _034_ */ (
    .O(_004_[5]),
    .I(B1[5])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_4 /* _035_ */ (
    .O(_004_[4]),
    .I(B1[4])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_3 /* _036_ */ (
    .O(_004_[3]),
    .I(B1[3])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_2 /* _037_ */ (
    .O(_004_[2]),
    .I(B1[2])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_1 /* _038_ */ (
    .O(_004_[1]),
    .I(B1[1])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1 /* _039_ */ (
    .O(_004_[0]),
    .I(B1[0])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_9 /* _040_ */ (
    .O(_005_[9]),
    .I(A2[9])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_8 /* _041_ */ (
    .O(_005_[8]),
    .I(A2[8])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_7 /* _042_ */ (
    .O(_005_[7]),
    .I(A2[7])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_6 /* _043_ */ (
    .O(_005_[6]),
    .I(A2[6])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_5 /* _044_ */ (
    .O(_005_[5]),
    .I(A2[5])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_4 /* _045_ */ (
    .O(_005_[4]),
    .I(A2[4])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_3 /* _046_ */ (
    .O(_005_[3]),
    .I(A2[3])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_2 /* _047_ */ (
    .O(_005_[2]),
    .I(A2[2])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_1 /* _048_ */ (
    .O(_005_[1]),
    .I(A2[1])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2 /* _049_ */ (
    .O(_005_[0]),
    .I(A2[0])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_9 /* _050_ */ (
    .O(_006_[9]),
    .I(A1[9])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_8 /* _051_ */ (
    .O(_006_[8]),
    .I(A1[8])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_7 /* _052_ */ (
    .O(_006_[7]),
    .I(A1[7])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_6 /* _053_ */ (
    .O(_006_[6]),
    .I(A1[6])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_5 /* _054_ */ (
    .O(_006_[5]),
    .I(A1[5])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_4 /* _055_ */ (
    .O(_006_[4]),
    .I(A1[4])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_3 /* _056_ */ (
    .O(_006_[3]),
    .I(A1[3])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_2 /* _057_ */ (
    .O(_006_[2]),
    .I(A1[2])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_1 /* _058_ */ (
    .O(_006_[1]),
    .I(A1[1])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1 /* _059_ */ (
    .O(_006_[0]),
    .I(A1[0])
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1163 /* _060_ */ (
    .C(_002_),
    .D(_014_[0]),
    .E(1'b1),
    .Q(add_or_sub[0]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1164 /* _061_ */ (
    .C(_002_),
    .D(add_or_sub[0]),
    .E(1'b1),
    .Q(P[0]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1165 /* _062_ */ (
    .C(_002_),
    .D(_014_[1]),
    .E(1'b1),
    .Q(add_or_sub[1]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1166 /* _063_ */ (
    .C(_002_),
    .D(add_or_sub[1]),
    .E(1'b1),
    .Q(P[1]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1167 /* _064_ */ (
    .C(_002_),
    .D(_014_[2]),
    .E(1'b1),
    .Q(add_or_sub[2]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1168 /* _065_ */ (
    .C(_002_),
    .D(add_or_sub[2]),
    .E(1'b1),
    .Q(P[2]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1169 /* _066_ */ (
    .C(_002_),
    .D(_014_[3]),
    .E(1'b1),
    .Q(add_or_sub[3]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1170 /* _067_ */ (
    .C(_002_),
    .D(add_or_sub[3]),
    .E(1'b1),
    .Q(P[3]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1171 /* _068_ */ (
    .C(_002_),
    .D(_014_[4]),
    .E(1'b1),
    .Q(add_or_sub[4]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1172 /* _069_ */ (
    .C(_002_),
    .D(add_or_sub[4]),
    .E(1'b1),
    .Q(P[4]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1173 /* _070_ */ (
    .C(_002_),
    .D(_014_[5]),
    .E(1'b1),
    .Q(add_or_sub[5]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1174 /* _071_ */ (
    .C(_002_),
    .D(add_or_sub[5]),
    .E(1'b1),
    .Q(P[5]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1175 /* _072_ */ (
    .C(_002_),
    .D(_014_[6]),
    .E(1'b1),
    .Q(add_or_sub[6]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1176 /* _073_ */ (
    .C(_002_),
    .D(add_or_sub[6]),
    .E(1'b1),
    .Q(P[6]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1177 /* _074_ */ (
    .C(_002_),
    .D(_014_[7]),
    .E(1'b1),
    .Q(add_or_sub[7]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1178 /* _075_ */ (
    .C(_002_),
    .D(add_or_sub[7]),
    .E(1'b1),
    .Q(P[7]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1179 /* _076_ */ (
    .C(_002_),
    .D(_014_[8]),
    .E(1'b1),
    .Q(add_or_sub[8]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1180 /* _077_ */ (
    .C(_002_),
    .D(add_or_sub[8]),
    .E(1'b1),
    .Q(P[8]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1181 /* _078_ */ (
    .C(_002_),
    .D(_014_[9]),
    .E(1'b1),
    .Q(add_or_sub[9]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1182 /* _079_ */ (
    .C(_002_),
    .D(add_or_sub[9]),
    .E(1'b1),
    .Q(P[9]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1183 /* _080_ */ (
    .C(_002_),
    .D(_014_[10]),
    .E(1'b1),
    .Q(add_or_sub[10]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1184 /* _081_ */ (
    .C(_002_),
    .D(add_or_sub[10]),
    .E(1'b1),
    .Q(P[10]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1185 /* _082_ */ (
    .C(_002_),
    .D(_014_[11]),
    .E(1'b1),
    .Q(add_or_sub[11]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1186 /* _083_ */ (
    .C(_002_),
    .D(add_or_sub[11]),
    .E(1'b1),
    .Q(P[11]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1187 /* _084_ */ (
    .C(_002_),
    .D(_014_[12]),
    .E(1'b1),
    .Q(add_or_sub[12]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1188 /* _085_ */ (
    .C(_002_),
    .D(add_or_sub[12]),
    .E(1'b1),
    .Q(P[12]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1189 /* _086_ */ (
    .C(_002_),
    .D(_014_[13]),
    .E(1'b1),
    .Q(add_or_sub[13]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1190 /* _087_ */ (
    .C(_002_),
    .D(add_or_sub[13]),
    .E(1'b1),
    .Q(P[13]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1191 /* _088_ */ (
    .C(_002_),
    .D(_014_[14]),
    .E(1'b1),
    .Q(add_or_sub[14]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1192 /* _089_ */ (
    .C(_002_),
    .D(add_or_sub[14]),
    .E(1'b1),
    .Q(P[14]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1193 /* _090_ */ (
    .C(_002_),
    .D(_014_[15]),
    .E(1'b1),
    .Q(add_or_sub[15]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1194 /* _091_ */ (
    .C(_002_),
    .D(add_or_sub[15]),
    .E(1'b1),
    .Q(P[15]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1195 /* _092_ */ (
    .C(_002_),
    .D(_014_[16]),
    .E(1'b1),
    .Q(add_or_sub[16]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1196 /* _093_ */ (
    .C(_002_),
    .D(add_or_sub[16]),
    .E(1'b1),
    .Q(P[16]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1197 /* _094_ */ (
    .C(_002_),
    .D(_014_[17]),
    .E(1'b1),
    .Q(add_or_sub[17]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1198 /* _095_ */ (
    .C(_002_),
    .D(add_or_sub[17]),
    .E(1'b1),
    .Q(P[17]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1199 /* _096_ */ (
    .C(_002_),
    .D(_014_[18]),
    .E(1'b1),
    .Q(add_or_sub[18]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1200 /* _097_ */ (
    .C(_002_),
    .D(add_or_sub[18]),
    .E(1'b1),
    .Q(P[18]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1201 /* _098_ */ (
    .C(_002_),
    .D(_017_[0]),
    .E(1'b1),
    .Q(add_or_sub[32]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1202 /* _099_ */ (
    .C(_002_),
    .D(add_or_sub[32]),
    .E(1'b1),
    .Q(P[19]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1203 /* _100_ */ (
    .C(_002_),
    .D(_017_[1]),
    .E(1'b1),
    .Q(add_or_sub[33]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1204 /* _101_ */ (
    .C(_002_),
    .D(add_or_sub[33]),
    .E(1'b1),
    .Q(P[20]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1205 /* _102_ */ (
    .C(_002_),
    .D(_017_[2]),
    .E(1'b1),
    .Q(add_or_sub[34]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1206 /* _103_ */ (
    .C(_002_),
    .D(add_or_sub[34]),
    .E(1'b1),
    .Q(P[21]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1207 /* _104_ */ (
    .C(_002_),
    .D(_017_[3]),
    .E(1'b1),
    .Q(add_or_sub[35]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1208 /* _105_ */ (
    .C(_002_),
    .D(add_or_sub[35]),
    .E(1'b1),
    .Q(P[22]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1209 /* _106_ */ (
    .C(_002_),
    .D(_017_[4]),
    .E(1'b1),
    .Q(add_or_sub[36]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1210 /* _107_ */ (
    .C(_002_),
    .D(add_or_sub[36]),
    .E(1'b1),
    .Q(P[23]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1211 /* _108_ */ (
    .C(_002_),
    .D(_017_[5]),
    .E(1'b1),
    .Q(add_or_sub[37]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1212 /* _109_ */ (
    .C(_002_),
    .D(add_or_sub[37]),
    .E(1'b1),
    .Q(P[24]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1213 /* _110_ */ (
    .C(_002_),
    .D(_017_[6]),
    .E(1'b1),
    .Q(add_or_sub[38]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1214 /* _111_ */ (
    .C(_002_),
    .D(add_or_sub[38]),
    .E(1'b1),
    .Q(P[25]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1215 /* _112_ */ (
    .C(_002_),
    .D(_017_[7]),
    .E(1'b1),
    .Q(add_or_sub[39]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1216 /* _113_ */ (
    .C(_002_),
    .D(add_or_sub[39]),
    .E(1'b1),
    .Q(P[26]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1217 /* _114_ */ (
    .C(_002_),
    .D(_017_[8]),
    .E(1'b1),
    .Q(add_or_sub[40]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1218 /* _115_ */ (
    .C(_002_),
    .D(add_or_sub[40]),
    .E(1'b1),
    .Q(P[27]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1219 /* _116_ */ (
    .C(_002_),
    .D(_017_[9]),
    .E(1'b1),
    .Q(add_or_sub[41]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1220 /* _117_ */ (
    .C(_002_),
    .D(add_or_sub[41]),
    .E(1'b1),
    .Q(P[28]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1221 /* _118_ */ (
    .C(_002_),
    .D(_017_[10]),
    .E(1'b1),
    .Q(add_or_sub[42]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1222 /* _119_ */ (
    .C(_002_),
    .D(add_or_sub[42]),
    .E(1'b1),
    .Q(P[29]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1223 /* _120_ */ (
    .C(_002_),
    .D(_017_[11]),
    .E(1'b1),
    .Q(add_or_sub[43]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1224 /* _121_ */ (
    .C(_002_),
    .D(add_or_sub[43]),
    .E(1'b1),
    .Q(P[30]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1225 /* _122_ */ (
    .C(_002_),
    .D(_017_[12]),
    .E(1'b1),
    .Q(add_or_sub[44]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1226 /* _123_ */ (
    .C(_002_),
    .D(add_or_sub[44]),
    .E(1'b1),
    .Q(P[31]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1227 /* _124_ */ (
    .C(_002_),
    .D(_017_[13]),
    .E(1'b1),
    .Q(add_or_sub[45]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1228 /* _125_ */ (
    .C(_002_),
    .D(add_or_sub[45]),
    .E(1'b1),
    .Q(P[32]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1229 /* _126_ */ (
    .C(_002_),
    .D(_017_[14]),
    .E(1'b1),
    .Q(add_or_sub[46]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1230 /* _127_ */ (
    .C(_002_),
    .D(add_or_sub[46]),
    .E(1'b1),
    .Q(P[33]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1231 /* _128_ */ (
    .C(_002_),
    .D(_017_[15]),
    .E(1'b1),
    .Q(add_or_sub[47]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1232 /* _129_ */ (
    .C(_002_),
    .D(add_or_sub[47]),
    .E(1'b1),
    .Q(P[34]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1233 /* _130_ */ (
    .C(_002_),
    .D(_017_[16]),
    .E(1'b1),
    .Q(add_or_sub[48]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1234 /* _131_ */ (
    .C(_002_),
    .D(add_or_sub[48]),
    .E(1'b1),
    .Q(P[35]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1235 /* _132_ */ (
    .C(_002_),
    .D(_017_[17]),
    .E(1'b1),
    .Q(add_or_sub[49]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1236 /* _133_ */ (
    .C(_002_),
    .D(add_or_sub[49]),
    .E(1'b1),
    .Q(P[36]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1237 /* _134_ */ (
    .C(_002_),
    .D(_017_[18]),
    .E(1'b1),
    .Q(add_or_sub[50]),
    .R(_001_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1238 /* _135_ */ (
    .C(_002_),
    .D(add_or_sub[50]),
    .E(1'b1),
    .Q(P[37]),
    .R(_001_)
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3355 /* _136_ */ (
    .A({ add_or_sub[0], _000_, _011_[0], mult1[0] }),
    .Y(_013_[0])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3356 /* _137_ */ (
    .A({ add_or_sub[1], _000_, _011_[1], mult1[1] }),
    .Y(_013_[1])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3357 /* _138_ */ (
    .A({ add_or_sub[2], _000_, _011_[2], mult1[2] }),
    .Y(_013_[2])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3358 /* _139_ */ (
    .A({ add_or_sub[3], _000_, _011_[3], mult1[3] }),
    .Y(_013_[3])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3359 /* _140_ */ (
    .A({ add_or_sub[4], _000_, _011_[4], mult1[4] }),
    .Y(_013_[4])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3360 /* _141_ */ (
    .A({ add_or_sub[5], _000_, _011_[5], mult1[5] }),
    .Y(_013_[5])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3361 /* _142_ */ (
    .A({ add_or_sub[6], _000_, _011_[6], mult1[6] }),
    .Y(_013_[6])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3362 /* _143_ */ (
    .A({ add_or_sub[7], _000_, _011_[7], mult1[7] }),
    .Y(_013_[7])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3363 /* _144_ */ (
    .A({ add_or_sub[8], _000_, _011_[8], mult1[8] }),
    .Y(_013_[8])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3364 /* _145_ */ (
    .A({ add_or_sub[9], _000_, _011_[9], mult1[9] }),
    .Y(_013_[9])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3365 /* _146_ */ (
    .A({ add_or_sub[10], _000_, _011_[10], mult1[10] }),
    .Y(_013_[10])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3366 /* _147_ */ (
    .A({ add_or_sub[11], _000_, _011_[11], mult1[11] }),
    .Y(_013_[11])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3367 /* _148_ */ (
    .A({ add_or_sub[12], _000_, _011_[12], mult1[12] }),
    .Y(_013_[12])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3368 /* _149_ */ (
    .A({ add_or_sub[13], _000_, _011_[13], mult1[13] }),
    .Y(_013_[13])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3369 /* _150_ */ (
    .A({ add_or_sub[14], _000_, _011_[14], mult1[14] }),
    .Y(_013_[14])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3370 /* _151_ */ (
    .A({ add_or_sub[15], _000_, _011_[15], mult1[15] }),
    .Y(_013_[15])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3371 /* _152_ */ (
    .A({ add_or_sub[16], _000_, _011_[16], mult1[16] }),
    .Y(_013_[16])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3372 /* _153_ */ (
    .A({ add_or_sub[17], _000_, _011_[17], mult1[17] }),
    .Y(_013_[17])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3373 /* _154_ */ (
    .A({ add_or_sub[18], _000_, _011_[18], mult1[18] }),
    .Y(_013_[18])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3374 /* _155_ */ (
    .A({ add_or_sub[32], _000_, _008_[0], mult2[0] }),
    .Y(_016_[0])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3375 /* _156_ */ (
    .A({ add_or_sub[33], _000_, _008_[1], mult2[1] }),
    .Y(_016_[1])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3376 /* _157_ */ (
    .A({ add_or_sub[34], _000_, _008_[2], mult2[2] }),
    .Y(_016_[2])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3377 /* _158_ */ (
    .A({ add_or_sub[35], _000_, _008_[3], mult2[3] }),
    .Y(_016_[3])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3378 /* _159_ */ (
    .A({ add_or_sub[36], _000_, _008_[4], mult2[4] }),
    .Y(_016_[4])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3379 /* _160_ */ (
    .A({ add_or_sub[37], _000_, _008_[5], mult2[5] }),
    .Y(_016_[5])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3380 /* _161_ */ (
    .A({ add_or_sub[38], _000_, _008_[6], mult2[6] }),
    .Y(_016_[6])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3381 /* _162_ */ (
    .A({ add_or_sub[39], _000_, _008_[7], mult2[7] }),
    .Y(_016_[7])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3382 /* _163_ */ (
    .A({ add_or_sub[40], _000_, _008_[8], mult2[8] }),
    .Y(_016_[8])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3383 /* _164_ */ (
    .A({ add_or_sub[41], _000_, _008_[9], mult2[9] }),
    .Y(_016_[9])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3384 /* _165_ */ (
    .A({ add_or_sub[42], _000_, _008_[10], mult2[10] }),
    .Y(_016_[10])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3385 /* _166_ */ (
    .A({ add_or_sub[43], _000_, _008_[11], mult2[11] }),
    .Y(_016_[11])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3386 /* _167_ */ (
    .A({ add_or_sub[44], _000_, _008_[12], mult2[12] }),
    .Y(_016_[12])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3387 /* _168_ */ (
    .A({ add_or_sub[45], _000_, _008_[13], mult2[13] }),
    .Y(_016_[13])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3388 /* _169_ */ (
    .A({ add_or_sub[46], _000_, _008_[14], mult2[14] }),
    .Y(_016_[14])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3389 /* _170_ */ (
    .A({ add_or_sub[47], _000_, _008_[15], mult2[15] }),
    .Y(_016_[15])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3390 /* _171_ */ (
    .A({ add_or_sub[48], _000_, _008_[16], mult2[16] }),
    .Y(_016_[16])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3391 /* _172_ */ (
    .A({ add_or_sub[49], _000_, _008_[17], mult2[17] }),
    .Y(_016_[17])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3392 /* _173_ */ (
    .A({ add_or_sub[50], _000_, _008_[18], mult2[18] }),
    .Y(_016_[18])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3393 /* _174_ */ (
    .A(mult1[0]),
    .Y(_009_[0])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3394 /* _175_ */ (
    .A(mult1[1]),
    .Y(_009_[1])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3395 /* _176_ */ (
    .A(mult1[2]),
    .Y(_009_[2])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3396 /* _177_ */ (
    .A(mult1[3]),
    .Y(_009_[3])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3397 /* _178_ */ (
    .A(mult1[4]),
    .Y(_009_[4])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3398 /* _179_ */ (
    .A(mult1[5]),
    .Y(_009_[5])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3399 /* _180_ */ (
    .A(mult1[6]),
    .Y(_009_[6])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3400 /* _181_ */ (
    .A(mult1[7]),
    .Y(_009_[7])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3401 /* _182_ */ (
    .A(mult1[8]),
    .Y(_009_[8])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3402 /* _183_ */ (
    .A(mult1[9]),
    .Y(_009_[9])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3403 /* _184_ */ (
    .A(mult1[10]),
    .Y(_009_[10])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3404 /* _185_ */ (
    .A(mult1[11]),
    .Y(_009_[11])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3405 /* _186_ */ (
    .A(mult1[12]),
    .Y(_009_[12])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3406 /* _187_ */ (
    .A(mult1[13]),
    .Y(_009_[13])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3407 /* _188_ */ (
    .A(mult1[14]),
    .Y(_009_[14])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3408 /* _189_ */ (
    .A(mult1[15]),
    .Y(_009_[15])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3409 /* _190_ */ (
    .A(mult1[16]),
    .Y(_009_[16])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3410 /* _191_ */ (
    .A(mult1[17]),
    .Y(_009_[17])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3411 /* _192_ */ (
    .A(mult1[18]),
    .Y(_009_[18])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3412 /* _193_ */ (
    .A(mult2[0]),
    .Y(_018_[0])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3413 /* _194_ */ (
    .A(mult2[1]),
    .Y(_018_[1])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3414 /* _195_ */ (
    .A(mult2[2]),
    .Y(_018_[2])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3415 /* _196_ */ (
    .A(mult2[3]),
    .Y(_018_[3])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3416 /* _197_ */ (
    .A(mult2[4]),
    .Y(_018_[4])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3417 /* _198_ */ (
    .A(mult2[5]),
    .Y(_018_[5])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3418 /* _199_ */ (
    .A(mult2[6]),
    .Y(_018_[6])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3419 /* _200_ */ (
    .A(mult2[7]),
    .Y(_018_[7])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3420 /* _201_ */ (
    .A(mult2[8]),
    .Y(_018_[8])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3421 /* _202_ */ (
    .A(mult2[9]),
    .Y(_018_[9])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3422 /* _203_ */ (
    .A(mult2[10]),
    .Y(_018_[10])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3423 /* _204_ */ (
    .A(mult2[11]),
    .Y(_018_[11])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3424 /* _205_ */ (
    .A(mult2[12]),
    .Y(_018_[12])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3425 /* _206_ */ (
    .A(mult2[13]),
    .Y(_018_[13])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3426 /* _207_ */ (
    .A(mult2[14]),
    .Y(_018_[14])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3427 /* _208_ */ (
    .A(mult2[15]),
    .Y(_018_[15])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3428 /* _209_ */ (
    .A(mult2[16]),
    .Y(_018_[16])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3429 /* _210_ */ (
    .A(mult2[17]),
    .Y(_018_[17])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3430 /* _211_ */ (
    .A(mult2[18]),
    .Y(_018_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[0].genblk1.my_adder /* _212_ */ (
    .CIN(_007_[0]),
    .COUT(_007_[1]),
    .G(1'b0),
    .O(_008_[0]),
    .P(_018_[0])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[10].genblk1.my_adder /* _213_ */ (
    .CIN(_007_[10]),
    .COUT(_007_[11]),
    .G(1'b0),
    .O(_008_[10]),
    .P(_018_[10])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[11].genblk1.my_adder /* _214_ */ (
    .CIN(_007_[11]),
    .COUT(_007_[12]),
    .G(1'b0),
    .O(_008_[11]),
    .P(_018_[11])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[12].genblk1.my_adder /* _215_ */ (
    .CIN(_007_[12]),
    .COUT(_007_[13]),
    .G(1'b0),
    .O(_008_[12]),
    .P(_018_[12])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[13].genblk1.my_adder /* _216_ */ (
    .CIN(_007_[13]),
    .COUT(_007_[14]),
    .G(1'b0),
    .O(_008_[13]),
    .P(_018_[13])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[14].genblk1.my_adder /* _217_ */ (
    .CIN(_007_[14]),
    .COUT(_007_[15]),
    .G(1'b0),
    .O(_008_[14]),
    .P(_018_[14])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[15].genblk1.my_adder /* _218_ */ (
    .CIN(_007_[15]),
    .COUT(_007_[16]),
    .G(1'b0),
    .O(_008_[15]),
    .P(_018_[15])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[16].genblk1.my_adder /* _219_ */ (
    .CIN(_007_[16]),
    .COUT(_007_[17]),
    .G(1'b0),
    .O(_008_[16]),
    .P(_018_[16])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[17].genblk1.my_adder /* _220_ */ (
    .CIN(_007_[17]),
    .COUT(_007_[18]),
    .G(1'b0),
    .O(_008_[17]),
    .P(_018_[17])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[18].genblk1.my_adder /* _221_ */ (
    .CIN(_007_[18]),
    .COUT(_007_[19]),
    .G(1'b0),
    .O(_008_[18]),
    .P(_018_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[1].genblk1.my_adder /* _222_ */ (
    .CIN(_007_[1]),
    .COUT(_007_[2]),
    .G(1'b0),
    .O(_008_[1]),
    .P(_018_[1])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[2].genblk1.my_adder /* _223_ */ (
    .CIN(_007_[2]),
    .COUT(_007_[3]),
    .G(1'b0),
    .O(_008_[2]),
    .P(_018_[2])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[3].genblk1.my_adder /* _224_ */ (
    .CIN(_007_[3]),
    .COUT(_007_[4]),
    .G(1'b0),
    .O(_008_[3]),
    .P(_018_[3])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[4].genblk1.my_adder /* _225_ */ (
    .CIN(_007_[4]),
    .COUT(_007_[5]),
    .G(1'b0),
    .O(_008_[4]),
    .P(_018_[4])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[5].genblk1.my_adder /* _226_ */ (
    .CIN(_007_[5]),
    .COUT(_007_[6]),
    .G(1'b0),
    .O(_008_[5]),
    .P(_018_[5])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[6].genblk1.my_adder /* _227_ */ (
    .CIN(_007_[6]),
    .COUT(_007_[7]),
    .G(1'b0),
    .O(_008_[6]),
    .P(_018_[6])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[7].genblk1.my_adder /* _228_ */ (
    .CIN(_007_[7]),
    .COUT(_007_[8]),
    .G(1'b0),
    .O(_008_[7]),
    .P(_018_[7])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[8].genblk1.my_adder /* _229_ */ (
    .CIN(_007_[8]),
    .COUT(_007_[9]),
    .G(1'b0),
    .O(_008_[8]),
    .P(_018_[8])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[9].genblk1.my_adder /* _230_ */ (
    .CIN(_007_[9]),
    .COUT(_007_[10]),
    .G(1'b0),
    .O(_008_[9]),
    .P(_018_[9])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.intermediate_adder /* _231_ */ (
    .COUT(_007_[0]),
    .G(1'b1),
    .P(1'b0)
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[0].genblk1.my_adder /* _232_ */ (
    .CIN(_010_[0]),
    .COUT(_010_[1]),
    .G(1'b0),
    .O(_011_[0]),
    .P(_009_[0])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[10].genblk1.my_adder /* _233_ */ (
    .CIN(_010_[10]),
    .COUT(_010_[11]),
    .G(1'b0),
    .O(_011_[10]),
    .P(_009_[10])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[11].genblk1.my_adder /* _234_ */ (
    .CIN(_010_[11]),
    .COUT(_010_[12]),
    .G(1'b0),
    .O(_011_[11]),
    .P(_009_[11])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[12].genblk1.my_adder /* _235_ */ (
    .CIN(_010_[12]),
    .COUT(_010_[13]),
    .G(1'b0),
    .O(_011_[12]),
    .P(_009_[12])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[13].genblk1.my_adder /* _236_ */ (
    .CIN(_010_[13]),
    .COUT(_010_[14]),
    .G(1'b0),
    .O(_011_[13]),
    .P(_009_[13])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[14].genblk1.my_adder /* _237_ */ (
    .CIN(_010_[14]),
    .COUT(_010_[15]),
    .G(1'b0),
    .O(_011_[14]),
    .P(_009_[14])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[15].genblk1.my_adder /* _238_ */ (
    .CIN(_010_[15]),
    .COUT(_010_[16]),
    .G(1'b0),
    .O(_011_[15]),
    .P(_009_[15])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[16].genblk1.my_adder /* _239_ */ (
    .CIN(_010_[16]),
    .COUT(_010_[17]),
    .G(1'b0),
    .O(_011_[16]),
    .P(_009_[16])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[17].genblk1.my_adder /* _240_ */ (
    .CIN(_010_[17]),
    .COUT(_010_[18]),
    .G(1'b0),
    .O(_011_[17]),
    .P(_009_[17])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[18].genblk1.my_adder /* _241_ */ (
    .CIN(_010_[18]),
    .COUT(_010_[19]),
    .G(1'b0),
    .O(_011_[18]),
    .P(_009_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[1].genblk1.my_adder /* _242_ */ (
    .CIN(_010_[1]),
    .COUT(_010_[2]),
    .G(1'b0),
    .O(_011_[1]),
    .P(_009_[1])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[2].genblk1.my_adder /* _243_ */ (
    .CIN(_010_[2]),
    .COUT(_010_[3]),
    .G(1'b0),
    .O(_011_[2]),
    .P(_009_[2])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[3].genblk1.my_adder /* _244_ */ (
    .CIN(_010_[3]),
    .COUT(_010_[4]),
    .G(1'b0),
    .O(_011_[3]),
    .P(_009_[3])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[4].genblk1.my_adder /* _245_ */ (
    .CIN(_010_[4]),
    .COUT(_010_[5]),
    .G(1'b0),
    .O(_011_[4]),
    .P(_009_[4])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[5].genblk1.my_adder /* _246_ */ (
    .CIN(_010_[5]),
    .COUT(_010_[6]),
    .G(1'b0),
    .O(_011_[5]),
    .P(_009_[5])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[6].genblk1.my_adder /* _247_ */ (
    .CIN(_010_[6]),
    .COUT(_010_[7]),
    .G(1'b0),
    .O(_011_[6]),
    .P(_009_[6])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[7].genblk1.my_adder /* _248_ */ (
    .CIN(_010_[7]),
    .COUT(_010_[8]),
    .G(1'b0),
    .O(_011_[7]),
    .P(_009_[7])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[8].genblk1.my_adder /* _249_ */ (
    .CIN(_010_[8]),
    .COUT(_010_[9]),
    .G(1'b0),
    .O(_011_[8]),
    .P(_009_[8])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[9].genblk1.my_adder /* _250_ */ (
    .CIN(_010_[9]),
    .COUT(_010_[10]),
    .G(1'b0),
    .O(_011_[9]),
    .P(_009_[9])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.intermediate_adder /* _251_ */ (
    .COUT(_010_[0]),
    .G(1'b1),
    .P(1'b0)
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[0].genblk1.my_adder /* _252_ */ (
    .CIN(_012_[0]),
    .COUT(_012_[1]),
    .G(add_or_sub[0]),
    .O(_014_[0]),
    .P(_013_[0])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[10].genblk1.my_adder /* _253_ */ (
    .CIN(_012_[10]),
    .COUT(_012_[11]),
    .G(add_or_sub[10]),
    .O(_014_[10]),
    .P(_013_[10])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[11].genblk1.my_adder /* _254_ */ (
    .CIN(_012_[11]),
    .COUT(_012_[12]),
    .G(add_or_sub[11]),
    .O(_014_[11]),
    .P(_013_[11])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[12].genblk1.my_adder /* _255_ */ (
    .CIN(_012_[12]),
    .COUT(_012_[13]),
    .G(add_or_sub[12]),
    .O(_014_[12]),
    .P(_013_[12])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[13].genblk1.my_adder /* _256_ */ (
    .CIN(_012_[13]),
    .COUT(_012_[14]),
    .G(add_or_sub[13]),
    .O(_014_[13]),
    .P(_013_[13])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[14].genblk1.my_adder /* _257_ */ (
    .CIN(_012_[14]),
    .COUT(_012_[15]),
    .G(add_or_sub[14]),
    .O(_014_[14]),
    .P(_013_[14])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[15].genblk1.my_adder /* _258_ */ (
    .CIN(_012_[15]),
    .COUT(_012_[16]),
    .G(add_or_sub[15]),
    .O(_014_[15]),
    .P(_013_[15])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[16].genblk1.my_adder /* _259_ */ (
    .CIN(_012_[16]),
    .COUT(_012_[17]),
    .G(add_or_sub[16]),
    .O(_014_[16]),
    .P(_013_[16])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[17].genblk1.my_adder /* _260_ */ (
    .CIN(_012_[17]),
    .COUT(_012_[18]),
    .G(add_or_sub[17]),
    .O(_014_[17]),
    .P(_013_[17])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[18].genblk1.my_adder /* _261_ */ (
    .CIN(_012_[18]),
    .COUT(_012_[19]),
    .G(add_or_sub[18]),
    .O(_014_[18]),
    .P(_013_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[1].genblk1.my_adder /* _262_ */ (
    .CIN(_012_[1]),
    .COUT(_012_[2]),
    .G(add_or_sub[1]),
    .O(_014_[1]),
    .P(_013_[1])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[2].genblk1.my_adder /* _263_ */ (
    .CIN(_012_[2]),
    .COUT(_012_[3]),
    .G(add_or_sub[2]),
    .O(_014_[2]),
    .P(_013_[2])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[3].genblk1.my_adder /* _264_ */ (
    .CIN(_012_[3]),
    .COUT(_012_[4]),
    .G(add_or_sub[3]),
    .O(_014_[3]),
    .P(_013_[3])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[4].genblk1.my_adder /* _265_ */ (
    .CIN(_012_[4]),
    .COUT(_012_[5]),
    .G(add_or_sub[4]),
    .O(_014_[4]),
    .P(_013_[4])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[5].genblk1.my_adder /* _266_ */ (
    .CIN(_012_[5]),
    .COUT(_012_[6]),
    .G(add_or_sub[5]),
    .O(_014_[5]),
    .P(_013_[5])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[6].genblk1.my_adder /* _267_ */ (
    .CIN(_012_[6]),
    .COUT(_012_[7]),
    .G(add_or_sub[6]),
    .O(_014_[6]),
    .P(_013_[6])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[7].genblk1.my_adder /* _268_ */ (
    .CIN(_012_[7]),
    .COUT(_012_[8]),
    .G(add_or_sub[7]),
    .O(_014_[7]),
    .P(_013_[7])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[8].genblk1.my_adder /* _269_ */ (
    .CIN(_012_[8]),
    .COUT(_012_[9]),
    .G(add_or_sub[8]),
    .O(_014_[8]),
    .P(_013_[8])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[9].genblk1.my_adder /* _270_ */ (
    .CIN(_012_[9]),
    .COUT(_012_[10]),
    .G(add_or_sub[9]),
    .O(_014_[9]),
    .P(_013_[9])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.intermediate_adder /* _271_ */ (
    .COUT(_012_[0]),
    .G(1'b1),
    .P(1'b0)
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[0].genblk1.my_adder /* _272_ */ (
    .CIN(_015_[0]),
    .COUT(_015_[1]),
    .G(add_or_sub[32]),
    .O(_017_[0]),
    .P(_016_[0])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[10].genblk1.my_adder /* _273_ */ (
    .CIN(_015_[10]),
    .COUT(_015_[11]),
    .G(add_or_sub[42]),
    .O(_017_[10]),
    .P(_016_[10])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[11].genblk1.my_adder /* _274_ */ (
    .CIN(_015_[11]),
    .COUT(_015_[12]),
    .G(add_or_sub[43]),
    .O(_017_[11]),
    .P(_016_[11])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[12].genblk1.my_adder /* _275_ */ (
    .CIN(_015_[12]),
    .COUT(_015_[13]),
    .G(add_or_sub[44]),
    .O(_017_[12]),
    .P(_016_[12])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[13].genblk1.my_adder /* _276_ */ (
    .CIN(_015_[13]),
    .COUT(_015_[14]),
    .G(add_or_sub[45]),
    .O(_017_[13]),
    .P(_016_[13])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[14].genblk1.my_adder /* _277_ */ (
    .CIN(_015_[14]),
    .COUT(_015_[15]),
    .G(add_or_sub[46]),
    .O(_017_[14]),
    .P(_016_[14])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[15].genblk1.my_adder /* _278_ */ (
    .CIN(_015_[15]),
    .COUT(_015_[16]),
    .G(add_or_sub[47]),
    .O(_017_[15]),
    .P(_016_[15])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[16].genblk1.my_adder /* _279_ */ (
    .CIN(_015_[16]),
    .COUT(_015_[17]),
    .G(add_or_sub[48]),
    .O(_017_[16]),
    .P(_016_[16])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[17].genblk1.my_adder /* _280_ */ (
    .CIN(_015_[17]),
    .COUT(_015_[18]),
    .G(add_or_sub[49]),
    .O(_017_[17]),
    .P(_016_[17])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[18].genblk1.my_adder /* _281_ */ (
    .CIN(_015_[18]),
    .COUT(_015_[19]),
    .G(add_or_sub[50]),
    .O(_017_[18]),
    .P(_016_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[1].genblk1.my_adder /* _282_ */ (
    .CIN(_015_[1]),
    .COUT(_015_[2]),
    .G(add_or_sub[33]),
    .O(_017_[1]),
    .P(_016_[1])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[2].genblk1.my_adder /* _283_ */ (
    .CIN(_015_[2]),
    .COUT(_015_[3]),
    .G(add_or_sub[34]),
    .O(_017_[2]),
    .P(_016_[2])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[3].genblk1.my_adder /* _284_ */ (
    .CIN(_015_[3]),
    .COUT(_015_[4]),
    .G(add_or_sub[35]),
    .O(_017_[3]),
    .P(_016_[3])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[4].genblk1.my_adder /* _285_ */ (
    .CIN(_015_[4]),
    .COUT(_015_[5]),
    .G(add_or_sub[36]),
    .O(_017_[4]),
    .P(_016_[4])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[5].genblk1.my_adder /* _286_ */ (
    .CIN(_015_[5]),
    .COUT(_015_[6]),
    .G(add_or_sub[37]),
    .O(_017_[5]),
    .P(_016_[5])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[6].genblk1.my_adder /* _287_ */ (
    .CIN(_015_[6]),
    .COUT(_015_[7]),
    .G(add_or_sub[38]),
    .O(_017_[6]),
    .P(_016_[6])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[7].genblk1.my_adder /* _288_ */ (
    .CIN(_015_[7]),
    .COUT(_015_[8]),
    .G(add_or_sub[39]),
    .O(_017_[7]),
    .P(_016_[7])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[8].genblk1.my_adder /* _289_ */ (
    .CIN(_015_[8]),
    .COUT(_015_[9]),
    .G(add_or_sub[40]),
    .O(_017_[8]),
    .P(_016_[8])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[9].genblk1.my_adder /* _290_ */ (
    .CIN(_015_[9]),
    .COUT(_015_[10]),
    .G(add_or_sub[41]),
    .O(_017_[9]),
    .P(_016_[9])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.intermediate_adder /* _291_ */ (
    .COUT(_015_[0]),
    .G(1'b1),
    .P(1'b0)
  );
  DSP19X2 #(
    .COEFF1_0(10'b0000000000),
    .COEFF1_1(10'b0000000000),
    .COEFF1_2(10'b0000000000),
    .COEFF1_3(10'b0000000000),
    .COEFF2_0(10'b0000000000),
    .COEFF2_1(10'b0000000000),
    .COEFF2_2(10'b0000000000),
    .COEFF2_3(10'b0000000000),
    .DSP_MODE("MULTIPLY"),
    .INPUT_REG_EN("FALSE"),
    .OUTPUT_REG_EN("FALSE")
  ) \simd_$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/16July/Validation/RTL_testcases/DSP_inference19x2/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2/results_dir/.././rtl/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.v:17$3_$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/16July/Validation/RTL_testcases/DSP_inference19x2/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2/results_dir/.././rtl/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.v:18$4 /* \simd_$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/16July/Validation/RTL_testcases/DSP_inference19x2/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2/results_dir/.././rtl/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.v:17$3_$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/16July/Validation/RTL_testcases/DSP_inference19x2/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2/results_dir/.././rtl/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.v:18$4  */ (
    .A1(_006_),
    .A2(_005_),
    .B1(_004_),
    .B2(_003_),
    .FEEDBACK(3'b000),
    .UNSIGNED_A(1'b1),
    .UNSIGNED_B(1'b1),
    .Z1(mult1),
    .Z2(mult2)
  );
  assign _018_[31:19] = 13'b1111111111111;
  assign _007_[31] = _007_[32];
  assign _008_[30] = _008_[31];
  assign _009_[31:19] = 13'b1111111111111;
  assign _010_[31] = _010_[32];
  assign _011_[30] = _011_[31];
  assign { add_or_sub[63:51], add_or_sub[31:19] } = 26'bxxxxxxxxxxxxxxxxxxxxxxxxxx;
endmodule
