/* Generated by Yosys 0.38 (git sha1 d2189b06a, gcc 11.2.1 -fPIC -Os) */

module dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2(clk, reset, subtract, A1, A2, B1, B2, P);
  input [9:0] A1;
  input [9:0] A2;
  input [8:0] B1;
  input [8:0] B2;
  output [37:0] P;
  input clk;
  input reset;
  input subtract;
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire [31:0] _237_;
  wire [32:0] _238_;
  wire [31:0] _239_;
  wire [31:0] _240_;
  wire [32:0] _241_;
  wire [31:0] _242_;
  wire [32:0] _243_;
  wire [31:0] _244_;
  wire [31:0] _245_;
  wire [32:0] _246_;
  wire [31:0] _247_;
  wire [31:0] _248_;
  wire _249_;
  wire [9:0] _250_;
  wire [9:0] _251_;
  wire [8:0] _252_;
  wire [8:0] _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire [37:0] _257_;
  wire [9:0] A1;
  wire [9:0] A2;
  wire [8:0] B1;
  wire [8:0] B2;
  wire [37:0] P;
  wire [63:0] add_or_sub;
  wire clk;
  wire [18:0] mult1;
  wire [18:0] mult2;
  wire reset;
  wire subtract;
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1 /* _258_ */ (
    .O(_250_[0]),
    .EN(1'b1),
    .I(A1[0])
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1164 /* _259_ */ (
    .C(_249_),
    .D(add_or_sub[0]),
    .E(1'b1),
    .Q(_257_[0]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1165 /* _260_ */ (
    .C(_249_),
    .D(_245_[1]),
    .E(1'b1),
    .Q(add_or_sub[1]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1166 /* _261_ */ (
    .C(_249_),
    .D(add_or_sub[1]),
    .E(1'b1),
    .Q(_257_[1]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1167 /* _262_ */ (
    .C(_249_),
    .D(_245_[2]),
    .E(1'b1),
    .Q(add_or_sub[2]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1168 /* _263_ */ (
    .C(_249_),
    .D(add_or_sub[2]),
    .E(1'b1),
    .Q(_257_[2]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1169 /* _264_ */ (
    .C(_249_),
    .D(_245_[3]),
    .E(1'b1),
    .Q(add_or_sub[3]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1170 /* _265_ */ (
    .C(_249_),
    .D(add_or_sub[3]),
    .E(1'b1),
    .Q(_257_[3]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1171 /* _266_ */ (
    .C(_249_),
    .D(_245_[4]),
    .E(1'b1),
    .Q(add_or_sub[4]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1172 /* _267_ */ (
    .C(_249_),
    .D(add_or_sub[4]),
    .E(1'b1),
    .Q(_257_[4]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1173 /* _268_ */ (
    .C(_249_),
    .D(_245_[5]),
    .E(1'b1),
    .Q(add_or_sub[5]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1174 /* _269_ */ (
    .C(_249_),
    .D(add_or_sub[5]),
    .E(1'b1),
    .Q(_257_[5]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1175 /* _270_ */ (
    .C(_249_),
    .D(_245_[6]),
    .E(1'b1),
    .Q(add_or_sub[6]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1176 /* _271_ */ (
    .C(_249_),
    .D(add_or_sub[6]),
    .E(1'b1),
    .Q(_257_[6]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1177 /* _272_ */ (
    .C(_249_),
    .D(_245_[7]),
    .E(1'b1),
    .Q(add_or_sub[7]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1178 /* _273_ */ (
    .C(_249_),
    .D(add_or_sub[7]),
    .E(1'b1),
    .Q(_257_[7]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1179 /* _274_ */ (
    .C(_249_),
    .D(_245_[8]),
    .E(1'b1),
    .Q(add_or_sub[8]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1180 /* _275_ */ (
    .C(_249_),
    .D(add_or_sub[8]),
    .E(1'b1),
    .Q(_257_[8]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1181 /* _276_ */ (
    .C(_249_),
    .D(_245_[9]),
    .E(1'b1),
    .Q(add_or_sub[9]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1182 /* _277_ */ (
    .C(_249_),
    .D(add_or_sub[9]),
    .E(1'b1),
    .Q(_257_[9]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1183 /* _278_ */ (
    .C(_249_),
    .D(_245_[10]),
    .E(1'b1),
    .Q(add_or_sub[10]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1184 /* _279_ */ (
    .C(_249_),
    .D(add_or_sub[10]),
    .E(1'b1),
    .Q(_257_[10]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1185 /* _280_ */ (
    .C(_249_),
    .D(_245_[11]),
    .E(1'b1),
    .Q(add_or_sub[11]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1186 /* _281_ */ (
    .C(_249_),
    .D(add_or_sub[11]),
    .E(1'b1),
    .Q(_257_[11]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1187 /* _282_ */ (
    .C(_249_),
    .D(_245_[12]),
    .E(1'b1),
    .Q(add_or_sub[12]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1188 /* _283_ */ (
    .C(_249_),
    .D(add_or_sub[12]),
    .E(1'b1),
    .Q(_257_[12]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1189 /* _284_ */ (
    .C(_249_),
    .D(_245_[13]),
    .E(1'b1),
    .Q(add_or_sub[13]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1190 /* _285_ */ (
    .C(_249_),
    .D(add_or_sub[13]),
    .E(1'b1),
    .Q(_257_[13]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1191 /* _286_ */ (
    .C(_249_),
    .D(_245_[14]),
    .E(1'b1),
    .Q(add_or_sub[14]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1192 /* _287_ */ (
    .C(_249_),
    .D(add_or_sub[14]),
    .E(1'b1),
    .Q(_257_[14]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1193 /* _288_ */ (
    .C(_249_),
    .D(_245_[15]),
    .E(1'b1),
    .Q(add_or_sub[15]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1194 /* _289_ */ (
    .C(_249_),
    .D(add_or_sub[15]),
    .E(1'b1),
    .Q(_257_[15]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1195 /* _290_ */ (
    .C(_249_),
    .D(_245_[16]),
    .E(1'b1),
    .Q(add_or_sub[16]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1196 /* _291_ */ (
    .C(_249_),
    .D(add_or_sub[16]),
    .E(1'b1),
    .Q(_257_[16]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1197 /* _292_ */ (
    .C(_249_),
    .D(_245_[17]),
    .E(1'b1),
    .Q(add_or_sub[17]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1198 /* _293_ */ (
    .C(_249_),
    .D(add_or_sub[17]),
    .E(1'b1),
    .Q(_257_[17]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1199 /* _294_ */ (
    .C(_249_),
    .D(_245_[18]),
    .E(1'b1),
    .Q(add_or_sub[18]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1200 /* _295_ */ (
    .C(_249_),
    .D(add_or_sub[18]),
    .E(1'b1),
    .Q(_257_[18]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1201 /* _296_ */ (
    .C(_249_),
    .D(_248_[0]),
    .E(1'b1),
    .Q(add_or_sub[32]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1202 /* _297_ */ (
    .C(_249_),
    .D(add_or_sub[32]),
    .E(1'b1),
    .Q(_257_[19]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1203 /* _298_ */ (
    .C(_249_),
    .D(_248_[1]),
    .E(1'b1),
    .Q(add_or_sub[33]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1204 /* _299_ */ (
    .C(_249_),
    .D(add_or_sub[33]),
    .E(1'b1),
    .Q(_257_[20]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1205 /* _300_ */ (
    .C(_249_),
    .D(_248_[2]),
    .E(1'b1),
    .Q(add_or_sub[34]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1206 /* _301_ */ (
    .C(_249_),
    .D(add_or_sub[34]),
    .E(1'b1),
    .Q(_257_[21]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1207 /* _302_ */ (
    .C(_249_),
    .D(_248_[3]),
    .E(1'b1),
    .Q(add_or_sub[35]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1208 /* _303_ */ (
    .C(_249_),
    .D(add_or_sub[35]),
    .E(1'b1),
    .Q(_257_[22]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1209 /* _304_ */ (
    .C(_249_),
    .D(_248_[4]),
    .E(1'b1),
    .Q(add_or_sub[36]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1210 /* _305_ */ (
    .C(_249_),
    .D(add_or_sub[36]),
    .E(1'b1),
    .Q(_257_[23]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1211 /* _306_ */ (
    .C(_249_),
    .D(_248_[5]),
    .E(1'b1),
    .Q(add_or_sub[37]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1212 /* _307_ */ (
    .C(_249_),
    .D(add_or_sub[37]),
    .E(1'b1),
    .Q(_257_[24]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1213 /* _308_ */ (
    .C(_249_),
    .D(_248_[6]),
    .E(1'b1),
    .Q(add_or_sub[38]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1214 /* _309_ */ (
    .C(_249_),
    .D(add_or_sub[38]),
    .E(1'b1),
    .Q(_257_[25]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1215 /* _310_ */ (
    .C(_249_),
    .D(_248_[7]),
    .E(1'b1),
    .Q(add_or_sub[39]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1216 /* _311_ */ (
    .C(_249_),
    .D(add_or_sub[39]),
    .E(1'b1),
    .Q(_257_[26]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1217 /* _312_ */ (
    .C(_249_),
    .D(_248_[8]),
    .E(1'b1),
    .Q(add_or_sub[40]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1218 /* _313_ */ (
    .C(_249_),
    .D(add_or_sub[40]),
    .E(1'b1),
    .Q(_257_[27]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1219 /* _314_ */ (
    .C(_249_),
    .D(_248_[9]),
    .E(1'b1),
    .Q(add_or_sub[41]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1220 /* _315_ */ (
    .C(_249_),
    .D(add_or_sub[41]),
    .E(1'b1),
    .Q(_257_[28]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1221 /* _316_ */ (
    .C(_249_),
    .D(_248_[10]),
    .E(1'b1),
    .Q(add_or_sub[42]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1222 /* _317_ */ (
    .C(_249_),
    .D(add_or_sub[42]),
    .E(1'b1),
    .Q(_257_[29]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1223 /* _318_ */ (
    .C(_249_),
    .D(_248_[11]),
    .E(1'b1),
    .Q(add_or_sub[43]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1224 /* _319_ */ (
    .C(_249_),
    .D(add_or_sub[43]),
    .E(1'b1),
    .Q(_257_[30]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1225 /* _320_ */ (
    .C(_249_),
    .D(_248_[12]),
    .E(1'b1),
    .Q(add_or_sub[44]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1226 /* _321_ */ (
    .C(_249_),
    .D(add_or_sub[44]),
    .E(1'b1),
    .Q(_257_[31]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1227 /* _322_ */ (
    .C(_249_),
    .D(_248_[13]),
    .E(1'b1),
    .Q(add_or_sub[45]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1228 /* _323_ */ (
    .C(_249_),
    .D(add_or_sub[45]),
    .E(1'b1),
    .Q(_257_[32]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1229 /* _324_ */ (
    .C(_249_),
    .D(_248_[14]),
    .E(1'b1),
    .Q(add_or_sub[46]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1230 /* _325_ */ (
    .C(_249_),
    .D(add_or_sub[46]),
    .E(1'b1),
    .Q(_257_[33]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1231 /* _326_ */ (
    .C(_249_),
    .D(_248_[15]),
    .E(1'b1),
    .Q(add_or_sub[47]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1232 /* _327_ */ (
    .C(_249_),
    .D(add_or_sub[47]),
    .E(1'b1),
    .Q(_257_[34]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1233 /* _328_ */ (
    .C(_249_),
    .D(_248_[16]),
    .E(1'b1),
    .Q(add_or_sub[48]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1234 /* _329_ */ (
    .C(_249_),
    .D(add_or_sub[48]),
    .E(1'b1),
    .Q(_257_[35]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1235 /* _330_ */ (
    .C(_249_),
    .D(_248_[17]),
    .E(1'b1),
    .Q(add_or_sub[49]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1236 /* _331_ */ (
    .C(_249_),
    .D(add_or_sub[49]),
    .E(1'b1),
    .Q(_257_[36]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1237 /* _332_ */ (
    .C(_249_),
    .D(_248_[18]),
    .E(1'b1),
    .Q(add_or_sub[50]),
    .R(_255_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1238 /* _333_ */ (
    .C(_249_),
    .D(add_or_sub[50]),
    .E(1'b1),
    .Q(_257_[37]),
    .R(_255_)
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3355 /* _334_ */ (
    .A({ add_or_sub[0], _256_, _242_[0], mult1[0] }),
    .Y(_244_[0])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3356 /* _335_ */ (
    .A({ add_or_sub[1], _256_, _242_[1], mult1[1] }),
    .Y(_244_[1])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3357 /* _336_ */ (
    .A({ add_or_sub[2], _256_, _242_[2], mult1[2] }),
    .Y(_244_[2])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3358 /* _337_ */ (
    .A({ add_or_sub[3], _256_, _242_[3], mult1[3] }),
    .Y(_244_[3])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3359 /* _338_ */ (
    .A({ add_or_sub[4], _256_, _242_[4], mult1[4] }),
    .Y(_244_[4])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3360 /* _339_ */ (
    .A({ add_or_sub[5], _256_, _242_[5], mult1[5] }),
    .Y(_244_[5])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3361 /* _340_ */ (
    .A({ add_or_sub[6], _256_, _242_[6], mult1[6] }),
    .Y(_244_[6])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3362 /* _341_ */ (
    .A({ add_or_sub[7], _256_, _242_[7], mult1[7] }),
    .Y(_244_[7])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3363 /* _342_ */ (
    .A({ add_or_sub[8], _256_, _242_[8], mult1[8] }),
    .Y(_244_[8])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3364 /* _343_ */ (
    .A({ add_or_sub[9], _256_, _242_[9], mult1[9] }),
    .Y(_244_[9])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3365 /* _344_ */ (
    .A({ add_or_sub[10], _256_, _242_[10], mult1[10] }),
    .Y(_244_[10])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3366 /* _345_ */ (
    .A({ add_or_sub[11], _256_, _242_[11], mult1[11] }),
    .Y(_244_[11])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3367 /* _346_ */ (
    .A({ add_or_sub[12], _256_, _242_[12], mult1[12] }),
    .Y(_244_[12])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3368 /* _347_ */ (
    .A({ add_or_sub[13], _256_, _242_[13], mult1[13] }),
    .Y(_244_[13])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3369 /* _348_ */ (
    .A({ add_or_sub[14], _256_, _242_[14], mult1[14] }),
    .Y(_244_[14])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3370 /* _349_ */ (
    .A({ add_or_sub[15], _256_, _242_[15], mult1[15] }),
    .Y(_244_[15])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3371 /* _350_ */ (
    .A({ add_or_sub[16], _256_, _242_[16], mult1[16] }),
    .Y(_244_[16])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3372 /* _351_ */ (
    .A({ add_or_sub[17], _256_, _242_[17], mult1[17] }),
    .Y(_244_[17])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3373 /* _352_ */ (
    .A({ add_or_sub[18], _256_, _242_[18], mult1[18] }),
    .Y(_244_[18])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3374 /* _353_ */ (
    .A({ add_or_sub[32], _256_, _239_[0], mult2[0] }),
    .Y(_247_[0])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3375 /* _354_ */ (
    .A({ add_or_sub[33], _256_, _239_[1], mult2[1] }),
    .Y(_247_[1])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3376 /* _355_ */ (
    .A({ add_or_sub[34], _256_, _239_[2], mult2[2] }),
    .Y(_247_[2])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3377 /* _356_ */ (
    .A({ add_or_sub[35], _256_, _239_[3], mult2[3] }),
    .Y(_247_[3])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3378 /* _357_ */ (
    .A({ add_or_sub[36], _256_, _239_[4], mult2[4] }),
    .Y(_247_[4])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3379 /* _358_ */ (
    .A({ add_or_sub[37], _256_, _239_[5], mult2[5] }),
    .Y(_247_[5])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3380 /* _359_ */ (
    .A({ add_or_sub[38], _256_, _239_[6], mult2[6] }),
    .Y(_247_[6])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3381 /* _360_ */ (
    .A({ add_or_sub[39], _256_, _239_[7], mult2[7] }),
    .Y(_247_[7])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3382 /* _361_ */ (
    .A({ add_or_sub[40], _256_, _239_[8], mult2[8] }),
    .Y(_247_[8])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3383 /* _362_ */ (
    .A({ add_or_sub[41], _256_, _239_[9], mult2[9] }),
    .Y(_247_[9])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3384 /* _363_ */ (
    .A({ add_or_sub[42], _256_, _239_[10], mult2[10] }),
    .Y(_247_[10])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3385 /* _364_ */ (
    .A({ add_or_sub[43], _256_, _239_[11], mult2[11] }),
    .Y(_247_[11])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3386 /* _365_ */ (
    .A({ add_or_sub[44], _256_, _239_[12], mult2[12] }),
    .Y(_247_[12])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3387 /* _366_ */ (
    .A({ add_or_sub[45], _256_, _239_[13], mult2[13] }),
    .Y(_247_[13])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3388 /* _367_ */ (
    .A({ add_or_sub[46], _256_, _239_[14], mult2[14] }),
    .Y(_247_[14])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3389 /* _368_ */ (
    .A({ add_or_sub[47], _256_, _239_[15], mult2[15] }),
    .Y(_247_[15])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3390 /* _369_ */ (
    .A({ add_or_sub[48], _256_, _239_[16], mult2[16] }),
    .Y(_247_[16])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3391 /* _370_ */ (
    .A({ add_or_sub[49], _256_, _239_[17], mult2[17] }),
    .Y(_247_[17])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3392 /* _371_ */ (
    .A({ add_or_sub[50], _256_, _239_[18], mult2[18] }),
    .Y(_247_[18])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3393 /* _372_ */ (
    .A(mult1[0]),
    .Y(_240_[0])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3394 /* _373_ */ (
    .A(mult1[1]),
    .Y(_240_[1])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3395 /* _374_ */ (
    .A(mult1[2]),
    .Y(_240_[2])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3396 /* _375_ */ (
    .A(mult1[3]),
    .Y(_240_[3])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3397 /* _376_ */ (
    .A(mult1[4]),
    .Y(_240_[4])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3398 /* _377_ */ (
    .A(mult1[5]),
    .Y(_240_[5])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3399 /* _378_ */ (
    .A(mult1[6]),
    .Y(_240_[6])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3400 /* _379_ */ (
    .A(mult1[7]),
    .Y(_240_[7])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3401 /* _380_ */ (
    .A(mult1[8]),
    .Y(_240_[8])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3402 /* _381_ */ (
    .A(mult1[9]),
    .Y(_240_[9])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3403 /* _382_ */ (
    .A(mult1[10]),
    .Y(_240_[10])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3404 /* _383_ */ (
    .A(mult1[11]),
    .Y(_240_[11])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3405 /* _384_ */ (
    .A(mult1[12]),
    .Y(_240_[12])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3406 /* _385_ */ (
    .A(mult1[13]),
    .Y(_240_[13])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3407 /* _386_ */ (
    .A(mult1[14]),
    .Y(_240_[14])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3408 /* _387_ */ (
    .A(mult1[15]),
    .Y(_240_[15])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3409 /* _388_ */ (
    .A(mult1[16]),
    .Y(_240_[16])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3410 /* _389_ */ (
    .A(mult1[17]),
    .Y(_240_[17])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3411 /* _390_ */ (
    .A(mult1[18]),
    .Y(_240_[18])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3412 /* _391_ */ (
    .A(mult2[0]),
    .Y(_237_[0])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3413 /* _392_ */ (
    .A(mult2[1]),
    .Y(_237_[1])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3414 /* _393_ */ (
    .A(mult2[2]),
    .Y(_237_[2])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3415 /* _394_ */ (
    .A(mult2[3]),
    .Y(_237_[3])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3416 /* _395_ */ (
    .A(mult2[4]),
    .Y(_237_[4])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3417 /* _396_ */ (
    .A(mult2[5]),
    .Y(_237_[5])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3418 /* _397_ */ (
    .A(mult2[6]),
    .Y(_237_[6])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3419 /* _398_ */ (
    .A(mult2[7]),
    .Y(_237_[7])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3420 /* _399_ */ (
    .A(mult2[8]),
    .Y(_237_[8])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3421 /* _400_ */ (
    .A(mult2[9]),
    .Y(_237_[9])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3422 /* _401_ */ (
    .A(mult2[10]),
    .Y(_237_[10])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3423 /* _402_ */ (
    .A(mult2[11]),
    .Y(_237_[11])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3424 /* _403_ */ (
    .A(mult2[12]),
    .Y(_237_[12])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3425 /* _404_ */ (
    .A(mult2[13]),
    .Y(_237_[13])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3426 /* _405_ */ (
    .A(mult2[14]),
    .Y(_237_[14])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3427 /* _406_ */ (
    .A(mult2[15]),
    .Y(_237_[15])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3428 /* _407_ */ (
    .A(mult2[16]),
    .Y(_237_[16])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3429 /* _408_ */ (
    .A(mult2[17]),
    .Y(_237_[17])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3430 /* _409_ */ (
    .A(mult2[18]),
    .Y(_237_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[0].genblk1.my_adder /* _410_ */ (
    .CIN(_238_[0]),
    .COUT(_238_[1]),
    .G(1'b0),
    .O(_239_[0]),
    .P(_237_[0])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[10].genblk1.my_adder /* _411_ */ (
    .CIN(_238_[10]),
    .COUT(_238_[11]),
    .G(1'b0),
    .O(_239_[10]),
    .P(_237_[10])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[11].genblk1.my_adder /* _412_ */ (
    .CIN(_238_[11]),
    .COUT(_238_[12]),
    .G(1'b0),
    .O(_239_[11]),
    .P(_237_[11])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[12].genblk1.my_adder /* _413_ */ (
    .CIN(_238_[12]),
    .COUT(_238_[13]),
    .G(1'b0),
    .O(_239_[12]),
    .P(_237_[12])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[13].genblk1.my_adder /* _414_ */ (
    .CIN(_238_[13]),
    .COUT(_238_[14]),
    .G(1'b0),
    .O(_239_[13]),
    .P(_237_[13])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[14].genblk1.my_adder /* _415_ */ (
    .CIN(_238_[14]),
    .COUT(_238_[15]),
    .G(1'b0),
    .O(_239_[14]),
    .P(_237_[14])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[15].genblk1.my_adder /* _416_ */ (
    .CIN(_238_[15]),
    .COUT(_238_[16]),
    .G(1'b0),
    .O(_239_[15]),
    .P(_237_[15])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[16].genblk1.my_adder /* _417_ */ (
    .CIN(_238_[16]),
    .COUT(_238_[17]),
    .G(1'b0),
    .O(_239_[16]),
    .P(_237_[16])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[17].genblk1.my_adder /* _418_ */ (
    .CIN(_238_[17]),
    .COUT(_238_[18]),
    .G(1'b0),
    .O(_239_[17]),
    .P(_237_[17])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[18].genblk1.my_adder /* _419_ */ (
    .CIN(_238_[18]),
    .COUT(_238_[19]),
    .G(1'b0),
    .O(_239_[18]),
    .P(_237_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[1].genblk1.my_adder /* _420_ */ (
    .CIN(_238_[1]),
    .COUT(_238_[2]),
    .G(1'b0),
    .O(_239_[1]),
    .P(_237_[1])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[2].genblk1.my_adder /* _421_ */ (
    .CIN(_238_[2]),
    .COUT(_238_[3]),
    .G(1'b0),
    .O(_239_[2]),
    .P(_237_[2])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[3].genblk1.my_adder /* _422_ */ (
    .CIN(_238_[3]),
    .COUT(_238_[4]),
    .G(1'b0),
    .O(_239_[3]),
    .P(_237_[3])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[4].genblk1.my_adder /* _423_ */ (
    .CIN(_238_[4]),
    .COUT(_238_[5]),
    .G(1'b0),
    .O(_239_[4]),
    .P(_237_[4])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[5].genblk1.my_adder /* _424_ */ (
    .CIN(_238_[5]),
    .COUT(_238_[6]),
    .G(1'b0),
    .O(_239_[5]),
    .P(_237_[5])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[6].genblk1.my_adder /* _425_ */ (
    .CIN(_238_[6]),
    .COUT(_238_[7]),
    .G(1'b0),
    .O(_239_[6]),
    .P(_237_[6])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[7].genblk1.my_adder /* _426_ */ (
    .CIN(_238_[7]),
    .COUT(_238_[8]),
    .G(1'b0),
    .O(_239_[7]),
    .P(_237_[7])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[8].genblk1.my_adder /* _427_ */ (
    .CIN(_238_[8]),
    .COUT(_238_[9]),
    .G(1'b0),
    .O(_239_[8]),
    .P(_237_[8])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[9].genblk1.my_adder /* _428_ */ (
    .CIN(_238_[9]),
    .COUT(_238_[10]),
    .G(1'b0),
    .O(_239_[9]),
    .P(_237_[9])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.intermediate_adder /* _429_ */ (
    .COUT(_238_[0]),
    .G(1'b1),
    .P(1'b0)
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[0].genblk1.my_adder /* _430_ */ (
    .CIN(_241_[0]),
    .COUT(_241_[1]),
    .G(1'b0),
    .O(_242_[0]),
    .P(_240_[0])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[10].genblk1.my_adder /* _431_ */ (
    .CIN(_241_[10]),
    .COUT(_241_[11]),
    .G(1'b0),
    .O(_242_[10]),
    .P(_240_[10])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[11].genblk1.my_adder /* _432_ */ (
    .CIN(_241_[11]),
    .COUT(_241_[12]),
    .G(1'b0),
    .O(_242_[11]),
    .P(_240_[11])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[12].genblk1.my_adder /* _433_ */ (
    .CIN(_241_[12]),
    .COUT(_241_[13]),
    .G(1'b0),
    .O(_242_[12]),
    .P(_240_[12])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[13].genblk1.my_adder /* _434_ */ (
    .CIN(_241_[13]),
    .COUT(_241_[14]),
    .G(1'b0),
    .O(_242_[13]),
    .P(_240_[13])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[14].genblk1.my_adder /* _435_ */ (
    .CIN(_241_[14]),
    .COUT(_241_[15]),
    .G(1'b0),
    .O(_242_[14]),
    .P(_240_[14])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[15].genblk1.my_adder /* _436_ */ (
    .CIN(_241_[15]),
    .COUT(_241_[16]),
    .G(1'b0),
    .O(_242_[15]),
    .P(_240_[15])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[16].genblk1.my_adder /* _437_ */ (
    .CIN(_241_[16]),
    .COUT(_241_[17]),
    .G(1'b0),
    .O(_242_[16]),
    .P(_240_[16])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[17].genblk1.my_adder /* _438_ */ (
    .CIN(_241_[17]),
    .COUT(_241_[18]),
    .G(1'b0),
    .O(_242_[17]),
    .P(_240_[17])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[18].genblk1.my_adder /* _439_ */ (
    .CIN(_241_[18]),
    .COUT(_241_[19]),
    .G(1'b0),
    .O(_242_[18]),
    .P(_240_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[1].genblk1.my_adder /* _440_ */ (
    .CIN(_241_[1]),
    .COUT(_241_[2]),
    .G(1'b0),
    .O(_242_[1]),
    .P(_240_[1])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[2].genblk1.my_adder /* _441_ */ (
    .CIN(_241_[2]),
    .COUT(_241_[3]),
    .G(1'b0),
    .O(_242_[2]),
    .P(_240_[2])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[3].genblk1.my_adder /* _442_ */ (
    .CIN(_241_[3]),
    .COUT(_241_[4]),
    .G(1'b0),
    .O(_242_[3]),
    .P(_240_[3])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[4].genblk1.my_adder /* _443_ */ (
    .CIN(_241_[4]),
    .COUT(_241_[5]),
    .G(1'b0),
    .O(_242_[4]),
    .P(_240_[4])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[5].genblk1.my_adder /* _444_ */ (
    .CIN(_241_[5]),
    .COUT(_241_[6]),
    .G(1'b0),
    .O(_242_[5]),
    .P(_240_[5])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[6].genblk1.my_adder /* _445_ */ (
    .CIN(_241_[6]),
    .COUT(_241_[7]),
    .G(1'b0),
    .O(_242_[6]),
    .P(_240_[6])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[7].genblk1.my_adder /* _446_ */ (
    .CIN(_241_[7]),
    .COUT(_241_[8]),
    .G(1'b0),
    .O(_242_[7]),
    .P(_240_[7])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[8].genblk1.my_adder /* _447_ */ (
    .CIN(_241_[8]),
    .COUT(_241_[9]),
    .G(1'b0),
    .O(_242_[8]),
    .P(_240_[8])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[9].genblk1.my_adder /* _448_ */ (
    .CIN(_241_[9]),
    .COUT(_241_[10]),
    .G(1'b0),
    .O(_242_[9]),
    .P(_240_[9])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.intermediate_adder /* _449_ */ (
    .COUT(_241_[0]),
    .G(1'b1),
    .P(1'b0)
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[0].genblk1.my_adder /* _450_ */ (
    .CIN(_243_[0]),
    .COUT(_243_[1]),
    .G(add_or_sub[0]),
    .O(_245_[0]),
    .P(_244_[0])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[10].genblk1.my_adder /* _451_ */ (
    .CIN(_243_[10]),
    .COUT(_243_[11]),
    .G(add_or_sub[10]),
    .O(_245_[10]),
    .P(_244_[10])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[11].genblk1.my_adder /* _452_ */ (
    .CIN(_243_[11]),
    .COUT(_243_[12]),
    .G(add_or_sub[11]),
    .O(_245_[11]),
    .P(_244_[11])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[12].genblk1.my_adder /* _453_ */ (
    .CIN(_243_[12]),
    .COUT(_243_[13]),
    .G(add_or_sub[12]),
    .O(_245_[12]),
    .P(_244_[12])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[13].genblk1.my_adder /* _454_ */ (
    .CIN(_243_[13]),
    .COUT(_243_[14]),
    .G(add_or_sub[13]),
    .O(_245_[13]),
    .P(_244_[13])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[14].genblk1.my_adder /* _455_ */ (
    .CIN(_243_[14]),
    .COUT(_243_[15]),
    .G(add_or_sub[14]),
    .O(_245_[14]),
    .P(_244_[14])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[15].genblk1.my_adder /* _456_ */ (
    .CIN(_243_[15]),
    .COUT(_243_[16]),
    .G(add_or_sub[15]),
    .O(_245_[15]),
    .P(_244_[15])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[16].genblk1.my_adder /* _457_ */ (
    .CIN(_243_[16]),
    .COUT(_243_[17]),
    .G(add_or_sub[16]),
    .O(_245_[16]),
    .P(_244_[16])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[17].genblk1.my_adder /* _458_ */ (
    .CIN(_243_[17]),
    .COUT(_243_[18]),
    .G(add_or_sub[17]),
    .O(_245_[17]),
    .P(_244_[17])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[18].genblk1.my_adder /* _459_ */ (
    .CIN(_243_[18]),
    .COUT(_243_[19]),
    .G(add_or_sub[18]),
    .O(_245_[18]),
    .P(_244_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[1].genblk1.my_adder /* _460_ */ (
    .CIN(_243_[1]),
    .COUT(_243_[2]),
    .G(add_or_sub[1]),
    .O(_245_[1]),
    .P(_244_[1])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[2].genblk1.my_adder /* _461_ */ (
    .CIN(_243_[2]),
    .COUT(_243_[3]),
    .G(add_or_sub[2]),
    .O(_245_[2]),
    .P(_244_[2])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[3].genblk1.my_adder /* _462_ */ (
    .CIN(_243_[3]),
    .COUT(_243_[4]),
    .G(add_or_sub[3]),
    .O(_245_[3]),
    .P(_244_[3])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[4].genblk1.my_adder /* _463_ */ (
    .CIN(_243_[4]),
    .COUT(_243_[5]),
    .G(add_or_sub[4]),
    .O(_245_[4]),
    .P(_244_[4])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[5].genblk1.my_adder /* _464_ */ (
    .CIN(_243_[5]),
    .COUT(_243_[6]),
    .G(add_or_sub[5]),
    .O(_245_[5]),
    .P(_244_[5])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[6].genblk1.my_adder /* _465_ */ (
    .CIN(_243_[6]),
    .COUT(_243_[7]),
    .G(add_or_sub[6]),
    .O(_245_[6]),
    .P(_244_[6])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[7].genblk1.my_adder /* _466_ */ (
    .CIN(_243_[7]),
    .COUT(_243_[8]),
    .G(add_or_sub[7]),
    .O(_245_[7]),
    .P(_244_[7])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[8].genblk1.my_adder /* _467_ */ (
    .CIN(_243_[8]),
    .COUT(_243_[9]),
    .G(add_or_sub[8]),
    .O(_245_[8]),
    .P(_244_[8])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[9].genblk1.my_adder /* _468_ */ (
    .CIN(_243_[9]),
    .COUT(_243_[10]),
    .G(add_or_sub[9]),
    .O(_245_[9]),
    .P(_244_[9])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.intermediate_adder /* _469_ */ (
    .COUT(_243_[0]),
    .G(1'b1),
    .P(1'b0)
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[0].genblk1.my_adder /* _470_ */ (
    .CIN(_246_[0]),
    .COUT(_246_[1]),
    .G(add_or_sub[32]),
    .O(_248_[0]),
    .P(_247_[0])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[10].genblk1.my_adder /* _471_ */ (
    .CIN(_246_[10]),
    .COUT(_246_[11]),
    .G(add_or_sub[42]),
    .O(_248_[10]),
    .P(_247_[10])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[11].genblk1.my_adder /* _472_ */ (
    .CIN(_246_[11]),
    .COUT(_246_[12]),
    .G(add_or_sub[43]),
    .O(_248_[11]),
    .P(_247_[11])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[12].genblk1.my_adder /* _473_ */ (
    .CIN(_246_[12]),
    .COUT(_246_[13]),
    .G(add_or_sub[44]),
    .O(_248_[12]),
    .P(_247_[12])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[13].genblk1.my_adder /* _474_ */ (
    .CIN(_246_[13]),
    .COUT(_246_[14]),
    .G(add_or_sub[45]),
    .O(_248_[13]),
    .P(_247_[13])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[14].genblk1.my_adder /* _475_ */ (
    .CIN(_246_[14]),
    .COUT(_246_[15]),
    .G(add_or_sub[46]),
    .O(_248_[14]),
    .P(_247_[14])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[15].genblk1.my_adder /* _476_ */ (
    .CIN(_246_[15]),
    .COUT(_246_[16]),
    .G(add_or_sub[47]),
    .O(_248_[15]),
    .P(_247_[15])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[16].genblk1.my_adder /* _477_ */ (
    .CIN(_246_[16]),
    .COUT(_246_[17]),
    .G(add_or_sub[48]),
    .O(_248_[16]),
    .P(_247_[16])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[17].genblk1.my_adder /* _478_ */ (
    .CIN(_246_[17]),
    .COUT(_246_[18]),
    .G(add_or_sub[49]),
    .O(_248_[17]),
    .P(_247_[17])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[18].genblk1.my_adder /* _479_ */ (
    .CIN(_246_[18]),
    .COUT(_246_[19]),
    .G(add_or_sub[50]),
    .O(_248_[18]),
    .P(_247_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[1].genblk1.my_adder /* _480_ */ (
    .CIN(_246_[1]),
    .COUT(_246_[2]),
    .G(add_or_sub[33]),
    .O(_248_[1]),
    .P(_247_[1])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[2].genblk1.my_adder /* _481_ */ (
    .CIN(_246_[2]),
    .COUT(_246_[3]),
    .G(add_or_sub[34]),
    .O(_248_[2]),
    .P(_247_[2])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[3].genblk1.my_adder /* _482_ */ (
    .CIN(_246_[3]),
    .COUT(_246_[4]),
    .G(add_or_sub[35]),
    .O(_248_[3]),
    .P(_247_[3])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[4].genblk1.my_adder /* _483_ */ (
    .CIN(_246_[4]),
    .COUT(_246_[5]),
    .G(add_or_sub[36]),
    .O(_248_[4]),
    .P(_247_[4])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[5].genblk1.my_adder /* _484_ */ (
    .CIN(_246_[5]),
    .COUT(_246_[6]),
    .G(add_or_sub[37]),
    .O(_248_[5]),
    .P(_247_[5])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[6].genblk1.my_adder /* _485_ */ (
    .CIN(_246_[6]),
    .COUT(_246_[7]),
    .G(add_or_sub[38]),
    .O(_248_[6]),
    .P(_247_[6])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[7].genblk1.my_adder /* _486_ */ (
    .CIN(_246_[7]),
    .COUT(_246_[8]),
    .G(add_or_sub[39]),
    .O(_248_[7]),
    .P(_247_[7])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[8].genblk1.my_adder /* _487_ */ (
    .CIN(_246_[8]),
    .COUT(_246_[9]),
    .G(add_or_sub[40]),
    .O(_248_[8]),
    .P(_247_[8])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[9].genblk1.my_adder /* _488_ */ (
    .CIN(_246_[9]),
    .COUT(_246_[10]),
    .G(add_or_sub[41]),
    .O(_248_[9]),
    .P(_247_[9])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.intermediate_adder /* _489_ */ (
    .COUT(_246_[0]),
    .G(1'b1),
    .P(1'b0)
  );
  CLK_BUF $clkbuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_clk /* _490_ */ (
    .I(_254_),
    .O(_249_)
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_1 /* _491_ */ (
    .O(_250_[1]),
    .EN(1'b1),
    .I(A1[1])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_2 /* _492_ */ (
    .O(_250_[2]),
    .EN(1'b1),
    .I(A1[2])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_3 /* _493_ */ (
    .O(_250_[3]),
    .EN(1'b1),
    .I(A1[3])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_4 /* _494_ */ (
    .O(_250_[4]),
    .EN(1'b1),
    .I(A1[4])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_5 /* _495_ */ (
    .O(_250_[5]),
    .EN(1'b1),
    .I(A1[5])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_6 /* _496_ */ (
    .O(_250_[6]),
    .EN(1'b1),
    .I(A1[6])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_7 /* _497_ */ (
    .O(_250_[7]),
    .EN(1'b1),
    .I(A1[7])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_8 /* _498_ */ (
    .O(_250_[8]),
    .EN(1'b1),
    .I(A1[8])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_9 /* _499_ */ (
    .O(_250_[9]),
    .EN(1'b1),
    .I(A1[9])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2 /* _500_ */ (
    .O(_251_[0]),
    .EN(1'b1),
    .I(A2[0])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_1 /* _501_ */ (
    .O(_251_[1]),
    .EN(1'b1),
    .I(A2[1])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_2 /* _502_ */ (
    .O(_251_[2]),
    .EN(1'b1),
    .I(A2[2])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_3 /* _503_ */ (
    .O(_251_[3]),
    .EN(1'b1),
    .I(A2[3])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_4 /* _504_ */ (
    .O(_251_[4]),
    .EN(1'b1),
    .I(A2[4])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_5 /* _505_ */ (
    .O(_251_[5]),
    .EN(1'b1),
    .I(A2[5])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_6 /* _506_ */ (
    .O(_251_[6]),
    .EN(1'b1),
    .I(A2[6])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_7 /* _507_ */ (
    .O(_251_[7]),
    .EN(1'b1),
    .I(A2[7])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_8 /* _508_ */ (
    .O(_251_[8]),
    .EN(1'b1),
    .I(A2[8])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_9 /* _509_ */ (
    .O(_251_[9]),
    .EN(1'b1),
    .I(A2[9])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1 /* _510_ */ (
    .O(_252_[0]),
    .EN(1'b1),
    .I(B1[0])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_1 /* _511_ */ (
    .O(_252_[1]),
    .EN(1'b1),
    .I(B1[1])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_2 /* _512_ */ (
    .O(_252_[2]),
    .EN(1'b1),
    .I(B1[2])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_3 /* _513_ */ (
    .O(_252_[3]),
    .EN(1'b1),
    .I(B1[3])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_4 /* _514_ */ (
    .O(_252_[4]),
    .EN(1'b1),
    .I(B1[4])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_5 /* _515_ */ (
    .O(_252_[5]),
    .EN(1'b1),
    .I(B1[5])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_6 /* _516_ */ (
    .O(_252_[6]),
    .EN(1'b1),
    .I(B1[6])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_7 /* _517_ */ (
    .O(_252_[7]),
    .EN(1'b1),
    .I(B1[7])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_8 /* _518_ */ (
    .O(_252_[8]),
    .EN(1'b1),
    .I(B1[8])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2 /* _519_ */ (
    .O(_253_[0]),
    .EN(1'b1),
    .I(B2[0])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_1 /* _520_ */ (
    .O(_253_[1]),
    .EN(1'b1),
    .I(B2[1])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_2 /* _521_ */ (
    .O(_253_[2]),
    .EN(1'b1),
    .I(B2[2])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_3 /* _522_ */ (
    .O(_253_[3]),
    .EN(1'b1),
    .I(B2[3])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_4 /* _523_ */ (
    .O(_253_[4]),
    .EN(1'b1),
    .I(B2[4])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_5 /* _524_ */ (
    .O(_253_[5]),
    .EN(1'b1),
    .I(B2[5])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_6 /* _525_ */ (
    .O(_253_[6]),
    .EN(1'b1),
    .I(B2[6])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_7 /* _526_ */ (
    .O(_253_[7]),
    .EN(1'b1),
    .I(B2[7])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_8 /* _527_ */ (
    .O(_253_[8]),
    .EN(1'b1),
    .I(B2[8])
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_clk /* _528_ */ (
    .O(_254_),
    .EN(1'b1),
    .I(clk)
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_reset /* _529_ */ (
    .O(_255_),
    .EN(1'b1),
    .I(reset)
  );
  I_BUF #(
    .WEAK_KEEPER("NONE")
  ) $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_subtract /* _530_ */ (
    .O(_256_),
    .EN(1'b1),
    .I(subtract)
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P /* _531_ */ (
    .O(P[0]),
    .I(_257_[0])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_1 /* _532_ */ (
    .O(P[1]),
    .I(_257_[1])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_10 /* _533_ */ (
    .O(P[10]),
    .I(_257_[10])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_11 /* _534_ */ (
    .O(P[11]),
    .I(_257_[11])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_12 /* _535_ */ (
    .O(P[12]),
    .I(_257_[12])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_13 /* _536_ */ (
    .O(P[13]),
    .I(_257_[13])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_14 /* _537_ */ (
    .O(P[14]),
    .I(_257_[14])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_15 /* _538_ */ (
    .O(P[15]),
    .I(_257_[15])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_16 /* _539_ */ (
    .O(P[16]),
    .I(_257_[16])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_17 /* _540_ */ (
    .O(P[17]),
    .I(_257_[17])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_18 /* _541_ */ (
    .O(P[18]),
    .I(_257_[18])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_19 /* _542_ */ (
    .O(P[19]),
    .I(_257_[19])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_2 /* _543_ */ (
    .O(P[2]),
    .I(_257_[2])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_20 /* _544_ */ (
    .O(P[20]),
    .I(_257_[20])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_21 /* _545_ */ (
    .O(P[21]),
    .I(_257_[21])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_22 /* _546_ */ (
    .O(P[22]),
    .I(_257_[22])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_23 /* _547_ */ (
    .O(P[23]),
    .I(_257_[23])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_24 /* _548_ */ (
    .O(P[24]),
    .I(_257_[24])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_25 /* _549_ */ (
    .O(P[25]),
    .I(_257_[25])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_26 /* _550_ */ (
    .O(P[26]),
    .I(_257_[26])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_27 /* _551_ */ (
    .O(P[27]),
    .I(_257_[27])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_28 /* _552_ */ (
    .O(P[28]),
    .I(_257_[28])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_29 /* _553_ */ (
    .O(P[29]),
    .I(_257_[29])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_3 /* _554_ */ (
    .O(P[3]),
    .I(_257_[3])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_30 /* _555_ */ (
    .O(P[30]),
    .I(_257_[30])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_31 /* _556_ */ (
    .O(P[31]),
    .I(_257_[31])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_32 /* _557_ */ (
    .O(P[32]),
    .I(_257_[32])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_33 /* _558_ */ (
    .O(P[33]),
    .I(_257_[33])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_34 /* _559_ */ (
    .O(P[34]),
    .I(_257_[34])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_35 /* _560_ */ (
    .O(P[35]),
    .I(_257_[35])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_36 /* _561_ */ (
    .O(P[36]),
    .I(_257_[36])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_37 /* _562_ */ (
    .O(P[37]),
    .I(_257_[37])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_4 /* _563_ */ (
    .O(P[4]),
    .I(_257_[4])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_5 /* _564_ */ (
    .O(P[5]),
    .I(_257_[5])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_6 /* _565_ */ (
    .O(P[6]),
    .I(_257_[6])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_7 /* _566_ */ (
    .O(P[7]),
    .I(_257_[7])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_8 /* _567_ */ (
    .O(P[8]),
    .I(_257_[8])
  );
  O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_9 /* _568_ */ (
    .O(P[9]),
    .I(_257_[9])
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1163 /* _569_ */ (
    .C(_249_),
    .D(_245_[0]),
    .E(1'b1),
    .Q(add_or_sub[0]),
    .R(_255_)
  );
  DSP19X2 #(
    .COEFF1_0(10'b0000000000),
    .COEFF1_1(10'b0000000000),
    .COEFF1_2(10'b0000000000),
    .COEFF1_3(10'b0000000000),
    .COEFF2_0(10'b0000000000),
    .COEFF2_1(10'b0000000000),
    .COEFF2_2(10'b0000000000),
    .COEFF2_3(10'b0000000000),
    .DSP_MODE("MULTIPLY"),
    .INPUT_REG_EN("FALSE"),
    .OUTPUT_REG_EN("FALSE")
  ) \simd_$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/16July/Validation/RTL_testcases/DSP_inference19x2/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2/results_dir/.././rtl/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.v:17$3_$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/16July/Validation/RTL_testcases/DSP_inference19x2/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2/results_dir/.././rtl/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.v:18$4 /* \simd_$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/16July/Validation/RTL_testcases/DSP_inference19x2/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2/results_dir/.././rtl/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.v:17$3_$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/16July/Validation/RTL_testcases/DSP_inference19x2/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2/results_dir/.././rtl/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.v:18$4  */ (
    .A1(_250_),
    .A2(_251_),
    .B1(_252_),
    .B2(_253_),
    .FEEDBACK(3'b000),
    .UNSIGNED_A(1'b1),
    .UNSIGNED_B(1'b1),
    .Z1(mult1),
    .Z2(mult2)
  );
  assign _238_[31] = _238_[32];
  assign _239_[30] = _239_[31];
  assign _240_[31:19] = 13'b1111111111111;
  assign _241_[31] = _241_[32];
  assign _242_[30] = _242_[31];
  assign _237_[31:19] = 13'b1111111111111;
  assign { add_or_sub[63:51], add_or_sub[31:19] } = 26'bxxxxxxxxxxxxxxxxxxxxxxxxxx;
endmodule
