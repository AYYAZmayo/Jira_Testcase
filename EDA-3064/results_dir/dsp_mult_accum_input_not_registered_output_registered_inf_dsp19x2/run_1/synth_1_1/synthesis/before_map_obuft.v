/* Generated by Yosys 0.38 (git sha1 d2189b06a, gcc 11.2.1 -fPIC -Os) */

module dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2(clk, reset, subtract, A1, A2, B1, B2, P);
  output [37:0] P;
  input subtract;
  input [9:0] A1;
  input [9:0] A2;
  input [8:0] B1;
  input [8:0] B2;
  input clk;
  input reset;
  wire [37:0] P;
  wire [37:0] _000_;
  wire subtract;
  wire _001_;
  wire _002_;
  wire _003_;
  wire [8:0] _004_;
  wire [8:0] _005_;
  wire [9:0] _006_;
  wire [9:0] _007_;
  wire [32:0] _008_;
  wire [31:0] _009_;
  wire [31:0] _010_;
  wire [32:0] _011_;
  wire [31:0] _012_;
  wire [32:0] _013_;
  wire [31:0] _014_;
  wire [31:0] _015_;
  wire [32:0] _016_;
  wire [31:0] _017_;
  wire [31:0] _018_;
  wire [31:0] _019_;
  wire [9:0] A1;
  wire [9:0] A2;
  wire [8:0] B1;
  wire _020_;
  wire [63:0] add_or_sub;
  wire [8:0] B2;
  wire [18:0] mult1;
  wire [18:0] mult2;
  wire clk;
  wire reset;
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_37 /* _021_ */ (
    .I(_000_[37]),
    .O(P[37])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_36 /* _022_ */ (
    .I(_000_[36]),
    .O(P[36])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_35 /* _023_ */ (
    .I(_000_[35]),
    .O(P[35])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_34 /* _024_ */ (
    .I(_000_[34]),
    .O(P[34])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_33 /* _025_ */ (
    .I(_000_[33]),
    .O(P[33])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_32 /* _026_ */ (
    .I(_000_[32]),
    .O(P[32])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_31 /* _027_ */ (
    .I(_000_[31]),
    .O(P[31])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_30 /* _028_ */ (
    .I(_000_[30]),
    .O(P[30])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_29 /* _029_ */ (
    .I(_000_[29]),
    .O(P[29])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_28 /* _030_ */ (
    .I(_000_[28]),
    .O(P[28])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_27 /* _031_ */ (
    .I(_000_[27]),
    .O(P[27])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_26 /* _032_ */ (
    .I(_000_[26]),
    .O(P[26])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_25 /* _033_ */ (
    .I(_000_[25]),
    .O(P[25])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_24 /* _034_ */ (
    .I(_000_[24]),
    .O(P[24])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_23 /* _035_ */ (
    .I(_000_[23]),
    .O(P[23])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_22 /* _036_ */ (
    .I(_000_[22]),
    .O(P[22])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_21 /* _037_ */ (
    .I(_000_[21]),
    .O(P[21])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_20 /* _038_ */ (
    .I(_000_[20]),
    .O(P[20])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_19 /* _039_ */ (
    .I(_000_[19]),
    .O(P[19])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_18 /* _040_ */ (
    .I(_000_[18]),
    .O(P[18])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_17 /* _041_ */ (
    .I(_000_[17]),
    .O(P[17])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_16 /* _042_ */ (
    .I(_000_[16]),
    .O(P[16])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_15 /* _043_ */ (
    .I(_000_[15]),
    .O(P[15])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_14 /* _044_ */ (
    .I(_000_[14]),
    .O(P[14])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_13 /* _045_ */ (
    .I(_000_[13]),
    .O(P[13])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_12 /* _046_ */ (
    .I(_000_[12]),
    .O(P[12])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_11 /* _047_ */ (
    .I(_000_[11]),
    .O(P[11])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_10 /* _048_ */ (
    .I(_000_[10]),
    .O(P[10])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_9 /* _049_ */ (
    .I(_000_[9]),
    .O(P[9])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_8 /* _050_ */ (
    .I(_000_[8]),
    .O(P[8])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_7 /* _051_ */ (
    .I(_000_[7]),
    .O(P[7])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_6 /* _052_ */ (
    .I(_000_[6]),
    .O(P[6])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_5 /* _053_ */ (
    .I(_000_[5]),
    .O(P[5])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_4 /* _054_ */ (
    .I(_000_[4]),
    .O(P[4])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_3 /* _055_ */ (
    .I(_000_[3]),
    .O(P[3])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_2 /* _056_ */ (
    .I(_000_[2]),
    .O(P[2])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P_1 /* _057_ */ (
    .I(_000_[1]),
    .O(P[1])
  );
  rs__O_BUF $obuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$obuf_P /* _058_ */ (
    .I(_000_[0]),
    .O(P[0])
  );
  CLK_BUF $clkbuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_clk /* _059_ */ (
    .O(_020_),
    .I(_003_)
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_subtract /* _060_ */ (
    .O(_001_),
    .I(subtract)
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_reset /* _061_ */ (
    .O(_002_),
    .I(reset)
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_clk /* _062_ */ (
    .O(_003_),
    .I(clk)
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_8 /* _063_ */ (
    .O(_004_[8]),
    .I(B2[8])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_7 /* _064_ */ (
    .O(_004_[7]),
    .I(B2[7])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_6 /* _065_ */ (
    .O(_004_[6]),
    .I(B2[6])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_5 /* _066_ */ (
    .O(_004_[5]),
    .I(B2[5])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_4 /* _067_ */ (
    .O(_004_[4]),
    .I(B2[4])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_3 /* _068_ */ (
    .O(_004_[3]),
    .I(B2[3])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_2 /* _069_ */ (
    .O(_004_[2]),
    .I(B2[2])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2_1 /* _070_ */ (
    .O(_004_[1]),
    .I(B2[1])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B2 /* _071_ */ (
    .O(_004_[0]),
    .I(B2[0])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_8 /* _072_ */ (
    .O(_005_[8]),
    .I(B1[8])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_7 /* _073_ */ (
    .O(_005_[7]),
    .I(B1[7])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_6 /* _074_ */ (
    .O(_005_[6]),
    .I(B1[6])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_5 /* _075_ */ (
    .O(_005_[5]),
    .I(B1[5])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_4 /* _076_ */ (
    .O(_005_[4]),
    .I(B1[4])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_3 /* _077_ */ (
    .O(_005_[3]),
    .I(B1[3])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_2 /* _078_ */ (
    .O(_005_[2]),
    .I(B1[2])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1_1 /* _079_ */ (
    .O(_005_[1]),
    .I(B1[1])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_B1 /* _080_ */ (
    .O(_005_[0]),
    .I(B1[0])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_9 /* _081_ */ (
    .O(_006_[9]),
    .I(A2[9])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_8 /* _082_ */ (
    .O(_006_[8]),
    .I(A2[8])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_7 /* _083_ */ (
    .O(_006_[7]),
    .I(A2[7])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_6 /* _084_ */ (
    .O(_006_[6]),
    .I(A2[6])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_5 /* _085_ */ (
    .O(_006_[5]),
    .I(A2[5])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_4 /* _086_ */ (
    .O(_006_[4]),
    .I(A2[4])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_3 /* _087_ */ (
    .O(_006_[3]),
    .I(A2[3])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_2 /* _088_ */ (
    .O(_006_[2]),
    .I(A2[2])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2_1 /* _089_ */ (
    .O(_006_[1]),
    .I(A2[1])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A2 /* _090_ */ (
    .O(_006_[0]),
    .I(A2[0])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_9 /* _091_ */ (
    .O(_007_[9]),
    .I(A1[9])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_8 /* _092_ */ (
    .O(_007_[8]),
    .I(A1[8])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_7 /* _093_ */ (
    .O(_007_[7]),
    .I(A1[7])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_6 /* _094_ */ (
    .O(_007_[6]),
    .I(A1[6])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_5 /* _095_ */ (
    .O(_007_[5]),
    .I(A1[5])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_4 /* _096_ */ (
    .O(_007_[4]),
    .I(A1[4])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_3 /* _097_ */ (
    .O(_007_[3]),
    .I(A1[3])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_2 /* _098_ */ (
    .O(_007_[2]),
    .I(A1[2])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1_1 /* _099_ */ (
    .O(_007_[1]),
    .I(A1[1])
  );
  rs__I_BUF $ibuf$dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.$ibuf_A1 /* _100_ */ (
    .O(_007_[0]),
    .I(A1[0])
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1163 /* _101_ */ (
    .C(_020_),
    .D(_015_[0]),
    .E(1'b1),
    .Q(add_or_sub[0]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1164 /* _102_ */ (
    .C(_020_),
    .D(add_or_sub[0]),
    .E(1'b1),
    .Q(_000_[0]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1165 /* _103_ */ (
    .C(_020_),
    .D(_015_[1]),
    .E(1'b1),
    .Q(add_or_sub[1]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1166 /* _104_ */ (
    .C(_020_),
    .D(add_or_sub[1]),
    .E(1'b1),
    .Q(_000_[1]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1167 /* _105_ */ (
    .C(_020_),
    .D(_015_[2]),
    .E(1'b1),
    .Q(add_or_sub[2]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1168 /* _106_ */ (
    .C(_020_),
    .D(add_or_sub[2]),
    .E(1'b1),
    .Q(_000_[2]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1169 /* _107_ */ (
    .C(_020_),
    .D(_015_[3]),
    .E(1'b1),
    .Q(add_or_sub[3]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1170 /* _108_ */ (
    .C(_020_),
    .D(add_or_sub[3]),
    .E(1'b1),
    .Q(_000_[3]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1171 /* _109_ */ (
    .C(_020_),
    .D(_015_[4]),
    .E(1'b1),
    .Q(add_or_sub[4]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1172 /* _110_ */ (
    .C(_020_),
    .D(add_or_sub[4]),
    .E(1'b1),
    .Q(_000_[4]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1173 /* _111_ */ (
    .C(_020_),
    .D(_015_[5]),
    .E(1'b1),
    .Q(add_or_sub[5]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1174 /* _112_ */ (
    .C(_020_),
    .D(add_or_sub[5]),
    .E(1'b1),
    .Q(_000_[5]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1175 /* _113_ */ (
    .C(_020_),
    .D(_015_[6]),
    .E(1'b1),
    .Q(add_or_sub[6]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1176 /* _114_ */ (
    .C(_020_),
    .D(add_or_sub[6]),
    .E(1'b1),
    .Q(_000_[6]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1177 /* _115_ */ (
    .C(_020_),
    .D(_015_[7]),
    .E(1'b1),
    .Q(add_or_sub[7]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1178 /* _116_ */ (
    .C(_020_),
    .D(add_or_sub[7]),
    .E(1'b1),
    .Q(_000_[7]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1179 /* _117_ */ (
    .C(_020_),
    .D(_015_[8]),
    .E(1'b1),
    .Q(add_or_sub[8]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1180 /* _118_ */ (
    .C(_020_),
    .D(add_or_sub[8]),
    .E(1'b1),
    .Q(_000_[8]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1181 /* _119_ */ (
    .C(_020_),
    .D(_015_[9]),
    .E(1'b1),
    .Q(add_or_sub[9]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1182 /* _120_ */ (
    .C(_020_),
    .D(add_or_sub[9]),
    .E(1'b1),
    .Q(_000_[9]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1183 /* _121_ */ (
    .C(_020_),
    .D(_015_[10]),
    .E(1'b1),
    .Q(add_or_sub[10]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1184 /* _122_ */ (
    .C(_020_),
    .D(add_or_sub[10]),
    .E(1'b1),
    .Q(_000_[10]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1185 /* _123_ */ (
    .C(_020_),
    .D(_015_[11]),
    .E(1'b1),
    .Q(add_or_sub[11]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1186 /* _124_ */ (
    .C(_020_),
    .D(add_or_sub[11]),
    .E(1'b1),
    .Q(_000_[11]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1187 /* _125_ */ (
    .C(_020_),
    .D(_015_[12]),
    .E(1'b1),
    .Q(add_or_sub[12]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1188 /* _126_ */ (
    .C(_020_),
    .D(add_or_sub[12]),
    .E(1'b1),
    .Q(_000_[12]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1189 /* _127_ */ (
    .C(_020_),
    .D(_015_[13]),
    .E(1'b1),
    .Q(add_or_sub[13]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1190 /* _128_ */ (
    .C(_020_),
    .D(add_or_sub[13]),
    .E(1'b1),
    .Q(_000_[13]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1191 /* _129_ */ (
    .C(_020_),
    .D(_015_[14]),
    .E(1'b1),
    .Q(add_or_sub[14]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1192 /* _130_ */ (
    .C(_020_),
    .D(add_or_sub[14]),
    .E(1'b1),
    .Q(_000_[14]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1193 /* _131_ */ (
    .C(_020_),
    .D(_015_[15]),
    .E(1'b1),
    .Q(add_or_sub[15]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1194 /* _132_ */ (
    .C(_020_),
    .D(add_or_sub[15]),
    .E(1'b1),
    .Q(_000_[15]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1195 /* _133_ */ (
    .C(_020_),
    .D(_015_[16]),
    .E(1'b1),
    .Q(add_or_sub[16]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1196 /* _134_ */ (
    .C(_020_),
    .D(add_or_sub[16]),
    .E(1'b1),
    .Q(_000_[16]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1197 /* _135_ */ (
    .C(_020_),
    .D(_015_[17]),
    .E(1'b1),
    .Q(add_or_sub[17]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1198 /* _136_ */ (
    .C(_020_),
    .D(add_or_sub[17]),
    .E(1'b1),
    .Q(_000_[17]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1199 /* _137_ */ (
    .C(_020_),
    .D(_015_[18]),
    .E(1'b1),
    .Q(add_or_sub[18]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1200 /* _138_ */ (
    .C(_020_),
    .D(add_or_sub[18]),
    .E(1'b1),
    .Q(_000_[18]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1201 /* _139_ */ (
    .C(_020_),
    .D(_018_[0]),
    .E(1'b1),
    .Q(add_or_sub[32]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1202 /* _140_ */ (
    .C(_020_),
    .D(add_or_sub[32]),
    .E(1'b1),
    .Q(_000_[19]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1203 /* _141_ */ (
    .C(_020_),
    .D(_018_[1]),
    .E(1'b1),
    .Q(add_or_sub[33]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1204 /* _142_ */ (
    .C(_020_),
    .D(add_or_sub[33]),
    .E(1'b1),
    .Q(_000_[20]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1205 /* _143_ */ (
    .C(_020_),
    .D(_018_[2]),
    .E(1'b1),
    .Q(add_or_sub[34]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1206 /* _144_ */ (
    .C(_020_),
    .D(add_or_sub[34]),
    .E(1'b1),
    .Q(_000_[21]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1207 /* _145_ */ (
    .C(_020_),
    .D(_018_[3]),
    .E(1'b1),
    .Q(add_or_sub[35]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1208 /* _146_ */ (
    .C(_020_),
    .D(add_or_sub[35]),
    .E(1'b1),
    .Q(_000_[22]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1209 /* _147_ */ (
    .C(_020_),
    .D(_018_[4]),
    .E(1'b1),
    .Q(add_or_sub[36]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1210 /* _148_ */ (
    .C(_020_),
    .D(add_or_sub[36]),
    .E(1'b1),
    .Q(_000_[23]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1211 /* _149_ */ (
    .C(_020_),
    .D(_018_[5]),
    .E(1'b1),
    .Q(add_or_sub[37]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1212 /* _150_ */ (
    .C(_020_),
    .D(add_or_sub[37]),
    .E(1'b1),
    .Q(_000_[24]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1213 /* _151_ */ (
    .C(_020_),
    .D(_018_[6]),
    .E(1'b1),
    .Q(add_or_sub[38]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1214 /* _152_ */ (
    .C(_020_),
    .D(add_or_sub[38]),
    .E(1'b1),
    .Q(_000_[25]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1215 /* _153_ */ (
    .C(_020_),
    .D(_018_[7]),
    .E(1'b1),
    .Q(add_or_sub[39]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1216 /* _154_ */ (
    .C(_020_),
    .D(add_or_sub[39]),
    .E(1'b1),
    .Q(_000_[26]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1217 /* _155_ */ (
    .C(_020_),
    .D(_018_[8]),
    .E(1'b1),
    .Q(add_or_sub[40]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1218 /* _156_ */ (
    .C(_020_),
    .D(add_or_sub[40]),
    .E(1'b1),
    .Q(_000_[27]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1219 /* _157_ */ (
    .C(_020_),
    .D(_018_[9]),
    .E(1'b1),
    .Q(add_or_sub[41]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1220 /* _158_ */ (
    .C(_020_),
    .D(add_or_sub[41]),
    .E(1'b1),
    .Q(_000_[28]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1221 /* _159_ */ (
    .C(_020_),
    .D(_018_[10]),
    .E(1'b1),
    .Q(add_or_sub[42]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1222 /* _160_ */ (
    .C(_020_),
    .D(add_or_sub[42]),
    .E(1'b1),
    .Q(_000_[29]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1223 /* _161_ */ (
    .C(_020_),
    .D(_018_[11]),
    .E(1'b1),
    .Q(add_or_sub[43]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1224 /* _162_ */ (
    .C(_020_),
    .D(add_or_sub[43]),
    .E(1'b1),
    .Q(_000_[30]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1225 /* _163_ */ (
    .C(_020_),
    .D(_018_[12]),
    .E(1'b1),
    .Q(add_or_sub[44]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1226 /* _164_ */ (
    .C(_020_),
    .D(add_or_sub[44]),
    .E(1'b1),
    .Q(_000_[31]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1227 /* _165_ */ (
    .C(_020_),
    .D(_018_[13]),
    .E(1'b1),
    .Q(add_or_sub[45]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1228 /* _166_ */ (
    .C(_020_),
    .D(add_or_sub[45]),
    .E(1'b1),
    .Q(_000_[32]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1229 /* _167_ */ (
    .C(_020_),
    .D(_018_[14]),
    .E(1'b1),
    .Q(add_or_sub[46]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1230 /* _168_ */ (
    .C(_020_),
    .D(add_or_sub[46]),
    .E(1'b1),
    .Q(_000_[33]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1231 /* _169_ */ (
    .C(_020_),
    .D(_018_[15]),
    .E(1'b1),
    .Q(add_or_sub[47]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1232 /* _170_ */ (
    .C(_020_),
    .D(add_or_sub[47]),
    .E(1'b1),
    .Q(_000_[34]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1233 /* _171_ */ (
    .C(_020_),
    .D(_018_[16]),
    .E(1'b1),
    .Q(add_or_sub[48]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1234 /* _172_ */ (
    .C(_020_),
    .D(add_or_sub[48]),
    .E(1'b1),
    .Q(_000_[35]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1235 /* _173_ */ (
    .C(_020_),
    .D(_018_[17]),
    .E(1'b1),
    .Q(add_or_sub[49]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1236 /* _174_ */ (
    .C(_020_),
    .D(add_or_sub[49]),
    .E(1'b1),
    .Q(_000_[36]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1237 /* _175_ */ (
    .C(_020_),
    .D(_018_[18]),
    .E(1'b1),
    .Q(add_or_sub[50]),
    .R(_002_)
  );
  DFFRE $abc$1162$auto$blifparse.cc:377:parse_blif$1238 /* _176_ */ (
    .C(_020_),
    .D(add_or_sub[50]),
    .E(1'b1),
    .Q(_000_[37]),
    .R(_002_)
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3355 /* _177_ */ (
    .A({ add_or_sub[0], _001_, _012_[0], mult1[0] }),
    .Y(_014_[0])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3356 /* _178_ */ (
    .A({ add_or_sub[1], _001_, _012_[1], mult1[1] }),
    .Y(_014_[1])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3357 /* _179_ */ (
    .A({ add_or_sub[2], _001_, _012_[2], mult1[2] }),
    .Y(_014_[2])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3358 /* _180_ */ (
    .A({ add_or_sub[3], _001_, _012_[3], mult1[3] }),
    .Y(_014_[3])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3359 /* _181_ */ (
    .A({ add_or_sub[4], _001_, _012_[4], mult1[4] }),
    .Y(_014_[4])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3360 /* _182_ */ (
    .A({ add_or_sub[5], _001_, _012_[5], mult1[5] }),
    .Y(_014_[5])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3361 /* _183_ */ (
    .A({ add_or_sub[6], _001_, _012_[6], mult1[6] }),
    .Y(_014_[6])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3362 /* _184_ */ (
    .A({ add_or_sub[7], _001_, _012_[7], mult1[7] }),
    .Y(_014_[7])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3363 /* _185_ */ (
    .A({ add_or_sub[8], _001_, _012_[8], mult1[8] }),
    .Y(_014_[8])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3364 /* _186_ */ (
    .A({ add_or_sub[9], _001_, _012_[9], mult1[9] }),
    .Y(_014_[9])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3365 /* _187_ */ (
    .A({ add_or_sub[10], _001_, _012_[10], mult1[10] }),
    .Y(_014_[10])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3366 /* _188_ */ (
    .A({ add_or_sub[11], _001_, _012_[11], mult1[11] }),
    .Y(_014_[11])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3367 /* _189_ */ (
    .A({ add_or_sub[12], _001_, _012_[12], mult1[12] }),
    .Y(_014_[12])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3368 /* _190_ */ (
    .A({ add_or_sub[13], _001_, _012_[13], mult1[13] }),
    .Y(_014_[13])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3369 /* _191_ */ (
    .A({ add_or_sub[14], _001_, _012_[14], mult1[14] }),
    .Y(_014_[14])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3370 /* _192_ */ (
    .A({ add_or_sub[15], _001_, _012_[15], mult1[15] }),
    .Y(_014_[15])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3371 /* _193_ */ (
    .A({ add_or_sub[16], _001_, _012_[16], mult1[16] }),
    .Y(_014_[16])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3372 /* _194_ */ (
    .A({ add_or_sub[17], _001_, _012_[17], mult1[17] }),
    .Y(_014_[17])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3373 /* _195_ */ (
    .A({ add_or_sub[18], _001_, _012_[18], mult1[18] }),
    .Y(_014_[18])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3374 /* _196_ */ (
    .A({ add_or_sub[32], _001_, _009_[0], mult2[0] }),
    .Y(_017_[0])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3375 /* _197_ */ (
    .A({ add_or_sub[33], _001_, _009_[1], mult2[1] }),
    .Y(_017_[1])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3376 /* _198_ */ (
    .A({ add_or_sub[34], _001_, _009_[2], mult2[2] }),
    .Y(_017_[2])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3377 /* _199_ */ (
    .A({ add_or_sub[35], _001_, _009_[3], mult2[3] }),
    .Y(_017_[3])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3378 /* _200_ */ (
    .A({ add_or_sub[36], _001_, _009_[4], mult2[4] }),
    .Y(_017_[4])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3379 /* _201_ */ (
    .A({ add_or_sub[37], _001_, _009_[5], mult2[5] }),
    .Y(_017_[5])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3380 /* _202_ */ (
    .A({ add_or_sub[38], _001_, _009_[6], mult2[6] }),
    .Y(_017_[6])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3381 /* _203_ */ (
    .A({ add_or_sub[39], _001_, _009_[7], mult2[7] }),
    .Y(_017_[7])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3382 /* _204_ */ (
    .A({ add_or_sub[40], _001_, _009_[8], mult2[8] }),
    .Y(_017_[8])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3383 /* _205_ */ (
    .A({ add_or_sub[41], _001_, _009_[9], mult2[9] }),
    .Y(_017_[9])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3384 /* _206_ */ (
    .A({ add_or_sub[42], _001_, _009_[10], mult2[10] }),
    .Y(_017_[10])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3385 /* _207_ */ (
    .A({ add_or_sub[43], _001_, _009_[11], mult2[11] }),
    .Y(_017_[11])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3386 /* _208_ */ (
    .A({ add_or_sub[44], _001_, _009_[12], mult2[12] }),
    .Y(_017_[12])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3387 /* _209_ */ (
    .A({ add_or_sub[45], _001_, _009_[13], mult2[13] }),
    .Y(_017_[13])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3388 /* _210_ */ (
    .A({ add_or_sub[46], _001_, _009_[14], mult2[14] }),
    .Y(_017_[14])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3389 /* _211_ */ (
    .A({ add_or_sub[47], _001_, _009_[15], mult2[15] }),
    .Y(_017_[15])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3390 /* _212_ */ (
    .A({ add_or_sub[48], _001_, _009_[16], mult2[16] }),
    .Y(_017_[16])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3391 /* _213_ */ (
    .A({ add_or_sub[49], _001_, _009_[17], mult2[17] }),
    .Y(_017_[17])
  );
  \$lut  #(
    .LUT(16'b1010110001010011),
    .WIDTH(32'd4)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3392 /* _214_ */ (
    .A({ add_or_sub[50], _001_, _009_[18], mult2[18] }),
    .Y(_017_[18])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3393 /* _215_ */ (
    .A(mult1[0]),
    .Y(_010_[0])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3394 /* _216_ */ (
    .A(mult1[1]),
    .Y(_010_[1])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3395 /* _217_ */ (
    .A(mult1[2]),
    .Y(_010_[2])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3396 /* _218_ */ (
    .A(mult1[3]),
    .Y(_010_[3])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3397 /* _219_ */ (
    .A(mult1[4]),
    .Y(_010_[4])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3398 /* _220_ */ (
    .A(mult1[5]),
    .Y(_010_[5])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3399 /* _221_ */ (
    .A(mult1[6]),
    .Y(_010_[6])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3400 /* _222_ */ (
    .A(mult1[7]),
    .Y(_010_[7])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3401 /* _223_ */ (
    .A(mult1[8]),
    .Y(_010_[8])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3402 /* _224_ */ (
    .A(mult1[9]),
    .Y(_010_[9])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3403 /* _225_ */ (
    .A(mult1[10]),
    .Y(_010_[10])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3404 /* _226_ */ (
    .A(mult1[11]),
    .Y(_010_[11])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3405 /* _227_ */ (
    .A(mult1[12]),
    .Y(_010_[12])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3406 /* _228_ */ (
    .A(mult1[13]),
    .Y(_010_[13])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3407 /* _229_ */ (
    .A(mult1[14]),
    .Y(_010_[14])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3408 /* _230_ */ (
    .A(mult1[15]),
    .Y(_010_[15])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3409 /* _231_ */ (
    .A(mult1[16]),
    .Y(_010_[16])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3410 /* _232_ */ (
    .A(mult1[17]),
    .Y(_010_[17])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3411 /* _233_ */ (
    .A(mult1[18]),
    .Y(_010_[18])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3412 /* _234_ */ (
    .A(mult2[0]),
    .Y(_019_[0])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3413 /* _235_ */ (
    .A(mult2[1]),
    .Y(_019_[1])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3414 /* _236_ */ (
    .A(mult2[2]),
    .Y(_019_[2])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3415 /* _237_ */ (
    .A(mult2[3]),
    .Y(_019_[3])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3416 /* _238_ */ (
    .A(mult2[4]),
    .Y(_019_[4])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3417 /* _239_ */ (
    .A(mult2[5]),
    .Y(_019_[5])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3418 /* _240_ */ (
    .A(mult2[6]),
    .Y(_019_[6])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3419 /* _241_ */ (
    .A(mult2[7]),
    .Y(_019_[7])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3420 /* _242_ */ (
    .A(mult2[8]),
    .Y(_019_[8])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3421 /* _243_ */ (
    .A(mult2[9]),
    .Y(_019_[9])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3422 /* _244_ */ (
    .A(mult2[10]),
    .Y(_019_[10])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3423 /* _245_ */ (
    .A(mult2[11]),
    .Y(_019_[11])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3424 /* _246_ */ (
    .A(mult2[12]),
    .Y(_019_[12])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3425 /* _247_ */ (
    .A(mult2[13]),
    .Y(_019_[13])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3426 /* _248_ */ (
    .A(mult2[14]),
    .Y(_019_[14])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3427 /* _249_ */ (
    .A(mult2[15]),
    .Y(_019_[15])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3428 /* _250_ */ (
    .A(mult2[16]),
    .Y(_019_[16])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3429 /* _251_ */ (
    .A(mult2[17]),
    .Y(_019_[17])
  );
  \$lut  #(
    .LUT(2'b01),
    .WIDTH(32'd1)
  ) $abc$3354$auto$blifparse.cc:535:parse_blif$3430 /* _252_ */ (
    .A(mult2[18]),
    .Y(_019_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[0].genblk1.my_adder /* _253_ */ (
    .CIN(_008_[0]),
    .COUT(_008_[1]),
    .G(1'b0),
    .O(_009_[0]),
    .P(_019_[0])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[10].genblk1.my_adder /* _254_ */ (
    .CIN(_008_[10]),
    .COUT(_008_[11]),
    .G(1'b0),
    .O(_009_[10]),
    .P(_019_[10])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[11].genblk1.my_adder /* _255_ */ (
    .CIN(_008_[11]),
    .COUT(_008_[12]),
    .G(1'b0),
    .O(_009_[11]),
    .P(_019_[11])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[12].genblk1.my_adder /* _256_ */ (
    .CIN(_008_[12]),
    .COUT(_008_[13]),
    .G(1'b0),
    .O(_009_[12]),
    .P(_019_[12])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[13].genblk1.my_adder /* _257_ */ (
    .CIN(_008_[13]),
    .COUT(_008_[14]),
    .G(1'b0),
    .O(_009_[13]),
    .P(_019_[13])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[14].genblk1.my_adder /* _258_ */ (
    .CIN(_008_[14]),
    .COUT(_008_[15]),
    .G(1'b0),
    .O(_009_[14]),
    .P(_019_[14])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[15].genblk1.my_adder /* _259_ */ (
    .CIN(_008_[15]),
    .COUT(_008_[16]),
    .G(1'b0),
    .O(_009_[15]),
    .P(_019_[15])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[16].genblk1.my_adder /* _260_ */ (
    .CIN(_008_[16]),
    .COUT(_008_[17]),
    .G(1'b0),
    .O(_009_[16]),
    .P(_019_[16])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[17].genblk1.my_adder /* _261_ */ (
    .CIN(_008_[17]),
    .COUT(_008_[18]),
    .G(1'b0),
    .O(_009_[17]),
    .P(_019_[17])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[18].genblk1.my_adder /* _262_ */ (
    .CIN(_008_[18]),
    .COUT(_008_[19]),
    .G(1'b0),
    .O(_009_[18]),
    .P(_019_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[1].genblk1.my_adder /* _263_ */ (
    .CIN(_008_[1]),
    .COUT(_008_[2]),
    .G(1'b0),
    .O(_009_[1]),
    .P(_019_[1])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[2].genblk1.my_adder /* _264_ */ (
    .CIN(_008_[2]),
    .COUT(_008_[3]),
    .G(1'b0),
    .O(_009_[2]),
    .P(_019_[2])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[3].genblk1.my_adder /* _265_ */ (
    .CIN(_008_[3]),
    .COUT(_008_[4]),
    .G(1'b0),
    .O(_009_[3]),
    .P(_019_[3])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[4].genblk1.my_adder /* _266_ */ (
    .CIN(_008_[4]),
    .COUT(_008_[5]),
    .G(1'b0),
    .O(_009_[4]),
    .P(_019_[4])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[5].genblk1.my_adder /* _267_ */ (
    .CIN(_008_[5]),
    .COUT(_008_[6]),
    .G(1'b0),
    .O(_009_[5]),
    .P(_019_[5])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[6].genblk1.my_adder /* _268_ */ (
    .CIN(_008_[6]),
    .COUT(_008_[7]),
    .G(1'b0),
    .O(_009_[6]),
    .P(_019_[6])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[7].genblk1.my_adder /* _269_ */ (
    .CIN(_008_[7]),
    .COUT(_008_[8]),
    .G(1'b0),
    .O(_009_[7]),
    .P(_019_[7])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[8].genblk1.my_adder /* _270_ */ (
    .CIN(_008_[8]),
    .COUT(_008_[9]),
    .G(1'b0),
    .O(_009_[8]),
    .P(_019_[8])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.genblk1.slice[9].genblk1.my_adder /* _271_ */ (
    .CIN(_008_[9]),
    .COUT(_008_[10]),
    .G(1'b0),
    .O(_009_[9]),
    .P(_019_[9])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$42.intermediate_adder /* _272_ */ (
    .COUT(_008_[0]),
    .G(1'b1),
    .P(1'b0)
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[0].genblk1.my_adder /* _273_ */ (
    .CIN(_011_[0]),
    .COUT(_011_[1]),
    .G(1'b0),
    .O(_012_[0]),
    .P(_010_[0])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[10].genblk1.my_adder /* _274_ */ (
    .CIN(_011_[10]),
    .COUT(_011_[11]),
    .G(1'b0),
    .O(_012_[10]),
    .P(_010_[10])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[11].genblk1.my_adder /* _275_ */ (
    .CIN(_011_[11]),
    .COUT(_011_[12]),
    .G(1'b0),
    .O(_012_[11]),
    .P(_010_[11])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[12].genblk1.my_adder /* _276_ */ (
    .CIN(_011_[12]),
    .COUT(_011_[13]),
    .G(1'b0),
    .O(_012_[12]),
    .P(_010_[12])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[13].genblk1.my_adder /* _277_ */ (
    .CIN(_011_[13]),
    .COUT(_011_[14]),
    .G(1'b0),
    .O(_012_[13]),
    .P(_010_[13])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[14].genblk1.my_adder /* _278_ */ (
    .CIN(_011_[14]),
    .COUT(_011_[15]),
    .G(1'b0),
    .O(_012_[14]),
    .P(_010_[14])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[15].genblk1.my_adder /* _279_ */ (
    .CIN(_011_[15]),
    .COUT(_011_[16]),
    .G(1'b0),
    .O(_012_[15]),
    .P(_010_[15])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[16].genblk1.my_adder /* _280_ */ (
    .CIN(_011_[16]),
    .COUT(_011_[17]),
    .G(1'b0),
    .O(_012_[16]),
    .P(_010_[16])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[17].genblk1.my_adder /* _281_ */ (
    .CIN(_011_[17]),
    .COUT(_011_[18]),
    .G(1'b0),
    .O(_012_[17]),
    .P(_010_[17])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[18].genblk1.my_adder /* _282_ */ (
    .CIN(_011_[18]),
    .COUT(_011_[19]),
    .G(1'b0),
    .O(_012_[18]),
    .P(_010_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[1].genblk1.my_adder /* _283_ */ (
    .CIN(_011_[1]),
    .COUT(_011_[2]),
    .G(1'b0),
    .O(_012_[1]),
    .P(_010_[1])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[2].genblk1.my_adder /* _284_ */ (
    .CIN(_011_[2]),
    .COUT(_011_[3]),
    .G(1'b0),
    .O(_012_[2]),
    .P(_010_[2])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[3].genblk1.my_adder /* _285_ */ (
    .CIN(_011_[3]),
    .COUT(_011_[4]),
    .G(1'b0),
    .O(_012_[3]),
    .P(_010_[3])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[4].genblk1.my_adder /* _286_ */ (
    .CIN(_011_[4]),
    .COUT(_011_[5]),
    .G(1'b0),
    .O(_012_[4]),
    .P(_010_[4])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[5].genblk1.my_adder /* _287_ */ (
    .CIN(_011_[5]),
    .COUT(_011_[6]),
    .G(1'b0),
    .O(_012_[5]),
    .P(_010_[5])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[6].genblk1.my_adder /* _288_ */ (
    .CIN(_011_[6]),
    .COUT(_011_[7]),
    .G(1'b0),
    .O(_012_[6]),
    .P(_010_[6])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[7].genblk1.my_adder /* _289_ */ (
    .CIN(_011_[7]),
    .COUT(_011_[8]),
    .G(1'b0),
    .O(_012_[7]),
    .P(_010_[7])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[8].genblk1.my_adder /* _290_ */ (
    .CIN(_011_[8]),
    .COUT(_011_[9]),
    .G(1'b0),
    .O(_012_[8]),
    .P(_010_[8])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.genblk1.slice[9].genblk1.my_adder /* _291_ */ (
    .CIN(_011_[9]),
    .COUT(_011_[10]),
    .G(1'b0),
    .O(_012_[9]),
    .P(_010_[9])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$45.intermediate_adder /* _292_ */ (
    .COUT(_011_[0]),
    .G(1'b1),
    .P(1'b0)
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[0].genblk1.my_adder /* _293_ */ (
    .CIN(_013_[0]),
    .COUT(_013_[1]),
    .G(add_or_sub[0]),
    .O(_015_[0]),
    .P(_014_[0])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[10].genblk1.my_adder /* _294_ */ (
    .CIN(_013_[10]),
    .COUT(_013_[11]),
    .G(add_or_sub[10]),
    .O(_015_[10]),
    .P(_014_[10])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[11].genblk1.my_adder /* _295_ */ (
    .CIN(_013_[11]),
    .COUT(_013_[12]),
    .G(add_or_sub[11]),
    .O(_015_[11]),
    .P(_014_[11])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[12].genblk1.my_adder /* _296_ */ (
    .CIN(_013_[12]),
    .COUT(_013_[13]),
    .G(add_or_sub[12]),
    .O(_015_[12]),
    .P(_014_[12])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[13].genblk1.my_adder /* _297_ */ (
    .CIN(_013_[13]),
    .COUT(_013_[14]),
    .G(add_or_sub[13]),
    .O(_015_[13]),
    .P(_014_[13])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[14].genblk1.my_adder /* _298_ */ (
    .CIN(_013_[14]),
    .COUT(_013_[15]),
    .G(add_or_sub[14]),
    .O(_015_[14]),
    .P(_014_[14])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[15].genblk1.my_adder /* _299_ */ (
    .CIN(_013_[15]),
    .COUT(_013_[16]),
    .G(add_or_sub[15]),
    .O(_015_[15]),
    .P(_014_[15])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[16].genblk1.my_adder /* _300_ */ (
    .CIN(_013_[16]),
    .COUT(_013_[17]),
    .G(add_or_sub[16]),
    .O(_015_[16]),
    .P(_014_[16])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[17].genblk1.my_adder /* _301_ */ (
    .CIN(_013_[17]),
    .COUT(_013_[18]),
    .G(add_or_sub[17]),
    .O(_015_[17]),
    .P(_014_[17])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[18].genblk1.my_adder /* _302_ */ (
    .CIN(_013_[18]),
    .COUT(_013_[19]),
    .G(add_or_sub[18]),
    .O(_015_[18]),
    .P(_014_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[1].genblk1.my_adder /* _303_ */ (
    .CIN(_013_[1]),
    .COUT(_013_[2]),
    .G(add_or_sub[1]),
    .O(_015_[1]),
    .P(_014_[1])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[2].genblk1.my_adder /* _304_ */ (
    .CIN(_013_[2]),
    .COUT(_013_[3]),
    .G(add_or_sub[2]),
    .O(_015_[2]),
    .P(_014_[2])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[3].genblk1.my_adder /* _305_ */ (
    .CIN(_013_[3]),
    .COUT(_013_[4]),
    .G(add_or_sub[3]),
    .O(_015_[3]),
    .P(_014_[3])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[4].genblk1.my_adder /* _306_ */ (
    .CIN(_013_[4]),
    .COUT(_013_[5]),
    .G(add_or_sub[4]),
    .O(_015_[4]),
    .P(_014_[4])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[5].genblk1.my_adder /* _307_ */ (
    .CIN(_013_[5]),
    .COUT(_013_[6]),
    .G(add_or_sub[5]),
    .O(_015_[5]),
    .P(_014_[5])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[6].genblk1.my_adder /* _308_ */ (
    .CIN(_013_[6]),
    .COUT(_013_[7]),
    .G(add_or_sub[6]),
    .O(_015_[6]),
    .P(_014_[6])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[7].genblk1.my_adder /* _309_ */ (
    .CIN(_013_[7]),
    .COUT(_013_[8]),
    .G(add_or_sub[7]),
    .O(_015_[7]),
    .P(_014_[7])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[8].genblk1.my_adder /* _310_ */ (
    .CIN(_013_[8]),
    .COUT(_013_[9]),
    .G(add_or_sub[8]),
    .O(_015_[8]),
    .P(_014_[8])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.genblk1.slice[9].genblk1.my_adder /* _311_ */ (
    .CIN(_013_[9]),
    .COUT(_013_[10]),
    .G(add_or_sub[9]),
    .O(_015_[9]),
    .P(_014_[9])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$48.intermediate_adder /* _312_ */ (
    .COUT(_013_[0]),
    .G(1'b1),
    .P(1'b0)
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[0].genblk1.my_adder /* _313_ */ (
    .CIN(_016_[0]),
    .COUT(_016_[1]),
    .G(add_or_sub[32]),
    .O(_018_[0]),
    .P(_017_[0])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[10].genblk1.my_adder /* _314_ */ (
    .CIN(_016_[10]),
    .COUT(_016_[11]),
    .G(add_or_sub[42]),
    .O(_018_[10]),
    .P(_017_[10])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[11].genblk1.my_adder /* _315_ */ (
    .CIN(_016_[11]),
    .COUT(_016_[12]),
    .G(add_or_sub[43]),
    .O(_018_[11]),
    .P(_017_[11])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[12].genblk1.my_adder /* _316_ */ (
    .CIN(_016_[12]),
    .COUT(_016_[13]),
    .G(add_or_sub[44]),
    .O(_018_[12]),
    .P(_017_[12])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[13].genblk1.my_adder /* _317_ */ (
    .CIN(_016_[13]),
    .COUT(_016_[14]),
    .G(add_or_sub[45]),
    .O(_018_[13]),
    .P(_017_[13])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[14].genblk1.my_adder /* _318_ */ (
    .CIN(_016_[14]),
    .COUT(_016_[15]),
    .G(add_or_sub[46]),
    .O(_018_[14]),
    .P(_017_[14])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[15].genblk1.my_adder /* _319_ */ (
    .CIN(_016_[15]),
    .COUT(_016_[16]),
    .G(add_or_sub[47]),
    .O(_018_[15]),
    .P(_017_[15])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[16].genblk1.my_adder /* _320_ */ (
    .CIN(_016_[16]),
    .COUT(_016_[17]),
    .G(add_or_sub[48]),
    .O(_018_[16]),
    .P(_017_[16])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[17].genblk1.my_adder /* _321_ */ (
    .CIN(_016_[17]),
    .COUT(_016_[18]),
    .G(add_or_sub[49]),
    .O(_018_[17]),
    .P(_017_[17])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[18].genblk1.my_adder /* _322_ */ (
    .CIN(_016_[18]),
    .COUT(_016_[19]),
    .G(add_or_sub[50]),
    .O(_018_[18]),
    .P(_017_[18])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[1].genblk1.my_adder /* _323_ */ (
    .CIN(_016_[1]),
    .COUT(_016_[2]),
    .G(add_or_sub[33]),
    .O(_018_[1]),
    .P(_017_[1])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[2].genblk1.my_adder /* _324_ */ (
    .CIN(_016_[2]),
    .COUT(_016_[3]),
    .G(add_or_sub[34]),
    .O(_018_[2]),
    .P(_017_[2])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[3].genblk1.my_adder /* _325_ */ (
    .CIN(_016_[3]),
    .COUT(_016_[4]),
    .G(add_or_sub[35]),
    .O(_018_[3]),
    .P(_017_[3])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[4].genblk1.my_adder /* _326_ */ (
    .CIN(_016_[4]),
    .COUT(_016_[5]),
    .G(add_or_sub[36]),
    .O(_018_[4]),
    .P(_017_[4])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[5].genblk1.my_adder /* _327_ */ (
    .CIN(_016_[5]),
    .COUT(_016_[6]),
    .G(add_or_sub[37]),
    .O(_018_[5]),
    .P(_017_[5])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[6].genblk1.my_adder /* _328_ */ (
    .CIN(_016_[6]),
    .COUT(_016_[7]),
    .G(add_or_sub[38]),
    .O(_018_[6]),
    .P(_017_[6])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[7].genblk1.my_adder /* _329_ */ (
    .CIN(_016_[7]),
    .COUT(_016_[8]),
    .G(add_or_sub[39]),
    .O(_018_[7]),
    .P(_017_[7])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[8].genblk1.my_adder /* _330_ */ (
    .CIN(_016_[8]),
    .COUT(_016_[9]),
    .G(add_or_sub[40]),
    .O(_018_[8]),
    .P(_017_[8])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.genblk1.slice[9].genblk1.my_adder /* _331_ */ (
    .CIN(_016_[9]),
    .COUT(_016_[10]),
    .G(add_or_sub[41]),
    .O(_018_[9]),
    .P(_017_[9])
  );
  CARRY $auto$alumacc.cc:491:replace_alu$51.intermediate_adder /* _332_ */ (
    .COUT(_016_[0]),
    .G(1'b1),
    .P(1'b0)
  );
  DSP19X2 #(
    .COEFF1_0(10'b0000000000),
    .COEFF1_1(10'b0000000000),
    .COEFF1_2(10'b0000000000),
    .COEFF1_3(10'b0000000000),
    .COEFF2_0(10'b0000000000),
    .COEFF2_1(10'b0000000000),
    .COEFF2_2(10'b0000000000),
    .COEFF2_3(10'b0000000000),
    .DSP_MODE("MULTIPLY"),
    .INPUT_REG_EN("FALSE"),
    .OUTPUT_REG_EN("FALSE")
  ) \simd_$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/16July/Validation/RTL_testcases/DSP_inference19x2/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2/results_dir/.././rtl/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.v:17$3_$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/16July/Validation/RTL_testcases/DSP_inference19x2/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2/results_dir/.././rtl/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.v:18$4 /* \simd_$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/16July/Validation/RTL_testcases/DSP_inference19x2/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2/results_dir/.././rtl/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.v:17$3_$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/16July/Validation/RTL_testcases/DSP_inference19x2/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2/results_dir/.././rtl/dsp_mult_accum_input_not_registered_output_registered_inf_dsp19x2.v:18$4  */ (
    .A1(_007_),
    .A2(_006_),
    .B1(_005_),
    .B2(_004_),
    .FEEDBACK(3'b000),
    .UNSIGNED_A(1'b1),
    .UNSIGNED_B(1'b1),
    .Z1(mult1),
    .Z2(mult2)
  );
  assign _019_[31:19] = 13'b1111111111111;
  assign _008_[31] = _008_[32];
  assign _009_[30] = _009_[31];
  assign _010_[31:19] = 13'b1111111111111;
  assign _011_[31] = _011_[32];
  assign _012_[30] = _012_[31];
  assign { add_or_sub[63:51], add_or_sub[31:19] } = 26'bxxxxxxxxxxxxxxxxxxxxxxxxxx;
endmodule
