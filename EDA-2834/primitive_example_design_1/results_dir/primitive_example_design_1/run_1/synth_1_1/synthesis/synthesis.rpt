/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.05
Build    : 1.0.49
Hash     : f5c26b6
Date     : May  8 2024
Type     : Engineering
Log Time   : Wed May  8 13:09:10 2024 GMT

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 45a28179e, gcc 11.2.1 -fPIC -Os)


-- Executing script file `primitive_example_design_1.ys' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v
Parsing Verilog input from `/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v' to AST representation.
Generating RTLIL representation for module `\primitive_example_design_1'.
Generating RTLIL representation for module `\flip_flop'.
Generating RTLIL representation for module `\infer_single_port_ram'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \primitive_example_design_1
Used module:     \infer_single_port_ram
Used module:     \flip_flop

3.2. Analyzing design hierarchy..
Top module:  \primitive_example_design_1
Used module:     \infer_single_port_ram
Used module:     \flip_flop
Removed 0 unused modules.
Warning: Resizing cell port primitive_example_design_1.ram_inst.q from 1 bits to 8 bits.
Warning: Resizing cell port primitive_example_design_1.ram_inst.data from 1 bits to 8 bits.

4. Executing synth_rs pass: v0.4.218

4.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v' to AST representation.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v:10.1-19.10.
Generating RTLIL representation for module `\CARRY'.
Successfully finished Verilog frontend.

4.3. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:20.1-34.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:48.1-62.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:81.1-97.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:115.1-131.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:150.1-166.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:184.1-200.10.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

4.4. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v' to AST representation.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFRE'.
Successfully finished Verilog frontend.

4.5. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v' to AST representation.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFNRE'.
Successfully finished Verilog frontend.

4.6. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v' to AST representation.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v:10.1-20.10.
Generating RTLIL representation for module `\LUT1'.
Successfully finished Verilog frontend.

4.7. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v' to AST representation.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v:10.1-21.10.
Generating RTLIL representation for module `\LUT2'.
Successfully finished Verilog frontend.

4.8. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v' to AST representation.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v:10.1-22.10.
Generating RTLIL representation for module `\LUT3'.
Successfully finished Verilog frontend.

4.9. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v' to AST representation.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v:11.1-25.10.
Generating RTLIL representation for module `\LUT4'.
Successfully finished Verilog frontend.

4.10. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v' to AST representation.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v:10.1-24.10.
Generating RTLIL representation for module `\LUT5'.
Successfully finished Verilog frontend.

4.11. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v' to AST representation.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v:10.1-25.10.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

4.12. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v' to AST representation.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v:10.1-17.10.
Generating RTLIL representation for module `\CLK_BUF'.
Successfully finished Verilog frontend.

4.13. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v' to AST representation.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v:10.1-22.10.
Generating RTLIL representation for module `\O_BUF'.
Successfully finished Verilog frontend.

4.14. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v' to AST representation.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:10.1-324.10.
Generating RTLIL representation for module `\DSP38'.
Successfully finished Verilog frontend.

4.15. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v' to AST representation.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:2.1-29.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:33.1-84.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\RS_DSP3'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:116.1-149.10.
Generating RTLIL representation for module `\DSP19X2'.
Successfully finished Verilog frontend.

4.16. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:112.1-540.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:542.1-951.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:953.1-1356.10.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.17. Executing HIERARCHY pass (managing design hierarchy).

4.17.1. Analyzing design hierarchy..
Top module:  \primitive_example_design_1
Used module:     \infer_single_port_ram
Used module:     \flip_flop

4.17.2. Analyzing design hierarchy..
Top module:  \primitive_example_design_1
Used module:     \infer_single_port_ram
Used module:     \flip_flop
Removed 0 unused modules.

4.18. Executing PROC pass (convert processes to netlists).

4.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:106$15 in module infer_single_port_ram.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:85$12 in module flip_flop.
Removed 1 dead cases from process $proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:65$11 in module primitive_example_design_1.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:65$11 in module primitive_example_design_1.
Removed a total of 1 dead cases.

4.18.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 5 assignments to connections.

4.18.4. Executing PROC_INIT pass (extract init attributes).

4.18.5. Executing PROC_ARST pass (detect async resets in processes).

4.18.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 1 switch.
<suppressed ~2 debug messages>

4.18.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\infer_single_port_ram.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:106$15'.
     1/3: $1$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_EN[7:0]$21
     2/3: $1$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_DATA[7:0]$20
     3/3: $1$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_ADDR[5:0]$19
Creating decoders for process `\flip_flop.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:85$12'.
     1/1: $0\Q[0:0]
Creating decoders for process `\primitive_example_design_1.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:65$11'.
     1/1: $1\lut_out[0:0]

4.18.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\primitive_example_design_1.\lut_out' from process `\primitive_example_design_1.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:65$11'.

4.18.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\infer_single_port_ram.\addr_reg' using process `\infer_single_port_ram.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:106$15'.
  created $dff cell `$procdff$41' with positive edge clock.
Creating register for signal `\infer_single_port_ram.$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_ADDR' using process `\infer_single_port_ram.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:106$15'.
  created $dff cell `$procdff$42' with positive edge clock.
Creating register for signal `\infer_single_port_ram.$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_DATA' using process `\infer_single_port_ram.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:106$15'.
  created $dff cell `$procdff$43' with positive edge clock.
Creating register for signal `\infer_single_port_ram.$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_EN' using process `\infer_single_port_ram.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:106$15'.
  created $dff cell `$procdff$44' with positive edge clock.
Creating register for signal `\flip_flop.\Q' using process `\flip_flop.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:85$12'.
  created $dff cell `$procdff$45' with positive edge clock.

4.18.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.18.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\infer_single_port_ram.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:106$15'.
Removing empty process `infer_single_port_ram.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:106$15'.
Found and cleaned up 1 empty switch in `\flip_flop.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:85$12'.
Removing empty process `flip_flop.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:85$12'.
Found and cleaned up 1 empty switch in `\primitive_example_design_1.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:65$11'.
Removing empty process `primitive_example_design_1.$proc$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:65$11'.
Cleaned up 3 empty switches.

4.18.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module infer_single_port_ram.
Optimizing module flip_flop.
<suppressed ~1 debug messages>
Optimizing module primitive_example_design_1.

4.19. Executing SPLITNETS pass (splitting up multi-bit signals).

4.20. Executing DEMUXMAP pass.

4.21. Executing FLATTEN pass (flatten design).
Deleting now unused module flip_flop.
Deleting now unused module infer_single_port_ram.
<suppressed ~2 debug messages>

4.22. Executing DEMUXMAP pass.

4.23. Executing TRIBUF pass.

4.24. Executing TRIBUF pass.

4.25. Executing DEMINOUT pass (demote inout ports to input or output).

4.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 4 unused cells and 27 unused wires.
<suppressed ~7 debug messages>

4.28. Executing CHECK pass (checking for obvious problems).
Checking module primitive_example_design_1...
Found and reported 0 problems.

4.29. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 68
   Number of wire bits:            125
   Number of public wires:          58
   Number of public wire bits:      96
   Number of memories:               2
   Number of memory bits:          520
   Number of processes:              0
   Number of cells:                 41
     $and                            3
     $dff                            2
     $logic_not                      1
     $meminit                        1
     $memrd_v2                       2
     $memwr_v2                       1
     $mux                            6
     $or                             2
     $xor                            2
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1

4.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.31. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.32. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

4.33. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
    Consolidated identical input bits for $mux cell $flatten\ram_inst.$procmux$29:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\ram_inst.$0$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_EN[7:0]$18
      New ports: A=1'0, B=1'1, Y=$flatten\ram_inst.$0$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_EN[7:0]$18 [0]
      New connections: $flatten\ram_inst.$0$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_EN[7:0]$18 [7:1] = { $flatten\ram_inst.$0$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_EN[7:0]$18 [0] $flatten\ram_inst.$0$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_EN[7:0]$18 [0] $flatten\ram_inst.$0$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_EN[7:0]$18 [0] $flatten\ram_inst.$0$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_EN[7:0]$18 [0] $flatten\ram_inst.$0$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_EN[7:0]$18 [0] $flatten\ram_inst.$0$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_EN[7:0]$18 [0] $flatten\ram_inst.$0$memwr$\ram$/nfs_scratch/scratch/CGA/repo/2024-05-08-12-51-00_T10910R23/Validation/RTL_testcases/RS_Primitive_example_designs/primitive_example_design_1/results_dir/.././rtl/primitive_example_design_1.v:109$14_EN[7:0]$18 [0] }
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 1 changes.

4.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.35. Executing OPT_SHARE pass.

4.36. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2, #solve=0, #remove=0, time=0.00 sec.]

4.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.39. Executing FSM pass (extract and optimize FSM).

4.39.1. Executing FSM_DETECT pass (finding FSMs in design).

4.39.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.39.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.39.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.39.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.39.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.39.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.39.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.40. Executing WREDUCE pass (reducing word size of cells).
Removed top 29 address bits (of 32) from memory init port primitive_example_design_1.$auto$mem.cc:328:emit$27 ($auto$proc_rom.cc:150:do_switch$25).

4.41. Executing PEEPOPT pass (run peephole optimizers).

4.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

4.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.48. Executing OPT_SHARE pass.

4.49. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\ff_inst1.$procdff$45 ($dff) from module primitive_example_design_1 (D = \ff_inst1.D, Q = \ff_inst1.Q, rval = 1'0).
[#visit=2, #solve=0, #remove=0, time=0.00 sec.]

4.50. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

4.51. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

4.53. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.55. Executing OPT_SHARE pass.

4.56. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2, #solve=0, #remove=0, time=0.00 sec.]

4.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.58. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 2

4.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.60. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.61. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

4.62. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.64. Executing OPT_SHARE pass.

4.65. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2, #solve=0, #remove=0, time=0.00 sec.]

4.66. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.67. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.68. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.70. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

4.71. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.72. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.73. Executing OPT_SHARE pass.

4.74. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2, #solve=0, #remove=0, time=0.00 sec.]

4.75. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2, #solve=1, #remove=0, time=0.00 sec.]

4.76. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.77. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.78. Executing WREDUCE pass (reducing word size of cells).

4.79. Executing PEEPOPT pass (run peephole optimizers).

4.80. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.81. Executing DEMUXMAP pass.

4.82. Executing SPLITNETS pass (splitting up multi-bit signals).

4.83. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 67
   Number of wire bits:            124
   Number of public wires:          58
   Number of public wire bits:      96
   Number of memories:               2
   Number of memory bits:          520
   Number of processes:              0
   Number of cells:                 40
     $and                            3
     $dff                            1
     $logic_not                      1
     $meminit                        1
     $memrd_v2                       2
     $memwr_v2                       1
     $mux                            5
     $or                             2
     $sdff                           1
     $xor                            2
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1

4.84. Executing RS_DSP_MULTADD pass.

4.85. Executing WREDUCE pass (reducing word size of cells).

4.86. Executing RS_DSP_MACC pass.

4.87. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.88. Executing TECHMAP pass (map to technology primitives).

4.88.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.88.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.89. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 67
   Number of wire bits:            124
   Number of public wires:          58
   Number of public wire bits:      96
   Number of memories:               2
   Number of memory bits:          520
   Number of processes:              0
   Number of cells:                 40
     $and                            3
     $dff                            1
     $logic_not                      1
     $meminit                        1
     $memrd_v2                       2
     $memwr_v2                       1
     $mux                            5
     $or                             2
     $sdff                           1
     $xor                            2
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1

4.90. Executing TECHMAP pass (map to technology primitives).

4.90.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.90.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.91. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 67
   Number of wire bits:            124
   Number of public wires:          58
   Number of public wire bits:      96
   Number of memories:               2
   Number of memory bits:          520
   Number of processes:              0
   Number of cells:                 40
     $and                            3
     $dff                            1
     $logic_not                      1
     $meminit                        1
     $memrd_v2                       2
     $memwr_v2                       1
     $mux                            5
     $or                             2
     $sdff                           1
     $xor                            2
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1

4.92. Executing TECHMAP pass (map to technology primitives).

4.92.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.92.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.93. Executing TECHMAP pass (map to technology primitives).

4.93.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.93.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.94. Executing TECHMAP pass (map to technology primitives).

4.94.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

4.94.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.95. Executing RS_DSP_SIMD pass.

4.96. Executing TECHMAP pass (map to technology primitives).

4.96.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

4.96.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.97. Executing TECHMAP pass (map to technology primitives).

4.97.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.97.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

4.98. Executing rs_pack_dsp_regs pass.

4.99. Executing RS_DSP_IO_REGS pass.

4.100. Executing TECHMAP pass (map to technology primitives).

4.100.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Successfully finished Verilog frontend.

4.100.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~14 debug messages>

4.101. Executing TECHMAP pass (map to technology primitives).

4.101.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.101.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

4.102. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 67
   Number of wire bits:            124
   Number of public wires:          58
   Number of public wire bits:      96
   Number of memories:               2
   Number of memory bits:          520
   Number of processes:              0
   Number of cells:                 40
     $and                            3
     $dff                            1
     $logic_not                      1
     $meminit                        1
     $memrd_v2                       2
     $memwr_v2                       1
     $mux                            5
     $or                             2
     $sdff                           1
     $xor                            2
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1

4.103. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module primitive_example_design_1:
  created 0 $alu and 0 $macc cells.

4.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.106. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

4.107. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.108. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.109. Executing OPT_SHARE pass.

4.110. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2, #solve=0, #remove=0, time=0.00 sec.]

4.111. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.112. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.113. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 67
   Number of wire bits:            124
   Number of public wires:          58
   Number of public wire bits:      96
   Number of memories:               2
   Number of memory bits:          520
   Number of processes:              0
   Number of cells:                 40
     $and                            3
     $dff                            1
     $logic_not                      1
     $meminit                        1
     $memrd_v2                       2
     $memwr_v2                       1
     $mux                            5
     $or                             2
     $sdff                           1
     $xor                            2
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1

4.114. Executing MEMORY pass.

4.114.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.114.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.114.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing primitive_example_design_1.ram_inst.ram write port 0.

4.114.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.114.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$auto$proc_rom.cc:150:do_switch$25'[0] in module `\primitive_example_design_1': no output FF found.
Checking read port `\ram_inst.ram'[0] in module `\primitive_example_design_1': no output FF found.
Checking read port address `$auto$proc_rom.cc:150:do_switch$25'[0] in module `\primitive_example_design_1': no address FF found.
Checking read port address `\ram_inst.ram'[0] in module `\primitive_example_design_1': merged address FF to cell.
<suppressed ~2 debug messages>

4.114.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 1 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

4.114.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.114.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.114.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.114.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.115. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 69
   Number of wire bits:            135
   Number of public wires:          57
   Number of public wire bits:      90
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 40
     $and                            3
     $dff                            2
     $logic_not                      1
     $mem_v2                         2
     $mux                            6
     $or                             2
     $sdff                           1
     $xor                            2
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1

4.116. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~6 debug messages>

4.117. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.118. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.119. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory primitive_example_design_1.$auto$proc_rom.cc:150:do_switch$25
mapping memory primitive_example_design_1.ram_inst.ram via $__RS_FACTOR_BRAM18_SDP
<suppressed ~217 debug messages>

4.120. Executing Rs_BRAM_Split pass.

4.121. Executing TECHMAP pass (map to technology primitives).

4.121.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

4.121.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~30 debug messages>

4.122. Executing TECHMAP pass (map to technology primitives).

4.122.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

4.122.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~32 debug messages>

4.123. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

4.124. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.
<suppressed ~1 debug messages>

4.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.126. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\ram_inst.$procmux$35.
    dead port 2/2 on $mux $flatten\ram_inst.$procmux$35.
Removed 2 multiplexer ports.
<suppressed ~6 debug messages>

4.127. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.128. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.129. Executing OPT_SHARE pass.

4.130. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.131. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 54 unused wires.
<suppressed ~1 debug messages>

4.132. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.133. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

4.134. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.135. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.136. Executing OPT_SHARE pass.

4.137. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.138. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.139. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 2

4.140. Executing PMUXTREE pass.

4.141. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~5 debug messages>

4.142. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $auto$proc_rom.cc:150:do_switch$25 in module \primitive_example_design_1:
  created 8 $dff cells and 0 static cells of width 1.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.

4.143. Executing TECHMAP pass (map to technology primitives).

4.143.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.143.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

4.143.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $dff.
No more expansions possible.
<suppressed ~97 debug messages>

4.144. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 99
   Number of wire bits:            280
   Number of public wires:          57
   Number of public wire bits:      90
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 67
     $_AND_                          3
     $_DFF_P_                       10
     $_MUX_                         27
     $_NOT_                          1
     $_OR_                           2
     $_XOR_                          2
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1
     TDP_RAM18KX2                    1

4.145. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.
<suppressed ~3 debug messages>

4.146. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

4.147. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.148. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.149. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.150. Executing OPT_SHARE pass.

4.151. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.152. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 8 unused cells and 12 unused wires.
<suppressed ~9 debug messages>

4.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.154. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.155. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.156. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.157. Executing OPT_SHARE pass.

4.158. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.159. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.160. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 2

4.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.
<suppressed ~30 debug messages>

4.162. Executing TECHMAP pass (map to technology primitives).

4.162.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.162.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

4.163. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 87
   Number of wire bits:            268
   Number of public wires:          57
   Number of public wire bits:      90
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 41
     $_AND_                          4
     $_DFF_P_                        3
     $_MUX_                          6
     $_NOT_                          2
     $_OR_                           2
     $_XOR_                          2
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1
     TDP_RAM18KX2                    1

4.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.166. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.167. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.168. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.169. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.170. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

4.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.172. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.173. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.174. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.175. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.176. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.177. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.178. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.179. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.180. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.181. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.182. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.183. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.184. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.185. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.186. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.187. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.188. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.189. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 76
   Number of wire bits:            199
   Number of public wires:          57
   Number of public wire bits:      90
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 41
     $_AND_                          4
     $_DFF_P_                        3
     $_MUX_                          6
     $_NOT_                          2
     $_OR_                           2
     $_XOR_                          2
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1
     TDP_RAM18KX2                    1

   Number of Generic REGs:          3

ABC-DFF iteration : 1

4.190. Executing ABC pass (technology mapping using ABC).

4.190.1. Summary of detected clock domains:
  41 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.190.2. Extracting gate netlist of module `\primitive_example_design_1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 19 gates and 32 wires to a netlist network with 12 inputs and 8 outputs (dfl=1).

4.190.2.1. Executing ABC.
[Time = 0.06 sec.]

4.191. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.192. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.193. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.194. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.195. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.196. Executing OPT_SHARE pass.

4.197. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.198. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 34 unused wires.
<suppressed ~1 debug messages>

4.199. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 2

4.200. Executing ABC pass (technology mapping using ABC).

4.200.1. Summary of detected clock domains:
  39 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.200.2. Extracting gate netlist of module `\primitive_example_design_1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 17 gates and 29 wires to a netlist network with 12 inputs and 8 outputs (dfl=1).

4.200.2.1. Executing ABC.
[Time = 0.06 sec.]

4.201. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.202. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.203. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.204. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.205. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.206. Executing OPT_SHARE pass.

4.207. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.208. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 34 unused wires.
<suppressed ~1 debug messages>

4.209. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

4.210. Executing ABC pass (technology mapping using ABC).

4.210.1. Summary of detected clock domains:
  39 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.210.2. Extracting gate netlist of module `\primitive_example_design_1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 17 gates and 29 wires to a netlist network with 12 inputs and 8 outputs (dfl=2).

4.210.2.1. Executing ABC.
[Time = 0.06 sec.]

4.211. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.212. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.213. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.214. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.215. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.216. Executing OPT_SHARE pass.

4.217. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.218. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 34 unused wires.
<suppressed ~1 debug messages>

4.219. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

4.220. Executing ABC pass (technology mapping using ABC).

4.220.1. Summary of detected clock domains:
  38 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.220.2. Extracting gate netlist of module `\primitive_example_design_1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 16 gates and 28 wires to a netlist network with 12 inputs and 8 outputs (dfl=2).

4.220.2.1. Executing ABC.
[Time = 0.06 sec.]

4.221. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.222. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.223. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.224. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.225. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.226. Executing OPT_SHARE pass.

4.227. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.228. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 33 unused wires.
<suppressed ~1 debug messages>

4.229. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1
select with DFL2 synthesis (thresh-logic=0.920000, thresh_dff=0.980000)

4.230. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

4.231. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.232. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.233. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.234. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.235. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.236. Executing OPT_SHARE pass.

4.237. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.238. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.239. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.240. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.241. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.242. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.243. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.244. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.245. Executing OPT_SHARE pass.

4.246. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.247. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.248. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.249. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.250. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.251. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.252. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.253. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.254. Executing OPT_SHARE pass.

4.255. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.256. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.257. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.258. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.259. Executing BMUXMAP pass.

4.260. Executing DEMUXMAP pass.

4.261. Executing SPLITNETS pass (splitting up multi-bit signals).

4.262. Executing ABC pass (technology mapping using ABC).

4.262.1. Extracting gate netlist of module `\primitive_example_design_1' to `<abc-temp-dir>/input.blif'..
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 6 outputs (dfl=1).

4.262.1.1. Executing ABC.
DE:   Version : 7.7
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   0.07 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   0.07 sec. at Pass 1]{initMapFlow}[3]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   0.12 sec. at Pass 2]{map}[9]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   0.22 sec. at Pass 3]{postMap}[18]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   0.49 sec. at Pass 4]{map}[54]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   1.07 sec. at Pass 5]{postMap}[100]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   1.02 sec. at Pass 6]{pushMap}[100]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   1.05 sec. at Pass 7]{pushMap}[100]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   0.95 sec. at Pass 7]{pushMap}[100]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   0.88 sec. at Pass 8]{finalMap}[100]
DE:   
DE:   total time =    6.02 sec.
[Time = 8.07 sec.]

4.263. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.264. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.265. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.266. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.267. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.268. Executing OPT_SHARE pass.

4.269. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.270. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 25 unused wires.
<suppressed ~1 debug messages>

4.271. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.272. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

4.273. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.274. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.275. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.276. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.277. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.278. Executing OPT_SHARE pass.

4.279. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.280. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.281. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.282. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.283. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.284. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.285. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.286. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.287. Executing OPT_SHARE pass.

4.288. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.289. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.290. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.291. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.292. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 68
   Number of wire bits:            191
   Number of public wires:          57
   Number of public wire bits:      90
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 31
     $_DFF_P_                        3
     $lut                            6
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1
     TDP_RAM18KX2                    1

4.293. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.294. Executing RS_DFFSR_CONV pass.

4.295. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 68
   Number of wire bits:            191
   Number of public wires:          57
   Number of public wire bits:      90
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 31
     $_DFF_P_                        3
     $lut                            6
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1
     TDP_RAM18KX2                    1

4.296. Executing TECHMAP pass (map to technology primitives).

4.296.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.296.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

4.296.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~131 debug messages>

4.297. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.
<suppressed ~57 debug messages>

4.298. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.299. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.300. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
<suppressed ~54 debug messages>
Removed a total of 18 cells.

4.301. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.302. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 23 unused wires.
<suppressed ~1 debug messages>

4.303. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.304. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.305. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.306. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.307. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.308. Executing OPT_SHARE pass.

4.309. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.310. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.311. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.312. Executing TECHMAP pass (map to technology primitives).

4.312.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.312.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

4.313. Executing ABC pass (technology mapping using ABC).

4.313.1. Extracting gate netlist of module `\primitive_example_design_1' to `<abc-temp-dir>/input.blif'..
Extracted 19 gates and 33 wires to a netlist network with 12 inputs and 6 outputs (dfl=1).

4.313.1.1. Executing ABC.
DE:   Version : 7.7
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   0.07 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   0.08 sec. at Pass 1]{initMapFlow}[3]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   0.13 sec. at Pass 2]{map}[9]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   0.25 sec. at Pass 3]{postMap}[18]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   0.51 sec. at Pass 4]{map}[54]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   1.10 sec. at Pass 5]{postMap}[100]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   1.06 sec. at Pass 6]{pushMap}[100]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   1.07 sec. at Pass 7]{pushMap}[100]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   0.97 sec. at Pass 7]{pushMap}[100]
DE:   #PIs =  12  #Luts =     6  Max Lvl =   1  Avg Lvl =   1.00  [   0.94 sec. at Pass 8]{finalMap}[100]
DE:   
DE:   total time =    6.32 sec.
[Time = 8.37 sec.]

4.314. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.315. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.316. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.317. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.318. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.319. Executing OPT_SHARE pass.

4.320. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.321. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

4.322. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.323. Executing HIERARCHY pass (managing design hierarchy).

4.323.1. Analyzing design hierarchy..
Top module:  \primitive_example_design_1

4.323.2. Analyzing design hierarchy..
Top module:  \primitive_example_design_1
Removed 0 unused modules.
Warning: Resizing cell port primitive_example_design_1.ram_inst.ram.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port primitive_example_design_1.ram_inst.ram.0.0.ADDR_B1 from 15 bits to 14 bits.
Warning: Resizing cell port primitive_example_design_1.ram_inst.ram.0.0.BE_B1 from 1 bits to 2 bits.

4.324. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 8 unused wires.
<suppressed ~8 debug messages>

4.325. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__IO_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.326. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Replacing existing blackbox module `\BOOT_CLOCK' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:9.1-14.10.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:24.1-31.10.
Generating RTLIL representation for module `\CARRY'.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:41.1-46.10.
Generating RTLIL representation for module `\CLK_BUF'.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:56.1-64.10.
Generating RTLIL representation for module `\DFFNRE'.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:74.1-82.10.
Generating RTLIL representation for module `\DFFRE'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:92.1-126.10.
Generating RTLIL representation for module `\DSP19X2'.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:136.1-162.10.
Generating RTLIL representation for module `\DSP38'.
Replacing existing blackbox module `\FIFO18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:172.1-219.10.
Generating RTLIL representation for module `\FIFO18KX2'.
Replacing existing blackbox module `\FIFO36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:229.1-254.10.
Generating RTLIL representation for module `\FIFO36K'.
Replacing existing blackbox module `\I_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:264.1-276.10.
Generating RTLIL representation for module `\I_BUF_DS'.
Replacing existing blackbox module `\I_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:286.1-297.10.
Generating RTLIL representation for module `\I_BUF'.
Replacing existing blackbox module `\I_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:307.1-315.10.
Generating RTLIL representation for module `\I_DDR'.
Replacing existing blackbox module `\I_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:325.1-337.10.
Generating RTLIL representation for module `\I_DELAY'.
Replacing existing blackbox module `\I_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:347.1-366.10.
Generating RTLIL representation for module `\I_SERDES'.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:376.1-382.10.
Generating RTLIL representation for module `\LUT1'.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:392.1-398.10.
Generating RTLIL representation for module `\LUT2'.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:408.1-414.10.
Generating RTLIL representation for module `\LUT3'.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:424.1-430.10.
Generating RTLIL representation for module `\LUT4'.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:440.1-446.10.
Generating RTLIL representation for module `\LUT5'.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:456.1-462.10.
Generating RTLIL representation for module `\LUT6'.
Replacing existing blackbox module `\O_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:472.1-486.10.
Generating RTLIL representation for module `\O_BUF_DS'.
Replacing existing blackbox module `\O_BUFT_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:496.1-510.10.
Generating RTLIL representation for module `\O_BUFT_DS'.
Replacing existing blackbox module `\O_BUFT' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:520.1-533.10.
Generating RTLIL representation for module `\O_BUFT'.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:543.1-556.10.
Generating RTLIL representation for module `\O_BUF'.
Replacing existing blackbox module `\O_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:566.1-574.10.
Generating RTLIL representation for module `\O_DDR'.
Replacing existing blackbox module `\O_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:584.1-596.10.
Generating RTLIL representation for module `\O_DELAY'.
Replacing existing blackbox module `\O_SERDES_CLK' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:606.1-615.10.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Replacing existing blackbox module `\O_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:625.1-642.10.
Generating RTLIL representation for module `\O_SERDES'.
Replacing existing blackbox module `\PLL' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:652.1-667.10.
Generating RTLIL representation for module `\PLL'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_M' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:677.1-691.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_S' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:701.1-718.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M0' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:728.1-767.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M1' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:777.1-816.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Replacing existing blackbox module `\SOC_FPGA_INTF_DMA' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:826.1-832.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Replacing existing blackbox module `\SOC_FPGA_INTF_IRQ' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:842.1-848.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Replacing existing blackbox module `\SOC_FPGA_INTF_JTAG' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:858.1-866.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Replacing existing blackbox module `\SOC_FPGA_TEMPERATURE' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:876.1-884.10.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:894.1-947.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:957.1-986.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1003.1-1008.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1016.1-1021.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1030.1-1036.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1044.1-1050.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1059.1-1065.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1074.1-1080.10.
Generating RTLIL representation for module `\LATCHNS'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1085.1-1135.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1140.1-1174.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1179.1-1225.12.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.327. Executing CLKBUFMAP pass (inserting clock buffers).
Inserting rs__CLK_BUF on primitive_example_design_1.clk[0].
Inserting rs__CLK_BUF on primitive_example_design_1.clk_buf_out[0].

4.328. Executing TECHMAP pass (map to technology primitives).

4.328.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.328.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~8 debug messages>

4.329. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

4.330. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Marking already mapped port: I_BUF.I[0].
Marking already mapped port: O_BUF.O[0].
Marking already mapped port: O_BUFT.O[0].
Marking already mapped port: primitive_example_design_1.G[0].
Marking already mapped port: primitive_example_design_1.P[0].
Marking already mapped port: primitive_example_design_1.Q[0].
Marking already mapped port: primitive_example_design_1.buft_out[0].
Marking already mapped port: primitive_example_design_1.in[0].
Marking already mapped port: primitive_example_design_1.in[1].
Marking already mapped port: primitive_example_design_1.in[2].
Marking already mapped port: primitive_example_design_1.mux1_sel[0].
Marking already mapped port: primitive_example_design_1.mux2_sel[0].
Marking already mapped port: primitive_example_design_1.obuft_oe[0].
Marking already mapped port: primitive_example_design_1.ram_addr[0].
Marking already mapped port: primitive_example_design_1.ram_addr[1].
Marking already mapped port: primitive_example_design_1.ram_addr[2].
Marking already mapped port: primitive_example_design_1.ram_addr[3].
Marking already mapped port: primitive_example_design_1.ram_addr[4].
Marking already mapped port: primitive_example_design_1.ram_addr[5].
Marking already mapped port: primitive_example_design_1.ram_we[0].
Marking already mapped port: primitive_example_design_1.rst[0].
Mapping port primitive_example_design_1.Cout using rs__O_BUF.
Mapping port primitive_example_design_1.clk using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf0_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf10_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf11_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf12_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf13_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf14_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf15_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf16_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf1_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf2_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf3_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf4_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf5_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf6_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf7_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf8_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf9_en using rs__I_BUF.
Mapping port primitive_example_design_1.out using rs__O_BUF.

4.331. Executing TECHMAP pass (map to technology primitives).

4.331.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.331.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~26 debug messages>

4.332. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                141
   Number of wire bits:            245
   Number of public wires:          49
   Number of public wire bits:      63
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 53
     $lut                            6
     CLK_BUF                         2
     DFFNRE                          1
     DFFRE                           4
     I_BUF                          35
     O_BUF                           3
     O_BUFT                          1
     TDP_RAM18KX2                    1

4.333. Executing TECHMAP pass (map to technology primitives).

4.333.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/05_08_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.333.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~87 debug messages>

4.334. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 72 unused wires.
<suppressed ~1 debug messages>

4.335. Executing SPLITNETS pass (splitting up multi-bit signals).

4.336. Executing HIERARCHY pass (managing design hierarchy).

4.336.1. Analyzing design hierarchy..
Top module:  \primitive_example_design_1

4.336.2. Analyzing design hierarchy..
Top module:  \primitive_example_design_1
Removed 0 unused modules.

Dumping port properties into 'netlist_info.json' file.

4.337. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 81
   Number of wire bits:            185
   Number of public wires:          49
   Number of public wire bits:      63
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 53
     CLK_BUF                         2
     DFFNRE                          1
     DFFRE                           4
     I_BUF                          35
     LUT2                            1
     LUT3                            2
     LUT4                            1
     LUT5                            2
     O_BUF                           3
     O_BUFT                          1
     TDP_RAM18KX2                    1

   Number of LUTs:                   6
   Number of REGs:                   5
   Number of CARRY ADDERs:           0

5. Executing Verilog backend.
Dumping module `\primitive_example_design_1'.

5.1. Executing BLIF backend.

-- Running command `write_rtlil design.rtlil' --

5.2. Executing RTLIL backend.
Output filename: design.rtlil

5.3. Executing SPLITNETS pass (splitting up multi-bit signals).

5.4. Executing FLATTEN pass (flatten design).
Deleting now unused module interface_primitive_example_design_1.
<suppressed ~1 debug messages>

5.5. Executing Verilog backend.
Dumping module `\primitive_example_design_1'.

5.5.1. Executing BLIF backend.

5.5.2. Executing Verilog backend.
Dumping module `\primitive_example_design_1'.

5.5.2.1. Executing BLIF backend.

5.5.2.2. Executing Verilog backend.
Dumping module `\fabric_primitive_example_design_1'.

5.5.2.2.1. Executing BLIF backend.

Warnings: 5 unique messages, 5 total
End of script. Logfile hash: c5d96af8e4, CPU: user 0.70s system 0.06s, MEM: 27.88 MB peak
Yosys 0.38 (git sha1 45a28179e, gcc 11.2.1 -fPIC -Os)
Time spent: 99% 6x abc (114 sec), 0% 44x read_verilog (0 sec), ...
