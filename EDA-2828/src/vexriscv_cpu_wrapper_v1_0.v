// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : vexriscv_cpu_wrapper_v1_0.v
// Device     : gemini
// LiteX sha1 : a6d9955c
// Date       : 2024-05-10 10:51:19
//------------------------------------------------------------------------------
// This file is Copyright (c) 2022 RapidSilicon
//--------------------------------------------------------------------------------

`timescale 1ns / 1ps

//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module vexriscv_cpu_wrapper #(
	parameter IP_TYPE 		= "VCPU",
	parameter IP_VERSION 	= 32'h1, 
	parameter IP_ID 		= 32'h4a5acd3
)
(    input  wire          clk,
    input  wire          rst,
    output wire          dbus_axi_awvalid,
    input  wire          dbus_axi_awready,
    output wire   [31:0] dbus_axi_awaddr,
    output wire    [1:0] dbus_axi_awburst,
    output wire    [7:0] dbus_axi_awlen,
    output wire    [2:0] dbus_axi_awsize,
    output wire          dbus_axi_awlock,
    output wire    [2:0] dbus_axi_awprot,
    output wire    [3:0] dbus_axi_awcache,
    output wire    [3:0] dbus_axi_awqos,
    output wire    [3:0] dbus_axi_awregion,
    output wire    [7:0] dbus_axi_awid,
    output wire          dbus_axi_awuser,
    output wire          dbus_axi_wvalid,
    input  wire          dbus_axi_wready,
    output wire          dbus_axi_wlast,
    output wire   [31:0] dbus_axi_wdata,
    output wire    [3:0] dbus_axi_wstrb,
    output wire          dbus_axi_wuser,
    input  wire          dbus_axi_bvalid,
    output wire          dbus_axi_bready,
    input  wire    [1:0] dbus_axi_bresp,
    input  wire    [7:0] dbus_axi_bid,
    input  wire          dbus_axi_buser,
    output wire          dbus_axi_arvalid,
    input  wire          dbus_axi_arready,
    output wire   [31:0] dbus_axi_araddr,
    output wire    [1:0] dbus_axi_arburst,
    output wire    [7:0] dbus_axi_arlen,
    output wire    [2:0] dbus_axi_arsize,
    output wire          dbus_axi_arlock,
    output wire    [2:0] dbus_axi_arprot,
    output wire    [3:0] dbus_axi_arcache,
    output wire    [3:0] dbus_axi_arqos,
    output wire    [3:0] dbus_axi_arregion,
    output wire    [7:0] dbus_axi_arid,
    output wire          dbus_axi_aruser,
    input  wire          dbus_axi_rvalid,
    output wire          dbus_axi_rready,
    input  wire          dbus_axi_rlast,
    input  wire    [1:0] dbus_axi_rresp,
    input  wire   [31:0] dbus_axi_rdata,
    input  wire    [7:0] dbus_axi_rid,
    input  wire          dbus_axi_ruser,
    output wire          ibus_axi_arvalid,
    output wire   [31:0] ibus_axi_araddr,
    output wire    [1:0] ibus_axi_arburst,
    output wire    [7:0] ibus_axi_arlen,
    output wire    [2:0] ibus_axi_arsize,
    output wire          ibus_axi_arlock,
    output wire    [2:0] ibus_axi_arprot,
    output wire    [3:0] ibus_axi_arcache,
    output wire    [3:0] ibus_axi_arqos,
    output wire    [3:0] ibus_axi_arregion,
    output wire          ibus_axi_arid,
    output wire          ibus_axi_rready,
    input  wire          ibus_axi_arready,
    input  wire          ibus_axi_rvalid,
    input  wire          ibus_axi_rlast,
    input  wire    [1:0] ibus_axi_rresp,
    input  wire   [31:0] ibus_axi_rdata,
    input  wire          ibus_axi_rid,
    input  wire          jtag_tms,
    input  wire          jtag_tdi,
    input  wire          jtag_tck,
    output wire          jtag_tdo,
    input  wire          debugReset,
    input  wire          timerInterrupt,
    input  wire          externalInterrupt,
    input  wire          softwareInterrupt,
    input  wire          externalInterruptS,
    input  wire   [63:0] utime,
    output wire          debug_resetOut
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

wire          sys_clk;
wire          sys_rst;
wire          aw_valid;
wire          aw_ready;
wire   [31:0] aw_payload_addr;
wire    [1:0] aw_payload_burst;
wire    [7:0] aw_payload_len;
wire    [2:0] aw_payload_size;
wire          aw_payload_lock;
wire    [2:0] aw_payload_prot;
wire    [3:0] aw_payload_cache;
wire    [3:0] aw_payload_qos;
wire    [3:0] aw_payload_region;
wire    [7:0] aw_param_id;
reg           aw_param_user = 1'd0;
wire          w_valid;
wire          w_ready;
wire          w_last;
wire   [31:0] w_payload_data;
wire    [3:0] w_payload_strb;
reg           w_param_user = 1'd0;
wire          b_valid;
wire          b_ready;
wire    [1:0] b_payload_resp;
wire    [7:0] b_param_id;
wire          b_param_user;
wire          ar_valid;
wire          ar_ready;
wire   [31:0] ar_payload_addr;
wire    [1:0] ar_payload_burst;
wire    [7:0] ar_payload_len;
wire    [2:0] ar_payload_size;
wire          ar_payload_lock;
wire    [2:0] ar_payload_prot;
wire    [3:0] ar_payload_cache;
wire    [3:0] ar_payload_qos;
wire    [3:0] ar_payload_region;
wire    [7:0] ar_param_id;
reg           ar_param_user = 1'd0;
wire          r_valid;
wire          r_ready;
wire          r_last;
wire    [1:0] r_payload_resp;
wire   [31:0] r_payload_data;
wire    [7:0] r_param_id;
wire          r_param_user;
wire          jtag_tms_1;
wire          jtag_tdi_1;
wire          jtag_tdo_1;
wire          jtag_tck_1;
wire          timerInterrupt_1;
wire          externalInterrupt_1;
wire          softwareInterrupt_1;
wire          debugReset_1;
wire          debug_resetOut_1;
wire          externalInterruptS_1;
wire   [63:0] utime_1;
wire          ibus_ar_valid;
wire          ibus_ar_ready;
wire    [1:0] ibus_ar_burst;
wire   [31:0] ibus_ar_addr;
wire          ibus_ar_id;
wire          ibus_ar_lock;
wire    [3:0] ibus_ar_cache;
wire    [7:0] ibus_ar_len;
wire    [2:0] ibus_ar_size;
wire    [3:0] ibus_ar_region;
wire    [2:0] ibus_ar_prot;
wire    [3:0] ibus_ar_qos;
wire          ibus_r_ready;
wire          ibus_r_valid;
wire   [31:0] ibus_r_data;
wire          ibus_r_id;
wire    [1:0] ibus_r_resp;
wire          ibus_r_last;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign sys_clk = clk;
assign sys_rst = rst;
assign dbus_axi_awvalid = aw_valid;
assign dbus_axi_awaddr = aw_payload_addr;
assign dbus_axi_awburst = aw_payload_burst;
assign dbus_axi_awlen = aw_payload_len;
assign dbus_axi_awsize = aw_payload_size;
assign dbus_axi_awlock = aw_payload_lock;
assign dbus_axi_awprot = aw_payload_prot;
assign dbus_axi_awcache = aw_payload_cache;
assign dbus_axi_awqos = aw_payload_qos;
assign dbus_axi_awregion = aw_payload_region;
assign dbus_axi_awid = aw_param_id;
assign dbus_axi_awuser = aw_param_user;
assign aw_ready = dbus_axi_awready;
assign dbus_axi_wvalid = w_valid;
assign dbus_axi_wdata = w_payload_data;
assign dbus_axi_wstrb = w_payload_strb;
assign dbus_axi_wuser = w_param_user;
assign dbus_axi_wlast = w_last;
assign w_ready = dbus_axi_wready;
assign b_valid = dbus_axi_bvalid;
assign b_payload_resp = dbus_axi_bresp;
assign b_param_id = dbus_axi_bid;
assign b_param_user = dbus_axi_buser;
assign dbus_axi_bready = b_ready;
assign dbus_axi_arvalid = ar_valid;
assign dbus_axi_araddr = ar_payload_addr;
assign dbus_axi_arburst = ar_payload_burst;
assign dbus_axi_arlen = ar_payload_len;
assign dbus_axi_arsize = ar_payload_size;
assign dbus_axi_arlock = ar_payload_lock;
assign dbus_axi_arprot = ar_payload_prot;
assign dbus_axi_arcache = ar_payload_cache;
assign dbus_axi_arqos = ar_payload_qos;
assign dbus_axi_arregion = ar_payload_region;
assign dbus_axi_arid = ar_param_id;
assign dbus_axi_aruser = ar_param_user;
assign ar_ready = dbus_axi_arready;
assign r_valid = dbus_axi_rvalid;
assign r_payload_resp = dbus_axi_rresp;
assign r_payload_data = dbus_axi_rdata;
assign r_param_id = dbus_axi_rid;
assign r_param_user = dbus_axi_ruser;
assign r_last = dbus_axi_rlast;
assign dbus_axi_rready = r_ready;
assign ibus_axi_arvalid = ibus_ar_valid;
assign ibus_axi_araddr = ibus_ar_addr;
assign ibus_axi_arburst = ibus_ar_burst;
assign ibus_axi_arlen = ibus_ar_len;
assign ibus_axi_arsize = ibus_ar_size;
assign ibus_axi_arlock = ibus_ar_lock;
assign ibus_axi_arprot = ibus_ar_prot;
assign ibus_axi_arcache = ibus_ar_cache;
assign ibus_axi_arqos = ibus_ar_qos;
assign ibus_axi_arregion = ibus_ar_region;
assign ibus_axi_arid = ibus_ar_id;
assign ibus_axi_rready = ibus_r_ready;
assign ibus_ar_ready = ibus_axi_arready;
assign ibus_r_valid = ibus_axi_rvalid;
assign ibus_r_last = ibus_axi_rlast;
assign ibus_r_resp = ibus_axi_rresp;
assign ibus_r_data = ibus_axi_rdata;
assign ibus_r_id = ibus_axi_rid;
assign jtag_tms_1 = jtag_tms;
assign jtag_tdi_1 = jtag_tdi;
assign jtag_tck_1 = jtag_tck;
assign jtag_tdo = jtag_tdo_1;
assign debugReset_1 = debugReset;
assign timerInterrupt_1 = timerInterrupt;
assign externalInterrupt_1 = externalInterrupt;
assign softwareInterrupt_1 = softwareInterrupt;
assign externalInterruptS_1 = externalInterruptS;
assign utime_1 = utime;
assign debug_resetOut = debug_resetOut_1;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

vexriscv_cached_mmu vexriscv_cached_mmu(
	.clk(sys_clk),
	.dBusAxi_arready(ar_ready),
	.dBusAxi_awready(aw_ready),
	.dBusAxi_bid(b_param_id),
	.dBusAxi_bresp(b_payload_resp),
	.dBusAxi_bvalid(b_valid),
	.dBusAxi_rdata(r_payload_data),
	.dBusAxi_rid(r_param_id),
	.dBusAxi_rlast(r_last),
	.dBusAxi_rresp(r_payload_resp),
	.dBusAxi_rvalid(r_valid),
	.dBusAxi_wready(w_ready),
	.debugReset(debugReset_1),
	.externalInterrupt(externalInterrupt_1),
	.externalInterruptS(externalInterruptS_1),
	.iBusAxi_arready(ibus_ar_ready),
	.iBusAxi_rdata(ibus_r_data),
	.iBusAxi_rid(ibus_r_id),
	.iBusAxi_rlast(ibus_r_last),
	.iBusAxi_rresp(ibus_r_resp),
	.iBusAxi_rvalid(ibus_r_valid),
	.jtag_tck(jtag_tck_1),
	.jtag_tdi(jtag_tdi_1),
	.jtag_tms(jtag_tms_1),
	.reset(sys_rst),
	.softwareInterrupt(softwareInterrupt_1),
	.timerInterrupt(timerInterrupt_1),
	.utime(utime_1),
	.dBusAxi_araddr(ar_payload_addr),
	.dBusAxi_arburst(ar_payload_burst),
	.dBusAxi_arcache(ar_payload_cache),
	.dBusAxi_arid(ar_param_id),
	.dBusAxi_arlen(ar_payload_len),
	.dBusAxi_arlock(ar_payload_lock),
	.dBusAxi_arprot(ar_payload_prot),
	.dBusAxi_arqos(ar_payload_qos),
	.dBusAxi_arregion(ar_payload_region),
	.dBusAxi_arsize(ar_payload_size),
	.dBusAxi_arvalid(ar_valid),
	.dBusAxi_awaddr(aw_payload_addr),
	.dBusAxi_awburst(aw_payload_burst),
	.dBusAxi_awcache(aw_payload_cache),
	.dBusAxi_awid(aw_param_id),
	.dBusAxi_awlen(aw_payload_len),
	.dBusAxi_awlock(aw_payload_lock),
	.dBusAxi_awprot(aw_payload_prot),
	.dBusAxi_awqos(aw_payload_qos),
	.dBusAxi_awregion(aw_payload_region),
	.dBusAxi_awsize(aw_payload_size),
	.dBusAxi_awvalid(aw_valid),
	.dBusAxi_bready(b_ready),
	.dBusAxi_rready(r_ready),
	.dBusAxi_wdata(w_payload_data),
	.dBusAxi_wlast(w_last),
	.dBusAxi_wstrb(w_payload_strb),
	.dBusAxi_wvalid(w_valid),
	.debug_resetOut(debug_resetOut_1),
	.iBusAxi_araddr(ibus_ar_addr),
	.iBusAxi_arburst(ibus_ar_burst),
	.iBusAxi_arcache(ibus_ar_cache),
	.iBusAxi_arid(ibus_ar_id),
	.iBusAxi_arlen(ibus_ar_len),
	.iBusAxi_arlock(ibus_ar_lock),
	.iBusAxi_arprot(ibus_ar_prot),
	.iBusAxi_arqos(ibus_ar_qos),
	.iBusAxi_arregion(ibus_ar_region),
	.iBusAxi_arsize(ibus_ar_size),
	.iBusAxi_arvalid(ibus_ar_valid),
	.iBusAxi_rready(ibus_r_ready),
	.jtag_tdo(jtag_tdo_1)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2024-05-10 10:51:19.
//------------------------------------------------------------------------------
