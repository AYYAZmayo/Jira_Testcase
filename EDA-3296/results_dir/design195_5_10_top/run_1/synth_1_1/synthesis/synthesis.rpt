/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.10
Build    : 1.2.14
Hash     : 9ba1b42
Date     : Oct  5 2024
Type     : Engineering
Log Time   : Mon Oct  7 10:08:27 2024 GMT

 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/

 Yosys 0.44 (git sha1 7a4a3768c, g++ 11.2.1 -fPIC -O3)

-- Executing script file `design195_5_10_top.ys' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FCLK_BUF'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_FAB'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\MIPI_RX'.
Generating RTLIL representation for module `\MIPI_TX'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_FAB'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/verilog_random_designs/design195_5_10_top/results_dir/.././rtl/design195_5_10_top.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/verilog_random_designs/design195_5_10_top/results_dir/.././rtl/design195_5_10_top.v' to AST representation.
Generating RTLIL representation for module `\design195_5_10_top'.
Generating RTLIL representation for module `\design195_5_10'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../../../../.././rtl/decoder_top.v
Parsing Verilog input from `../../../../.././rtl/decoder_top.v' to AST representation.
Generating RTLIL representation for module `\decoder_top'.
Generating RTLIL representation for module `\decoder'.
Note: Assuming pure combinatorial block at ../../../../.././rtl/decoder_top.v:44.5-57.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../../../../.././rtl/shift_reg_top.v
Parsing Verilog input from `../../../../.././rtl/shift_reg_top.v' to AST representation.
Generating RTLIL representation for module `\shift_reg_top'.
Generating RTLIL representation for module `\shift_reg'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../../../../.././rtl/invertion.v
Parsing Verilog input from `../../../../.././rtl/invertion.v' to AST representation.
Generating RTLIL representation for module `\invertion'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../../../../.././rtl/register.v
Parsing Verilog input from `../../../../.././rtl/register.v' to AST representation.
Generating RTLIL representation for module `\register'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: ../../../../.././rtl/d_latch_top.v
Parsing Verilog input from `../../../../.././rtl/d_latch_top.v' to AST representation.
Generating RTLIL representation for module `\d_latch_top'.
Generating RTLIL representation for module `\d_latch'.
Note: Assuming pure combinatorial block at ../../../../.././rtl/d_latch_top.v:29.5-35.33 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: ../../../../.././rtl/large_mux.v
Parsing Verilog input from `../../../../.././rtl/large_mux.v' to AST representation.
Generating RTLIL representation for module `\large_mux'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: ../../../../.././rtl/mod_n_counter.v
Parsing Verilog input from `../../../../.././rtl/mod_n_counter.v' to AST representation.
Generating RTLIL representation for module `\mod_n_counter'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: ../../../../.././rtl/paritygenerator_top.v
Parsing Verilog input from `../../../../.././rtl/paritygenerator_top.v' to AST representation.
Generating RTLIL representation for module `\paritygenerator_top'.
Generating RTLIL representation for module `\paritygenerator'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: ../../../../.././rtl/memory_cntrl.v
Parsing Verilog input from `../../../../.././rtl/memory_cntrl.v' to AST representation.
Warning: Encountered `full_case' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using the Verilog `full_case' attribute or the SystemVerilog `unique' or `unique0' keywords is recommended!
Generating RTLIL representation for module `\memory_cntrl'.
Generating RTLIL representation for module `\memory'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: ../../../../.././rtl/large_adder.v
Parsing Verilog input from `../../../../.././rtl/large_adder.v' to AST representation.
Generating RTLIL representation for module `\large_adder'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: ../../../../.././rtl/encoder.v
Parsing Verilog input from `../../../../.././rtl/encoder.v' to AST representation.
Generating RTLIL representation for module `\encoder'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: ../../../../.././rtl/full_adder_top.v
Parsing Verilog input from `../../../../.././rtl/full_adder_top.v' to AST representation.
Generating RTLIL representation for module `\full_adder_top'.
Generating RTLIL representation for module `\full_adder'.
Successfully finished Verilog frontend.

15. Executing HIERARCHY pass (managing design hierarchy).

15.1. Analyzing design hierarchy..
Top module:  \design195_5_10_top
Used module:     \design195_5_10
Used module:         \register
Used module:         \encoder
Used module:         \large_adder
Used module:         \memory_cntrl
Used module:             \memory
Used module:         \mod_n_counter
Used module:         \shift_reg_top
Used module:             \shift_reg
Used module:         \paritygenerator_top
Used module:             \paritygenerator
Used module:         \large_mux
Used module:         \d_latch_top
Used module:             \d_latch
Used module:         \full_adder_top
Used module:             \full_adder
Used module:         \decoder_top
Used module:             \decoder
Used module:         \invertion
Parameter \WIDTH = 32

15.2. Executing AST frontend in derive mode using pre-parsed AST for module `\design195_5_10'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\design195_5_10\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.3. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.4. Executing AST frontend in derive mode using pre-parsed AST for module `\encoder'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.5. Executing AST frontend in derive mode using pre-parsed AST for module `\large_adder'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.6. Executing AST frontend in derive mode using pre-parsed AST for module `\memory_cntrl'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.7. Executing AST frontend in derive mode using pre-parsed AST for module `\mod_n_counter'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.8. Executing AST frontend in derive mode using pre-parsed AST for module `\shift_reg_top'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.9. Executing AST frontend in derive mode using pre-parsed AST for module `\paritygenerator_top'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.10. Executing AST frontend in derive mode using pre-parsed AST for module `\large_mux'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.11. Executing AST frontend in derive mode using pre-parsed AST for module `\d_latch_top'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.12. Executing AST frontend in derive mode using pre-parsed AST for module `\full_adder_top'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.13. Executing AST frontend in derive mode using pre-parsed AST for module `\decoder_top'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.14. Executing AST frontend in derive mode using pre-parsed AST for module `\invertion'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\invertion\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\invertion\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\invertion\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.15. Executing AST frontend in derive mode using pre-parsed AST for module `\shift_reg'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.16. Executing AST frontend in derive mode using pre-parsed AST for module `\d_latch'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\d_latch\WIDTH=s32'00000000000000000000000000100000'.
Note: Assuming pure combinatorial block at ../../../../.././rtl/d_latch_top.v:29.5-35.33 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Parameter \WIDTH = 32

15.17. Executing AST frontend in derive mode using pre-parsed AST for module `\decoder'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\decoder\WIDTH=s32'00000000000000000000000000100000'.
Note: Assuming pure combinatorial block at ../../../../.././rtl/decoder_top.v:44.5-57.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Parameter \WIDTH = 32

15.18. Executing AST frontend in derive mode using pre-parsed AST for module `\full_adder'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32

15.19. Executing AST frontend in derive mode using pre-parsed AST for module `\paritygenerator'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000'.

15.20. Analyzing design hierarchy..
Top module:  \design195_5_10_top
Used module:     $paramod\design195_5_10\WIDTH=s32'00000000000000000000000000100000
Used module:         \register
Used module:         \encoder
Used module:         \large_adder
Used module:         \memory_cntrl
Used module:             \memory
Used module:         \mod_n_counter
Used module:         \shift_reg_top
Used module:             $paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000
Used module:         \paritygenerator_top
Used module:             $paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000
Used module:         \large_mux
Used module:         \d_latch_top
Used module:             $paramod\d_latch\WIDTH=s32'00000000000000000000000000100000
Used module:         \full_adder_top
Used module:             $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         \decoder_top
Used module:             $paramod\decoder\WIDTH=s32'00000000000000000000000000100000
Used module:         \invertion
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\invertion\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\invertion\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\register\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\invertion\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000'.

15.21. Analyzing design hierarchy..
Top module:  \design195_5_10_top
Used module:     $paramod\design195_5_10\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\register\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\encoder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\large_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000
Used module:             \memory
Used module:         $paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000
Used module:             \shift_reg
Used module:         $paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000
Used module:             \paritygenerator
Used module:         $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000
Used module:             \d_latch
Used module:         $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             \full_adder
Used module:         $paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             \decoder
Used module:         $paramod\invertion\WIDTH=s32'00000000000000000000000000100000
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\d_latch\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000'.
Parameter \WIDTH = 32
Found cached RTLIL representation for module `$paramod\decoder\WIDTH=s32'00000000000000000000000000100000'.

15.22. Analyzing design hierarchy..
Top module:  \design195_5_10_top
Used module:     $paramod\design195_5_10\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\register\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\encoder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\large_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000
Used module:             \memory
Used module:         $paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\d_latch\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\decoder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\invertion\WIDTH=s32'00000000000000000000000000100000

15.23. Analyzing design hierarchy..
Top module:  \design195_5_10_top
Used module:     $paramod\design195_5_10\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\register\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\encoder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\large_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000
Used module:             \memory
Used module:         $paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\d_latch\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\decoder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\invertion\WIDTH=s32'00000000000000000000000000100000
Removing unused module `\full_adder'.
Removing unused module `\full_adder_top'.
Removing unused module `\encoder'.
Removing unused module `\large_adder'.
Removing unused module `\memory_cntrl'.
Removing unused module `\paritygenerator'.
Removing unused module `\paritygenerator_top'.
Removing unused module `\mod_n_counter'.
Removing unused module `\large_mux'.
Removing unused module `\d_latch'.
Removing unused module `\d_latch_top'.
Removing unused module `\register'.
Removing unused module `\invertion'.
Removing unused module `\shift_reg'.
Removing unused module `\shift_reg_top'.
Removing unused module `\decoder'.
Removing unused module `\decoder_top'.
Removing unused module `\design195_5_10'.
Removed 18 unused modules.

16. Executing synth_rs pass: v0.4.218

16.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

16.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v' to AST representation.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v:10.1-33.10.
Generating RTLIL representation for module `\CARRY'.
Successfully finished Verilog frontend.

16.3. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:20.1-34.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:48.1-62.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:81.1-97.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:115.1-131.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:150.1-166.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:184.1-200.10.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

16.4. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v' to AST representation.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v:11.1-81.10.
Generating RTLIL representation for module `\DFFRE'.
Successfully finished Verilog frontend.

16.5. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v' to AST representation.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v:11.1-80.10.
Generating RTLIL representation for module `\DFFNRE'.
Successfully finished Verilog frontend.

16.6. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v' to AST representation.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v:10.1-20.10.
Generating RTLIL representation for module `\LUT1'.
Successfully finished Verilog frontend.

16.7. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v' to AST representation.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v:10.1-21.10.
Generating RTLIL representation for module `\LUT2'.
Successfully finished Verilog frontend.

16.8. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v' to AST representation.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v:10.1-22.10.
Generating RTLIL representation for module `\LUT3'.
Successfully finished Verilog frontend.

16.9. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v' to AST representation.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v:11.1-25.10.
Generating RTLIL representation for module `\LUT4'.
Successfully finished Verilog frontend.

16.10. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v' to AST representation.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v:10.1-24.10.
Generating RTLIL representation for module `\LUT5'.
Successfully finished Verilog frontend.

16.11. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v' to AST representation.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v:10.1-25.10.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

16.12. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v' to AST representation.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v:10.1-25.10.
Generating RTLIL representation for module `\CLK_BUF'.
Successfully finished Verilog frontend.

16.13. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v' to AST representation.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v:10.1-84.10.
Generating RTLIL representation for module `\O_BUF'.
Successfully finished Verilog frontend.

16.14. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v' to AST representation.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:10.1-341.10.
Generating RTLIL representation for module `\DSP38'.
Successfully finished Verilog frontend.

16.15. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v' to AST representation.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:2.1-29.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:33.1-84.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\RS_DSP3'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:116.1-149.10.
Generating RTLIL representation for module `\DSP19X2'.
Successfully finished Verilog frontend.

16.16. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

16.17. Executing HIERARCHY pass (managing design hierarchy).

16.17.1. Analyzing design hierarchy..
Top module:  \design195_5_10_top
Used module:     $paramod\design195_5_10\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\register\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\encoder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\large_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000
Used module:             \memory
Used module:         $paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\d_latch\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\decoder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\invertion\WIDTH=s32'00000000000000000000000000100000

16.17.2. Analyzing design hierarchy..
Top module:  \design195_5_10_top
Used module:     $paramod\design195_5_10\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\register\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\encoder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\large_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000
Used module:             \memory
Used module:         $paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\d_latch\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000
Used module:             $paramod\decoder\WIDTH=s32'00000000000000000000000000100000
Used module:         $paramod\invertion\WIDTH=s32'00000000000000000000000000100000
Removed 0 unused modules.

16.18. Executing PROC pass (convert processes to netlists).

16.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

16.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/paritygenerator_top.v:36$150 in module $paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/full_adder_top.v:38$147 in module $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.
Removed 1 dead cases from process $proc$../../../../.././rtl/decoder_top.v:44$146 in module $paramod\decoder\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/decoder_top.v:44$146 in module $paramod\decoder\WIDTH=s32'00000000000000000000000000100000.
Marked 2 switch rules as full_case in process $proc$../../../../.././rtl/decoder_top.v:34$144 in module $paramod\decoder\WIDTH=s32'00000000000000000000000000100000.
Marked 2 switch rules as full_case in process $proc$../../../../.././rtl/d_latch_top.v:29$142 in module $paramod\d_latch\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/memory_cntrl.v:103$78 in module memory.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/memory_cntrl.v:97$71 in module memory.
Marked 2 switch rules as full_case in process $proc$../../../../.././rtl/shift_reg_top.v:32$141 in module $paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/invertion.v:26$140 in module $paramod\invertion\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/decoder_top.v:12$132 in module $paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/full_adder_top.v:12$130 in module $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/d_latch_top.v:10$129 in module $paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/large_mux.v:41$128 in module $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.
Removed 1 dead cases from process $proc$../../../../.././rtl/large_mux.v:12$127 in module $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.
Marked 2 switch rules as full_case in process $proc$../../../../.././rtl/large_mux.v:12$127 in module $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/paritygenerator_top.v:12$126 in module $paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/shift_reg_top.v:10$125 in module $paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000.
Marked 2 switch rules as full_case in process $proc$../../../../.././rtl/mod_n_counter.v:8$122 in module $paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000.
Marked 3 switch rules as full_case in process $proc$../../../../.././rtl/memory_cntrl.v:21$116 in module $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/large_adder.v:13$108 in module $paramod\large_adder\WIDTH=s32'00000000000000000000000000100000.
Marked 5 switch rules as full_case in process $proc$../../../../.././rtl/encoder.v:20$102 in module $paramod\encoder\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/encoder.v:11$101 in module $paramod\encoder\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../../../../.././rtl/register.v:10$100 in module $paramod\register\WIDTH=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/verilog_random_designs/design195_5_10_top/results_dir/.././rtl/design195_5_10_top.v:34$1 in module design195_5_10_top.
Removed a total of 2 dead cases.

16.18.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 25 redundant assignments.
Promoted 12 assignments to connections.

16.18.4. Executing PROC_INIT pass (extract init attributes).

16.18.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_mux.v:41$128'.
Found async reset \rst in `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_mux.v:12$127'.
Found async reset \rst in `\design195_5_10_top.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/verilog_random_designs/design195_5_10_top/results_dir/.././rtl/design195_5_10_top.v:34$1'.

16.18.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 1 switch.
<suppressed ~32 debug messages>

16.18.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/paritygenerator_top.v:43$151'.
Creating decoders for process `$paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/paritygenerator_top.v:36$150'.
     1/1: $0\data_out[31:0]
Creating decoders for process `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$147'.
     1/5: $0\cout[0:0]
     2/5: $0\data_out[31:0]
     3/5: $0\c[0:0]
     4/5: $0\b[15:0]
     5/5: $0\a[15:0]
Creating decoders for process `$paramod\decoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/decoder_top.v:44$146'.
     1/1: $1\data_out_w[31:0]
Creating decoders for process `$paramod\decoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/decoder_top.v:34$144'.
     1/1: $0\data_out[31:0]
Creating decoders for process `$paramod\d_latch\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/d_latch_top.v:29$142'.
     1/1: $0\data_out[31:0]
Creating decoders for process `\memory.$proc$../../../../.././rtl/memory_cntrl.v:103$78'.
     1/1: $0\rd_data_out[31:0]
Creating decoders for process `\memory.$proc$../../../../.././rtl/memory_cntrl.v:97$71'.
     1/3: $1$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$77
     2/3: $1$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_DATA[31:0]$76
     3/3: $1$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_ADDR[9:0]$75
Creating decoders for process `$paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/shift_reg_top.v:32$141'.
     1/1: $0\data_out[31:0]
Creating decoders for process `$paramod\invertion\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/invertion.v:26$140'.
     1/1: $0\data_out[31:0]
Creating decoders for process `$paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/decoder_top.v:12$132'.
     1/1: $0\enable[0:0]
Creating decoders for process `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:12$130'.
     1/1: $0\cin[0:0]
Creating decoders for process `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/d_latch_top.v:10$129'.
     1/1: $0\enable[0:0]
Creating decoders for process `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_mux.v:41$128'.
     1/1: $0\data_out[31:0]
Creating decoders for process `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_mux.v:12$127'.
     1/1: $0\data_out_reg[31:0]
Creating decoders for process `$paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/paritygenerator_top.v:12$126'.
     1/1: $0\data_out[31:0]
Creating decoders for process `$paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/shift_reg_top.v:10$125'.
     1/1: $0\enable[0:0]
Creating decoders for process `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/mod_n_counter.v:8$122'.
     1/1: $0\data_out[31:0]
Creating decoders for process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$116'.
     1/7: $0\state[1:0]
     2/7: $0\wr_en[0:0]
     3/7: $0\rd_en[0:0]
     4/7: $0\wr_data_mem[31:0]
     5/7: $0\rd_addr[9:0]
     6/7: $0\wr_addr[9:0]
     7/7: $0\reset_mem[0:0]
Creating decoders for process `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_adder.v:13$108'.
     1/3: $0\add_out_reg_2[31:0]
     2/3: $0\add_out_reg_1[31:0]
     3/3: $0\add_out_reg_0[31:0]
Creating decoders for process `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:20$102'.
     1/5: $5\data_out_wire[31:0]
     2/5: $4\data_out_wire[31:0]
     3/5: $3\data_out_wire[31:0]
     4/5: $2\data_out_wire[31:0]
     5/5: $1\data_out_wire[31:0]
Creating decoders for process `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:11$101'.
     1/1: $0\data_out[31:0]
Creating decoders for process `$paramod\register\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/register.v:10$100'.
     1/2: $0\data_out[31:0] [31:24]
     2/2: $0\data_out[31:0] [23:0]
Creating decoders for process `\design195_5_10_top.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/verilog_random_designs/design195_5_10_top/results_dir/.././rtl/design195_5_10_top.v:41$2'.
Creating decoders for process `\design195_5_10_top.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/verilog_random_designs/design195_5_10_top/results_dir/.././rtl/design195_5_10_top.v:34$1'.
     1/1: $0\tmp[159:0]

16.18.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.\data_out_reg' from process `$paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/paritygenerator_top.v:43$151'.
No latch inferred for signal `$paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.\parity' from process `$paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/paritygenerator_top.v:43$151'.
No latch inferred for signal `$paramod\decoder\WIDTH=s32'00000000000000000000000000100000.\data_out_w' from process `$paramod\decoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/decoder_top.v:44$146'.
No latch inferred for signal `$paramod\d_latch\WIDTH=s32'00000000000000000000000000100000.\data_out' from process `$paramod\d_latch\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/d_latch_top.v:29$142'.
No latch inferred for signal `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.\data_out_wire' from process `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:20$102'.

16.18.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.\data_out' using process `$paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/paritygenerator_top.v:36$150'.
  created $dff cell `$procdff$404' with positive edge clock.
Creating register for signal `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.\data_out' using process `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$147'.
  created $dff cell `$procdff$405' with positive edge clock.
Creating register for signal `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.\cout' using process `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$147'.
  created $dff cell `$procdff$406' with positive edge clock.
Creating register for signal `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.\a' using process `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$147'.
  created $dff cell `$procdff$407' with positive edge clock.
Creating register for signal `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.\b' using process `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$147'.
  created $dff cell `$procdff$408' with positive edge clock.
Creating register for signal `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.\c' using process `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$147'.
  created $dff cell `$procdff$409' with positive edge clock.
Creating register for signal `$paramod\decoder\WIDTH=s32'00000000000000000000000000100000.\data_out' using process `$paramod\decoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/decoder_top.v:34$144'.
  created $dff cell `$procdff$410' with positive edge clock.
Creating register for signal `\memory.\rd_data_out' using process `\memory.$proc$../../../../.././rtl/memory_cntrl.v:103$78'.
  created $dff cell `$procdff$411' with positive edge clock.
Creating register for signal `\memory.$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_ADDR' using process `\memory.$proc$../../../../.././rtl/memory_cntrl.v:97$71'.
  created $dff cell `$procdff$412' with positive edge clock.
Creating register for signal `\memory.$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_DATA' using process `\memory.$proc$../../../../.././rtl/memory_cntrl.v:97$71'.
  created $dff cell `$procdff$413' with positive edge clock.
Creating register for signal `\memory.$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN' using process `\memory.$proc$../../../../.././rtl/memory_cntrl.v:97$71'.
  created $dff cell `$procdff$414' with positive edge clock.
Creating register for signal `$paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000.\data_out' using process `$paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/shift_reg_top.v:32$141'.
  created $dff cell `$procdff$415' with positive edge clock.
Creating register for signal `$paramod\invertion\WIDTH=s32'00000000000000000000000000100000.\data_out' using process `$paramod\invertion\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/invertion.v:26$140'.
  created $dff cell `$procdff$416' with positive edge clock.
Creating register for signal `$paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000.\enable' using process `$paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/decoder_top.v:12$132'.
  created $dff cell `$procdff$417' with positive edge clock.
Creating register for signal `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.\cin' using process `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:12$130'.
  created $dff cell `$procdff$418' with positive edge clock.
Creating register for signal `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000.\enable' using process `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/d_latch_top.v:10$129'.
  created $dff cell `$procdff$419' with positive edge clock.
Creating register for signal `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.\data_out' using process `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_mux.v:41$128'.
  created $adff cell `$procdff$420' with positive edge clock and positive level reset.
Creating register for signal `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.\data_out_reg' using process `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_mux.v:12$127'.
  created $adff cell `$procdff$421' with positive edge clock and positive level reset.
Creating register for signal `$paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000.\data_out' using process `$paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/paritygenerator_top.v:12$126'.
  created $dff cell `$procdff$422' with positive edge clock.
Creating register for signal `$paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000.\enable' using process `$paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/shift_reg_top.v:10$125'.
  created $dff cell `$procdff$423' with positive edge clock.
Creating register for signal `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000.\data_out' using process `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/mod_n_counter.v:8$122'.
  created $dff cell `$procdff$424' with positive edge clock.
Creating register for signal `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.\state' using process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$116'.
  created $dff cell `$procdff$425' with positive edge clock.
Creating register for signal `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.\reset_mem' using process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$116'.
  created $dff cell `$procdff$426' with positive edge clock.
Creating register for signal `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.\wr_addr' using process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$116'.
  created $dff cell `$procdff$427' with positive edge clock.
Creating register for signal `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.\rd_addr' using process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$116'.
  created $dff cell `$procdff$428' with positive edge clock.
Creating register for signal `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.\wr_data_mem' using process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$116'.
  created $dff cell `$procdff$429' with positive edge clock.
Creating register for signal `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.\rd_en' using process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$116'.
  created $dff cell `$procdff$430' with positive edge clock.
Creating register for signal `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.\wr_en' using process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$116'.
  created $dff cell `$procdff$431' with positive edge clock.
Creating register for signal `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000.\add_out_reg_0' using process `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_adder.v:13$108'.
  created $dff cell `$procdff$432' with positive edge clock.
Creating register for signal `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000.\add_out_reg_1' using process `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_adder.v:13$108'.
  created $dff cell `$procdff$433' with positive edge clock.
Creating register for signal `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000.\add_out_reg_2' using process `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_adder.v:13$108'.
  created $dff cell `$procdff$434' with positive edge clock.
Creating register for signal `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.\data_out' using process `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:11$101'.
  created $dff cell `$procdff$435' with positive edge clock.
Creating register for signal `$paramod\register\WIDTH=s32'00000000000000000000000000100000.\data_out' using process `$paramod\register\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/register.v:10$100'.
  created $dff cell `$procdff$436' with positive edge clock.
Creating register for signal `\design195_5_10_top.\d_in0' using process `\design195_5_10_top.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/verilog_random_designs/design195_5_10_top/results_dir/.././rtl/design195_5_10_top.v:41$2'.
  created $dff cell `$procdff$437' with positive edge clock.
Creating register for signal `\design195_5_10_top.\d_in1' using process `\design195_5_10_top.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/verilog_random_designs/design195_5_10_top/results_dir/.././rtl/design195_5_10_top.v:41$2'.
  created $dff cell `$procdff$438' with positive edge clock.
Creating register for signal `\design195_5_10_top.\d_in2' using process `\design195_5_10_top.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/verilog_random_designs/design195_5_10_top/results_dir/.././rtl/design195_5_10_top.v:41$2'.
  created $dff cell `$procdff$439' with positive edge clock.
Creating register for signal `\design195_5_10_top.\d_in3' using process `\design195_5_10_top.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/verilog_random_designs/design195_5_10_top/results_dir/.././rtl/design195_5_10_top.v:41$2'.
  created $dff cell `$procdff$440' with positive edge clock.
Creating register for signal `\design195_5_10_top.\d_in4' using process `\design195_5_10_top.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/verilog_random_designs/design195_5_10_top/results_dir/.././rtl/design195_5_10_top.v:41$2'.
  created $dff cell `$procdff$441' with positive edge clock.
Creating register for signal `\design195_5_10_top.\tmp' using process `\design195_5_10_top.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/verilog_random_designs/design195_5_10_top/results_dir/.././rtl/design195_5_10_top.v:34$1'.
  created $adff cell `$procdff$442' with positive edge clock and positive level reset.

16.18.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

16.18.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/paritygenerator_top.v:43$151'.
Found and cleaned up 1 empty switch in `$paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/paritygenerator_top.v:36$150'.
Removing empty process `$paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/paritygenerator_top.v:36$150'.
Found and cleaned up 1 empty switch in `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$147'.
Removing empty process `$paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:38$147'.
Found and cleaned up 1 empty switch in `$paramod\decoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/decoder_top.v:44$146'.
Removing empty process `$paramod\decoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/decoder_top.v:44$146'.
Found and cleaned up 2 empty switches in `$paramod\decoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/decoder_top.v:34$144'.
Removing empty process `$paramod\decoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/decoder_top.v:34$144'.
Found and cleaned up 2 empty switches in `$paramod\d_latch\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/d_latch_top.v:29$142'.
Removing empty process `$paramod\d_latch\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/d_latch_top.v:29$142'.
Found and cleaned up 2 empty switches in `\memory.$proc$../../../../.././rtl/memory_cntrl.v:103$78'.
Removing empty process `memory.$proc$../../../../.././rtl/memory_cntrl.v:103$78'.
Found and cleaned up 1 empty switch in `\memory.$proc$../../../../.././rtl/memory_cntrl.v:97$71'.
Removing empty process `memory.$proc$../../../../.././rtl/memory_cntrl.v:97$71'.
Found and cleaned up 2 empty switches in `$paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/shift_reg_top.v:32$141'.
Removing empty process `$paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/shift_reg_top.v:32$141'.
Found and cleaned up 1 empty switch in `$paramod\invertion\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/invertion.v:26$140'.
Removing empty process `$paramod\invertion\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/invertion.v:26$140'.
Found and cleaned up 1 empty switch in `$paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/decoder_top.v:12$132'.
Removing empty process `$paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/decoder_top.v:12$132'.
Found and cleaned up 1 empty switch in `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:12$130'.
Removing empty process `$paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/full_adder_top.v:12$130'.
Found and cleaned up 1 empty switch in `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/d_latch_top.v:10$129'.
Removing empty process `$paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/d_latch_top.v:10$129'.
Removing empty process `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_mux.v:41$128'.
Found and cleaned up 1 empty switch in `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_mux.v:12$127'.
Removing empty process `$paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_mux.v:12$127'.
Found and cleaned up 1 empty switch in `$paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/paritygenerator_top.v:12$126'.
Removing empty process `$paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/paritygenerator_top.v:12$126'.
Found and cleaned up 1 empty switch in `$paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/shift_reg_top.v:10$125'.
Removing empty process `$paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/shift_reg_top.v:10$125'.
Found and cleaned up 2 empty switches in `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/mod_n_counter.v:8$122'.
Removing empty process `$paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/mod_n_counter.v:8$122'.
Found and cleaned up 4 empty switches in `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$116'.
Removing empty process `$paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/memory_cntrl.v:21$116'.
Found and cleaned up 1 empty switch in `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_adder.v:13$108'.
Removing empty process `$paramod\large_adder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/large_adder.v:13$108'.
Found and cleaned up 5 empty switches in `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:20$102'.
Removing empty process `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:20$102'.
Found and cleaned up 1 empty switch in `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:11$101'.
Removing empty process `$paramod\encoder\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/encoder.v:11$101'.
Found and cleaned up 1 empty switch in `$paramod\register\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/register.v:10$100'.
Removing empty process `$paramod\register\WIDTH=s32'00000000000000000000000000100000.$proc$../../../../.././rtl/register.v:10$100'.
Removing empty process `design195_5_10_top.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/verilog_random_designs/design195_5_10_top/results_dir/.././rtl/design195_5_10_top.v:41$2'.
Removing empty process `design195_5_10_top.$proc$/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/verilog_random_designs/design195_5_10_top/results_dir/.././rtl/design195_5_10_top.v:34$1'.
Cleaned up 33 empty switches.

16.18.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\decoder\WIDTH=s32'00000000000000000000000000100000.
<suppressed ~1 debug messages>
Optimizing module $paramod\d_latch\WIDTH=s32'00000000000000000000000000100000.
<suppressed ~1 debug messages>
Optimizing module memory.
Optimizing module $paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\invertion\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.
<suppressed ~1 debug messages>
Optimizing module $paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.
<suppressed ~1 debug messages>
Optimizing module $paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.
<suppressed ~5 debug messages>
Optimizing module $paramod\large_adder\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\encoder\WIDTH=s32'00000000000000000000000000100000.
<suppressed ~1 debug messages>
Optimizing module $paramod\register\WIDTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\design195_5_10\WIDTH=s32'00000000000000000000000000100000.
Optimizing module design195_5_10_top.

16.19. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\decoder\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\d_latch\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module memory.
Deleting now unused module $paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\invertion\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\large_adder\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\encoder\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\register\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\design195_5_10\WIDTH=s32'00000000000000000000000000100000.
<suppressed ~57 debug messages>

# -------------------- 
#  Design entry stats  
# -------------------- 

16.20. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               1711
   Number of wire bits:          24665
   Number of public wires:         553
   Number of public wire bits:    9629
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               9
   Number of memory bits:       164864
   Number of processes:              0
   Number of cells:                891
     $add                           48
     $adff                           5
     $dff                          145
     $eq                            83
     $logic_not                     45
     $meminit                        4
     $memrd                          5
     $memrd_v2                       4
     $memwr_v2                       5
     $mul                            5
     $mux                          305
     $not                            9
     $or                             3
     $pmux                           7
     $scopeinfo                     77
     $sub                           10
     $xor                          131

16.21. Executing SPLITNETS pass (splitting up multi-bit signals).

16.22. Executing DEMUXMAP pass.

16.23. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\d_latch\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\d_latch_top\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\decoder\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\decoder_top\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\design195_5_10\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\encoder\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\full_adder\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\full_adder_top\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\invertion\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\large_adder\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\large_mux\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\memory_cntrl\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\mod_n_counter\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\paritygenerator\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\paritygenerator_top\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\register\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\shift_reg\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\shift_reg_top\WIDTH=s32'00000000000000000000000000100000.
Deleting now unused module memory.
<suppressed ~57 debug messages>

16.24. Executing DEMUXMAP pass.

16.25. Executing TRIBUF pass.
Warning: Ignored -no_iobuf because -keep_tribuf is used.

16.26. Executing DEMINOUT pass (demote inout ports to input or output).

16.27. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 36 unused cells and 565 unused wires.
<suppressed ~45 debug messages>

16.29. Executing CHECK pass (checking for obvious problems).
Checking module design195_5_10_top...
Found and reported 0 problems.

16.30. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               1146
   Number of wire bits:          18300
   Number of public wires:         545
   Number of public wire bits:    9621
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               9
   Number of memory bits:       164864
   Number of processes:              0
   Number of cells:                855
     $add                           48
     $adff                           5
     $dff                          126
     $eq                            83
     $logic_not                     32
     $meminit                        4
     $memrd_v2                       9
     $memwr_v2                       5
     $mul                            5
     $mux                          301
     $not                            9
     $or                             3
     $pmux                           7
     $scopeinfo                     77
     $sub                           10
     $xor                          131

FF init value for cell $flatten\design195_5_10_inst.\d_latch_instance101.$procdff$419 ($dff): \design195_5_10_inst.d_latch_instance101.enable = 1'x
FF init value for cell $flatten\design195_5_10_inst.\d_latch_instance213.$procdff$419 ($dff): \design195_5_10_inst.d_latch_instance213.enable = 1'x
FF init value for cell $flatten\design195_5_10_inst.\d_latch_instance320.$procdff$419 ($dff): \design195_5_10_inst.d_latch_instance320.enable = 1'x
FF init value for cell $flatten\design195_5_10_inst.\d_latch_instance434.$procdff$419 ($dff): \design195_5_10_inst.d_latch_instance434.enable = 1'x
FF init value for cell $flatten\design195_5_10_inst.\d_latch_instance541.$procdff$419 ($dff): \design195_5_10_inst.d_latch_instance541.enable = 1'x
FF init value for cell $flatten\design195_5_10_inst.\decoder_instance104.$procdff$417 ($dff): \design195_5_10_inst.decoder_instance104.enable = 1'x
FF init value for cell $flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$procdff$410 ($dff): \design195_5_10_inst.decoder_instance104.decoder_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\decoder_instance210.$procdff$417 ($dff): \design195_5_10_inst.decoder_instance210.enable = 1'x
FF init value for cell $flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$procdff$410 ($dff): \design195_5_10_inst.decoder_instance210.decoder_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\decoder_instance325.$procdff$417 ($dff): \design195_5_10_inst.decoder_instance325.enable = 1'x
FF init value for cell $flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$procdff$410 ($dff): \design195_5_10_inst.decoder_instance325.decoder_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\decoder_instance433.$procdff$417 ($dff): \design195_5_10_inst.decoder_instance433.enable = 1'x
FF init value for cell $flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$procdff$410 ($dff): \design195_5_10_inst.decoder_instance433.decoder_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\encoder_instance107.$procdff$435 ($dff): \design195_5_10_inst.encoder_instance107.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\encoder_instance219.$procdff$435 ($dff): \design195_5_10_inst.encoder_instance219.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\encoder_instance322.$procdff$435 ($dff): \design195_5_10_inst.encoder_instance322.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\encoder_instance438.$procdff$435 ($dff): \design195_5_10_inst.encoder_instance438.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\encoder_instance548.$procdff$435 ($dff): \design195_5_10_inst.encoder_instance548.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance106.$procdff$418 ($dff): \design195_5_10_inst.full_adder_instance106.cin = 1'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$procdff$405 ($dff): \design195_5_10_inst.full_adder_instance106.full_adder_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$procdff$407 ($dff): \design195_5_10_inst.full_adder_instance106.full_adder_inst.a = 16'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$procdff$408 ($dff): \design195_5_10_inst.full_adder_instance106.full_adder_inst.b = 16'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$procdff$409 ($dff): \design195_5_10_inst.full_adder_instance106.full_adder_inst.c = 1'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance321.$procdff$418 ($dff): \design195_5_10_inst.full_adder_instance321.cin = 1'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$procdff$405 ($dff): \design195_5_10_inst.full_adder_instance321.full_adder_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$procdff$407 ($dff): \design195_5_10_inst.full_adder_instance321.full_adder_inst.a = 16'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$procdff$408 ($dff): \design195_5_10_inst.full_adder_instance321.full_adder_inst.b = 16'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$procdff$409 ($dff): \design195_5_10_inst.full_adder_instance321.full_adder_inst.c = 1'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance431.$procdff$418 ($dff): \design195_5_10_inst.full_adder_instance431.cin = 1'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$procdff$405 ($dff): \design195_5_10_inst.full_adder_instance431.full_adder_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$procdff$407 ($dff): \design195_5_10_inst.full_adder_instance431.full_adder_inst.a = 16'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$procdff$408 ($dff): \design195_5_10_inst.full_adder_instance431.full_adder_inst.b = 16'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$procdff$409 ($dff): \design195_5_10_inst.full_adder_instance431.full_adder_inst.c = 1'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance540.$procdff$418 ($dff): \design195_5_10_inst.full_adder_instance540.cin = 1'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$procdff$405 ($dff): \design195_5_10_inst.full_adder_instance540.full_adder_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$procdff$407 ($dff): \design195_5_10_inst.full_adder_instance540.full_adder_inst.a = 16'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$procdff$408 ($dff): \design195_5_10_inst.full_adder_instance540.full_adder_inst.b = 16'x
FF init value for cell $flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$procdff$409 ($dff): \design195_5_10_inst.full_adder_instance540.full_adder_inst.c = 1'x
FF init value for cell $flatten\design195_5_10_inst.\invertion_instance103.$procdff$416 ($dff): \design195_5_10_inst.invertion_instance103.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\invertion_instance217.$procdff$416 ($dff): \design195_5_10_inst.invertion_instance217.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\invertion_instance329.$procdff$416 ($dff): \design195_5_10_inst.invertion_instance329.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance102.$procdff$432 ($dff): \design195_5_10_inst.large_adder_instance102.add_out_reg_0 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance102.$procdff$433 ($dff): \design195_5_10_inst.large_adder_instance102.add_out_reg_1 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance102.$procdff$434 ($dff): \design195_5_10_inst.large_adder_instance102.add_out_reg_2 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance212.$procdff$432 ($dff): \design195_5_10_inst.large_adder_instance212.add_out_reg_0 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance212.$procdff$433 ($dff): \design195_5_10_inst.large_adder_instance212.add_out_reg_1 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance212.$procdff$434 ($dff): \design195_5_10_inst.large_adder_instance212.add_out_reg_2 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance324.$procdff$432 ($dff): \design195_5_10_inst.large_adder_instance324.add_out_reg_0 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance324.$procdff$433 ($dff): \design195_5_10_inst.large_adder_instance324.add_out_reg_1 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance324.$procdff$434 ($dff): \design195_5_10_inst.large_adder_instance324.add_out_reg_2 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance432.$procdff$432 ($dff): \design195_5_10_inst.large_adder_instance432.add_out_reg_0 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance432.$procdff$433 ($dff): \design195_5_10_inst.large_adder_instance432.add_out_reg_1 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance432.$procdff$434 ($dff): \design195_5_10_inst.large_adder_instance432.add_out_reg_2 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance547.$procdff$432 ($dff): \design195_5_10_inst.large_adder_instance547.add_out_reg_0 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance547.$procdff$433 ($dff): \design195_5_10_inst.large_adder_instance547.add_out_reg_1 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_adder_instance547.$procdff$434 ($dff): \design195_5_10_inst.large_adder_instance547.add_out_reg_2 = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_mux_instance436.$procdff$420 ($adff): \design195_5_10_inst.large_mux_instance436.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_mux_instance436.$procdff$421 ($adff): \design195_5_10_inst.large_mux_instance436.data_out_reg = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$420 ($adff): \design195_5_10_inst.large_mux_instance542.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff): \design195_5_10_inst.large_mux_instance542.data_out_reg = 32'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$425 ($dff): \design195_5_10_inst.memory_cntrl_instance108.state = 2'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$426 ($dff): \design195_5_10_inst.memory_cntrl_instance108.reset_mem = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$427 ($dff): \design195_5_10_inst.memory_cntrl_instance108.wr_addr = 10'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$428 ($dff): \design195_5_10_inst.memory_cntrl_instance108.rd_addr = 10'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$429 ($dff): \design195_5_10_inst.memory_cntrl_instance108.wr_data_mem = 32'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$430 ($dff): \design195_5_10_inst.memory_cntrl_instance108.rd_en = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$431 ($dff): \design195_5_10_inst.memory_cntrl_instance108.wr_en = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$procdff$411 ($dff): \design195_5_10_inst.memory_cntrl_instance108.mem.rd_data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$425 ($dff): \design195_5_10_inst.memory_cntrl_instance216.state = 2'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$426 ($dff): \design195_5_10_inst.memory_cntrl_instance216.reset_mem = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$427 ($dff): \design195_5_10_inst.memory_cntrl_instance216.wr_addr = 10'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$428 ($dff): \design195_5_10_inst.memory_cntrl_instance216.rd_addr = 10'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$429 ($dff): \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem = 32'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$430 ($dff): \design195_5_10_inst.memory_cntrl_instance216.rd_en = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$431 ($dff): \design195_5_10_inst.memory_cntrl_instance216.wr_en = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$procdff$411 ($dff): \design195_5_10_inst.memory_cntrl_instance216.mem.rd_data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$425 ($dff): \design195_5_10_inst.memory_cntrl_instance328.state = 2'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$426 ($dff): \design195_5_10_inst.memory_cntrl_instance328.reset_mem = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$427 ($dff): \design195_5_10_inst.memory_cntrl_instance328.wr_addr = 10'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$428 ($dff): \design195_5_10_inst.memory_cntrl_instance328.rd_addr = 10'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$429 ($dff): \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem = 32'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$430 ($dff): \design195_5_10_inst.memory_cntrl_instance328.rd_en = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$431 ($dff): \design195_5_10_inst.memory_cntrl_instance328.wr_en = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$procdff$411 ($dff): \design195_5_10_inst.memory_cntrl_instance328.mem.rd_data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$425 ($dff): \design195_5_10_inst.memory_cntrl_instance430.state = 2'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$426 ($dff): \design195_5_10_inst.memory_cntrl_instance430.reset_mem = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$427 ($dff): \design195_5_10_inst.memory_cntrl_instance430.wr_addr = 10'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$428 ($dff): \design195_5_10_inst.memory_cntrl_instance430.rd_addr = 10'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$429 ($dff): \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem = 32'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$430 ($dff): \design195_5_10_inst.memory_cntrl_instance430.rd_en = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$431 ($dff): \design195_5_10_inst.memory_cntrl_instance430.wr_en = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$procdff$411 ($dff): \design195_5_10_inst.memory_cntrl_instance430.mem.rd_data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$425 ($dff): \design195_5_10_inst.memory_cntrl_instance546.state = 2'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$426 ($dff): \design195_5_10_inst.memory_cntrl_instance546.reset_mem = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$427 ($dff): \design195_5_10_inst.memory_cntrl_instance546.wr_addr = 10'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$428 ($dff): \design195_5_10_inst.memory_cntrl_instance546.rd_addr = 10'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$429 ($dff): \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem = 32'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$430 ($dff): \design195_5_10_inst.memory_cntrl_instance546.rd_en = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$431 ($dff): \design195_5_10_inst.memory_cntrl_instance546.wr_en = 1'x
FF init value for cell $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$procdff$411 ($dff): \design195_5_10_inst.memory_cntrl_instance546.mem.rd_data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\mod_n_counter_instance109.$procdff$424 ($dff): \design195_5_10_inst.mod_n_counter_instance109.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\mod_n_counter_instance215.$procdff$424 ($dff): \design195_5_10_inst.mod_n_counter_instance215.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\mod_n_counter_instance326.$procdff$424 ($dff): \design195_5_10_inst.mod_n_counter_instance326.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\mod_n_counter_instance439.$procdff$424 ($dff): \design195_5_10_inst.mod_n_counter_instance439.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\mod_n_counter_instance545.$procdff$424 ($dff): \design195_5_10_inst.mod_n_counter_instance545.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\parity_generator_instance214.$procdff$422 ($dff): \design195_5_10_inst.parity_generator_instance214.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\parity_generator_instance214.\paritygenerator_inst.$procdff$404 ($dff): \design195_5_10_inst.parity_generator_instance214.paritygenerator_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\parity_generator_instance327.$procdff$422 ($dff): \design195_5_10_inst.parity_generator_instance327.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\parity_generator_instance327.\paritygenerator_inst.$procdff$404 ($dff): \design195_5_10_inst.parity_generator_instance327.paritygenerator_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\parity_generator_instance437.$procdff$422 ($dff): \design195_5_10_inst.parity_generator_instance437.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\parity_generator_instance437.\paritygenerator_inst.$procdff$404 ($dff): \design195_5_10_inst.parity_generator_instance437.paritygenerator_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\parity_generator_instance543.$procdff$422 ($dff): \design195_5_10_inst.parity_generator_instance543.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\parity_generator_instance543.\paritygenerator_inst.$procdff$404 ($dff): \design195_5_10_inst.parity_generator_instance543.paritygenerator_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\register_instance105.$procdff$436 ($dff): \design195_5_10_inst.register_instance105.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\register_instance211.$procdff$436 ($dff): \design195_5_10_inst.register_instance211.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\register_instance323.$procdff$436 ($dff): \design195_5_10_inst.register_instance323.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\register_instance549.$procdff$436 ($dff): \design195_5_10_inst.register_instance549.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\shift_reg_instance100.$procdff$423 ($dff): \design195_5_10_inst.shift_reg_instance100.enable = 1'x
FF init value for cell $flatten\design195_5_10_inst.\shift_reg_instance100.\shift_reg_inst.$procdff$415 ($dff): \design195_5_10_inst.shift_reg_instance100.shift_reg_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\shift_reg_instance218.$procdff$423 ($dff): \design195_5_10_inst.shift_reg_instance218.enable = 1'x
FF init value for cell $flatten\design195_5_10_inst.\shift_reg_instance218.\shift_reg_inst.$procdff$415 ($dff): \design195_5_10_inst.shift_reg_instance218.shift_reg_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\shift_reg_instance435.$procdff$423 ($dff): \design195_5_10_inst.shift_reg_instance435.enable = 1'x
FF init value for cell $flatten\design195_5_10_inst.\shift_reg_instance435.\shift_reg_inst.$procdff$415 ($dff): \design195_5_10_inst.shift_reg_instance435.shift_reg_inst.data_out = 32'x
FF init value for cell $flatten\design195_5_10_inst.\shift_reg_instance544.$procdff$423 ($dff): \design195_5_10_inst.shift_reg_instance544.enable = 1'x
FF init value for cell $flatten\design195_5_10_inst.\shift_reg_instance544.\shift_reg_inst.$procdff$415 ($dff): \design195_5_10_inst.shift_reg_instance544.shift_reg_inst.data_out = 32'x
FF init value for cell $procdff$437 ($dff): \d_in0 = 32'x
FF init value for cell $procdff$438 ($dff): \d_in1 = 32'x
FF init value for cell $procdff$439 ($dff): \d_in2 = 32'x
FF init value for cell $procdff$440 ($dff): \d_in3 = 32'x
FF init value for cell $procdff$441 ($dff): \d_in4 = 32'x
FF init value for cell $procdff$442 ($adff): \tmp = 160'x

16.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.32. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~105 debug messages>
Removed a total of 35 cells.

16.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance107.$procmux$354.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance107.$procmux$357.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance107.$procmux$360.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance107.$procmux$363.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance107.$procmux$369.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance107.$procmux$372.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance107.$procmux$375.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance107.$procmux$381.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance107.$procmux$384.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance107.$procmux$390.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance219.$procmux$354.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance219.$procmux$357.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance219.$procmux$360.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance219.$procmux$363.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance219.$procmux$369.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance219.$procmux$372.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance219.$procmux$375.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance219.$procmux$381.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance219.$procmux$384.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance219.$procmux$390.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance322.$procmux$354.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance322.$procmux$357.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance322.$procmux$360.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance322.$procmux$363.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance322.$procmux$369.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance322.$procmux$372.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance322.$procmux$375.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance322.$procmux$381.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance322.$procmux$384.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance322.$procmux$390.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance438.$procmux$354.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance438.$procmux$357.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance438.$procmux$360.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance438.$procmux$363.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance438.$procmux$369.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance438.$procmux$372.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance438.$procmux$375.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance438.$procmux$381.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance438.$procmux$384.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance438.$procmux$390.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance548.$procmux$354.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance548.$procmux$357.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance548.$procmux$360.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance548.$procmux$363.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance548.$procmux$369.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance548.$procmux$372.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance548.$procmux$375.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance548.$procmux$381.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance548.$procmux$384.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\encoder_instance548.$procmux$390.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\d_latch_instance320.\d_latch_inst.$procmux$216.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\d_latch_instance434.\d_latch_inst.$procmux$216.
Removed 52 multiplexer ports.
<suppressed ~146 debug messages>

16.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
    New ctrl vector for $pmux cell $flatten\design195_5_10_inst.\large_mux_instance436.$procmux$250: { $auto_565 $auto_563 $auto_561 $auto_559 }
    New ctrl vector for $pmux cell $flatten\design195_5_10_inst.\large_mux_instance542.$procmux$250: { $auto_573 $auto_571 $auto_569 $auto_567 }
    Consolidated identical input bits for $mux cell $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$procmux$224:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74
      New ports: A=1'0, B=1'1, Y=$flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0]
      New connections: $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [31:1] = { $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] }
    Consolidated identical input bits for $mux cell $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$procmux$224:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74
      New ports: A=1'0, B=1'1, Y=$flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0]
      New connections: $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [31:1] = { $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] }
    Consolidated identical input bits for $mux cell $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$procmux$224:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74
      New ports: A=1'0, B=1'1, Y=$flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0]
      New connections: $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [31:1] = { $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] }
    Consolidated identical input bits for $mux cell $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$procmux$224:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74
      New ports: A=1'0, B=1'1, Y=$flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0]
      New connections: $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [31:1] = { $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] }
    Consolidated identical input bits for $mux cell $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$procmux$224:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74
      New ports: A=1'0, B=1'1, Y=$flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0]
      New connections: $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [31:1] = { $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$0$memwr$\mem$../../../../.././rtl/memory_cntrl.v:99$70_EN[31:0]$74 [0] }
  Optimizing cells in module \design195_5_10_top.
Performed a total of 7 changes.

16.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~117 debug messages>
Removed a total of 39 cells.

16.36. Executing OPT_SHARE pass.

16.37. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=113, #solve=0, #remove=0, time=0.02 sec.]

16.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 105 unused wires.
<suppressed ~1 debug messages>

16.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.40. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~125 debug messages>

16.41. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.43. Executing OPT_SHARE pass.

16.44. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=113, #solve=0, #remove=0, time=0.01 sec.]

16.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 2

16.47. Executing FSM pass (extract and optimize FSM).

16.47.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking design195_5_10_top.design195_5_10_inst.encoder_instance107.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking design195_5_10_top.design195_5_10_inst.encoder_instance219.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking design195_5_10_top.design195_5_10_inst.encoder_instance322.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking design195_5_10_top.design195_5_10_inst.encoder_instance438.data_out as FSM state register:
    Register has an initialization value.
Not marking design195_5_10_top.design195_5_10_inst.encoder_instance548.data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking design195_5_10_top.design195_5_10_inst.memory_cntrl_instance108.state as FSM state register:
    Register has an initialization value.
Not marking design195_5_10_top.design195_5_10_inst.memory_cntrl_instance216.state as FSM state register:
    Register has an initialization value.
Not marking design195_5_10_top.design195_5_10_inst.memory_cntrl_instance328.state as FSM state register:
    Register has an initialization value.
Not marking design195_5_10_top.design195_5_10_inst.memory_cntrl_instance430.state as FSM state register:
    Register has an initialization value.
Not marking design195_5_10_top.design195_5_10_inst.memory_cntrl_instance546.state as FSM state register:
    Register has an initialization value.

16.47.2. Executing FSM_EXTRACT pass (extracting FSM from design).

16.47.3. Executing FSM_OPT pass (simple optimizations of FSMs).

16.47.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.47.5. Executing FSM_OPT pass (simple optimizations of FSMs).

16.47.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

16.47.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

16.47.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

16.48. Executing WREDUCE pass (reducing word size of cells).
Removed top 29 address bits (of 32) from memory init port design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_186 ($flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184).
Removed top 29 address bits (of 32) from memory init port design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_186 ($flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184).
Removed top 29 address bits (of 32) from memory init port design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_186 ($flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184).
Removed top 29 address bits (of 32) from memory init port design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_186 ($flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184).
Removed top 29 bits (of 32) from FF cell design195_5_10_top.$procdff$438 ($dff).
Removed top 24 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\mod_n_counter_instance545.$eq$../../../../.././rtl/mod_n_counter.v:12$123 ($eq).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\mod_n_counter_instance545.$add$../../../../.././rtl/mod_n_counter.v:15$124 ($add).
Removed top 24 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\mod_n_counter_instance439.$eq$../../../../.././rtl/mod_n_counter.v:12$123 ($eq).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\mod_n_counter_instance439.$add$../../../../.././rtl/mod_n_counter.v:15$124 ($add).
Removed top 24 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\mod_n_counter_instance326.$eq$../../../../.././rtl/mod_n_counter.v:12$123 ($eq).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\mod_n_counter_instance326.$add$../../../../.././rtl/mod_n_counter.v:15$124 ($add).
Removed top 24 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\mod_n_counter_instance215.$eq$../../../../.././rtl/mod_n_counter.v:12$123 ($eq).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\mod_n_counter_instance215.$add$../../../../.././rtl/mod_n_counter.v:15$124 ($add).
Removed top 24 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\mod_n_counter_instance109.$eq$../../../../.././rtl/mod_n_counter.v:12$123 ($eq).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\mod_n_counter_instance109.$add$../../../../.././rtl/mod_n_counter.v:15$124 ($add).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$283 ($mux).
Removed top 1 bits (of 2) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$281_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$280 ($pmux).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$283 ($mux).
Removed top 1 bits (of 2) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$281_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$280 ($pmux).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$283 ($mux).
Removed top 1 bits (of 2) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$281_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$280 ($pmux).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$283 ($mux).
Removed top 1 bits (of 2) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$281_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$280 ($pmux).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$283 ($mux).
Removed top 1 bits (of 2) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$281_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$280 ($pmux).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
Removed top 31 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
Removed top 3 bits (of 4) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance542.$procmux$265_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance542.$procmux$264_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance542.$procmux$263_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance542.$procmux$262_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance542.$procmux$261_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance542.$procmux$260_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance542.$procmux$259_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance436.$procmux$265_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance436.$procmux$264_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance436.$procmux$263_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance436.$procmux$262_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance436.$procmux$261_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance436.$procmux$260_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance436.$procmux$259_CMP0 ($eq).
Removed top 15 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112 ($sub).
Removed top 15 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 23 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:23$110 ($add).
Removed top 23 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:23$109 ($add).
Removed top 15 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112 ($sub).
Removed top 29 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 15 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 23 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:23$110 ($add).
Removed top 23 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:23$109 ($add).
Removed top 15 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112 ($sub).
Removed top 29 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 15 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 23 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:23$110 ($add).
Removed top 23 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:23$109 ($add).
Removed top 15 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112 ($sub).
Removed top 15 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 23 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:23$110 ($add).
Removed top 23 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:23$109 ($add).
Removed top 15 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112 ($sub).
Removed top 15 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 23 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:23$110 ($add).
Removed top 23 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:23$109 ($add).
Removed top 29 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$procdff$416 ($dff).
Removed top 1 bits (of 33) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 16 bits (of 33) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148 ($add).
Removed top 1 bits (of 33) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 16 bits (of 33) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148 ($add).
Removed top 1 bits (of 33) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 16 bits (of 33) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148 ($add).
Removed top 1 bits (of 33) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 16 bits (of 33) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148 ($add).
Removed top 8 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$procdff$435 ($dff).
Removed top 19 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$eq$../../../../.././rtl/encoder.v:35$107 ($eq).
Removed top 18 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$eq$../../../../.././rtl/encoder.v:32$106 ($eq).
Removed top 22 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$eq$../../../../.././rtl/encoder.v:29$105 ($eq).
Removed top 25 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$eq$../../../../.././rtl/encoder.v:26$104 ($eq).
Removed top 19 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance438.$eq$../../../../.././rtl/encoder.v:35$107 ($eq).
Removed top 18 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance438.$eq$../../../../.././rtl/encoder.v:32$106 ($eq).
Removed top 22 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance438.$eq$../../../../.././rtl/encoder.v:29$105 ($eq).
Removed top 25 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance438.$eq$../../../../.././rtl/encoder.v:26$104 ($eq).
Removed top 8 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$procdff$435 ($dff).
Removed top 19 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:35$107 ($eq).
Removed top 18 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:32$106 ($eq).
Removed top 22 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:29$105 ($eq).
Removed top 25 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:26$104 ($eq).
Removed top 19 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance219.$eq$../../../../.././rtl/encoder.v:35$107 ($eq).
Removed top 18 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance219.$eq$../../../../.././rtl/encoder.v:32$106 ($eq).
Removed top 22 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance219.$eq$../../../../.././rtl/encoder.v:29$105 ($eq).
Removed top 25 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance219.$eq$../../../../.././rtl/encoder.v:26$104 ($eq).
Removed top 19 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$eq$../../../../.././rtl/encoder.v:35$107 ($eq).
Removed top 18 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$eq$../../../../.././rtl/encoder.v:32$106 ($eq).
Removed top 22 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$eq$../../../../.././rtl/encoder.v:29$105 ($eq).
Removed top 25 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$eq$../../../../.././rtl/encoder.v:26$104 ($eq).
Removed top 8 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$procdff$410 ($dff).
Removed top 8 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$procdff$410 ($dff).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$287 ($mux).
Removed top 1 bits (of 2) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$425 ($dff).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$287 ($mux).
Removed top 1 bits (of 2) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$425 ($dff).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$287 ($mux).
Removed top 1 bits (of 2) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$425 ($dff).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$287 ($mux).
Removed top 1 bits (of 2) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$425 ($dff).
Removed top 1 bits (of 2) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$287 ($mux).
Removed top 1 bits (of 2) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$425 ($dff).
Removed top 23 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 23 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 15 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance547.$procmux$342 ($mux).
Removed top 15 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance547.$procdff$434 ($dff).
Removed top 15 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 23 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 23 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 15 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$procmux$342 ($mux).
Removed top 15 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$procdff$434 ($dff).
Removed top 29 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 29 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 23 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 23 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 15 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$procmux$342 ($mux).
Removed top 15 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$procdff$434 ($dff).
Removed top 29 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 29 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 23 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 23 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 15 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance212.$procmux$342 ($mux).
Removed top 15 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance212.$procdff$434 ($dff).
Removed top 15 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 23 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 23 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 22 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 15 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$procmux$342 ($mux).
Removed top 15 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$procdff$434 ($dff).
Removed top 15 bits (of 32) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 29 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$procmux$239 ($mux).
Removed top 5 bits (of 8) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$or$../../../../.././rtl/invertion.v:18$135 ($or).
Removed top 16 bits (of 33) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 14 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 16 bits (of 33) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 14 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 16 bits (of 33) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 14 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 16 bits (of 33) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 14 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$procmux$396 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$procmux$393 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$procmux$387 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$procmux$378 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$procmux$366 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$procmux$351 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$procmux$396 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$procmux$393 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$procmux$387 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$procmux$378 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$procmux$366 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$procmux$351 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$procmux$210 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$procmux$207 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$procmux$210 ($mux).
Removed top 8 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$procmux$207 ($mux).
Removed top 1 bits (of 2) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$281_CMP0 ($eq).
Removed top 1 bits (of 2) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$281_CMP0 ($eq).
Removed top 1 bits (of 2) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$281_CMP0 ($eq).
Removed top 1 bits (of 2) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$281_CMP0 ($eq).
Removed top 1 bits (of 2) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$281_CMP0 ($eq).
Removed top 14 bits (of 17) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$procdff$434 ($dff).
Removed top 29 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$mul$../../../../.././rtl/large_adder.v:28$114 ($mul).
Removed top 14 bits (of 17) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$procdff$434 ($dff).
Removed top 29 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$mul$../../../../.././rtl/large_adder.v:28$114 ($mul).
Removed cell design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$xor$../../../../.././rtl/invertion.v:21$136 ($xor).
Removed cell design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$ternary$../../../../.././rtl/invertion.v:24$139 ($mux).
Removed top 5 bits (of 8) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$or$../../../../.././rtl/invertion.v:18$135 ($or).
Removed top 5 bits (of 8) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$or$../../../../.././rtl/invertion.v:18$135 ($or).
Removed cell design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$not$../../../../.././rtl/invertion.v:24$138 ($not).
Removed top 5 bits (of 8) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$not$../../../../.././rtl/invertion.v:18$134 ($not).
Removed top 5 bits (of 8) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$not$../../../../.././rtl/invertion.v:18$133 ($not).
Removed cell design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$eq$../../../../.././rtl/invertion.v:24$137 ($eq).
Removed top 14 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$procmux$194 ($mux).
Removed top 14 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$procdff$405 ($dff).
Removed top 14 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$procmux$194 ($mux).
Removed top 14 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$procdff$405 ($dff).
Removed top 14 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$procmux$194 ($mux).
Removed top 14 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$procdff$405 ($dff).
Removed top 14 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$procmux$194 ($mux).
Removed top 14 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$procdff$405 ($dff).
Removed top 14 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:35$107 ($eq).
Removed top 14 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:32$106 ($eq).
Removed top 14 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:29$105 ($eq).
Removed top 14 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:26$104 ($eq).
Removed top 14 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$eq$../../../../.././rtl/encoder.v:35$107 ($eq).
Removed top 14 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$eq$../../../../.././rtl/encoder.v:32$106 ($eq).
Removed top 14 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$eq$../../../../.././rtl/encoder.v:29$105 ($eq).
Removed top 14 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$eq$../../../../.././rtl/encoder.v:26$104 ($eq).
Removed top 14 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\d_latch_instance541.\d_latch_inst.$procmux$213 ($mux).
Removed top 14 bits (of 16) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112 ($sub).
Removed top 14 bits (of 17) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$procmux$342 ($mux).
Removed top 14 bits (of 16) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 14 bits (of 17) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 7 bits (of 8) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:23$109 ($add).
Removed top 6 bits (of 8) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:23$109 ($add).
Removed top 6 bits (of 9) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:23$109 ($add).
Removed top 14 bits (of 17) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$procmux$342 ($mux).
Removed top 14 bits (of 17) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 16 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 5 bits (of 8) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$not$../../../../.././rtl/invertion.v:18$134 ($not).
Removed top 5 bits (of 8) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$not$../../../../.././rtl/invertion.v:18$133 ($not).
Removed top 14 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\d_latch_instance541.\d_latch_inst.$procmux$216 ($mux).
Removed top 6 bits (of 9) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 13 bits (of 16) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 13 bits (of 16) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 13 bits (of 16) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 16 bits (of 32) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 1 bits (of 17) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 5 bits (of 16) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 1 bits (of 17) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$procdff$434 ($dff).
Removed top 16 bits (of 32) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$mul$../../../../.././rtl/large_adder.v:28$114 ($mul).
Removed top 5 bits (of 16) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 5 bits (of 16) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
Removed top 1 bits (of 17) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$procmux$342 ($mux).
Removed top 5 bits (of 16) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$procdff$434 ($dff).
Removed top 5 bits (of 16) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$mul$../../../../.././rtl/large_adder.v:28$114 ($mul).
Removed top 1 bits (of 17) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 5 bits (of 16) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$procmux$342 ($mux).
Removed top 5 bits (of 16) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 5 bits (of 16) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 5 bits (of 16) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 14 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\d_latch_instance541.\d_latch_inst.$procmux$213_Y.
Removed top 8 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$0\data_out[31:0].
Removed top 8 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$procmux$207_Y.
Removed top 8 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$0\data_out[31:0].
Removed top 8 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$procmux$207_Y.
Removed top 8 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$0\data_out[31:0].
Removed top 8 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$2\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$3\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$4\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$5\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$0\data_out[31:0].
Removed top 8 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$2\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$3\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$4\data_out_wire[31:0].
Removed top 8 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$5\data_out_wire[31:0].
Removed top 14 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$0\data_out[31:0].
Removed top 16 bits (of 33) from wire design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148_Y.
Removed top 15 bits (of 33) from wire design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149_Y.
Removed top 14 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$0\data_out[31:0].
Removed top 16 bits (of 33) from wire design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148_Y.
Removed top 15 bits (of 33) from wire design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149_Y.
Removed top 14 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$0\data_out[31:0].
Removed top 16 bits (of 33) from wire design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148_Y.
Removed top 15 bits (of 33) from wire design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149_Y.
Removed top 14 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$0\data_out[31:0].
Removed top 16 bits (of 33) from wire design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148_Y.
Removed top 15 bits (of 33) from wire design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149_Y.
Removed top 29 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$0\data_out[31:0].
Removed top 5 bits (of 8) from wire design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$not$../../../../.././rtl/invertion.v:18$133_Y.
Removed top 5 bits (of 8) from wire design195_5_10_top.$flatten\design195_5_10_inst.\invertion_instance103.$not$../../../../.././rtl/invertion.v:18$134_Y.
Removed top 21 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$0\add_out_reg_2[31:0].
Removed top 23 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:23$109_Y.
Removed top 23 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:23$110_Y.
Removed top 21 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:25$113_Y.
Removed top 21 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance102.$mul$../../../../.././rtl/large_adder.v:28$114_Y.
Removed top 15 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance212.$0\add_out_reg_2[31:0].
Removed top 23 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:23$109_Y.
Removed top 23 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:23$110_Y.
Removed top 15 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:25$113_Y.
Removed top 29 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$0\add_out_reg_2[31:0].
Removed top 23 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:23$109_Y.
Removed top 23 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:23$110_Y.
Removed top 29 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:25$113_Y.
Removed top 29 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance324.$mul$../../../../.././rtl/large_adder.v:28$114_Y.
Removed top 29 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$0\add_out_reg_2[31:0].
Removed top 29 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:23$109_Y.
Removed top 23 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:23$110_Y.
Removed top 29 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:25$113_Y.
Removed top 29 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$mul$../../../../.././rtl/large_adder.v:28$114_Y.
Removed top 15 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance547.$0\add_out_reg_2[31:0].
Removed top 23 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:23$109_Y.
Removed top 23 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:23$110_Y.
Removed top 15 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:25$113_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$0\state[1:0].
Removed top 22 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$add$../../../../.././rtl/memory_cntrl.v:45$118_Y.
Removed top 22 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$add$../../../../.././rtl/memory_cntrl.v:56$121_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$280_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$283_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$0\state[1:0].
Removed top 22 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$add$../../../../.././rtl/memory_cntrl.v:45$118_Y.
Removed top 22 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$add$../../../../.././rtl/memory_cntrl.v:56$121_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$280_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$283_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$0\state[1:0].
Removed top 22 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$add$../../../../.././rtl/memory_cntrl.v:45$118_Y.
Removed top 22 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$add$../../../../.././rtl/memory_cntrl.v:56$121_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$280_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$283_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$0\state[1:0].
Removed top 22 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$add$../../../../.././rtl/memory_cntrl.v:45$118_Y.
Removed top 22 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$add$../../../../.././rtl/memory_cntrl.v:56$121_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$280_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$283_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$0\state[1:0].
Removed top 22 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$add$../../../../.././rtl/memory_cntrl.v:45$118_Y.
Removed top 22 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$add$../../../../.././rtl/memory_cntrl.v:56$121_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$280_Y.
Removed top 1 bits (of 2) from wire design195_5_10_top.$flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$283_Y.

16.49. Executing PEEPOPT pass (run peephole optimizers).

16.50. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 81 unused wires.
<suppressed ~2 debug messages>

16.51. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~6 debug messages>

16.52. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.53. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~125 debug messages>

16.54. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.55. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.56. Executing OPT_SHARE pass.

16.57. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\design195_5_10_inst.\shift_reg_instance544.\shift_reg_inst.$procdff$415 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\shift_reg_instance544.\shift_reg_inst.$procmux$233_Y, Q = \design195_5_10_inst.shift_reg_instance544.shift_reg_inst.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\shift_reg_instance435.\shift_reg_inst.$procdff$415 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\shift_reg_instance435.\shift_reg_inst.$procmux$233_Y, Q = \design195_5_10_inst.shift_reg_instance435.shift_reg_inst.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\shift_reg_instance218.\shift_reg_inst.$procdff$415 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\shift_reg_instance218.\shift_reg_inst.$procmux$233_Y, Q = \design195_5_10_inst.shift_reg_instance218.shift_reg_inst.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\shift_reg_instance100.\shift_reg_inst.$procdff$415 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\shift_reg_instance100.\shift_reg_inst.$procmux$233_Y, Q = \design195_5_10_inst.shift_reg_instance100.shift_reg_inst.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\register_instance549.$procdff$436 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.encoder_instance548.data_out [23:0], Q = \design195_5_10_inst.register_instance549.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\register_instance323.$procdff$436 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.encoder_instance322.data_out [23:0], Q = \design195_5_10_inst.register_instance323.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\register_instance211.$procdff$436 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.decoder_instance210.decoder_inst.data_out [23:0], Q = \design195_5_10_inst.register_instance211.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\register_instance105.$procdff$436 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.decoder_instance104.decoder_inst.data_out [23:0], Q = \design195_5_10_inst.register_instance105.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\parity_generator_instance543.\paritygenerator_inst.$procdff$404 ($dff) from module design195_5_10_top (D = { \design195_5_10_inst.large_mux_instance542.data_out [30:0] \design195_5_10_inst.parity_generator_instance543.parity }, Q = \design195_5_10_inst.parity_generator_instance543.paritygenerator_inst.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\parity_generator_instance543.$procdff$422 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.parity_generator_instance543.paritygenerator_inst.data_out, Q = \design195_5_10_inst.parity_generator_instance543.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\parity_generator_instance437.\paritygenerator_inst.$procdff$404 ($dff) from module design195_5_10_top (D = { \design195_5_10_inst.large_mux_instance436.data_out [30:0] \design195_5_10_inst.parity_generator_instance437.parity }, Q = \design195_5_10_inst.parity_generator_instance437.paritygenerator_inst.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\parity_generator_instance437.$procdff$422 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.parity_generator_instance437.paritygenerator_inst.data_out, Q = \design195_5_10_inst.parity_generator_instance437.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\parity_generator_instance327.\paritygenerator_inst.$procdff$404 ($dff) from module design195_5_10_top (D = { \design195_5_10_inst.mod_n_counter_instance326.data_out [30:0] \design195_5_10_inst.parity_generator_instance327.parity }, Q = \design195_5_10_inst.parity_generator_instance327.paritygenerator_inst.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\parity_generator_instance327.$procdff$422 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.parity_generator_instance327.paritygenerator_inst.data_out, Q = \design195_5_10_inst.parity_generator_instance327.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\parity_generator_instance214.\paritygenerator_inst.$procdff$404 ($dff) from module design195_5_10_top (D = { \design195_5_10_inst.parity_generator_instance214.paritygenerator_inst.data_in [30:0] \design195_5_10_inst.parity_generator_instance214.parity }, Q = \design195_5_10_inst.parity_generator_instance214.paritygenerator_inst.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\parity_generator_instance214.$procdff$422 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.parity_generator_instance214.paritygenerator_inst.data_out, Q = \design195_5_10_inst.parity_generator_instance214.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\mod_n_counter_instance545.$procdff$424 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\mod_n_counter_instance545.$add$../../../../.././rtl/mod_n_counter.v:15$124_Y, Q = \design195_5_10_inst.mod_n_counter_instance545.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\mod_n_counter_instance439.$procdff$424 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\mod_n_counter_instance439.$add$../../../../.././rtl/mod_n_counter.v:15$124_Y, Q = \design195_5_10_inst.mod_n_counter_instance439.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\mod_n_counter_instance326.$procdff$424 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\mod_n_counter_instance326.$add$../../../../.././rtl/mod_n_counter.v:15$124_Y, Q = \design195_5_10_inst.mod_n_counter_instance326.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\mod_n_counter_instance215.$procdff$424 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\mod_n_counter_instance215.$add$../../../../.././rtl/mod_n_counter.v:15$124_Y, Q = \design195_5_10_inst.mod_n_counter_instance215.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\mod_n_counter_instance109.$procdff$424 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\mod_n_counter_instance109.$add$../../../../.././rtl/mod_n_counter.v:15$124_Y, Q = \design195_5_10_inst.mod_n_counter_instance109.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$procdff$411 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$procmux$218_Y, Q = \design195_5_10_inst.memory_cntrl_instance546.mem.rd_data_out, rval = 0).
Adding EN signal on $auto_687 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:108$79_DATA, Q = \design195_5_10_inst.memory_cntrl_instance546.mem.rd_data_out).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$431 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$294_Y, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_en, rval = 1'0).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_en_689 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$292_Y, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_en).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$430 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$300_Y, Q = \design195_5_10_inst.memory_cntrl_instance546.rd_en, rval = 1'0).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.rd_en_691 ($sdff) from module design195_5_10_top (D = 1'1, Q = \design195_5_10_inst.memory_cntrl_instance546.rd_en).
Adding EN signal on $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$429 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$308_Y, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem).
Adding SRST signal on $auto_693 ($dffe) from module design195_5_10_top (D = \design195_5_10_inst.mod_n_counter_instance545.data_out, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$428 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$319_Y, Q = \design195_5_10_inst.memory_cntrl_instance546.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto_699 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$317_Y, Q = \design195_5_10_inst.memory_cntrl_instance546.rd_addr).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$427 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$329_Y, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto_701 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$327_Y, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_addr).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$426 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procmux$336_Y, Q = \design195_5_10_inst.memory_cntrl_instance546.reset_mem, rval = 1'1).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.reset_mem_703 ($sdff) from module design195_5_10_top (D = 1'0, Q = \design195_5_10_inst.memory_cntrl_instance546.reset_mem).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance546.$procdff$425 ($dff) from module design195_5_10_top (D = $auto_650 [0], Q = \design195_5_10_inst.memory_cntrl_instance546.state [0], rval = 1'0).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$procdff$411 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$procmux$218_Y, Q = \design195_5_10_inst.memory_cntrl_instance430.mem.rd_data_out, rval = 0).
Adding EN signal on $auto_706 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:108$79_DATA, Q = \design195_5_10_inst.memory_cntrl_instance430.mem.rd_data_out).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$431 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$294_Y, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_en, rval = 1'0).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_en_708 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$292_Y, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_en).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$430 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$300_Y, Q = \design195_5_10_inst.memory_cntrl_instance430.rd_en, rval = 1'0).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.rd_en_710 ($sdff) from module design195_5_10_top (D = 1'1, Q = \design195_5_10_inst.memory_cntrl_instance430.rd_en).
Adding EN signal on $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$429 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$308_Y, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem).
Adding SRST signal on $auto_712 ($dffe) from module design195_5_10_top (D = \d_in3, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$428 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$319_Y, Q = \design195_5_10_inst.memory_cntrl_instance430.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto_718 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$317_Y, Q = \design195_5_10_inst.memory_cntrl_instance430.rd_addr).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$427 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$329_Y, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto_720 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$327_Y, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_addr).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$426 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procmux$336_Y, Q = \design195_5_10_inst.memory_cntrl_instance430.reset_mem, rval = 1'1).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.reset_mem_722 ($sdff) from module design195_5_10_top (D = 1'0, Q = \design195_5_10_inst.memory_cntrl_instance430.reset_mem).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance430.$procdff$425 ($dff) from module design195_5_10_top (D = $auto_645 [0], Q = \design195_5_10_inst.memory_cntrl_instance430.state [0], rval = 1'0).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$procdff$411 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$procmux$218_Y, Q = \design195_5_10_inst.memory_cntrl_instance328.mem.rd_data_out, rval = 0).
Adding EN signal on $auto_725 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:108$79_DATA, Q = \design195_5_10_inst.memory_cntrl_instance328.mem.rd_data_out).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$431 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$294_Y, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_en, rval = 1'0).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.wr_en_727 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$292_Y, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_en).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$430 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$300_Y, Q = \design195_5_10_inst.memory_cntrl_instance328.rd_en, rval = 1'0).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.rd_en_729 ($sdff) from module design195_5_10_top (D = 1'1, Q = \design195_5_10_inst.memory_cntrl_instance328.rd_en).
Adding EN signal on $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$429 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$308_Y, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem).
Adding SRST signal on $auto_731 ($dffe) from module design195_5_10_top (D = \design195_5_10_inst.parity_generator_instance327.data_out, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$428 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$319_Y, Q = \design195_5_10_inst.memory_cntrl_instance328.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto_737 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$317_Y, Q = \design195_5_10_inst.memory_cntrl_instance328.rd_addr).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$427 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$329_Y, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto_739 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$327_Y, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_addr).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$426 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procmux$336_Y, Q = \design195_5_10_inst.memory_cntrl_instance328.reset_mem, rval = 1'1).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.reset_mem_741 ($sdff) from module design195_5_10_top (D = 1'0, Q = \design195_5_10_inst.memory_cntrl_instance328.reset_mem).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance328.$procdff$425 ($dff) from module design195_5_10_top (D = $auto_640 [0], Q = \design195_5_10_inst.memory_cntrl_instance328.state [0], rval = 1'0).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$procdff$411 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$procmux$218_Y, Q = \design195_5_10_inst.memory_cntrl_instance216.mem.rd_data_out, rval = 0).
Adding EN signal on $auto_744 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:108$79_DATA, Q = \design195_5_10_inst.memory_cntrl_instance216.mem.rd_data_out).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$431 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$294_Y, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_en, rval = 1'0).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_en_746 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$292_Y, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_en).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$430 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$300_Y, Q = \design195_5_10_inst.memory_cntrl_instance216.rd_en, rval = 1'0).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.rd_en_748 ($sdff) from module design195_5_10_top (D = 1'1, Q = \design195_5_10_inst.memory_cntrl_instance216.rd_en).
Adding EN signal on $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$429 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$308_Y, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem).
Adding SRST signal on $auto_750 ($dffe) from module design195_5_10_top (D = \design195_5_10_inst.mod_n_counter_instance215.data_out, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$428 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$319_Y, Q = \design195_5_10_inst.memory_cntrl_instance216.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto_756 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$317_Y, Q = \design195_5_10_inst.memory_cntrl_instance216.rd_addr).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$427 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$329_Y, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto_758 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$327_Y, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_addr).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$426 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procmux$336_Y, Q = \design195_5_10_inst.memory_cntrl_instance216.reset_mem, rval = 1'1).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.reset_mem_760 ($sdff) from module design195_5_10_top (D = 1'0, Q = \design195_5_10_inst.memory_cntrl_instance216.reset_mem).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance216.$procdff$425 ($dff) from module design195_5_10_top (D = $auto_635 [0], Q = \design195_5_10_inst.memory_cntrl_instance216.state [0], rval = 1'0).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$procdff$411 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$procmux$218_Y, Q = \design195_5_10_inst.memory_cntrl_instance108.mem.rd_data_out, rval = 0).
Adding EN signal on $auto_763 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$memrd$\mem$../../../../.././rtl/memory_cntrl.v:108$79_DATA, Q = \design195_5_10_inst.memory_cntrl_instance108.mem.rd_data_out).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$431 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$294_Y, Q = \design195_5_10_inst.memory_cntrl_instance108.wr_en, rval = 1'0).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance108.wr_en_765 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$292_Y, Q = \design195_5_10_inst.memory_cntrl_instance108.wr_en).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$430 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$300_Y, Q = \design195_5_10_inst.memory_cntrl_instance108.rd_en, rval = 1'0).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance108.rd_en_767 ($sdff) from module design195_5_10_top (D = 1'1, Q = \design195_5_10_inst.memory_cntrl_instance108.rd_en).
Adding EN signal on $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$429 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$308_Y, Q = \design195_5_10_inst.memory_cntrl_instance108.wr_data_mem).
Adding SRST signal on $auto_769 ($dffe) from module design195_5_10_top (D = \design195_5_10_inst.encoder_instance107.data_out, Q = \design195_5_10_inst.memory_cntrl_instance108.wr_data_mem, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$428 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$319_Y, Q = \design195_5_10_inst.memory_cntrl_instance108.rd_addr, rval = 10'0000000000).
Adding EN signal on $auto_775 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$317_Y, Q = \design195_5_10_inst.memory_cntrl_instance108.rd_addr).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$427 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$329_Y, Q = \design195_5_10_inst.memory_cntrl_instance108.wr_addr, rval = 10'0000000000).
Adding EN signal on $auto_777 ($sdff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$327_Y, Q = \design195_5_10_inst.memory_cntrl_instance108.wr_addr).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$426 ($dff) from module design195_5_10_top (D = $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procmux$336_Y, Q = \design195_5_10_inst.memory_cntrl_instance108.reset_mem, rval = 1'1).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance108.reset_mem_779 ($sdff) from module design195_5_10_top (D = 1'0, Q = \design195_5_10_inst.memory_cntrl_instance108.reset_mem).
Adding SRST signal on $flatten\design195_5_10_inst.\memory_cntrl_instance108.$procdff$425 ($dff) from module design195_5_10_top (D = $auto_630 [0], Q = \design195_5_10_inst.memory_cntrl_instance108.state [0], rval = 1'0).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance547.$procdff$434 ($dff) from module design195_5_10_top (D = $auto_626 [16:0], Q = \design195_5_10_inst.large_adder_instance547.add_out_reg_2 [16:0], rval = 17'00000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance547.$procdff$433 ($dff) from module design195_5_10_top (D = { $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112_Y [15:0] }, Q = \design195_5_10_inst.large_adder_instance547.add_out_reg_1, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance547.$procdff$432 ($dff) from module design195_5_10_top (D = { $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111_Y [8:0] }, Q = \design195_5_10_inst.large_adder_instance547.add_out_reg_0, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance432.$procdff$434 ($dff) from module design195_5_10_top (D = $auto_621 [2:0], Q = \design195_5_10_inst.large_adder_instance432.add_out_reg_2 [2:0], rval = 3'000).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance432.$procdff$433 ($dff) from module design195_5_10_top (D = { $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112_Y [15:0] }, Q = \design195_5_10_inst.large_adder_instance432.add_out_reg_1, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance432.$procdff$432 ($dff) from module design195_5_10_top (D = { $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111_Y [8:0] }, Q = \design195_5_10_inst.large_adder_instance432.add_out_reg_0, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance324.$procdff$434 ($dff) from module design195_5_10_top (D = $auto_616 [2:0], Q = \design195_5_10_inst.large_adder_instance324.add_out_reg_2 [2:0], rval = 3'000).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance324.$procdff$433 ($dff) from module design195_5_10_top (D = { $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112_Y [15:0] }, Q = \design195_5_10_inst.large_adder_instance324.add_out_reg_1, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance324.$procdff$432 ($dff) from module design195_5_10_top (D = { $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111_Y [8:0] }, Q = \design195_5_10_inst.large_adder_instance324.add_out_reg_0, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance212.$procdff$434 ($dff) from module design195_5_10_top (D = $auto_612 [16:0], Q = \design195_5_10_inst.large_adder_instance212.add_out_reg_2 [16:0], rval = 17'00000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance212.$procdff$433 ($dff) from module design195_5_10_top (D = { $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112_Y [15:0] }, Q = \design195_5_10_inst.large_adder_instance212.add_out_reg_1, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance212.$procdff$432 ($dff) from module design195_5_10_top (D = { $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111_Y [8:0] }, Q = \design195_5_10_inst.large_adder_instance212.add_out_reg_0, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance102.$procdff$434 ($dff) from module design195_5_10_top (D = $auto_607 [10:0], Q = \design195_5_10_inst.large_adder_instance102.add_out_reg_2 [10:0], rval = 11'00000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance102.$procdff$433 ($dff) from module design195_5_10_top (D = { $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112_Y [15:0] }, Q = \design195_5_10_inst.large_adder_instance102.add_out_reg_1, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\large_adder_instance102.$procdff$432 ($dff) from module design195_5_10_top (D = { $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [31] $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111_Y [8:0] }, Q = \design195_5_10_inst.large_adder_instance102.add_out_reg_0, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\invertion_instance329.$procdff$416 ($dff) from module design195_5_10_top (D = { \design195_5_10_inst.invertion_instance329.conditional_invert \design195_5_10_inst.invertion_instance329.bitwise_xor \design195_5_10_inst.invertion_instance329.bitwise_not_and_or }, Q = \design195_5_10_inst.invertion_instance329.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\invertion_instance217.$procdff$416 ($dff) from module design195_5_10_top (D = { \design195_5_10_inst.invertion_instance217.conditional_invert \design195_5_10_inst.invertion_instance217.bitwise_xor \design195_5_10_inst.invertion_instance217.bitwise_not_and_or }, Q = \design195_5_10_inst.invertion_instance217.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\invertion_instance103.$procdff$416 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.invertion_instance103.bitwise_not_and_or [2:0], Q = \design195_5_10_inst.invertion_instance103.data_out [2:0], rval = 3'000).
Adding SRST signal on $flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$procdff$408 ($dff) from module design195_5_10_top (D = \d_in4 [31:16], Q = \design195_5_10_inst.full_adder_instance540.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$procdff$407 ($dff) from module design195_5_10_top (D = \d_in4 [15:0], Q = \design195_5_10_inst.full_adder_instance540.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$procdff$405 ($dff) from module design195_5_10_top (D = $auto_600 [17:0], Q = \design195_5_10_inst.full_adder_instance540.full_adder_inst.data_out [17:0], rval = 18'000000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$procdff$408 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.memory_cntrl_instance430.mem.rd_data_out [31:16], Q = \design195_5_10_inst.full_adder_instance431.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$procdff$407 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.memory_cntrl_instance430.mem.rd_data_out [15:0], Q = \design195_5_10_inst.full_adder_instance431.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$procdff$405 ($dff) from module design195_5_10_top (D = $auto_597 [17:0], Q = \design195_5_10_inst.full_adder_instance431.full_adder_inst.data_out [17:0], rval = 18'000000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$procdff$408 ($dff) from module design195_5_10_top (D = \d_in2 [31:16], Q = \design195_5_10_inst.full_adder_instance321.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$procdff$407 ($dff) from module design195_5_10_top (D = \d_in2 [15:0], Q = \design195_5_10_inst.full_adder_instance321.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$procdff$405 ($dff) from module design195_5_10_top (D = $auto_594 [17:0], Q = \design195_5_10_inst.full_adder_instance321.full_adder_inst.data_out [17:0], rval = 18'000000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$procdff$409 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.full_adder_instance106.cin, Q = \design195_5_10_inst.full_adder_instance106.full_adder_inst.c, rval = 1'0).
Adding SRST signal on $flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$procdff$408 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.register_instance105.data_out [31:16], Q = \design195_5_10_inst.full_adder_instance106.full_adder_inst.b, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$procdff$407 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.register_instance105.data_out [15:0], Q = \design195_5_10_inst.full_adder_instance106.full_adder_inst.a, rval = 16'0000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$procdff$405 ($dff) from module design195_5_10_top (D = $auto_591 [17:0], Q = \design195_5_10_inst.full_adder_instance106.full_adder_inst.data_out [17:0], rval = 18'000000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\encoder_instance548.$procdff$435 ($dff) from module design195_5_10_top (D = { \design195_5_10_inst.encoder_instance548.data_out_wire [10] \design195_5_10_inst.encoder_instance548.data_out_wire [8:7] \design195_5_10_inst.encoder_instance548.data_out_wire [3:0] }, Q = { \design195_5_10_inst.encoder_instance548.data_out [10] \design195_5_10_inst.encoder_instance548.data_out [8:7] \design195_5_10_inst.encoder_instance548.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design195_5_10_inst.\encoder_instance548.$procdff$435 ($dff) from module design195_5_10_top (D = { $auto_585 [23:11] $auto_585 [9] $auto_585 [6:4] }, Q = { \design195_5_10_inst.encoder_instance548.data_out [23:11] \design195_5_10_inst.encoder_instance548.data_out [9] \design195_5_10_inst.encoder_instance548.data_out [6:4] }, rval = 17'00000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\encoder_instance438.$procdff$435 ($dff) from module design195_5_10_top (D = { \design195_5_10_inst.encoder_instance438.data_out_wire [10] \design195_5_10_inst.encoder_instance438.data_out_wire [8:7] \design195_5_10_inst.encoder_instance438.data_out_wire [3:0] }, Q = { \design195_5_10_inst.encoder_instance438.data_out [10] \design195_5_10_inst.encoder_instance438.data_out [8:7] \design195_5_10_inst.encoder_instance438.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design195_5_10_inst.\encoder_instance438.$procdff$435 ($dff) from module design195_5_10_top (D = { $flatten\design195_5_10_inst.\encoder_instance438.$2\data_out_wire[31:0] [31:11] $flatten\design195_5_10_inst.\encoder_instance438.$2\data_out_wire[31:0] [9] $flatten\design195_5_10_inst.\encoder_instance438.$2\data_out_wire[31:0] [6:4] }, Q = { \design195_5_10_inst.encoder_instance438.data_out [31:11] \design195_5_10_inst.encoder_instance438.data_out [9] \design195_5_10_inst.encoder_instance438.data_out [6:4] }, rval = 25'0000000000000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\encoder_instance322.$procdff$435 ($dff) from module design195_5_10_top (D = { \design195_5_10_inst.encoder_instance322.data_out_wire [10] \design195_5_10_inst.encoder_instance322.data_out_wire [8:7] \design195_5_10_inst.encoder_instance322.data_out_wire [3:0] }, Q = { \design195_5_10_inst.encoder_instance322.data_out [10] \design195_5_10_inst.encoder_instance322.data_out [8:7] \design195_5_10_inst.encoder_instance322.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design195_5_10_inst.\encoder_instance322.$procdff$435 ($dff) from module design195_5_10_top (D = { $auto_580 [23:11] $auto_580 [9] $auto_580 [6:4] }, Q = { \design195_5_10_inst.encoder_instance322.data_out [23:11] \design195_5_10_inst.encoder_instance322.data_out [9] \design195_5_10_inst.encoder_instance322.data_out [6:4] }, rval = 17'00000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\encoder_instance219.$procdff$435 ($dff) from module design195_5_10_top (D = { \design195_5_10_inst.encoder_instance219.data_out_wire [10] \design195_5_10_inst.encoder_instance219.data_out_wire [8:7] \design195_5_10_inst.encoder_instance219.data_out_wire [3:0] }, Q = { \design195_5_10_inst.encoder_instance219.data_out [10] \design195_5_10_inst.encoder_instance219.data_out [8:7] \design195_5_10_inst.encoder_instance219.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design195_5_10_inst.\encoder_instance219.$procdff$435 ($dff) from module design195_5_10_top (D = { $flatten\design195_5_10_inst.\encoder_instance219.$2\data_out_wire[31:0] [31:11] $flatten\design195_5_10_inst.\encoder_instance219.$2\data_out_wire[31:0] [9] $flatten\design195_5_10_inst.\encoder_instance219.$2\data_out_wire[31:0] [6:4] }, Q = { \design195_5_10_inst.encoder_instance219.data_out [31:11] \design195_5_10_inst.encoder_instance219.data_out [9] \design195_5_10_inst.encoder_instance219.data_out [6:4] }, rval = 25'0000000000000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\encoder_instance107.$procdff$435 ($dff) from module design195_5_10_top (D = { \design195_5_10_inst.encoder_instance107.data_out_wire [10] \design195_5_10_inst.encoder_instance107.data_out_wire [8:7] \design195_5_10_inst.encoder_instance107.data_out_wire [3:0] }, Q = { \design195_5_10_inst.encoder_instance107.data_out [10] \design195_5_10_inst.encoder_instance107.data_out [8:7] \design195_5_10_inst.encoder_instance107.data_out [3:0] }, rval = 7'0000000).
Adding SRST signal on $flatten\design195_5_10_inst.\encoder_instance107.$procdff$435 ($dff) from module design195_5_10_top (D = { $flatten\design195_5_10_inst.\encoder_instance107.$2\data_out_wire[31:0] [31:11] $flatten\design195_5_10_inst.\encoder_instance107.$2\data_out_wire[31:0] [9] $flatten\design195_5_10_inst.\encoder_instance107.$2\data_out_wire[31:0] [6:4] }, Q = { \design195_5_10_inst.encoder_instance107.data_out [31:11] \design195_5_10_inst.encoder_instance107.data_out [9] \design195_5_10_inst.encoder_instance107.data_out [6:4] }, rval = 25'0000000000000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$procdff$410 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.decoder_instance433.decoder_inst.data_out_w, Q = \design195_5_10_inst.decoder_instance433.decoder_inst.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$procdff$410 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.decoder_instance325.decoder_inst.data_out_w, Q = \design195_5_10_inst.decoder_instance325.decoder_inst.data_out, rval = 0).
Adding SRST signal on $flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$procdff$410 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.decoder_instance210.decoder_inst.data_out_w [23:0], Q = \design195_5_10_inst.decoder_instance210.decoder_inst.data_out [23:0], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$procdff$410 ($dff) from module design195_5_10_top (D = \design195_5_10_inst.decoder_instance104.decoder_inst.data_out_w [23:0], Q = \design195_5_10_inst.decoder_instance104.decoder_inst.data_out [23:0], rval = 24'000000000000000000000000).
[#visit=122, #solve=0, #remove=0, time=0.01 sec.]

16.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 151 unused cells and 161 unused wires.
<suppressed ~159 debug messages>

16.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.60. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

16.61. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

16.63. Executing OPT_SHARE pass.

16.64. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=119, #solve=0, #remove=0, time=0.01 sec.]

16.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

16.66. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.67. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

16.68. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.70. Executing OPT_SHARE pass.

16.71. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=119, #solve=0, #remove=0, time=0.01 sec.]

16.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.73. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 3

16.74. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.76. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

16.77. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.78. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.79. Executing OPT_SHARE pass.

16.80. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=119, #solve=0, #remove=0, time=0.01 sec.]

16.81. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.82. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

16.83. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.84. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.85. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

16.86. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.88. Executing OPT_SHARE pass.

16.89. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=119, #solve=0, #remove=0, time=0.01 sec.]

16.90. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto_657 ($dff) from module design195_5_10_top.
Setting constant 0-bit at position 2 on $auto_657 ($dff) from module design195_5_10_top.
Setting constant 0-bit at position 4 on $auto_657 ($dff) from module design195_5_10_top.
Setting constant 0-bit at position 6 on $auto_657 ($dff) from module design195_5_10_top.
Setting constant 0-bit at position 17 on $auto_802 ($sdff) from module design195_5_10_top.
Setting constant 0-bit at position 17 on $auto_805 ($sdff) from module design195_5_10_top.
Setting constant 0-bit at position 17 on $auto_816 ($sdff) from module design195_5_10_top.
Setting constant 0-bit at position 17 on $auto_820 ($sdff) from module design195_5_10_top.
Setting constant 0-bit at position 18 on $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff) from module design195_5_10_top.
Setting constant 0-bit at position 19 on $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff) from module design195_5_10_top.
Setting constant 0-bit at position 20 on $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff) from module design195_5_10_top.
Setting constant 0-bit at position 21 on $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff) from module design195_5_10_top.
Setting constant 0-bit at position 22 on $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff) from module design195_5_10_top.
Setting constant 0-bit at position 23 on $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff) from module design195_5_10_top.
Setting constant 0-bit at position 24 on $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff) from module design195_5_10_top.
Setting constant 0-bit at position 25 on $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff) from module design195_5_10_top.
Setting constant 0-bit at position 26 on $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff) from module design195_5_10_top.
Setting constant 0-bit at position 27 on $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff) from module design195_5_10_top.
Setting constant 0-bit at position 28 on $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff) from module design195_5_10_top.
Setting constant 0-bit at position 29 on $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff) from module design195_5_10_top.
Setting constant 0-bit at position 30 on $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff) from module design195_5_10_top.
Setting constant 0-bit at position 31 on $flatten\design195_5_10_inst.\large_mux_instance542.$procdff$421 ($adff) from module design195_5_10_top.
[#visit=119, #solve=2362, #remove=22, time=1.53 sec.]

16.91. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.92. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

16.93. Executing WREDUCE pass (reducing word size of cells).
Removed top 14 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance542.$procmux$250 ($pmux).
Removed top 14 bits (of 32) from FF cell design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance542.$procdff$420 ($adff).
Removed top 1 bits (of 2) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112 ($sub).
Removed top 2 bits (of 3) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
Removed top 1 bits (of 2) from port A of cell design195_5_10_top.$flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
Removed top 1 bits (of 18) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 1 bits (of 18) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 1 bits (of 18) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 1 bits (of 18) from port Y of cell design195_5_10_top.$flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
Removed top 13 bits (of 24) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance548.$procmux$393 ($mux).
Removed top 21 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance438.$procmux$393 ($mux).
Removed top 13 bits (of 24) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$procmux$393 ($mux).
Removed top 4 bits (of 17) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:35$107 ($eq).
Removed top 3 bits (of 17) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:32$106 ($eq).
Removed top 7 bits (of 17) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:29$105 ($eq).
Removed top 10 bits (of 17) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$eq$../../../../.././rtl/encoder.v:26$104 ($eq).
Removed top 21 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance219.$procmux$393 ($mux).
Removed top 21 bits (of 32) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$procmux$393 ($mux).
Removed top 4 bits (of 17) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$eq$../../../../.././rtl/encoder.v:35$107 ($eq).
Removed top 3 bits (of 17) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$eq$../../../../.././rtl/encoder.v:32$106 ($eq).
Removed top 7 bits (of 17) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$eq$../../../../.././rtl/encoder.v:29$105 ($eq).
Removed top 10 bits (of 17) from port B of cell design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$eq$../../../../.././rtl/encoder.v:26$104 ($eq).
Removed top 1 bits (of 18) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\d_latch_instance541.\d_latch_inst.$procmux$213 ($mux).
Removed top 22 bits (of 32) from FF cell design195_5_10_top.$auto_796 ($sdff).
Removed top 15 bits (of 32) from FF cell design195_5_10_top.$auto_795 ($sdff).
Removed top 22 bits (of 32) from FF cell design195_5_10_top.$auto_793 ($sdff).
Removed top 15 bits (of 32) from FF cell design195_5_10_top.$auto_792 ($sdff).
Removed top 22 bits (of 32) from FF cell design195_5_10_top.$auto_790 ($sdff).
Removed top 15 bits (of 32) from FF cell design195_5_10_top.$auto_789 ($sdff).
Removed top 22 bits (of 32) from FF cell design195_5_10_top.$auto_787 ($sdff).
Removed top 15 bits (of 32) from FF cell design195_5_10_top.$auto_786 ($sdff).
Removed top 22 bits (of 32) from FF cell design195_5_10_top.$auto_784 ($sdff).
Removed top 15 bits (of 32) from FF cell design195_5_10_top.$auto_783 ($sdff).
Removed top 13 bits (of 32) from FF cell design195_5_10_top.$auto_664 ($sdff).
Removed top 1 bits (of 18) from mux cell design195_5_10_top.$flatten\design195_5_10_inst.\d_latch_instance541.\d_latch_inst.$procmux$216 ($mux).
Removed top 13 bits (of 32) from FF cell design195_5_10_top.$auto_665 ($sdff).
Removed top 15 bits (of 32) from wire design195_5_10_top.$auto_574.
Removed top 8 bits (of 32) from wire design195_5_10_top.$auto_580.
Removed top 8 bits (of 32) from wire design195_5_10_top.$auto_581.
Removed top 8 bits (of 32) from wire design195_5_10_top.$auto_582.
Removed top 8 bits (of 32) from wire design195_5_10_top.$auto_583.
Removed top 8 bits (of 32) from wire design195_5_10_top.$auto_585.
Removed top 8 bits (of 32) from wire design195_5_10_top.$auto_586.
Removed top 8 bits (of 32) from wire design195_5_10_top.$auto_587.
Removed top 8 bits (of 32) from wire design195_5_10_top.$auto_588.
Removed top 16 bits (of 33) from wire design195_5_10_top.$auto_590.
Removed top 16 bits (of 33) from wire design195_5_10_top.$auto_591.
Removed top 16 bits (of 33) from wire design195_5_10_top.$auto_593.
Removed top 16 bits (of 33) from wire design195_5_10_top.$auto_594.
Removed top 16 bits (of 33) from wire design195_5_10_top.$auto_596.
Removed top 16 bits (of 33) from wire design195_5_10_top.$auto_597.
Removed top 16 bits (of 33) from wire design195_5_10_top.$auto_599.
Removed top 16 bits (of 33) from wire design195_5_10_top.$auto_600.
Removed top 5 bits (of 8) from wire design195_5_10_top.$auto_602.
Removed top 5 bits (of 8) from wire design195_5_10_top.$auto_603.
Removed top 23 bits (of 32) from wire design195_5_10_top.$auto_605.
Removed top 23 bits (of 32) from wire design195_5_10_top.$auto_606.
Removed top 21 bits (of 32) from wire design195_5_10_top.$auto_607.
Removed top 21 bits (of 32) from wire design195_5_10_top.$auto_608.
Removed top 23 bits (of 32) from wire design195_5_10_top.$auto_610.
Removed top 23 bits (of 32) from wire design195_5_10_top.$auto_611.
Removed top 15 bits (of 32) from wire design195_5_10_top.$auto_612.
Removed top 23 bits (of 32) from wire design195_5_10_top.$auto_614.
Removed top 23 bits (of 32) from wire design195_5_10_top.$auto_615.
Removed top 29 bits (of 32) from wire design195_5_10_top.$auto_616.
Removed top 29 bits (of 32) from wire design195_5_10_top.$auto_617.
Removed top 23 bits (of 32) from wire design195_5_10_top.$auto_620.
Removed top 29 bits (of 32) from wire design195_5_10_top.$auto_621.
Removed top 29 bits (of 32) from wire design195_5_10_top.$auto_622.
Removed top 23 bits (of 32) from wire design195_5_10_top.$auto_624.
Removed top 23 bits (of 32) from wire design195_5_10_top.$auto_625.
Removed top 15 bits (of 32) from wire design195_5_10_top.$auto_626.
Removed top 22 bits (of 32) from wire design195_5_10_top.$auto_628.
Removed top 22 bits (of 32) from wire design195_5_10_top.$auto_629.
Removed top 1 bits (of 2) from wire design195_5_10_top.$auto_630.
Removed top 1 bits (of 2) from wire design195_5_10_top.$auto_631.
Removed top 22 bits (of 32) from wire design195_5_10_top.$auto_633.
Removed top 22 bits (of 32) from wire design195_5_10_top.$auto_634.
Removed top 1 bits (of 2) from wire design195_5_10_top.$auto_635.
Removed top 1 bits (of 2) from wire design195_5_10_top.$auto_636.
Removed top 22 bits (of 32) from wire design195_5_10_top.$auto_638.
Removed top 22 bits (of 32) from wire design195_5_10_top.$auto_639.
Removed top 1 bits (of 2) from wire design195_5_10_top.$auto_640.
Removed top 1 bits (of 2) from wire design195_5_10_top.$auto_641.
Removed top 22 bits (of 32) from wire design195_5_10_top.$auto_643.
Removed top 22 bits (of 32) from wire design195_5_10_top.$auto_644.
Removed top 1 bits (of 2) from wire design195_5_10_top.$auto_645.
Removed top 1 bits (of 2) from wire design195_5_10_top.$auto_646.
Removed top 22 bits (of 32) from wire design195_5_10_top.$auto_648.
Removed top 22 bits (of 32) from wire design195_5_10_top.$auto_649.
Removed top 1 bits (of 2) from wire design195_5_10_top.$auto_650.
Removed top 1 bits (of 2) from wire design195_5_10_top.$auto_651.
Removed top 14 bits (of 32) from wire design195_5_10_top.$flatten\design195_5_10_inst.\large_mux_instance542.$0\data_out_reg[31:0].

16.94. Executing PEEPOPT pass (run peephole optimizers).

16.95. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 57 unused wires.
<suppressed ~1 debug messages>

16.96. Executing DEMUXMAP pass.

16.97. Executing SPLITNETS pass (splitting up multi-bit signals).

16.98. Printing statistics.

=== design195_5_10_top ===

   Number of wires:                903
   Number of wire bits:          12269
   Number of public wires:         538
   Number of public wire bits:    9421
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               9
   Number of memory bits:       164864
   Number of processes:              0
   Number of cells:                600
     $add                           42
     $adff                           5
     $dff                            8
     $eq                            67
     $logic_not                     12
     $meminit                        4
     $memrd_v2                       9
     $memwr_v2                       5
     $mul                            5
     $mux                           76
     $not                           10
     $or                             3
     $pmux                           7
     $reduce_and                     5
     $reduce_or                     19
     $scopeinfo                     77
     $sdff                          71
     $sdffce                         5
     $sdffe                         30
     $sub                           10
     $xor                          130

16.99. Executing RS_DSP_MULTADD pass.

16.100. Executing WREDUCE pass (reducing word size of cells).

16.101. Executing RS_DSP_MACC pass.
Warning: The synchronous register element Generic DFF $auto_778 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "../../../../.././rtl/memory_cntrl.v:21.1-61.7"
Warning: The synchronous register element Generic DFF $auto_776 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "../../../../.././rtl/memory_cntrl.v:21.1-61.7"
Warning: The synchronous register element Generic DFF $auto_759 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "../../../../.././rtl/memory_cntrl.v:21.1-61.7"
Warning: The synchronous register element Generic DFF $auto_757 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "../../../../.././rtl/memory_cntrl.v:21.1-61.7"
Warning: The synchronous register element Generic DFF $auto_740 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "../../../../.././rtl/memory_cntrl.v:21.1-61.7"
Warning: The synchronous register element Generic DFF $auto_738 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "../../../../.././rtl/memory_cntrl.v:21.1-61.7"
Warning: The synchronous register element Generic DFF $auto_721 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "../../../../.././rtl/memory_cntrl.v:21.1-61.7"
Warning: The synchronous register element Generic DFF $auto_719 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "../../../../.././rtl/memory_cntrl.v:21.1-61.7"
Warning: The synchronous register element Generic DFF $auto_702 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "../../../../.././rtl/memory_cntrl.v:21.1-61.7"
Warning: The synchronous register element Generic DFF $auto_700 (type: $sdffe) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "../../../../.././rtl/memory_cntrl.v:21.1-61.7"

16.102. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.103. Executing TECHMAP pass (map to technology primitives).

16.103.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

16.103.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~168 debug messages>

16.104. Printing statistics.

=== design195_5_10_top ===

   Number of wires:                918
   Number of wire bits:          12670
   Number of public wires:         538
   Number of public wire bits:    9421
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               9
   Number of memory bits:       164864
   Number of processes:              0
   Number of cells:                600
     $__soft_mul                     5
     $add                           42
     $adff                           5
     $dff                            8
     $eq                            67
     $logic_not                     12
     $meminit                        4
     $memrd_v2                       9
     $memwr_v2                       5
     $mux                           76
     $not                           10
     $or                             3
     $pmux                           7
     $reduce_and                     5
     $reduce_or                     19
     $scopeinfo                     77
     $sdff                          71
     $sdffce                         5
     $sdffe                         30
     $sub                           10
     $xor                          130

16.105. Executing TECHMAP pass (map to technology primitives).

16.105.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

16.105.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~168 debug messages>

16.106. Printing statistics.

=== design195_5_10_top ===

   Number of wires:                933
   Number of wire bits:          13071
   Number of public wires:         538
   Number of public wire bits:    9421
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               9
   Number of memory bits:       164864
   Number of processes:              0
   Number of cells:                600
     $__soft_mul                     5
     $add                           42
     $adff                           5
     $dff                            8
     $eq                            67
     $logic_not                     12
     $meminit                        4
     $memrd_v2                       9
     $memwr_v2                       5
     $mux                           76
     $not                           10
     $or                             3
     $pmux                           7
     $reduce_and                     5
     $reduce_or                     19
     $scopeinfo                     77
     $sdff                          71
     $sdffce                         5
     $sdffe                         30
     $sub                           10
     $xor                          130

16.107. Executing TECHMAP pass (map to technology primitives).

16.107.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

16.107.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~1225 debug messages>

16.108. Executing TECHMAP pass (map to technology primitives).

16.108.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

16.108.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

16.109. Executing TECHMAP pass (map to technology primitives).

16.109.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

16.109.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~186 debug messages>

16.110. Executing RS_DSP_SIMD pass.

16.111. Executing TECHMAP pass (map to technology primitives).

16.111.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

16.111.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~51 debug messages>

16.112. Executing TECHMAP pass (map to technology primitives).

16.112.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

16.112.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

16.113. Executing rs_pack_dsp_regs pass.

16.114. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 10 unused cells and 620 unused wires.
<suppressed ~2701 debug messages>

16.115. Executing RS_DSP_IO_REGS pass.

16.116. Executing TECHMAP pass (map to technology primitives).

16.116.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Successfully finished Verilog frontend.

16.116.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~45 debug messages>

16.117. Executing TECHMAP pass (map to technology primitives).

16.117.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

16.117.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

16.118. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               1143
   Number of wire bits:          16271
   Number of public wires:         538
   Number of public wire bits:    9421
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               9
   Number of memory bits:       164864
   Number of processes:              0
   Number of cells:                620
     $add                           57
     $adff                           5
     $dff                            8
     $eq                            67
     $logic_not                     12
     $meminit                        4
     $memrd_v2                       9
     $memwr_v2                       5
     $mux                           76
     $not                           10
     $or                             3
     $pmux                           7
     $reduce_and                     5
     $reduce_or                     19
     $scopeinfo                     77
     $sdff                          61
     $sdffce                         5
     $sdffe                         30
     $sub                           10
     $xor                          130
     DSP38                          20

16.119. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module design195_5_10_top:
  creating $macc model for $flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:23$109 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:23$110 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112 ($sub).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:23$109 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:23$110 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112 ($sub).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:23$109 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:23$110 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112 ($sub).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:23$110 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112 ($sub).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:23$109 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:23$110 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:25$113 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:28$115 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111 ($sub).
  creating $macc model for $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112 ($sub).
  creating $macc model for $flatten\design195_5_10_inst.\memory_cntrl_instance108.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\memory_cntrl_instance108.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\memory_cntrl_instance216.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\memory_cntrl_instance216.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\memory_cntrl_instance328.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\memory_cntrl_instance328.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\memory_cntrl_instance430.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\memory_cntrl_instance430.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\memory_cntrl_instance546.$add$../../../../.././rtl/memory_cntrl.v:45$118 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\memory_cntrl_instance546.$add$../../../../.././rtl/memory_cntrl.v:56$121 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\mod_n_counter_instance109.$add$../../../../.././rtl/mod_n_counter.v:15$124 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\mod_n_counter_instance215.$add$../../../../.././rtl/mod_n_counter.v:15$124 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\mod_n_counter_instance326.$add$../../../../.././rtl/mod_n_counter.v:15$124 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\mod_n_counter_instance439.$add$../../../../.././rtl/mod_n_counter.v:15$124 ($add).
  creating $macc model for $flatten\design195_5_10_inst.\mod_n_counter_instance545.$add$../../../../.././rtl/mod_n_counter.v:15$124 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance102.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$942 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance102.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance102.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$951 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance212.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$936 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance212.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance212.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$945 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance324.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$939 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance324.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance324.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$948 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance432.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$939 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance432.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance432.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$948 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance547.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$936 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance547.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954 ($add).
  creating $macc model for $techmap$flatten\design195_5_10_inst.\large_adder_instance547.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$945 ($add).
  merging $macc model for $flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:23$109 into $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111.
  merging $macc model for $flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:23$110 into $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111.
  merging $macc model for $flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:23$110 into $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111.
  merging $macc model for $flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:23$109 into $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111.
  merging $macc model for $flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:23$110 into $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111.
  merging $macc model for $flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:23$109 into $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111.
  merging $macc model for $flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:23$110 into $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111.
  merging $macc model for $flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:23$109 into $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111.
  merging $macc model for $flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:23$110 into $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111.
  merging $macc model for $flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148 into $flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149.
  merging $macc model for $flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148 into $flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149.
  merging $macc model for $flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148 into $flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149.
  merging $macc model for $flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$148 into $flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance102.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance102.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$942.
  creating $alu model for $macc $flatten\design195_5_10_inst.\mod_n_counter_instance545.$add$../../../../.././rtl/mod_n_counter.v:15$124.
  creating $alu model for $macc $flatten\design195_5_10_inst.\mod_n_counter_instance439.$add$../../../../.././rtl/mod_n_counter.v:15$124.
  creating $alu model for $macc $flatten\design195_5_10_inst.\mod_n_counter_instance326.$add$../../../../.././rtl/mod_n_counter.v:15$124.
  creating $alu model for $macc $flatten\design195_5_10_inst.\mod_n_counter_instance215.$add$../../../../.././rtl/mod_n_counter.v:15$124.
  creating $alu model for $macc $flatten\design195_5_10_inst.\mod_n_counter_instance109.$add$../../../../.././rtl/mod_n_counter.v:15$124.
  creating $alu model for $macc $flatten\design195_5_10_inst.\memory_cntrl_instance546.$add$../../../../.././rtl/memory_cntrl.v:56$121.
  creating $alu model for $macc $flatten\design195_5_10_inst.\memory_cntrl_instance546.$add$../../../../.././rtl/memory_cntrl.v:45$118.
  creating $alu model for $macc $flatten\design195_5_10_inst.\memory_cntrl_instance430.$add$../../../../.././rtl/memory_cntrl.v:56$121.
  creating $alu model for $macc $flatten\design195_5_10_inst.\memory_cntrl_instance430.$add$../../../../.././rtl/memory_cntrl.v:45$118.
  creating $alu model for $macc $flatten\design195_5_10_inst.\memory_cntrl_instance328.$add$../../../../.././rtl/memory_cntrl.v:56$121.
  creating $alu model for $macc $flatten\design195_5_10_inst.\memory_cntrl_instance328.$add$../../../../.././rtl/memory_cntrl.v:45$118.
  creating $alu model for $macc $flatten\design195_5_10_inst.\memory_cntrl_instance216.$add$../../../../.././rtl/memory_cntrl.v:56$121.
  creating $alu model for $macc $flatten\design195_5_10_inst.\memory_cntrl_instance216.$add$../../../../.././rtl/memory_cntrl.v:45$118.
  creating $alu model for $macc $flatten\design195_5_10_inst.\memory_cntrl_instance108.$add$../../../../.././rtl/memory_cntrl.v:56$121.
  creating $alu model for $macc $flatten\design195_5_10_inst.\memory_cntrl_instance108.$add$../../../../.././rtl/memory_cntrl.v:45$118.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:28$115.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:25$113.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance212.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$936.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance102.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$951.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:28$115.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:25$113.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance212.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:28$115.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:25$113.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance324.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$939.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance212.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$945.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:28$115.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:25$113.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance324.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$948.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance324.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:28$115.
  creating $alu model for $macc $flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:25$113.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance432.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance432.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$939.
  creating $alu model for $macc $flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance432.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$948.
  creating $alu model for $macc $flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance547.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$936.
  creating $alu model for $macc $flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance547.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954.
  creating $alu model for $macc $flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149.
  creating $alu model for $macc $techmap$flatten\design195_5_10_inst.\large_adder_instance547.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$945.
  creating $macc cell for $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:23$111: $auto_1035
  creating $macc cell for $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:23$111: $auto_1036
  creating $macc cell for $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:23$111: $auto_1037
  creating $macc cell for $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:23$111: $auto_1038
  creating $macc cell for $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:23$111: $auto_1039
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance547.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$945: $auto_1040
  creating $alu cell for $flatten\design195_5_10_inst.\full_adder_instance106.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149: $auto_1043
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance547.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954: $auto_1046
  creating $alu cell for $flatten\design195_5_10_inst.\full_adder_instance321.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149: $auto_1049
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance547.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$936: $auto_1052
  creating $alu cell for $flatten\design195_5_10_inst.\full_adder_instance431.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149: $auto_1055
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance432.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$948: $auto_1058
  creating $alu cell for $flatten\design195_5_10_inst.\full_adder_instance540.\full_adder_inst.$add$../../../../.././rtl/full_adder_top.v:49$149: $auto_1061
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance432.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$939: $auto_1064
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance432.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954: $auto_1067
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:25$113: $auto_1070
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance102.$add$../../../../.././rtl/large_adder.v:28$115: $auto_1073
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance102.$sub$../../../../.././rtl/large_adder.v:24$112: $auto_1076
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance324.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954: $auto_1079
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance324.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$948: $auto_1082
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:28$115: $auto_1085
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance212.$add$../../../../.././rtl/large_adder.v:25$113: $auto_1088
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance212.$sub$../../../../.././rtl/large_adder.v:24$112: $auto_1091
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance212.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$945: $auto_1094
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance324.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$939: $auto_1097
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:25$113: $auto_1100
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance324.$add$../../../../.././rtl/large_adder.v:28$115: $auto_1103
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance324.$sub$../../../../.././rtl/large_adder.v:24$112: $auto_1106
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance212.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954: $auto_1109
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:25$113: $auto_1112
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance432.$add$../../../../.././rtl/large_adder.v:28$115: $auto_1115
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance432.$sub$../../../../.././rtl/large_adder.v:24$112: $auto_1118
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance102.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA[0].mul.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$951: $auto_1121
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance212.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$936: $auto_1124
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:28$115: $auto_1127
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance547.$add$../../../../.././rtl/large_adder.v:25$113: $auto_1130
  creating $alu cell for $flatten\design195_5_10_inst.\large_adder_instance547.$sub$../../../../.././rtl/large_adder.v:24$112: $auto_1133
  creating $alu cell for $flatten\design195_5_10_inst.\memory_cntrl_instance108.$add$../../../../.././rtl/memory_cntrl.v:45$118: $auto_1136
  creating $alu cell for $flatten\design195_5_10_inst.\memory_cntrl_instance108.$add$../../../../.././rtl/memory_cntrl.v:56$121: $auto_1139
  creating $alu cell for $flatten\design195_5_10_inst.\memory_cntrl_instance216.$add$../../../../.././rtl/memory_cntrl.v:45$118: $auto_1142
  creating $alu cell for $flatten\design195_5_10_inst.\memory_cntrl_instance216.$add$../../../../.././rtl/memory_cntrl.v:56$121: $auto_1145
  creating $alu cell for $flatten\design195_5_10_inst.\memory_cntrl_instance328.$add$../../../../.././rtl/memory_cntrl.v:45$118: $auto_1148
  creating $alu cell for $flatten\design195_5_10_inst.\memory_cntrl_instance328.$add$../../../../.././rtl/memory_cntrl.v:56$121: $auto_1151
  creating $alu cell for $flatten\design195_5_10_inst.\memory_cntrl_instance430.$add$../../../../.././rtl/memory_cntrl.v:45$118: $auto_1154
  creating $alu cell for $flatten\design195_5_10_inst.\memory_cntrl_instance430.$add$../../../../.././rtl/memory_cntrl.v:56$121: $auto_1157
  creating $alu cell for $flatten\design195_5_10_inst.\memory_cntrl_instance546.$add$../../../../.././rtl/memory_cntrl.v:45$118: $auto_1160
  creating $alu cell for $flatten\design195_5_10_inst.\memory_cntrl_instance546.$add$../../../../.././rtl/memory_cntrl.v:56$121: $auto_1163
  creating $alu cell for $flatten\design195_5_10_inst.\mod_n_counter_instance109.$add$../../../../.././rtl/mod_n_counter.v:15$124: $auto_1166
  creating $alu cell for $flatten\design195_5_10_inst.\mod_n_counter_instance215.$add$../../../../.././rtl/mod_n_counter.v:15$124: $auto_1169
  creating $alu cell for $flatten\design195_5_10_inst.\mod_n_counter_instance326.$add$../../../../.././rtl/mod_n_counter.v:15$124: $auto_1172
  creating $alu cell for $flatten\design195_5_10_inst.\mod_n_counter_instance439.$add$../../../../.././rtl/mod_n_counter.v:15$124: $auto_1175
  creating $alu cell for $flatten\design195_5_10_inst.\mod_n_counter_instance545.$add$../../../../.././rtl/mod_n_counter.v:15$124: $auto_1178
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance102.$mul$../../../../.././rtl/large_adder.v:28$114.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$942: $auto_1181
  creating $alu cell for $techmap$flatten\design195_5_10_inst.\large_adder_instance102.$mul$../../../../.././rtl/large_adder.v:28$114.genblk1.genblk1.genblk1.genblk1.genblk1.sliceA.last.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/mul2dsp.v:259$954: $auto_1184
  created 49 $alu and 5 $macc cells.

16.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~14 debug messages>

16.121. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.122. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

16.123. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.125. Executing OPT_SHARE pass.

16.126. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 8 on $auto_818 ($sdff) from module design195_5_10_top.
Setting constant 0-bit at position 10 on $auto_818 ($sdff) from module design195_5_10_top.
Setting constant 0-bit at position 12 on $auto_818 ($sdff) from module design195_5_10_top.
Setting constant 0-bit at position 14 on $auto_818 ($sdff) from module design195_5_10_top.
[#visit=109, #solve=0, #remove=4, time=0.01 sec.]

16.127. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 13 unused cells and 207 unused wires.
<suppressed ~14 debug messages>

16.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.129. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

16.130. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.131. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.132. Executing OPT_SHARE pass.

16.133. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=109, #solve=0, #remove=0, time=0.01 sec.]

16.134. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.135. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 2

16.136. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               1034
   Number of wire bits:          16398
   Number of public wires:         538
   Number of public wire bits:    9421
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               9
   Number of memory bits:       164864
   Number of processes:              0
   Number of cells:                593
     $adff                           5
     $alu                           49
     $dff                            8
     $eq                            67
     $logic_not                     12
     $macc                           5
     $meminit                        4
     $memrd_v2                       9
     $memwr_v2                       5
     $mux                           76
     $not                           10
     $or                             3
     $pmux                           7
     $reduce_and                     5
     $reduce_or                     19
     $scopeinfo                     77
     $sdff                          61
     $sdffce                         5
     $sdffe                         30
     $xor                          116
     DSP38                          20

16.137. Executing MEMORY pass.

16.137.1. Executing OPT_MEM pass (optimize memories).
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 8
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 9
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 10
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 11
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 12
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 13
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 14
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 15
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 16
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 17
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 18
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 19
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 20
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 21
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 22
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 23
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 24
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 25
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 26
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 27
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 28
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 29
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 30
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: removing const-1 lane 31
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 8
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 9
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 10
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 11
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 12
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 13
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 14
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 15
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 16
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 17
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 18
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 19
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 20
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 21
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 22
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 23
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 24
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 25
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 26
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 27
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 28
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 29
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 30
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: removing const-1 lane 31
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 8
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 9
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 10
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 11
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 12
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 13
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 14
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 15
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 16
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 17
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 18
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 19
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 20
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 21
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 22
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 23
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 24
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 25
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 26
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 27
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 28
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 29
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 30
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: removing const-1 lane 31
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 8
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 9
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 10
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 11
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 12
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 13
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 14
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 15
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 16
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 17
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 18
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 19
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 20
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 21
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 22
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 23
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 24
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 25
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 26
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 27
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 28
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 29
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 30
design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: removing const-1 lane 31
Performed a total of 4 transformations.

16.137.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

16.137.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing design195_5_10_top.design195_5_10_inst.memory_cntrl_instance108.mem.mem write port 0.
  Analyzing design195_5_10_top.design195_5_10_inst.memory_cntrl_instance216.mem.mem write port 0.
  Analyzing design195_5_10_top.design195_5_10_inst.memory_cntrl_instance328.mem.mem write port 0.
  Analyzing design195_5_10_top.design195_5_10_inst.memory_cntrl_instance430.mem.mem write port 0.
  Analyzing design195_5_10_top.design195_5_10_inst.memory_cntrl_instance546.mem.mem write port 0.

16.137.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

16.137.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184'[0] in module `\design195_5_10_top': merging output FF to cell.
Checking read port `$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184'[0] in module `\design195_5_10_top': merging output FF to cell.
Checking read port `$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184'[0] in module `\design195_5_10_top': merging output FF to cell.
Checking read port `$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184'[0] in module `\design195_5_10_top': merging output FF to cell.
Checking read port `\design195_5_10_inst.memory_cntrl_instance108.mem.mem'[0] in module `\design195_5_10_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design195_5_10_inst.memory_cntrl_instance216.mem.mem'[0] in module `\design195_5_10_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design195_5_10_inst.memory_cntrl_instance328.mem.mem'[0] in module `\design195_5_10_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design195_5_10_inst.memory_cntrl_instance430.mem.mem'[0] in module `\design195_5_10_top': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\design195_5_10_inst.memory_cntrl_instance546.mem.mem'[0] in module `\design195_5_10_top': merging output FF to cell.
    Write port 0: non-transparent.

16.137.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 5 unused cells and 165 unused wires.
<suppressed ~6 debug messages>

16.137.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

16.137.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

16.137.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.137.10. Executing MEMORY_COLLECT pass (generating $mem cells).

16.138. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               1061
   Number of wire bits:          16270
   Number of public wires:         538
   Number of public wire bits:    9421
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                579
     $adff                           5
     $alu                           49
     $dff                            8
     $eq                            67
     $logic_not                     12
     $macc                           5
     $mem_v2                         9
     $mux                           76
     $not                           10
     $or                             3
     $pmux                           7
     $reduce_and                     5
     $reduce_or                     19
     $scopeinfo                     77
     $sdff                          61
     $sdffce                         5
     $sdffe                         25
     $xor                          116
     DSP38                          20

16.139. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$procmux$351 ... design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance107.$procmux$387 to a pmux with 4 cases.
Converting design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$procmux$351 ... design195_5_10_top.$flatten\design195_5_10_inst.\encoder_instance322.$procmux$387 to a pmux with 4 cases.
Converted 8 (p)mux cells into 2 pmux cells.
<suppressed ~55 debug messages>

16.140. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

16.141. Executing MEMORY_LIBMAP pass (mapping memories to cells).

16.142. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184
using FF mapping for memory design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184
using FF mapping for memory design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184
using FF mapping for memory design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184
mapping memory design195_5_10_top.design195_5_10_inst.memory_cntrl_instance108.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design195_5_10_top.design195_5_10_inst.memory_cntrl_instance216.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design195_5_10_top.design195_5_10_inst.memory_cntrl_instance328.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design195_5_10_top.design195_5_10_inst.memory_cntrl_instance430.mem.mem via $__RS_FACTOR_BRAM36_SDP
mapping memory design195_5_10_top.design195_5_10_inst.memory_cntrl_instance546.mem.mem via $__RS_FACTOR_BRAM36_SDP
<suppressed ~1675 debug messages>

16.143. Executing Rs_BRAM_Split pass.

16.144. Executing TECHMAP pass (map to technology primitives).

16.144.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

16.144.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~34 debug messages>

16.145. Executing TECHMAP pass (map to technology primitives).

16.145.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

16.145.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

16.146. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

16.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~10 debug messages>

16.148. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.149. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$procmux$230.
    dead port 2/2 on $mux $flatten\design195_5_10_inst.\memory_cntrl_instance108.\mem.$procmux$230.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$procmux$230.
    dead port 2/2 on $mux $flatten\design195_5_10_inst.\memory_cntrl_instance216.\mem.$procmux$230.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$procmux$230.
    dead port 2/2 on $mux $flatten\design195_5_10_inst.\memory_cntrl_instance328.\mem.$procmux$230.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$procmux$230.
    dead port 2/2 on $mux $flatten\design195_5_10_inst.\memory_cntrl_instance430.\mem.$procmux$230.
    dead port 1/2 on $mux $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$procmux$230.
    dead port 2/2 on $mux $flatten\design195_5_10_inst.\memory_cntrl_instance546.\mem.$procmux$230.
Removed 10 multiplexer ports.
<suppressed ~129 debug messages>

16.150. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.151. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.152. Executing OPT_SHARE pass.

16.153. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_en_690 ($dff) from module design195_5_10_top (D = $auto_1766, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_en).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.reset_mem_704 ($dff) from module design195_5_10_top (D = $auto_1760, Q = \design195_5_10_inst.memory_cntrl_instance546.reset_mem).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_en_709 ($dff) from module design195_5_10_top (D = $auto_1752, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_en).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.rd_en_692 ($dff) from module design195_5_10_top (D = $auto_1756, Q = \design195_5_10_inst.memory_cntrl_instance546.rd_en).
Adding EN signal on $auto_1468 ($dff) from module design195_5_10_top (D = $auto_1498, Q = \emu_init_sel_1467).
Adding EN signal on $auto_1461 ($dff) from module design195_5_10_top (D = $auto_1502, Q = $auto_1459).
Adding EN signal on $auto_1451 ($dff) from module design195_5_10_top (D = $auto_1506, Q = \emu_init_sel_1450).
Adding EN signal on $auto_1444 ($dff) from module design195_5_10_top (D = $auto_1510, Q = $auto_1442).
Adding EN signal on $auto_1434 ($dff) from module design195_5_10_top (D = $auto_1514, Q = \emu_init_sel_1433).
Adding EN signal on $auto_1427 ($dff) from module design195_5_10_top (D = $auto_1518, Q = $auto_1425).
Adding EN signal on $auto_1417 ($dff) from module design195_5_10_top (D = $auto_1522, Q = \emu_init_sel_1416).
Adding EN signal on $auto_1410 ($dff) from module design195_5_10_top (D = $auto_1526, Q = $auto_1408).
Adding EN signal on $auto_1400 ($dff) from module design195_5_10_top (D = $auto_1530, Q = \emu_init_sel_1399).
Adding EN signal on $auto_1393 ($dff) from module design195_5_10_top (D = $auto_1534, Q = $auto_1391).
Adding EN signal on $auto_700 ($dff) from module design195_5_10_top (D = $auto_1584, Q = \design195_5_10_inst.memory_cntrl_instance546.rd_addr).
Adding EN signal on $auto_702 ($dff) from module design195_5_10_top (D = $auto_1588, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_addr).
Adding EN signal on $auto_719 ($dff) from module design195_5_10_top (D = $auto_1594, Q = \design195_5_10_inst.memory_cntrl_instance430.rd_addr).
Adding EN signal on $auto_721 ($dff) from module design195_5_10_top (D = $auto_1598, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_addr).
Adding EN signal on $auto_738 ($dff) from module design195_5_10_top (D = $auto_1604, Q = \design195_5_10_inst.memory_cntrl_instance328.rd_addr).
Adding EN signal on $auto_740 ($dff) from module design195_5_10_top (D = $auto_1608, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_addr).
Adding EN signal on $auto_757 ($dff) from module design195_5_10_top (D = $auto_1614, Q = \design195_5_10_inst.memory_cntrl_instance216.rd_addr).
Adding EN signal on $auto_759 ($dff) from module design195_5_10_top (D = $auto_1618, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_addr).
Adding EN signal on $auto_776 ($dff) from module design195_5_10_top (D = $auto_1624, Q = \design195_5_10_inst.memory_cntrl_instance108.rd_addr).
Adding EN signal on $auto_778 ($dff) from module design195_5_10_top (D = $auto_1628, Q = \design195_5_10_inst.memory_cntrl_instance108.wr_addr).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance108.rd_en_768 ($dff) from module design195_5_10_top (D = $auto_1700, Q = \design195_5_10_inst.memory_cntrl_instance108.rd_en).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance108.reset_mem_780 ($dff) from module design195_5_10_top (D = $auto_1704, Q = \design195_5_10_inst.memory_cntrl_instance108.reset_mem).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance108.wr_en_766 ($dff) from module design195_5_10_top (D = $auto_1710, Q = \design195_5_10_inst.memory_cntrl_instance108.wr_en).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.rd_en_749 ($dff) from module design195_5_10_top (D = $auto_1714, Q = \design195_5_10_inst.memory_cntrl_instance216.rd_en).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.reset_mem_761 ($dff) from module design195_5_10_top (D = $auto_1718, Q = \design195_5_10_inst.memory_cntrl_instance216.reset_mem).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_en_747 ($dff) from module design195_5_10_top (D = $auto_1724, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_en).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.rd_en_730 ($dff) from module design195_5_10_top (D = $auto_1728, Q = \design195_5_10_inst.memory_cntrl_instance328.rd_en).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.reset_mem_742 ($dff) from module design195_5_10_top (D = $auto_1732, Q = \design195_5_10_inst.memory_cntrl_instance328.reset_mem).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.wr_en_728 ($dff) from module design195_5_10_top (D = $auto_1738, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_en).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.rd_en_711 ($dff) from module design195_5_10_top (D = $auto_1742, Q = \design195_5_10_inst.memory_cntrl_instance430.rd_en).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.reset_mem_723 ($dff) from module design195_5_10_top (D = $auto_1746, Q = \design195_5_10_inst.memory_cntrl_instance430.reset_mem).
[#visit=119, #solve=0, #remove=0, time=0.01 sec.]

16.154. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 5 unused cells and 110 unused wires.
<suppressed ~6 debug messages>

16.155. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~30 debug messages>

16.156. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~129 debug messages>

16.157. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.158. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

16.159. Executing OPT_SHARE pass.

16.160. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=119, #solve=0, #remove=0, time=0.01 sec.]

16.161. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 15 unused wires.
<suppressed ~1 debug messages>

16.162. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.163. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~129 debug messages>

16.164. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.166. Executing OPT_SHARE pass.

16.167. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=119, #solve=0, #remove=0, time=0.01 sec.]

16.168. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.169. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 3

16.170. Executing PMUXTREE pass.

16.171. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting design195_5_10_top.$auto_1892 ... design195_5_10_top.$auto_1894 to a pmux with 2 cases.
Converting design195_5_10_top.$auto_1878 ... design195_5_10_top.$auto_1880 to a pmux with 2 cases.
Converted 4 (p)mux cells into 2 pmux cells.
<suppressed ~194 debug messages>

16.172. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184 in module \design195_5_10_top:
  created 8 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184: $$flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184$rdreg[0]
  read interface: 1 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184 in module \design195_5_10_top:
  created 8 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184: $$flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184$rdreg[0]
  read interface: 1 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184 in module \design195_5_10_top:
  created 8 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184: $$flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184$rdreg[0]
  read interface: 1 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184 in module \design195_5_10_top:
  created 8 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of design195_5_10_top.$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184: $$flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184$rdreg[0]
  read interface: 1 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Memory $flatten\design195_5_10_inst.\decoder_instance433.\decoder_inst.$auto_184 type : dissolved
Memory $flatten\design195_5_10_inst.\decoder_instance325.\decoder_inst.$auto_184 type : dissolved
Memory $flatten\design195_5_10_inst.\decoder_instance210.\decoder_inst.$auto_184 type : dissolved
Memory $flatten\design195_5_10_inst.\decoder_instance104.\decoder_inst.$auto_184 type : dissolved

16.173. Executing TECHMAP pass (map to technology primitives).

16.173.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

16.173.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

16.173.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper maccmap for cells of type $macc.
  add { \design195_5_10_inst.register_instance549.data_out [31] 1'0 \design195_5_10_inst.register_instance549.data_out [29] 1'0 \design195_5_10_inst.register_instance549.data_out [27] 1'0 \design195_5_10_inst.register_instance549.data_out [25] 1'0 } (8 bits, unsigned)
  sub \design195_5_10_inst.register_instance323.data_out [15:8] (8 bits, unsigned)
  add \design195_5_10_inst.register_instance323.data_out [23:16] (8 bits, unsigned)
  sub \design195_5_10_inst.register_instance323.data_out [7:0] (8 bits, unsigned)
  packed 2 (1) bits / 1 words into adder tree
  add \design195_5_10_inst.memory_cntrl_instance546.mem.rd_data_out [31:24] (8 bits, unsigned)
  sub \design195_5_10_inst.memory_cntrl_instance546.mem.rd_data_out [15:8] (8 bits, unsigned)
  add \design195_5_10_inst.memory_cntrl_instance546.mem.rd_data_out [23:16] (8 bits, unsigned)
  sub \design195_5_10_inst.memory_cntrl_instance546.mem.rd_data_out [7:0] (8 bits, unsigned)
  packed 2 (1) bits / 1 words into adder tree
  add \design195_5_10_inst.large_adder_instance102.data_in [31:24] (8 bits, unsigned)
  sub \design195_5_10_inst.large_adder_instance102.data_in [15:8] (8 bits, unsigned)
  add \design195_5_10_inst.large_adder_instance102.data_in [23:16] (8 bits, unsigned)
  sub \design195_5_10_inst.large_adder_instance102.data_in [7:0] (8 bits, unsigned)
  packed 2 (1) bits / 1 words into adder tree
  sub \design195_5_10_inst.full_adder_instance431.full_adder_inst.data_out [15:8] (8 bits, unsigned)
  sub \design195_5_10_inst.full_adder_instance431.full_adder_inst.data_out [7:0] (8 bits, unsigned)
  add bits \design195_5_10_inst.full_adder_instance431.full_adder_inst.data_out [16] (1 bits)
  add { \design195_5_10_inst.register_instance549.data_out [31] 1'0 \design195_5_10_inst.register_instance549.data_out [29] 1'0 \design195_5_10_inst.register_instance549.data_out [27] 1'0 \design195_5_10_inst.register_instance549.data_out [25] 1'0 } (8 bits, unsigned)
  sub \design195_5_10_inst.register_instance211.data_out [15:8] (8 bits, unsigned)
  add \design195_5_10_inst.register_instance211.data_out [23:16] (8 bits, unsigned)
  sub \design195_5_10_inst.register_instance211.data_out [7:0] (8 bits, unsigned)
  packed 2 (1) bits / 1 words into adder tree
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $and.
No more expansions possible.
<suppressed ~7842 debug messages>

16.174. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               6767
   Number of wire bits:          98001
   Number of public wires:         548
   Number of public wire bits:    9586
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              19414
     $_AND_                       3849
     $_DFFE_PP_                    440
     $_DFF_PP0_                    260
     $_DFF_P_                     1328
     $_MUX_                       5047
     $_NOT_                       1463
     $_OR_                        3044
     $_SDFF_PP0_                    32
     $_XOR_                       3666
     $scopeinfo                     77
     CARRY                         183
     DSP38                          20
     TDP_RAM36K                      5

16.175. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~8586 debug messages>

16.176. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~7083 debug messages>
Removed a total of 2361 cells.

16.177. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.178. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.179. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.180. Executing OPT_SHARE pass.

16.181. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on design195_5_10_top:design195_5_10_inst.large_mux_instance542.data_out_reg[0]_6718 ($_DFF_PP0_) from module design195_5_10_top.
[#visit=1704, #solve=0, #remove=1, time=0.09 sec.]

16.182. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 1676 unused cells and 4984 unused wires.
<suppressed ~1677 debug messages>

16.183. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~60 debug messages>

16.184. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.185. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.186. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~759 debug messages>
Removed a total of 253 cells.

16.187. Executing OPT_SHARE pass.

16.188. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on design195_5_10_top:design195_5_10_inst.large_mux_instance542.data_out[0]_4036 ($_DFF_PP0_) from module design195_5_10_top.
Setting constant 0-bit at position 0 on design195_5_10_top:design195_5_10_inst.mod_n_counter_instance439.data_out[0]_7566 ($_DFF_P_) from module design195_5_10_top.
[#visit=1587, #solve=0, #remove=2, time=0.05 sec.]

16.189. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 9 unused cells and 37 unused wires.
<suppressed ~10 debug messages>

16.190. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~8 debug messages>

16.191. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.192. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.193. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

16.194. Executing OPT_SHARE pass.

16.195. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on design195_5_10_top:design195_5_10_inst.parity_generator_instance543.paritygenerator_inst.data_out[0]_7860 ($_DFF_P_) from module design195_5_10_top.
[#visit=1583, #solve=0, #remove=1, time=0.05 sec.]

16.196. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

16.197. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~1 debug messages>

16.198. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.199. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.200. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.201. Executing OPT_SHARE pass.

16.202. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on design195_5_10_top:design195_5_10_inst.parity_generator_instance543.data_out[0]_7841 ($_DFF_P_) from module design195_5_10_top.
[#visit=1582, #solve=0, #remove=1, time=0.05 sec.]

16.203. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.204. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.205. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.206. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.207. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.208. Executing OPT_SHARE pass.

16.209. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1581, #solve=0, #remove=0, time=0.05 sec.]

16.210. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.211. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 5

16.212. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~1238 debug messages>

16.213. Executing TECHMAP pass (map to technology primitives).

16.213.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

16.213.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

16.214. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               2093
   Number of wire bits:          19172
   Number of public wires:         548
   Number of public wire bits:    9586
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7223
     $_AND_                       1399
     $_DFFE_PP_                    398
     $_DFF_PP0_                    232
     $_DFF_P_                      919
     $_MUX_                       1509
     $_NOT_                        361
     $_OR_                         965
     $_SDFF_PP0_                    32
     $_XOR_                       1134
     $scopeinfo                     77
     CARRY                         183
     DSP38                           9
     TDP_RAM36K                      5

16.215. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.216. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

16.217. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.218. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.219. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.220. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1581, #solve=0, #remove=0, time=0.04 sec.]

16.221. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 52 unused wires.
<suppressed ~1 debug messages>

16.222. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

16.223. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.224. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.225. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.226. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.227. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.228. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1581, #solve=0, #remove=0, time=0.04 sec.]

16.229. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.230. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

16.231. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.232. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.233. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.234. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.235. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.236. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1581, #solve=0, #remove=0, time=0.04 sec.]

16.237. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1581, #solve=1538, #remove=0, time=0.16 sec.]

16.238. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.239. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

16.240. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               2041
   Number of wire bits:          18666
   Number of public wires:         548
   Number of public wire bits:    9586
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7218
     $_AND_                       1399
     $_DFFE_PP_                    398
     $_DFF_PP0_                    232
     $_DFF_P_                      919
     $_MUX_                       1509
     $_NOT_                        356
     $_OR_                         965
     $_SDFF_PP0_                    32
     $_XOR_                       1134
     $scopeinfo                     77
     CARRY                         183
     DSP38                           9
     TDP_RAM36K                      5

   Number of Generic REGs:          1581

ABC-DFF iteration : 1

16.241. Executing ABC pass (technology mapping using ABC).

16.241.1. Summary of detected clock domains:
  77 cells in clk={ }, en={ }, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto_1780, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto_1786, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto_1792, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto_1798, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto_1804, arst={ }, srst={ }
  33 cells in clk=\clk, en=$auto_696, arst={ }, srst={ }
  118 cells in clk=\clk, en=$auto_1768, arst={ }, srst={ }
  63 cells in clk=\clk, en=$auto_1777, arst={ }, srst={ }
  74 cells in clk=\clk, en=$auto_715, arst={ }, srst={ }
  109 cells in clk=\clk, en=$auto_1774, arst={ }, srst={ }
  63 cells in clk=\clk, en=$auto_1816, arst={ }, srst={ }
  15 cells in clk=\clk, en=$auto_734, arst={ }, srst={ }
  118 cells in clk=\clk, en=$auto_1825, arst={ }, srst={ }
  63 cells in clk=\clk, en=$auto_1822, arst={ }, srst={ }
  33 cells in clk=\clk, en=$auto_753, arst={ }, srst={ }
  118 cells in clk=\clk, en=$auto_1831, arst={ }, srst={ }
  63 cells in clk=\clk, en=$auto_1828, arst={ }, srst={ }
  26 cells in clk=\clk, en=$auto_772, arst={ }, srst={ }
  109 cells in clk=\clk, en=$auto_1837, arst={ }, srst={ }
  63 cells in clk=\clk, en=$auto_1834, arst={ }, srst={ }
  407 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  99 cells in clk=\clk, en={ }, arst={ }, srst=$auto_809
  32 cells in clk=\clk, en=$auto_1783, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto_1789, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto_1795, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto_1801, arst={ }, srst={ }
  5232 cells in clk=\clk, en={ }, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto_1807, arst={ }, srst={ }

  #logic partitions = 29

16.241.2. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 5040 gates and 5845 wires to a netlist network with 803 inputs and 1536 outputs (dfl=1).

16.241.2.1. Executing ABC.
[Time = 0.38 sec.]

16.241.3. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 407 gates and 486 wires to a netlist network with 78 inputs and 234 outputs (dfl=1).

16.241.3.1. Executing ABC.
[Time = 0.10 sec.]

16.241.4. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1768
Extracted 117 gates and 163 wires to a netlist network with 45 inputs and 67 outputs (dfl=1).

16.241.4.1. Executing ABC.
[Time = 0.10 sec.]

16.241.5. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1825
Extracted 117 gates and 163 wires to a netlist network with 45 inputs and 67 outputs (dfl=1).

16.241.5.1. Executing ABC.
[Time = 0.09 sec.]

16.241.6. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1831
Extracted 117 gates and 163 wires to a netlist network with 45 inputs and 67 outputs (dfl=1).

16.241.6.1. Executing ABC.
[Time = 0.09 sec.]

16.241.7. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1837
Extracted 108 gates and 155 wires to a netlist network with 46 inputs and 75 outputs (dfl=1).

16.241.7.1. Executing ABC.
[Time = 0.10 sec.]

16.241.8. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1774
Extracted 108 gates and 155 wires to a netlist network with 46 inputs and 75 outputs (dfl=1).

16.241.8.1. Executing ABC.
[Time = 0.12 sec.]

16.241.9. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $auto_809
Extracted 99 gates and 125 wires to a netlist network with 25 inputs and 51 outputs (dfl=1).

16.241.9.1. Executing ABC.
[Time = 0.08 sec.]

16.241.10. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=1).
Don't call ABC as there is nothing to map.

16.241.11. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_715
Extracted 74 gates and 118 wires to a netlist network with 44 inputs and 34 outputs (dfl=1).

16.241.11.1. Executing ABC.
[Time = 0.06 sec.]

16.241.12. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1834
Extracted 63 gates and 86 wires to a netlist network with 22 inputs and 12 outputs (dfl=1).

16.241.12.1. Executing ABC.
[Time = 0.08 sec.]

16.241.13. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1777
Extracted 63 gates and 86 wires to a netlist network with 22 inputs and 12 outputs (dfl=1).

16.241.13.1. Executing ABC.
[Time = 0.08 sec.]

16.241.14. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1816
Extracted 63 gates and 86 wires to a netlist network with 22 inputs and 12 outputs (dfl=1).

16.241.14.1. Executing ABC.
[Time = 0.08 sec.]

16.241.15. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1828
Extracted 63 gates and 86 wires to a netlist network with 22 inputs and 12 outputs (dfl=1).

16.241.15.1. Executing ABC.
[Time = 0.12 sec.]

16.241.16. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1822
Extracted 63 gates and 86 wires to a netlist network with 22 inputs and 12 outputs (dfl=1).

16.241.16.1. Executing ABC.
[Time = 0.11 sec.]

16.241.17. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1780
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.241.17.1. Executing ABC.
[Time = 0.05 sec.]

16.241.18. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1804
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.241.18.1. Executing ABC.
[Time = 0.05 sec.]

16.241.19. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1798
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.241.19.1. Executing ABC.
[Time = 0.05 sec.]

16.241.20. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1792
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.241.20.1. Executing ABC.
[Time = 0.05 sec.]

16.241.21. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1786
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.241.21.1. Executing ABC.
[Time = 0.05 sec.]

16.241.22. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_753
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=1).

16.241.22.1. Executing ABC.
[Time = 0.07 sec.]

16.241.23. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_696
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=1).

16.241.23.1. Executing ABC.
[Time = 0.05 sec.]

16.241.24. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30046$auto_1783
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

16.241.24.1. Executing ABC.
[Time = 0.08 sec.]

16.241.25. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30486$auto_1789
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

16.241.25.1. Executing ABC.
[Time = 0.05 sec.]

16.241.26. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30152$auto_1795
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

16.241.26.1. Executing ABC.
[Time = 0.05 sec.]

16.241.27. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30258$auto_1801
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

16.241.27.1. Executing ABC.
[Time = 0.05 sec.]

16.241.28. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30364$auto_1807
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

16.241.28.1. Executing ABC.
[Time = 0.05 sec.]

16.241.29. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_772
Extracted 26 gates and 40 wires to a netlist network with 14 inputs and 10 outputs (dfl=1).

16.241.29.1. Executing ABC.
[Time = 0.05 sec.]

16.241.30. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_734
Extracted 15 gates and 31 wires to a netlist network with 16 inputs and 15 outputs (dfl=1).

16.241.30.1. Executing ABC.
[Time = 0.05 sec.]

16.242. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~2 debug messages>

16.243. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~114 debug messages>
Removed a total of 38 cells.

16.244. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.245. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.246. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.247. Executing OPT_SHARE pass.

16.248. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1515, #solve=0, #remove=0, time=0.05 sec.]

16.249. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 7218 unused wires.
<suppressed ~18 debug messages>

16.250. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 2

16.251. Executing ABC pass (technology mapping using ABC).

16.251.1. Summary of detected clock domains:
  77 cells in clk={ }, en={ }, arst={ }, srst={ }
  24 cells in clk=\clk, en=$abc$32128$auto_734, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$32105$auto_772, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$30364$auto_1807, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$30258$auto_1801, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$30152$auto_1795, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$30486$auto_1789, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$30046$auto_1783, arst={ }, srst={ }
  66 cells in clk=\clk, en=$abc$31522$auto_696, arst={ }, srst={ }
  66 cells in clk=\clk, en=$abc$31424$auto_753, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31387$auto_1786, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31350$auto_1792, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31313$auto_1798, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31276$auto_1804, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31239$auto_1780, arst={ }, srst={ }
  75 cells in clk=\clk, en=$abc$23909$auto_1822, arst={ }, srst={ }
  74 cells in clk=\clk, en=$abc$23909$auto_1828, arst={ }, srst={ }
  83 cells in clk=\clk, en=$abc$23909$auto_1816, arst={ }, srst={ }
  74 cells in clk=\clk, en=$abc$23909$auto_1777, arst={ }, srst={ }
  82 cells in clk=\clk, en=$abc$23909$auto_1834, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$30747$auto_715, arst={ }, srst={ }
  127 cells in clk=\clk, en={ }, arst={ }, srst=$abc$23909$auto_809
  57 cells in clk=\clk, en=$abc$30486$auto_1774, arst={ }, srst={ }
  57 cells in clk=\clk, en=$abc$30364$auto_1837, arst={ }, srst={ }
  47 cells in clk=\clk, en=$abc$30258$auto_1831, arst={ }, srst={ }
  47 cells in clk=\clk, en=$abc$30152$auto_1825, arst={ }, srst={ }
  47 cells in clk=\clk, en=$abc$30046$auto_1768, arst={ }, srst={ }
  384 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  4161 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 29

16.251.2. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 3969 gates and 4629 wires to a netlist network with 660 inputs and 1231 outputs (dfl=1).

16.251.2.1. Executing ABC.
[Time = 0.34 sec.]

16.251.3. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 384 gates and 462 wires to a netlist network with 78 inputs and 265 outputs (dfl=1).

16.251.3.1. Executing ABC.
[Time = 0.08 sec.]

16.251.4. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$23909$auto_809
Extracted 127 gates and 151 wires to a netlist network with 24 inputs and 74 outputs (dfl=1).

16.251.4.1. Executing ABC.
[Time = 0.06 sec.]

16.251.5. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30364$auto_1807
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

16.251.5.1. Executing ABC.
[Time = 0.08 sec.]

16.251.6. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30258$auto_1801
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

16.251.6.1. Executing ABC.
[Time = 0.08 sec.]

16.251.7. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30152$auto_1795
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

16.251.7.1. Executing ABC.
[Time = 0.08 sec.]

16.251.8. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30486$auto_1789
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

16.251.8.1. Executing ABC.
[Time = 0.07 sec.]

16.251.9. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30046$auto_1783
Extracted 97 gates and 132 wires to a netlist network with 35 inputs and 65 outputs (dfl=1).

16.251.9.1. Executing ABC.
[Time = 0.07 sec.]

16.251.10. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1816
Extracted 82 gates and 113 wires to a netlist network with 31 inputs and 21 outputs (dfl=1).

16.251.10.1. Executing ABC.
[Time = 0.08 sec.]

16.251.11. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1834
Extracted 82 gates and 113 wires to a netlist network with 31 inputs and 21 outputs (dfl=1).

16.251.11.1. Executing ABC.
[Time = 0.09 sec.]

16.251.12. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=1).
Don't call ABC as there is nothing to map.

16.251.13. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1822
Extracted 75 gates and 97 wires to a netlist network with 22 inputs and 14 outputs (dfl=1).

16.251.13.1. Executing ABC.
[Time = 0.08 sec.]

16.251.14. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1777
Extracted 74 gates and 97 wires to a netlist network with 23 inputs and 13 outputs (dfl=1).

16.251.14.1. Executing ABC.
[Time = 0.08 sec.]

16.251.15. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1828
Extracted 74 gates and 97 wires to a netlist network with 23 inputs and 13 outputs (dfl=1).

16.251.15.1. Executing ABC.
[Time = 0.08 sec.]

16.251.16. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31424$auto_753
Extracted 65 gates and 100 wires to a netlist network with 35 inputs and 33 outputs (dfl=1).

16.251.16.1. Executing ABC.
[Time = 0.05 sec.]

16.251.17. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31522$auto_696
Extracted 65 gates and 100 wires to a netlist network with 35 inputs and 33 outputs (dfl=1).

16.251.17.1. Executing ABC.
[Time = 0.06 sec.]

16.251.18. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30747$auto_715
Extracted 65 gates and 100 wires to a netlist network with 35 inputs and 33 outputs (dfl=1).

16.251.18.1. Executing ABC.
[Time = 0.06 sec.]

16.251.19. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30486$auto_1774
Extracted 57 gates and 68 wires to a netlist network with 11 inputs and 32 outputs (dfl=1).

16.251.19.1. Executing ABC.
[Time = 0.06 sec.]

16.251.20. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30364$auto_1837
Extracted 57 gates and 68 wires to a netlist network with 11 inputs and 32 outputs (dfl=1).

16.251.20.1. Executing ABC.
[Time = 0.06 sec.]

16.251.21. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30258$auto_1831
Extracted 47 gates and 51 wires to a netlist network with 4 inputs and 25 outputs (dfl=1).

16.251.21.1. Executing ABC.
[Time = 0.07 sec.]

16.251.22. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30152$auto_1825
Extracted 47 gates and 51 wires to a netlist network with 4 inputs and 25 outputs (dfl=1).

16.251.22.1. Executing ABC.
[Time = 0.07 sec.]

16.251.23. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30046$auto_1768
Extracted 47 gates and 51 wires to a netlist network with 4 inputs and 25 outputs (dfl=1).

16.251.23.1. Executing ABC.
[Time = 0.07 sec.]

16.251.24. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31239$auto_1780
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.251.24.1. Executing ABC.
[Time = 0.06 sec.]

16.251.25. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31276$auto_1804
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.251.25.1. Executing ABC.
[Time = 0.06 sec.]

16.251.26. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31313$auto_1798
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.251.26.1. Executing ABC.
[Time = 0.05 sec.]

16.251.27. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31350$auto_1792
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.251.27.1. Executing ABC.
[Time = 0.06 sec.]

16.251.28. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31387$auto_1786
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.251.28.1. Executing ABC.
[Time = 0.06 sec.]

16.251.29. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32128$auto_734
Extracted 23 gates and 37 wires to a netlist network with 14 inputs and 12 outputs (dfl=1).

16.251.29.1. Executing ABC.
[Time = 0.05 sec.]

16.251.30. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32105$auto_772
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 3 outputs (dfl=1).

16.251.30.1. Executing ABC.
[Time = 0.05 sec.]

16.252. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~2 debug messages>

16.253. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

16.254. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.255. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.256. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.257. Executing OPT_SHARE pass.

16.258. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1515, #solve=0, #remove=0, time=0.05 sec.]

16.259. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 9305 unused wires.
<suppressed ~1 debug messages>

16.260. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

16.261. Executing ABC pass (technology mapping using ABC).

16.261.1. Summary of detected clock domains:
  77 cells in clk={ }, en={ }, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$32105$auto_772, arst={ }, srst={ }
  24 cells in clk=\clk, en=$abc$32128$auto_734, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31387$auto_1786, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31350$auto_1792, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31313$auto_1798, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31276$auto_1804, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31239$auto_1780, arst={ }, srst={ }
  59 cells in clk=\clk, en=$abc$30046$auto_1768, arst={ }, srst={ }
  59 cells in clk=\clk, en=$abc$30152$auto_1825, arst={ }, srst={ }
  59 cells in clk=\clk, en=$abc$30258$auto_1831, arst={ }, srst={ }
  85 cells in clk=\clk, en=$abc$30364$auto_1837, arst={ }, srst={ }
  77 cells in clk=\clk, en=$abc$30486$auto_1774, arst={ }, srst={ }
  74 cells in clk=\clk, en=$abc$30747$auto_715, arst={ }, srst={ }
  66 cells in clk=\clk, en=$abc$31522$auto_696, arst={ }, srst={ }
  66 cells in clk=\clk, en=$abc$31424$auto_753, arst={ }, srst={ }
  67 cells in clk=\clk, en=$abc$23909$auto_1828, arst={ }, srst={ }
  66 cells in clk=\clk, en=$abc$23909$auto_1777, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$23909$auto_1822, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$23909$auto_1834, arst={ }, srst={ }
  64 cells in clk=\clk, en=$abc$23909$auto_1816, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$30046$auto_1783, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$30486$auto_1789, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$30152$auto_1795, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$30258$auto_1801, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$30364$auto_1807, arst={ }, srst={ }
  127 cells in clk=\clk, en={ }, arst={ }, srst=$abc$23909$auto_809
  376 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  4151 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 29

16.261.2. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 3959 gates and 4598 wires to a netlist network with 639 inputs and 1224 outputs (dfl=2).

16.261.2.1. Executing ABC.
[Time = 0.79 sec.]

16.261.3. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 376 gates and 452 wires to a netlist network with 76 inputs and 265 outputs (dfl=2).

16.261.3.1. Executing ABC.
[Time = 0.11 sec.]

16.261.4. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$23909$auto_809
Extracted 127 gates and 151 wires to a netlist network with 24 inputs and 74 outputs (dfl=2).

16.261.4.1. Executing ABC.
[Time = 0.07 sec.]

16.261.5. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30364$auto_1807
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

16.261.5.1. Executing ABC.
[Time = 0.09 sec.]

16.261.6. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30258$auto_1801
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

16.261.6.1. Executing ABC.
[Time = 0.10 sec.]

16.261.7. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30152$auto_1795
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

16.261.7.1. Executing ABC.
[Time = 0.09 sec.]

16.261.8. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30486$auto_1789
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

16.261.8.1. Executing ABC.
[Time = 0.09 sec.]

16.261.9. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30046$auto_1783
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

16.261.9.1. Executing ABC.
[Time = 0.08 sec.]

16.261.10. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30364$auto_1837
Extracted 85 gates and 98 wires to a netlist network with 13 inputs and 35 outputs (dfl=2).

16.261.10.1. Executing ABC.
[Time = 0.07 sec.]

16.261.11. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30486$auto_1774
Extracted 76 gates and 90 wires to a netlist network with 14 inputs and 43 outputs (dfl=2).

16.261.11.1. Executing ABC.
[Time = 0.10 sec.]

16.261.12. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=2).
Don't call ABC as there is nothing to map.

16.261.13. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30747$auto_715
Extracted 74 gates and 118 wires to a netlist network with 44 inputs and 34 outputs (dfl=2).

16.261.13.1. Executing ABC.
[Time = 0.08 sec.]

16.261.14. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1828
Extracted 67 gates and 89 wires to a netlist network with 22 inputs and 14 outputs (dfl=2).

16.261.14.1. Executing ABC.
[Time = 0.09 sec.]

16.261.15. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31522$auto_696
Extracted 66 gates and 102 wires to a netlist network with 36 inputs and 34 outputs (dfl=2).

16.261.15.1. Executing ABC.
[Time = 0.06 sec.]

16.261.16. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1777
Extracted 66 gates and 89 wires to a netlist network with 23 inputs and 13 outputs (dfl=2).

16.261.16.1. Executing ABC.
[Time = 0.09 sec.]

16.261.17. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31424$auto_753
Extracted 66 gates and 102 wires to a netlist network with 36 inputs and 34 outputs (dfl=2).

16.261.17.1. Executing ABC.
[Time = 0.06 sec.]

16.261.18. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1822
Extracted 64 gates and 87 wires to a netlist network with 23 inputs and 13 outputs (dfl=2).

16.261.18.1. Executing ABC.
[Time = 0.09 sec.]

16.261.19. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1834
Extracted 64 gates and 87 wires to a netlist network with 23 inputs and 13 outputs (dfl=2).

16.261.19.1. Executing ABC.
[Time = 0.09 sec.]

16.261.20. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1816
Extracted 64 gates and 87 wires to a netlist network with 23 inputs and 13 outputs (dfl=2).

16.261.20.1. Executing ABC.
[Time = 0.09 sec.]

16.261.21. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30258$auto_1831
Extracted 58 gates and 73 wires to a netlist network with 15 inputs and 36 outputs (dfl=2).

16.261.21.1. Executing ABC.
[Time = 0.08 sec.]

16.261.22. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30152$auto_1825
Extracted 59 gates and 73 wires to a netlist network with 14 inputs and 35 outputs (dfl=2).

16.261.22.1. Executing ABC.
[Time = 0.08 sec.]

16.261.23. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30046$auto_1768
Extracted 58 gates and 73 wires to a netlist network with 15 inputs and 36 outputs (dfl=2).

16.261.23.1. Executing ABC.
[Time = 0.08 sec.]

16.261.24. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31239$auto_1780
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 35 outputs (dfl=2).

16.261.24.1. Executing ABC.
[Time = 0.06 sec.]

16.261.25. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31276$auto_1804
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 35 outputs (dfl=2).

16.261.25.1. Executing ABC.
[Time = 0.06 sec.]

16.261.26. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31313$auto_1798
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 35 outputs (dfl=2).

16.261.26.1. Executing ABC.
[Time = 0.06 sec.]

16.261.27. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31350$auto_1792
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 35 outputs (dfl=2).

16.261.27.1. Executing ABC.
[Time = 0.06 sec.]

16.261.28. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31387$auto_1786
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 35 outputs (dfl=2).

16.261.28.1. Executing ABC.
[Time = 0.06 sec.]

16.261.29. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32128$auto_734
Extracted 23 gates and 37 wires to a netlist network with 14 inputs and 12 outputs (dfl=2).

16.261.29.1. Executing ABC.
[Time = 0.06 sec.]

16.261.30. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32105$auto_772
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 3 outputs (dfl=2).

16.261.30.1. Executing ABC.
[Time = 0.06 sec.]

16.262. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~3 debug messages>

16.263. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

16.264. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.265. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.266. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.267. Executing OPT_SHARE pass.

16.268. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1515, #solve=0, #remove=0, time=0.05 sec.]

16.269. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 9325 unused wires.
<suppressed ~1 debug messages>

16.270. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

16.271. Executing ABC pass (technology mapping using ABC).

16.271.1. Summary of detected clock domains:
  77 cells in clk={ }, en={ }, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$32105$auto_772, arst={ }, srst={ }
  24 cells in clk=\clk, en=$abc$32128$auto_734, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31387$auto_1786, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31350$auto_1792, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31313$auto_1798, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31276$auto_1804, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$31239$auto_1780, arst={ }, srst={ }
  55 cells in clk=\clk, en=$abc$30046$auto_1768, arst={ }, srst={ }
  54 cells in clk=\clk, en=$abc$30152$auto_1825, arst={ }, srst={ }
  55 cells in clk=\clk, en=$abc$30258$auto_1831, arst={ }, srst={ }
  84 cells in clk=\clk, en=$abc$23909$auto_1816, arst={ }, srst={ }
  82 cells in clk=\clk, en=$abc$23909$auto_1834, arst={ }, srst={ }
  72 cells in clk=\clk, en=$abc$23909$auto_1822, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$31424$auto_753, arst={ }, srst={ }
  72 cells in clk=\clk, en=$abc$23909$auto_1777, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$31522$auto_696, arst={ }, srst={ }
  72 cells in clk=\clk, en=$abc$23909$auto_1828, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$30747$auto_715, arst={ }, srst={ }
  53 cells in clk=\clk, en=$abc$30486$auto_1774, arst={ }, srst={ }
  44 cells in clk=\clk, en=$abc$30364$auto_1837, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$30046$auto_1783, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$30486$auto_1789, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$30152$auto_1795, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$30258$auto_1801, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$30364$auto_1807, arst={ }, srst={ }
  125 cells in clk=\clk, en={ }, arst={ }, srst=$abc$23909$auto_809
  345 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  3963 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 29

16.271.2. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 3771 gates and 4434 wires to a netlist network with 663 inputs and 1227 outputs (dfl=2).

16.271.2.1. Executing ABC.
[Time = 0.76 sec.]

16.271.3. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 345 gates and 421 wires to a netlist network with 76 inputs and 278 outputs (dfl=2).

16.271.3.1. Executing ABC.
[Time = 0.11 sec.]

16.271.4. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$23909$auto_809
Extracted 125 gates and 149 wires to a netlist network with 24 inputs and 74 outputs (dfl=2).

16.271.4.1. Executing ABC.
[Time = 0.07 sec.]

16.271.5. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30364$auto_1807
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

16.271.5.1. Executing ABC.
[Time = 0.09 sec.]

16.271.6. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30258$auto_1801
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

16.271.6.1. Executing ABC.
[Time = 0.09 sec.]

16.271.7. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30152$auto_1795
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

16.271.7.1. Executing ABC.
[Time = 0.10 sec.]

16.271.8. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30486$auto_1789
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

16.271.8.1. Executing ABC.
[Time = 0.09 sec.]

16.271.9. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30046$auto_1783
Extracted 96 gates and 130 wires to a netlist network with 34 inputs and 64 outputs (dfl=2).

16.271.9.1. Executing ABC.
[Time = 0.09 sec.]

16.271.10. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1816
Extracted 83 gates and 105 wires to a netlist network with 22 inputs and 14 outputs (dfl=2).

16.271.10.1. Executing ABC.
[Time = 0.13 sec.]

16.271.11. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1834
Extracted 82 gates and 105 wires to a netlist network with 23 inputs and 13 outputs (dfl=2).

16.271.11.1. Executing ABC.
[Time = 0.09 sec.]

16.271.12. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=2).
Don't call ABC as there is nothing to map.

16.271.13. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1828
Extracted 72 gates and 95 wires to a netlist network with 23 inputs and 13 outputs (dfl=2).

16.271.13.1. Executing ABC.
[Time = 0.09 sec.]

16.271.14. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1822
Extracted 72 gates and 95 wires to a netlist network with 23 inputs and 13 outputs (dfl=2).

16.271.14.1. Executing ABC.
[Time = 0.09 sec.]

16.271.15. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23909$auto_1777
Extracted 72 gates and 95 wires to a netlist network with 23 inputs and 13 outputs (dfl=2).

16.271.15.1. Executing ABC.
[Time = 0.09 sec.]

16.271.16. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31424$auto_753
Extracted 65 gates and 100 wires to a netlist network with 35 inputs and 33 outputs (dfl=2).

16.271.16.1. Executing ABC.
[Time = 0.06 sec.]

16.271.17. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30747$auto_715
Extracted 65 gates and 100 wires to a netlist network with 35 inputs and 33 outputs (dfl=2).

16.271.17.1. Executing ABC.
[Time = 0.06 sec.]

16.271.18. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31522$auto_696
Extracted 65 gates and 100 wires to a netlist network with 35 inputs and 33 outputs (dfl=2).

16.271.18.1. Executing ABC.
[Time = 0.06 sec.]

16.271.19. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30258$auto_1831
Extracted 54 gates and 69 wires to a netlist network with 15 inputs and 36 outputs (dfl=2).

16.271.19.1. Executing ABC.
[Time = 0.07 sec.]

16.271.20. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30046$auto_1768
Extracted 54 gates and 69 wires to a netlist network with 15 inputs and 36 outputs (dfl=2).

16.271.20.1. Executing ABC.
[Time = 0.07 sec.]

16.271.21. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30152$auto_1825
Extracted 54 gates and 68 wires to a netlist network with 14 inputs and 35 outputs (dfl=2).

16.271.21.1. Executing ABC.
[Time = 0.07 sec.]

16.271.22. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30486$auto_1774
Extracted 53 gates and 57 wires to a netlist network with 4 inputs and 33 outputs (dfl=2).

16.271.22.1. Executing ABC.
[Time = 0.09 sec.]

16.271.23. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30364$auto_1837
Extracted 44 gates and 48 wires to a netlist network with 4 inputs and 25 outputs (dfl=2).

16.271.23.1. Executing ABC.
[Time = 0.07 sec.]

16.271.24. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31239$auto_1780
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 35 outputs (dfl=2).

16.271.24.1. Executing ABC.
[Time = 0.06 sec.]

16.271.25. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31276$auto_1804
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 35 outputs (dfl=2).

16.271.25.1. Executing ABC.
[Time = 0.06 sec.]

16.271.26. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31313$auto_1798
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 35 outputs (dfl=2).

16.271.26.1. Executing ABC.
[Time = 0.06 sec.]

16.271.27. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31350$auto_1792
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 35 outputs (dfl=2).

16.271.27.1. Executing ABC.
[Time = 0.06 sec.]

16.271.28. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31387$auto_1786
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 35 outputs (dfl=2).

16.271.28.1. Executing ABC.
[Time = 0.06 sec.]

16.271.29. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32128$auto_734
Extracted 23 gates and 37 wires to a netlist network with 14 inputs and 12 outputs (dfl=2).

16.271.29.1. Executing ABC.
[Time = 0.06 sec.]

16.271.30. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32105$auto_772
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 3 outputs (dfl=2).

16.271.30.1. Executing ABC.
[Time = 0.05 sec.]

16.272. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~2 debug messages>

16.273. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

16.274. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.275. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.276. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.277. Executing OPT_SHARE pass.

16.278. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1515, #solve=0, #remove=0, time=0.06 sec.]

16.279. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 9067 unused wires.
<suppressed ~5 debug messages>

16.280. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1
select with DFL1 synthesis (thresh_logic=0.920000, thresh_dff=0.980000)

16.281. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
   Number of Generic REGs:          1581

ABC-DFF iteration : 1

16.282. Executing ABC pass (technology mapping using ABC).

16.282.1. Summary of detected clock domains:
  77 cells in clk={ }, en={ }, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto_1780, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto_1786, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto_1792, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto_1798, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto_1804, arst={ }, srst={ }
  33 cells in clk=\clk, en=$auto_696, arst={ }, srst={ }
  118 cells in clk=\clk, en=$auto_1768, arst={ }, srst={ }
  63 cells in clk=\clk, en=$auto_1777, arst={ }, srst={ }
  74 cells in clk=\clk, en=$auto_715, arst={ }, srst={ }
  109 cells in clk=\clk, en=$auto_1774, arst={ }, srst={ }
  63 cells in clk=\clk, en=$auto_1816, arst={ }, srst={ }
  15 cells in clk=\clk, en=$auto_734, arst={ }, srst={ }
  118 cells in clk=\clk, en=$auto_1825, arst={ }, srst={ }
  63 cells in clk=\clk, en=$auto_1822, arst={ }, srst={ }
  33 cells in clk=\clk, en=$auto_753, arst={ }, srst={ }
  118 cells in clk=\clk, en=$auto_1831, arst={ }, srst={ }
  63 cells in clk=\clk, en=$auto_1828, arst={ }, srst={ }
  26 cells in clk=\clk, en=$auto_772, arst={ }, srst={ }
  109 cells in clk=\clk, en=$auto_1837, arst={ }, srst={ }
  63 cells in clk=\clk, en=$auto_1834, arst={ }, srst={ }
  407 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  99 cells in clk=\clk, en={ }, arst={ }, srst=$auto_809
  32 cells in clk=\clk, en=$auto_1783, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto_1789, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto_1795, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto_1801, arst={ }, srst={ }
  5232 cells in clk=\clk, en={ }, arst={ }, srst={ }
  32 cells in clk=\clk, en=$auto_1807, arst={ }, srst={ }

  #logic partitions = 29

16.282.2. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 5040 gates and 5845 wires to a netlist network with 803 inputs and 1536 outputs (dfl=1).

16.282.2.1. Executing ABC.
[Time = 0.42 sec.]

16.282.3. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 407 gates and 486 wires to a netlist network with 78 inputs and 234 outputs (dfl=1).

16.282.3.1. Executing ABC.
[Time = 0.10 sec.]

16.282.4. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1768
Extracted 117 gates and 163 wires to a netlist network with 45 inputs and 67 outputs (dfl=1).

16.282.4.1. Executing ABC.
[Time = 0.09 sec.]

16.282.5. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1825
Extracted 117 gates and 163 wires to a netlist network with 45 inputs and 67 outputs (dfl=1).

16.282.5.1. Executing ABC.
[Time = 0.09 sec.]

16.282.6. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1831
Extracted 117 gates and 163 wires to a netlist network with 45 inputs and 67 outputs (dfl=1).

16.282.6.1. Executing ABC.
[Time = 0.09 sec.]

16.282.7. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1837
Extracted 108 gates and 155 wires to a netlist network with 46 inputs and 75 outputs (dfl=1).

16.282.7.1. Executing ABC.
[Time = 0.09 sec.]

16.282.8. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1774
Extracted 108 gates and 155 wires to a netlist network with 46 inputs and 75 outputs (dfl=1).

16.282.8.1. Executing ABC.
[Time = 0.08 sec.]

16.282.9. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $auto_809
Extracted 99 gates and 125 wires to a netlist network with 25 inputs and 51 outputs (dfl=1).

16.282.9.1. Executing ABC.
[Time = 0.08 sec.]

16.282.10. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=1).
Don't call ABC as there is nothing to map.

16.282.11. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_715
Extracted 74 gates and 118 wires to a netlist network with 44 inputs and 34 outputs (dfl=1).

16.282.11.1. Executing ABC.
[Time = 0.06 sec.]

16.282.12. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55512$auto_1834
Extracted 63 gates and 86 wires to a netlist network with 22 inputs and 12 outputs (dfl=1).

16.282.12.1. Executing ABC.
[Time = 0.08 sec.]

16.282.13. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55512$auto_1777
Extracted 63 gates and 86 wires to a netlist network with 22 inputs and 12 outputs (dfl=1).

16.282.13.1. Executing ABC.
[Time = 0.08 sec.]

16.282.14. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55512$auto_1816
Extracted 63 gates and 86 wires to a netlist network with 22 inputs and 12 outputs (dfl=1).

16.282.14.1. Executing ABC.
[Time = 0.07 sec.]

16.282.15. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55512$auto_1828
Extracted 63 gates and 86 wires to a netlist network with 22 inputs and 12 outputs (dfl=1).

16.282.15.1. Executing ABC.
[Time = 0.07 sec.]

16.282.16. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55512$auto_1822
Extracted 63 gates and 86 wires to a netlist network with 22 inputs and 12 outputs (dfl=1).

16.282.16.1. Executing ABC.
[Time = 0.07 sec.]

16.282.17. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1780
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.282.17.1. Executing ABC.
[Time = 0.05 sec.]

16.282.18. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1804
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.282.18.1. Executing ABC.
[Time = 0.05 sec.]

16.282.19. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1798
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.282.19.1. Executing ABC.
[Time = 0.05 sec.]

16.282.20. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1792
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.282.20.1. Executing ABC.
[Time = 0.05 sec.]

16.282.21. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_1786
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 34 outputs (dfl=1).

16.282.21.1. Executing ABC.
[Time = 0.05 sec.]

16.282.22. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_753
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=1).

16.282.22.1. Executing ABC.
[Time = 0.05 sec.]

16.282.23. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_696
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs (dfl=1).

16.282.23.1. Executing ABC.
[Time = 0.05 sec.]

16.282.24. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$61649$auto_1783
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

16.282.24.1. Executing ABC.
[Time = 0.05 sec.]

16.282.25. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$62089$auto_1789
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

16.282.25.1. Executing ABC.
[Time = 0.05 sec.]

16.282.26. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$61755$auto_1795
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

16.282.26.1. Executing ABC.
[Time = 0.05 sec.]

16.282.27. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$61861$auto_1801
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

16.282.27.1. Executing ABC.
[Time = 0.05 sec.]

16.282.28. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$61967$auto_1807
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs (dfl=1).

16.282.28.1. Executing ABC.
[Time = 0.05 sec.]

16.282.29. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_772
Extracted 26 gates and 40 wires to a netlist network with 14 inputs and 10 outputs (dfl=1).

16.282.29.1. Executing ABC.
[Time = 0.05 sec.]

16.282.30. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto_734
Extracted 15 gates and 31 wires to a netlist network with 16 inputs and 15 outputs (dfl=1).

16.282.30.1. Executing ABC.
[Time = 0.05 sec.]

16.283. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1526, #solve=0, #remove=0, time=0.04 sec.]

16.284. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~2 debug messages>

16.285. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 7197 unused wires.
<suppressed ~18 debug messages>

16.286. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1526, #solve=0, #remove=0, time=0.04 sec.]

16.287. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.288. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.289. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1526, #solve=0, #remove=0, time=0.04 sec.]

16.290. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.291. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.292. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 2

16.293. Executing ABC pass (technology mapping using ABC).

16.293.1. Summary of detected clock domains:
  77 cells in clk={ }, en={ }, arst={ }, srst={ }
  128 cells in clk=\clk, en={ }, arst={ }, srst=$abc$55512$auto_809
  389 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  6115 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 4

16.293.2. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 5918 gates and 6549 wires to a netlist network with 631 inputs and 1641 outputs (dfl=1).

16.293.2.1. Executing ABC.
[Time = 0.57 sec.]

16.293.3. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 389 gates and 468 wires to a netlist network with 79 inputs and 269 outputs (dfl=1).

16.293.3.1. Executing ABC.
[Time = 0.08 sec.]

16.293.4. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$55512$auto_809
Extracted 128 gates and 152 wires to a netlist network with 24 inputs and 75 outputs (dfl=1).

16.293.4.1. Executing ABC.
[Time = 0.06 sec.]

16.293.5. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=1).
Don't call ABC as there is nothing to map.

16.294. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1257, #solve=0, #remove=0, time=0.05 sec.]

16.295. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~1 debug messages>

16.296. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 8631 unused wires.
<suppressed ~18 debug messages>

16.297. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1257, #solve=0, #remove=0, time=0.04 sec.]

16.298. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.299. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.300. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$64559$auto_64680 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6821_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [0]).
Adding EN signal on $abc$64559$auto_64679 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6819_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [1]).
Adding EN signal on $abc$64559$auto_64678 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6817_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [2]).
Adding EN signal on $abc$64559$auto_64677 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6815_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [3]).
Adding EN signal on $abc$64559$auto_64676 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6813_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [4]).
Adding EN signal on $abc$64559$auto_64675 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6811_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [5]).
Adding EN signal on $abc$64559$auto_64674 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6809_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [6]).
Adding EN signal on $abc$64559$auto_64673 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6807_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [7]).
Adding EN signal on $abc$64559$auto_64672 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6805_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [8]).
Adding EN signal on $abc$64559$auto_64671 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6803_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [9]).
Adding EN signal on $abc$64559$auto_64670 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6801_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [10]).
Adding EN signal on $abc$64559$auto_64669 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6799_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [11]).
Adding EN signal on $abc$64559$auto_64668 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6797_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [12]).
Adding EN signal on $abc$64559$auto_64667 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6795_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [13]).
Adding EN signal on $abc$64559$auto_64666 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6793_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [14]).
Adding EN signal on $abc$64559$auto_64665 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6791_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [15]).
Adding EN signal on $abc$64559$auto_64664 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6789_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [16]).
Adding EN signal on $abc$64559$auto_64663 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6787_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [17]).
Adding EN signal on $abc$64559$auto_64662 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6785_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [18]).
Adding EN signal on $abc$64559$auto_64661 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6783_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [19]).
Adding EN signal on $abc$64559$auto_64660 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6781_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [20]).
Adding EN signal on $abc$64559$auto_64659 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6779_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [21]).
Adding EN signal on $abc$64559$auto_64658 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6777_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [22]).
Adding EN signal on $abc$64559$auto_64657 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6775_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [23]).
Adding EN signal on $abc$64559$auto_64656 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6773_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [24]).
Adding EN signal on $abc$64559$auto_64655 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6771_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [25]).
Adding EN signal on $abc$64559$auto_64654 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6769_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [26]).
Adding EN signal on $abc$64559$auto_64653 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6767_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [27]).
Adding EN signal on $abc$64559$auto_64652 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6765_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [28]).
Adding EN signal on $abc$64559$auto_64651 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6763_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [29]).
Adding EN signal on $abc$64559$auto_64650 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6761_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [30]).
Adding EN signal on $abc$64559$auto_64649 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6759_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [31]).
Adding EN signal on $abc$64559$auto_64636 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6716_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [0]).
Adding EN signal on $abc$64559$auto_64635 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6714_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [1]).
Adding EN signal on $abc$64559$auto_64634 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6712_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [2]).
Adding EN signal on $abc$64559$auto_64633 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6710_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [3]).
Adding EN signal on $abc$64559$auto_64632 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6708_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [4]).
Adding EN signal on $abc$64559$auto_64631 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6706_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [5]).
Adding EN signal on $abc$64559$auto_64630 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6704_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [6]).
Adding EN signal on $abc$64559$auto_64629 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6702_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [7]).
Adding EN signal on $abc$64559$auto_64628 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6700_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [8]).
Adding EN signal on $abc$64559$auto_64627 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6698_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [9]).
Adding EN signal on $abc$64559$auto_64626 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6696_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [10]).
Adding EN signal on $abc$64559$auto_64625 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6694_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [11]).
Adding EN signal on $abc$64559$auto_64624 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6692_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [12]).
Adding EN signal on $abc$64559$auto_64623 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6690_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [13]).
Adding EN signal on $abc$64559$auto_64622 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6688_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [14]).
Adding EN signal on $abc$64559$auto_64621 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6686_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [15]).
Adding EN signal on $abc$64559$auto_64620 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6684_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [16]).
Adding EN signal on $abc$64559$auto_64619 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6682_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [17]).
Adding EN signal on $abc$64559$auto_64618 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6680_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [18]).
Adding EN signal on $abc$64559$auto_64617 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6678_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [19]).
Adding EN signal on $abc$64559$auto_64616 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6676_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [20]).
Adding EN signal on $abc$64559$auto_64615 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6674_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [21]).
Adding EN signal on $abc$64559$auto_64614 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6672_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [22]).
Adding EN signal on $abc$64559$auto_64613 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6670_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [23]).
Adding EN signal on $abc$64559$auto_64612 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6668_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [24]).
Adding EN signal on $abc$64559$auto_64611 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6666_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [25]).
Adding EN signal on $abc$64559$auto_64610 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6664_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [26]).
Adding EN signal on $abc$64559$auto_64609 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6662_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [27]).
Adding EN signal on $abc$64559$auto_64608 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6660_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [28]).
Adding EN signal on $abc$64559$auto_64607 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6658_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [29]).
Adding EN signal on $abc$64559$auto_64606 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6656_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [30]).
Adding EN signal on $abc$64559$auto_64605 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6654_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [31]).
Adding EN signal on $abc$64559$auto_64604 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6652_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [0]).
Adding EN signal on $abc$64559$auto_64603 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6650_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [1]).
Adding EN signal on $abc$64559$auto_64602 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6648_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [2]).
Adding EN signal on $abc$64559$auto_64601 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6646_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [3]).
Adding EN signal on $abc$64559$auto_64600 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6644_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [4]).
Adding EN signal on $abc$64559$auto_64599 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6642_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [5]).
Adding EN signal on $abc$64559$auto_64598 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6640_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [6]).
Adding EN signal on $abc$64559$auto_64597 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6638_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [7]).
Adding EN signal on $abc$64559$auto_64596 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6636_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [8]).
Adding EN signal on $abc$64559$auto_64595 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6634_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [9]).
Adding EN signal on $abc$64559$auto_64594 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6632_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [10]).
Adding EN signal on $abc$64559$auto_64593 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6630_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [11]).
Adding EN signal on $abc$64559$auto_64592 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6628_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [12]).
Adding EN signal on $abc$64559$auto_64591 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6626_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [13]).
Adding EN signal on $abc$64559$auto_64590 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6624_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [14]).
Adding EN signal on $abc$64559$auto_64589 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6622_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [15]).
Adding EN signal on $abc$64559$auto_64588 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6620_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [16]).
Adding EN signal on $abc$64559$auto_64587 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6618_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [17]).
Adding EN signal on $abc$64559$auto_64586 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6616_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [18]).
Adding EN signal on $abc$64559$auto_64585 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6614_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [19]).
Adding EN signal on $abc$64559$auto_64584 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6612_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [20]).
Adding EN signal on $abc$64559$auto_64583 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6610_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [21]).
Adding EN signal on $abc$64559$auto_64582 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6608_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [22]).
Adding EN signal on $abc$64559$auto_64581 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6606_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [23]).
Adding EN signal on $abc$64559$auto_64580 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6604_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [24]).
Adding EN signal on $abc$64559$auto_64579 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6602_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [25]).
Adding EN signal on $abc$64559$auto_64578 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6600_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [26]).
Adding EN signal on $abc$64559$auto_64577 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6598_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [27]).
Adding EN signal on $abc$64559$auto_64576 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6596_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [28]).
Adding EN signal on $abc$64559$auto_64575 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6594_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [29]).
Adding EN signal on $abc$64559$auto_64574 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6592_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [30]).
Adding EN signal on $abc$64559$auto_64573 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6590_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [31]).
Adding EN signal on $abc$64559$auto_64572 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6588_, Q = \design195_5_10_inst.memory_cntrl_instance108.wr_data_mem [10]).
Adding EN signal on $abc$64559$auto_64571 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6586_, Q = \design195_5_10_inst.memory_cntrl_instance108.wr_data_mem [30]).
Adding EN signal on $abc$64559$auto_64570 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6584_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [0]).
Adding EN signal on $abc$64559$auto_64569 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6582_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [1]).
Adding EN signal on $abc$64559$auto_64568 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6580_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [2]).
Adding EN signal on $abc$64559$auto_64567 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6578_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [3]).
Adding EN signal on $abc$64559$auto_64566 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6576_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [4]).
Adding EN signal on $abc$64559$auto_64565 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6574_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [5]).
Adding EN signal on $abc$64559$auto_64564 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6572_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [6]).
Adding EN signal on $abc$64559$auto_64563 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6570_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [7]).
Adding EN signal on $abc$64559$auto_64562 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6568_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [8]).
Adding EN signal on $abc$64559$auto_64561 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6566_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [9]).
Adding EN signal on $abc$64559$auto_64560 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6564_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [24]).
[#visit=1257, #solve=0, #remove=0, time=0.04 sec.]

16.301. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.302. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 109 unused cells and 109 unused wires.
<suppressed ~110 debug messages>

16.303. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 3

16.304. Executing ABC pass (technology mapping using ABC).

16.304.1. Summary of detected clock domains:
  77 cells in clk={ }, en={ }, arst={ }, srst={ }
  128 cells in clk=\clk, en={ }, arst={ }, srst=$abc$55512$auto_809
  382 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  4747 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 4

16.304.2. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 4550 gates and 5181 wires to a netlist network with 631 inputs and 1370 outputs (dfl=2).

16.304.2.1. Executing ABC.
[Time = 1.07 sec.]

16.304.3. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 382 gates and 459 wires to a netlist network with 77 inputs and 269 outputs (dfl=2).

16.304.3.1. Executing ABC.
[Time = 0.12 sec.]

16.304.4. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$55512$auto_809
Extracted 128 gates and 152 wires to a netlist network with 24 inputs and 75 outputs (dfl=2).

16.304.4.1. Executing ABC.
[Time = 0.06 sec.]

16.304.5. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=2).
Don't call ABC as there is nothing to map.

16.305. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1257, #solve=0, #remove=0, time=0.04 sec.]

16.306. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~4 debug messages>

16.307. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 7430 unused wires.
<suppressed ~1 debug messages>

16.308. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1257, #solve=0, #remove=0, time=0.03 sec.]

16.309. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.310. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.311. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1257, #solve=0, #remove=0, time=0.03 sec.]

16.312. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.313. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.314. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 4

16.315. Executing ABC pass (technology mapping using ABC).

16.315.1. Summary of detected clock domains:
  77 cells in clk={ }, en={ }, arst={ }, srst={ }
  126 cells in clk=\clk, en={ }, arst={ }, srst=$abc$55512$auto_809
  350 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  4741 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 4

16.315.2. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 4544 gates and 5189 wires to a netlist network with 645 inputs and 1370 outputs (dfl=2).

16.315.2.1. Executing ABC.
[Time = 0.92 sec.]

16.315.3. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 350 gates and 427 wires to a netlist network with 77 inputs and 283 outputs (dfl=2).

16.315.3.1. Executing ABC.
[Time = 0.11 sec.]

16.315.4. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$55512$auto_809
Extracted 126 gates and 150 wires to a netlist network with 24 inputs and 75 outputs (dfl=2).

16.315.4.1. Executing ABC.
[Time = 0.06 sec.]

16.315.5. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=2).
Don't call ABC as there is nothing to map.

16.316. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1257, #solve=0, #remove=0, time=0.04 sec.]

16.317. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~1 debug messages>

16.318. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 7406 unused wires.
<suppressed ~5 debug messages>

16.319. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1257, #solve=0, #remove=0, time=0.03 sec.]

16.320. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.321. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.322. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1257, #solve=0, #remove=0, time=0.03 sec.]

16.323. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.324. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.325. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).
select with DFL1 synthesis (thresh_logic=0.920000, thresh_dff=0.980000)

16.326. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
select CE remove strategy (thresh_logic=0.920000, thresh_dff=0.980000, dfl=1)

16.327. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.328. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~69 debug messages>
Removed a total of 23 cells.

16.329. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.330. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.331. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.332. Executing OPT_SHARE pass.

16.333. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[2]_71596 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6648_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [2]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[30]_71624 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6592_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [30]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[31]_71625 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6590_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [31]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[25]_71619 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6602_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [25]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[26]_71620 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6600_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [26]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[27]_71621 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6598_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [27]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[3]_71597 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6646_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [3]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[4]_71598 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6644_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [4]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[5]_71599 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6642_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [5]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[6]_71600 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6640_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [6]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[7]_71601 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6638_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [7]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[8]_71602 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6636_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [8]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[9]_71603 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6634_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [9]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[19]_71613 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6614_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [19]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[21]_71615 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6610_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [21]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[28]_71622 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6596_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [28]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[22]_71616 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6608_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [22]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[18]_71612 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6616_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [18]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[1]_71595 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6650_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [1]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[29]_71623 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6594_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [29]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[23]_71617 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6606_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [23]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[24]_71618 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6604_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [24]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[20]_71614 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6612_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [20]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance108.wr_data_mem[10]_71626 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6588_, Q = \design195_5_10_inst.memory_cntrl_instance108.wr_data_mem [10]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance108.wr_data_mem[30]_71627 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6586_, Q = \design195_5_10_inst.memory_cntrl_instance108.wr_data_mem [30]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[0]_71562 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6716_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [0]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[10]_71572 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6696_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [10]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[11]_71573 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6694_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [11]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[12]_71574 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6692_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [12]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[13]_71575 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6690_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [13]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[14]_71576 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6688_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [14]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[15]_71577 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6686_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [15]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[16]_71578 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6684_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [16]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[17]_71579 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6682_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [17]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[18]_71580 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6680_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [18]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[19]_71581 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6678_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [19]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[1]_71563 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6714_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [1]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[20]_71582 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6676_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [20]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[21]_71583 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6674_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [21]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[22]_71584 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6672_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [22]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[23]_71585 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6670_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [23]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[24]_71586 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6668_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [24]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[25]_71587 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6666_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [25]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[26]_71588 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6664_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [26]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[27]_71589 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6662_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [27]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[28]_71590 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6660_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [28]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[29]_71591 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6658_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [29]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[2]_71564 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6712_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [2]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[30]_71592 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6656_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [30]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[31]_71593 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6654_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [31]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[3]_71565 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6710_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [3]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[4]_71566 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6708_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [4]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[5]_71567 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6706_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [5]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[6]_71568 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6704_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [6]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[7]_71569 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6702_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [7]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[8]_71570 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6700_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [8]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance216.wr_data_mem[9]_71571 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6698_, Q = \design195_5_10_inst.memory_cntrl_instance216.wr_data_mem [9]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.wr_data_mem[0]_71628 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6584_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [0]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.wr_data_mem[1]_71629 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6582_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [1]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.wr_data_mem[24]_71638 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6564_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [24]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.wr_data_mem[2]_71630 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6580_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [2]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.wr_data_mem[3]_71631 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6578_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [3]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.wr_data_mem[4]_71632 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6576_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [4]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.wr_data_mem[5]_71633 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6574_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [5]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.wr_data_mem[6]_71634 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6572_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [6]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.wr_data_mem[7]_71635 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6570_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [7]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.wr_data_mem[8]_71636 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6568_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [8]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance328.wr_data_mem[9]_71637 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6566_, Q = \design195_5_10_inst.memory_cntrl_instance328.wr_data_mem [9]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[0]_71530 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6821_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [0]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[10]_71540 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6801_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [10]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[11]_71541 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6799_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [11]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[12]_71542 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6797_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [12]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[13]_71543 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6795_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [13]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[14]_71544 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6793_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [14]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[15]_71545 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6791_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [15]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[16]_71546 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6789_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [16]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[17]_71547 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6787_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [17]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[18]_71548 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6785_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [18]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[19]_71549 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6783_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [19]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[1]_71531 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6819_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [1]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[20]_71550 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6781_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [20]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[21]_71551 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6779_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [21]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[22]_71552 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6777_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [22]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[23]_71553 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6775_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [23]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[24]_71554 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6773_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [24]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[25]_71555 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6771_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [25]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[26]_71556 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6769_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [26]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[27]_71557 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6767_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [27]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[28]_71558 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6765_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [28]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[29]_71559 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6763_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [29]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[2]_71532 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6817_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [2]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[30]_71560 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6761_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [30]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[31]_71561 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6759_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [31]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[3]_71533 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6815_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [3]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[4]_71534 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6813_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [4]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[5]_71535 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6811_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [5]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[6]_71536 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6809_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [6]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[7]_71537 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6807_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [7]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[8]_71538 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6805_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [8]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance430.wr_data_mem[9]_71539 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6803_, Q = \design195_5_10_inst.memory_cntrl_instance430.wr_data_mem [9]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[0]_71594 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6652_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [0]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[10]_71604 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6632_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [10]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[11]_71605 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6630_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [11]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[12]_71606 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6628_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [12]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[13]_71607 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6626_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [13]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[14]_71608 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6624_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [14]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[15]_71609 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6622_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [15]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[16]_71610 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6620_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [16]).
Adding EN signal on design195_5_10_top:design195_5_10_inst.memory_cntrl_instance546.wr_data_mem[17]_71611 ($_DFF_P_) from module design195_5_10_top (D = $abc$64559$new_n6618_, Q = \design195_5_10_inst.memory_cntrl_instance546.wr_data_mem [17]).
[#visit=1249, #solve=0, #remove=0, time=0.03 sec.]

16.334. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 109 unused cells and 118 unused wires.
<suppressed ~110 debug messages>

16.335. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.336. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.337. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.338. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.339. Executing OPT_SHARE pass.

16.340. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1249, #solve=0, #remove=0, time=0.03 sec.]

16.341. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.342. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 2

16.343. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.344. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.345. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.346. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.347. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.348. Executing OPT_SHARE pass.

16.349. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1249, #solve=0, #remove=0, time=0.04 sec.]

16.350. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.351. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

16.352. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.353. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.354. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.355. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.356. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.357. Executing OPT_SHARE pass.

16.358. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1249, #solve=0, #remove=0, time=0.03 sec.]

16.359. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1249, #solve=1216, #remove=0, time=0.11 sec.]

16.360. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.361. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

16.362. Executing BMUXMAP pass.

16.363. Executing DEMUXMAP pass.

16.364. Executing SPLITNETS pass (splitting up multi-bit signals).

16.365. Executing ABC pass (technology mapping using ABC).

16.365.1. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Extracted 3679 gates and 5023 wires to a netlist network with 1344 inputs and 1229 outputs (dfl=1).

16.365.1.1. Executing ABC.
DE:   Version : 7.7
DE:   #PIs = 1344  #Luts =  1610  Max Lvl =   8  Avg Lvl =   1.85  [   0.15 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 1344  #Luts =  1571  Max Lvl =   7  Avg Lvl =   1.77  [   1.85 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 1344  #Luts =  1531  Max Lvl =   6  Avg Lvl =   1.62  [   2.06 sec. at Pass 2]{map}[6]
DE:   #PIs = 1344  #Luts =  1516  Max Lvl =   6  Avg Lvl =   1.61  [   2.37 sec. at Pass 3]{postMap}[12]
DE:   #PIs = 1344  #Luts =  1516  Max Lvl =   6  Avg Lvl =   1.61  [   2.74 sec. at Pass 4]{map}[16]
DE:   #PIs = 1344  #Luts =  1507  Max Lvl =   6  Avg Lvl =   1.64  [   2.52 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 1344  #Luts =  1507  Max Lvl =   6  Avg Lvl =   1.64  [   2.61 sec. at Pass 6]{map}[16]
DE:   #PIs = 1344  #Luts =  1502  Max Lvl =   6  Avg Lvl =   1.59  [   2.62 sec. at Pass 7]{postMap}[16]
DE:   #PIs = 1344  #Luts =  1502  Max Lvl =   6  Avg Lvl =   1.59  [   2.57 sec. at Pass 8]{map}[16]
DE:   #PIs = 1344  #Luts =  1499  Max Lvl =   6  Avg Lvl =   1.61  [   2.48 sec. at Pass 9]{postMap}[16]
DE:   #PIs = 1344  #Luts =  1499  Max Lvl =   6  Avg Lvl =   1.61  [   2.67 sec. at Pass 10]{map}[16]
DE:   #PIs = 1344  #Luts =  1499  Max Lvl =   6  Avg Lvl =   1.61  [   2.56 sec. at Pass 11]{postMap}[16]
DE:   #PIs = 1344  #Luts =  1499  Max Lvl =   6  Avg Lvl =   1.61  [   2.60 sec. at Pass 12]{map}[16]
DE:   #PIs = 1344  #Luts =  1499  Max Lvl =   6  Avg Lvl =   1.61  [   1.98 sec. at Pass 13]{pushMap}[16]
DE:   #PIs = 1344  #Luts =  1490  Max Lvl =   6  Avg Lvl =   1.60  [   1.96 sec. at Pass 14]{pushMap}[16]
DE:   #PIs = 1344  #Luts =  1490  Max Lvl =   6  Avg Lvl =   1.60  [   1.89 sec. at Pass 14]{pushMap}[16]
DE:   #PIs = 1344  #Luts =  1490  Max Lvl =   6  Avg Lvl =   1.60  [   2.41 sec. at Pass 15]{postMap}[16]
DE:   #PIs = 1344  #Luts =  1490  Max Lvl =   6  Avg Lvl =   1.60  [   2.35 sec. at Pass 16]{map}[16]
DE:   #PIs = 1344  #Luts =  1490  Max Lvl =   6  Avg Lvl =   1.60  [   2.58 sec. at Pass 17]{postMap}[16]
DE:   #PIs = 1344  #Luts =  1490  Max Lvl =   6  Avg Lvl =   1.60  [   2.01 sec. at Pass 18]{pushMap}[16]
DE:   #PIs = 1344  #Luts =  1490  Max Lvl =   6  Avg Lvl =   1.60  [   2.03 sec. at Pass 19]{pushMap}[16]
DE:   #PIs = 1344  #Luts =  1490  Max Lvl =   6  Avg Lvl =   1.60  [   2.13 sec. at Pass 19]{pushMap}[16]
DE:   #PIs = 1344  #Luts =  1490  Max Lvl =   6  Avg Lvl =   1.60  [   0.95 sec. at Pass 20]{finalMap}[16]
DE:   
DE:   total time =   50.16 sec.
[Time = 52.29 sec.]

16.366. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.367. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

16.368. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.369. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.370. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.371. Executing OPT_SHARE pass.

16.372. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1243, #solve=0, #remove=0, time=0.02 sec.]

16.373. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 5023 unused wires.
<suppressed ~5 debug messages>

16.374. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

16.375. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

16.376. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.377. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.378. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.379. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.380. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.381. Executing OPT_SHARE pass.

16.382. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1243, #solve=0, #remove=0, time=0.02 sec.]

16.383. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

16.384. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.385. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.386. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.387. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.388. Executing OPT_SHARE pass.

16.389. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1243, #solve=0, #remove=0, time=0.02 sec.]

16.390. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.391. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 2

16.392. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.393. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.394. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.395. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.396. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.397. Executing OPT_SHARE pass.

16.398. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1243, #solve=0, #remove=0, time=0.02 sec.]

16.399. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1243, #solve=1209, #remove=0, time=0.23 sec.]

16.400. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.401. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

16.402. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.403. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.404. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.405. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.406. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.407. Executing OPT_SHARE pass.

16.408. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1243, #solve=0, #remove=0, time=0.02 sec.]

16.409. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.410. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

16.411. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.412. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.413. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.414. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.415. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.416. Executing OPT_SHARE pass.

16.417. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1243, #solve=0, #remove=0, time=0.02 sec.]

16.418. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=1243, #solve=1209, #remove=0, time=0.23 sec.]

16.419. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.420. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

16.421. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               1947
   Number of wire bits:          12116
   Number of public wires:         510
   Number of public wire bits:    8746
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3000
     $_DFFE_PP_                    108
     $_DFF_PP0_                    228
     $_DFF_P_                      875
     $_SDFF_PP0_                    32
     $lut                         1483
     $scopeinfo                     77
     CARRY                         183
     DSP38                           9
     TDP_RAM36K                      5

16.422. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

16.423. Executing RS_DFFSR_CONV pass.

16.424. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               1981
   Number of wire bits:          12150
   Number of public wires:         510
   Number of public wire bits:    8746
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3034
     $_DFFE_PP0P_                  108
     $_DFF_PP0_                    228
     $_DFF_P_                      907
     $_MUX_                         32
     $_NOT_                          2
     $lut                         1483
     $scopeinfo                     77
     CARRY                         183
     DSP38                           9
     TDP_RAM36K                      5

16.425. Executing TECHMAP pass (map to technology primitives).

16.425.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

16.425.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

16.425.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~3184 debug messages>

16.426. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~24750 debug messages>

16.427. Executing SIMPLEMAP pass (map simple cells to gate primitives).

16.428. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.429. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~16194 debug messages>
Removed a total of 5398 cells.

16.430. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.06 sec.]

16.431. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 1 unused cells and 7924 unused wires.
<suppressed ~2 debug messages>

16.432. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.
<suppressed ~97 debug messages>

16.433. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

16.434. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.435. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.436. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.437. Executing OPT_SHARE pass.

16.438. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.05 sec.]

16.439. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

16.440. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

16.441. Executing TECHMAP pass (map to technology primitives).

16.441.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

16.441.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

16.442. Executing ABC pass (technology mapping using ABC).

16.442.1. Extracting gate netlist of module `\design195_5_10_top' to `<abc-temp-dir>/input.blif'..
Extracted 4980 gates and 6322 wires to a netlist network with 1340 inputs and 1223 outputs (dfl=1).

16.442.1.1. Executing ABC.
DE:   Version : 7.7
DE:   #PIs = 1340  #Luts =  1499  Max Lvl =   7  Avg Lvl =   1.61  [   0.14 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 1340  #Luts =  1500  Max Lvl =   6  Avg Lvl =   1.85  [   1.78 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 1340  #Luts =  1495  Max Lvl =   6  Avg Lvl =   1.93  [   1.77 sec. at Pass 2]{map}[6]
DE:   #PIs = 1340  #Luts =  1495  Max Lvl =   6  Avg Lvl =   1.93  [   1.77 sec. at Pass 3]{postMap}[12]
DE:   #PIs = 1340  #Luts =  1495  Max Lvl =   6  Avg Lvl =   1.93  [   2.42 sec. at Pass 4]{map}[16]
DE:   #PIs = 1340  #Luts =  1495  Max Lvl =   6  Avg Lvl =   1.93  [   2.27 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 1340  #Luts =  1495  Max Lvl =   6  Avg Lvl =   1.93  [   1.90 sec. at Pass 6]{pushMap}[16]
DE:   #PIs = 1340  #Luts =  1492  Max Lvl =   6  Avg Lvl =   1.61  [   1.86 sec. at Pass 7]{pushMap}[16]
DE:   #PIs = 1340  #Luts =  1492  Max Lvl =   6  Avg Lvl =   1.61  [   1.91 sec. at Pass 7]{pushMap}[16]
DE:   #PIs = 1340  #Luts =  1492  Max Lvl =   6  Avg Lvl =   1.61  [   2.46 sec. at Pass 8]{map}[16]
DE:   #PIs = 1340  #Luts =  1489  Max Lvl =   6  Avg Lvl =   1.61  [   2.54 sec. at Pass 9]{postMap}[16]
DE:   #PIs = 1340  #Luts =  1489  Max Lvl =   6  Avg Lvl =   1.61  [   2.54 sec. at Pass 10]{map}[16]
DE:   #PIs = 1340  #Luts =  1484  Max Lvl =   6  Avg Lvl =   1.61  [   2.39 sec. at Pass 11]{postMap}[16]
DE:   #PIs = 1340  #Luts =  1484  Max Lvl =   6  Avg Lvl =   1.61  [   2.46 sec. at Pass 12]{map}[16]
DE:   #PIs = 1340  #Luts =  1484  Max Lvl =   6  Avg Lvl =   1.61  [   2.37 sec. at Pass 13]{postMap}[16]
DE:   #PIs = 1340  #Luts =  1484  Max Lvl =   6  Avg Lvl =   1.61  [   1.99 sec. at Pass 14]{map}[16]
DE:   #PIs = 1340  #Luts =  1484  Max Lvl =   6  Avg Lvl =   1.61  [   1.84 sec. at Pass 15]{pushMap}[16]
DE:   #PIs = 1340  #Luts =  1484  Max Lvl =   6  Avg Lvl =   1.61  [   1.51 sec. at Pass 16]{pushMap}[16]
DE:   #PIs = 1340  #Luts =  1484  Max Lvl =   6  Avg Lvl =   1.61  [   1.53 sec. at Pass 16]{pushMap}[16]
DE:   #PIs = 1340  #Luts =  1484  Max Lvl =   6  Avg Lvl =   1.61  [   0.74 sec. at Pass 17]{finalMap}[16]
DE:   
DE:   total time =   38.23 sec.
[Time = 40.37 sec.]

16.443. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

16.444. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.445. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \design195_5_10_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

16.446. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \design195_5_10_top.
Performed a total of 0 changes.

16.447. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\design195_5_10_top'.
Removed a total of 0 cells.

16.448. Executing OPT_SHARE pass.

16.449. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.02 sec.]

16.450. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 4964 unused wires.
<suppressed ~1 debug messages>

16.451. Executing OPT_EXPR pass (perform const folding).
Optimizing module design195_5_10_top.

RUN-OPT ITERATIONS DONE : 1

16.452. Executing HIERARCHY pass (managing design hierarchy).

16.452.1. Analyzing design hierarchy..
Top module:  \design195_5_10_top

16.452.2. Analyzing design hierarchy..
Top module:  \design195_5_10_top
Removed 0 unused modules.

16.453. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 77 unused cells and 394 unused wires.
<suppressed ~471 debug messages>

16.454. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__IO_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

16.455. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Replacing existing blackbox module `\BOOT_CLOCK' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:9.1-14.10.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:24.1-31.10.
Generating RTLIL representation for module `\CARRY'.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:41.1-46.10.
Generating RTLIL representation for module `\CLK_BUF'.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:56.1-64.10.
Generating RTLIL representation for module `\DFFNRE'.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:74.1-82.10.
Generating RTLIL representation for module `\DFFRE'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:92.1-126.10.
Generating RTLIL representation for module `\DSP19X2'.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:136.1-162.10.
Generating RTLIL representation for module `\DSP38'.
Replacing existing blackbox module `\FCLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:172.1-176.10.
Generating RTLIL representation for module `\FCLK_BUF'.
Replacing existing blackbox module `\FIFO18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:186.1-233.10.
Generating RTLIL representation for module `\FIFO18KX2'.
Replacing existing blackbox module `\FIFO36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:243.1-268.10.
Generating RTLIL representation for module `\FIFO36K'.
Replacing existing blackbox module `\I_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:278.1-290.10.
Generating RTLIL representation for module `\I_BUF_DS'.
Replacing existing blackbox module `\I_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:300.1-309.10.
Generating RTLIL representation for module `\I_BUF'.
Replacing existing blackbox module `\I_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:319.1-327.10.
Generating RTLIL representation for module `\I_DDR'.
Replacing existing blackbox module `\I_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:337.1-349.10.
Generating RTLIL representation for module `\I_DELAY'.
Replacing existing blackbox module `\I_FAB' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:359.1-363.10.
Generating RTLIL representation for module `\I_FAB'.
Replacing existing blackbox module `\I_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:373.1-392.10.
Generating RTLIL representation for module `\I_SERDES'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:402.1-408.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:418.1-424.10.
Generating RTLIL representation for module `\LATCHNS'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:434.1-439.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:449.1-455.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:465.1-471.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:481.1-486.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:496.1-502.10.
Generating RTLIL representation for module `\LUT1'.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:512.1-518.10.
Generating RTLIL representation for module `\LUT2'.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:528.1-534.10.
Generating RTLIL representation for module `\LUT3'.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:544.1-550.10.
Generating RTLIL representation for module `\LUT4'.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:560.1-566.10.
Generating RTLIL representation for module `\LUT5'.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:576.1-582.10.
Generating RTLIL representation for module `\LUT6'.
Replacing existing blackbox module `\MIPI_RX' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:592.1-618.10.
Generating RTLIL representation for module `\MIPI_RX'.
Replacing existing blackbox module `\MIPI_TX' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:628.1-655.10.
Generating RTLIL representation for module `\MIPI_TX'.
Replacing existing blackbox module `\O_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:665.1-677.10.
Generating RTLIL representation for module `\O_BUF_DS'.
Replacing existing blackbox module `\O_BUFT_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:687.1-699.10.
Generating RTLIL representation for module `\O_BUFT_DS'.
Replacing existing blackbox module `\O_BUFT' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:709.1-720.10.
Generating RTLIL representation for module `\O_BUFT'.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:730.1-741.10.
Generating RTLIL representation for module `\O_BUF'.
Replacing existing blackbox module `\O_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:751.1-759.10.
Generating RTLIL representation for module `\O_DDR'.
Replacing existing blackbox module `\O_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:769.1-781.10.
Generating RTLIL representation for module `\O_DELAY'.
Replacing existing blackbox module `\O_FAB' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:791.1-795.10.
Generating RTLIL representation for module `\O_FAB'.
Replacing existing blackbox module `\O_SERDES_CLK' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:805.1-814.10.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Replacing existing blackbox module `\O_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:824.1-841.10.
Generating RTLIL representation for module `\O_SERDES'.
Replacing existing blackbox module `\PLL' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:851.1-869.10.
Generating RTLIL representation for module `\PLL'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_M' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:879.1-893.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_S' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:903.1-920.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M0' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:930.1-969.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M1' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:979.1-1018.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Replacing existing blackbox module `\SOC_FPGA_INTF_DMA' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1028.1-1034.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Replacing existing blackbox module `\SOC_FPGA_INTF_IRQ' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1044.1-1050.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Replacing existing blackbox module `\SOC_FPGA_INTF_JTAG' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1060.1-1068.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Replacing existing blackbox module `\SOC_FPGA_TEMPERATURE' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1078.1-1086.10.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1096.1-1151.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1161.1-1190.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Successfully finished Verilog frontend.
 ***************************
   Inserting Input Buffers
 ***************************
WARNING: port '\clk' has no associated I_BUF
WARNING: port '\in' has no associated I_BUF
WARNING: port '\rst' has no associated I_BUF
 ***************************
   Inserting Clock Buffers
 ***************************
INFO: inserting CLK_BUF before '$ibuf_clk'
 *****************************
   Inserting Output Buffers
 *****************************
WARNING: OUTPUT port '\out' has no associated O_BUF
 *****************************
   Mapping Tri-state Buffers  
 *****************************

16.456. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..

16.457. Executing TECHMAP pass (map to technology primitives).

16.457.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

16.457.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~72 debug messages>

16.458. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 198 unused wires.
<suppressed ~1 debug messages>

16.459. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               1559
   Number of wire bits:           6005
   Number of public wires:         116
   Number of public wire bits:    2567
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2991
     $lut                         1484
     CARRY                         183
     CLK_BUF                         1
     DFFRE                        1243
     DSP38                           9
     I_BUF                          34
     O_BUF                          32
     TDP_RAM36K                      5

16.460. Executing TECHMAP pass (map to technology primitives).

16.460.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_05_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

16.460.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5322 debug messages>

16.461. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \design195_5_10_top..
Removed 0 unused cells and 2968 unused wires.
<suppressed ~1 debug messages>

16.462. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               1559
   Number of wire bits:           6005
   Number of public wires:         116
   Number of public wire bits:    2567
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2991
     CARRY                         183
     CLK_BUF                         1
     DFFRE                        1243
     DSP38                           9
     I_BUF                          34
     LUT1                           32
     LUT2                          505
     LUT3                          201
     LUT4                          218
     LUT5                          184
     LUT6                          344
     O_BUF                          32
     TDP_RAM36K                      5

 *****************************
         Rewire_Obuft         
 *****************************

==========================
Post Design clean up ... 

Split to bits ... 

16.463. Executing SPLITNETS pass (splitting up multi-bit signals).

Split into bits ...     [0.03 sec.]
Building Sig2cells ...  [0.01 sec.]
Building Sig2sig ...    [0.01 sec.]
Backward clean up ...   [0.02 sec.]
Before cleanup :

16.464. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               5943
   Number of wire bits:           6005
   Number of public wires:        2505
   Number of public wire bits:    2567
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2991
     CARRY                         183
     CLK_BUF                         1
     DFFRE                        1243
     DSP38                           9
     I_BUF                          34
     LUT1                           32
     LUT2                          505
     LUT3                          201
     LUT4                          218
     LUT5                          184
     LUT6                          344
     O_BUFT                         32
     TDP_RAM36K                      5

 --------------------------
   Removed assigns : 1759
   Removed wires   : 2572
   Removed cells   : 36
 --------------------------
After cleanup :

16.465. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               3834
   Number of wire bits:           3896
   Number of public wires:        1478
   Number of public wire bits:    1540
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2955
     CARRY                         183
     CLK_BUF                         1
     DFFRE                        1225
     DSP38                           9
     I_BUF                          34
     LUT1                           31
     LUT2                          503
     LUT3                          201
     LUT4                          203
     LUT5                          184
     LUT6                          344
     O_BUFT                         32
     TDP_RAM36K                      5


Total time for 'obs_clean' ...   
 [0.09 sec.]

16.466. Executing SPLITNETS pass (splitting up multi-bit signals).

16.467. Executing HIERARCHY pass (managing design hierarchy).

16.467.1. Analyzing design hierarchy..
Top module:  \design195_5_10_top

16.467.2. Analyzing design hierarchy..
Top module:  \design195_5_10_top
Removed 0 unused modules.

Dumping port properties into 'netlist_info.json' file.

Inserting I_FAB/O_FAB cells ...


Inserting I_FAB/O_FAB cells done.

16.468. Printing statistics.

=== design195_5_10_top ===

   Number of wires:               3866
   Number of wire bits:           3928
   Number of public wires:        1478
   Number of public wire bits:    1540
   Number of ports:                  4
   Number of port bits:             66
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2987
     CARRY                         183
     CLK_BUF                         1
     DFFRE                        1225
     DSP38                           9
     I_BUF                          34
     LUT1                           31
     LUT2                          503
     LUT3                          201
     LUT4                          203
     LUT5                          184
     LUT6                          344
     O_BUFT                         32
     O_FAB                          32
     TDP_RAM36K                      5

   Number of LUTs:                1466
   Number of REGs:                1225
   Number of CARRY ADDERs:         183
   Number of CARRY CHAINs:           9 (2x32, 7x17)

16.469. Executing Verilog backend.
Dumping module `\design195_5_10_top'.

# -------------------- 
# Core Synthesis done 
# -------------------- 

16.470. Executing Verilog backend.
Dumping module `\design195_5_10_top'.

16.470.1. Executing BLIF backend.
Extracting primitives

-- Running command `write_rtlil design.rtlil' --

16.470.2. Executing RTLIL backend.
Output filename: design.rtlil
Running SplitNets

16.470.3. Executing SPLITNETS pass (splitting up multi-bit signals).
Gathering Wires Data
Adding wires between directly connected input and output primitives
Upgrading fabric wires to ports
Handling I_BUF->Fabric->CLK_BUF
Handling Dangling outs
Deleting primitive cells and extra wires
Deleting non-primitive cells and upgrading wires to ports in interface module
Handling I_BUF->Fabric->CLK_BUF in interface module
Removing extra wires from interface module
Cleaning fabric netlist
Removed 0 unused cells and 54 unused wires.
Removing cells from wrapper module
Instantiating fabric and interface modules
Removing extra wires from wrapper module
Fixing wrapper ports
Flattening wrapper module

16.470.4. Executing FLATTEN pass (flatten design).
Deleting now unused module interface_design195_5_10_top.
<suppressed ~1 debug messages>
Removing extra assigns from wrapper module

16.470.5. Executing Verilog backend.
Dumping module `\design195_5_10_top'.

16.470.5.1. Executing BLIF backend.

16.470.5.2. Executing Verilog backend.
Dumping module `\design195_5_10_top'.

16.470.5.2.1. Executing BLIF backend.
Dumping config.json
Updating sdc

16.470.5.2.2. Executing Verilog backend.
Dumping module `\fabric_design195_5_10_top'.

16.470.5.2.2.1. Executing BLIF backend.

Warnings: 12 unique messages, 12 total
End of script. Logfile hash: 4160c47094, CPU: user 29.93s system 1.42s, MEM: 134.38 MB peak
Yosys 0.44 (git sha1 7a4a3768c, g++ 11.2.1 -fPIC -O3)
Time spent: 97% 10x abc (1086 sec), 0% 69x opt_clean (5 sec), ...
