
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/

 Yosys 0.44 (git sha1 7a4a3768c, g++ 11.2.1 -fPIC -O3)

-- Executing script file `test.ys' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FCLK_BUF'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_FAB'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\MIPI_RX'.
Generating RTLIL representation for module `\MIPI_TX'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_FAB'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v' to AST representation.
Generating RTLIL representation for module `\test'.
Generating RTLIL representation for module `\fltr_compute_f1'.
Generating RTLIL representation for module `\fifo226'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \test
Used module:     \fltr_compute_f1
Used module:     \fifo226

3.2. Analyzing design hierarchy..
Top module:  \test
Used module:     \fltr_compute_f1
Used module:     \fifo226
Removed 0 unused modules.
Mapping positional arguments of cell test.inst_fltr_compute_f1 (fltr_compute_f1).
Mapping positional arguments of cell test.fifo1 (fifo226).
Mapping positional arguments of cell test.fifo0 (fifo226).
Warning: Resizing cell port test.inst_fltr_compute_f1.din from 16 bits to 56 bits.

4. Executing synth_rs pass: v0.4.218

4.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v' to AST representation.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v:10.1-33.10.
Generating RTLIL representation for module `\CARRY'.
Successfully finished Verilog frontend.

4.3. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:20.1-34.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:48.1-62.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:81.1-97.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:115.1-131.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:150.1-166.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:184.1-200.10.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

4.4. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v' to AST representation.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v:11.1-81.10.
Generating RTLIL representation for module `\DFFRE'.
Successfully finished Verilog frontend.

4.5. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v' to AST representation.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v:11.1-80.10.
Generating RTLIL representation for module `\DFFNRE'.
Successfully finished Verilog frontend.

4.6. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v' to AST representation.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v:10.1-20.10.
Generating RTLIL representation for module `\LUT1'.
Successfully finished Verilog frontend.

4.7. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v' to AST representation.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v:10.1-21.10.
Generating RTLIL representation for module `\LUT2'.
Successfully finished Verilog frontend.

4.8. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v' to AST representation.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v:10.1-22.10.
Generating RTLIL representation for module `\LUT3'.
Successfully finished Verilog frontend.

4.9. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v' to AST representation.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v:11.1-25.10.
Generating RTLIL representation for module `\LUT4'.
Successfully finished Verilog frontend.

4.10. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v' to AST representation.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v:10.1-24.10.
Generating RTLIL representation for module `\LUT5'.
Successfully finished Verilog frontend.

4.11. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v' to AST representation.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v:10.1-25.10.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

4.12. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v' to AST representation.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v:10.1-25.10.
Generating RTLIL representation for module `\CLK_BUF'.
Successfully finished Verilog frontend.

4.13. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v' to AST representation.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v:10.1-84.10.
Generating RTLIL representation for module `\O_BUF'.
Successfully finished Verilog frontend.

4.14. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v' to AST representation.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:10.1-341.10.
Generating RTLIL representation for module `\DSP38'.
Successfully finished Verilog frontend.

4.15. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v' to AST representation.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:2.1-29.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:33.1-84.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\RS_DSP3'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:116.1-149.10.
Generating RTLIL representation for module `\DSP19X2'.
Successfully finished Verilog frontend.

4.16. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.17. Executing HIERARCHY pass (managing design hierarchy).

4.17.1. Analyzing design hierarchy..
Top module:  \test
Used module:     \fltr_compute_f1
Used module:     \fifo226

4.17.2. Analyzing design hierarchy..
Top module:  \test
Used module:     \fltr_compute_f1
Used module:     \fifo226
Removed 0 unused modules.

4.18. Executing PROC pass (convert processes to netlists).

4.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.18.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 21 assignments to connections.

4.18.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:63$28'.
  Set init value: \buff2 = 8'00000000
Found init rule in `\fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:62$27'.
  Set init value: \buff1 = 8'00000000
Found init rule in `\fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:60$26'.
  Set init value: \dout = 8'00000000
Found init rule in `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:33$23'.
  Set init value: \d_out_tmp = 20'00000000000000000000
Found init rule in `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:32$22'.
  Set init value: \q7 = 17'00000000000000000
Found init rule in `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:31$21'.
  Set init value: \q6 = 17'00000000000000000
Found init rule in `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:30$20'.
  Set init value: \q5 = 17'00000000000000000
Found init rule in `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:29$19'.
  Set init value: \q4 = 17'00000000000000000
Found init rule in `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:28$18'.
  Set init value: \q3 = 17'00000000000000000
Found init rule in `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:27$17'.
  Set init value: \q2 = 17'00000000000000000
Found init rule in `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:26$16'.
  Set init value: \q1 = 17'00000000000000000
Found init rule in `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:25$15'.
  Set init value: \dout = 16'0000000000000000

4.18.5. Executing PROC_ARST pass (detect async resets in processes).

4.18.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~1 debug messages>

4.18.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:63$28'.
Creating decoders for process `\fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:62$27'.
Creating decoders for process `\fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:60$26'.
Creating decoders for process `\fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:65$24'.
     1/3: $0\buff2[7:0]
     2/3: $0\buff1[7:0]
     3/3: $0\dout[7:0]
Creating decoders for process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:33$23'.
Creating decoders for process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:32$22'.
Creating decoders for process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:31$21'.
Creating decoders for process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:30$20'.
Creating decoders for process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:29$19'.
Creating decoders for process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:28$18'.
Creating decoders for process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:27$17'.
Creating decoders for process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:26$16'.
Creating decoders for process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:25$15'.
Creating decoders for process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:35$1'.

4.18.8. Executing PROC_DLATCH pass (convert process syncs to latches).

4.18.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\fifo226.\dout' using process `\fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:65$24'.
  created $dff cell `$procdff$35' with positive edge clock.
Creating register for signal `\fifo226.\buff1' using process `\fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:65$24'.
  created $dff cell `$procdff$36' with positive edge clock.
Creating register for signal `\fifo226.\buff2' using process `\fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:65$24'.
  created $dff cell `$procdff$37' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\dout' using process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:35$1'.
  created $dff cell `$procdff$38' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\q1' using process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:35$1'.
  created $dff cell `$procdff$39' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\q2' using process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:35$1'.
  created $dff cell `$procdff$40' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\q3' using process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:35$1'.
  created $dff cell `$procdff$41' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\q4' using process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:35$1'.
  created $dff cell `$procdff$42' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\q5' using process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:35$1'.
  created $dff cell `$procdff$43' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\q6' using process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:35$1'.
  created $dff cell `$procdff$44' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\q7' using process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:35$1'.
  created $dff cell `$procdff$45' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\d_out_tmp' using process `\fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:35$1'.
  created $dff cell `$procdff$46' with positive edge clock.

4.18.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.18.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:63$28'.
Removing empty process `fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:62$27'.
Removing empty process `fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:60$26'.
Found and cleaned up 1 empty switch in `\fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:65$24'.
Removing empty process `fifo226.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:65$24'.
Removing empty process `fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:33$23'.
Removing empty process `fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:32$22'.
Removing empty process `fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:31$21'.
Removing empty process `fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:30$20'.
Removing empty process `fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:29$19'.
Removing empty process `fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:28$18'.
Removing empty process `fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:27$17'.
Removing empty process `fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:26$16'.
Removing empty process `fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:25$15'.
Removing empty process `fltr_compute_f1.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:35$1'.
Cleaned up 1 empty switch.

4.18.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module fifo226.
<suppressed ~1 debug messages>
Optimizing module fltr_compute_f1.
Optimizing module test.

4.19. Executing FLATTEN pass (flatten design).
Deleting now unused module fifo226.
Deleting now unused module fltr_compute_f1.
<suppressed ~3 debug messages>

# -------------------- 
#  Design entry stats  
# -------------------- 

4.20. Printing statistics.

=== test ===

   Number of wires:                 87
   Number of wire bits:           1031
   Number of public wires:          30
   Number of public wire bits:     330
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 37
     $add                            6
     $dff                           15
     $mul                            7
     $mux                            6
     $scopeinfo                      3

4.21. Executing SPLITNETS pass (splitting up multi-bit signals).

4.22. Executing DEMUXMAP pass.

4.23. Executing FLATTEN pass (flatten design).
Deleting now unused module fifo226.
Deleting now unused module fltr_compute_f1.
<suppressed ~3 debug messages>

4.24. Executing DEMUXMAP pass.

4.25. Executing TRIBUF pass.
Warning: Ignored -no_iobuf because -keep_tribuf is used.

4.26. Executing DEMINOUT pass (demote inout ports to input or output).

4.27. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.
<suppressed ~5 debug messages>

4.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 43 unused wires.
<suppressed ~1 debug messages>

4.29. Executing CHECK pass (checking for obvious problems).
Checking module test...
Found and reported 0 problems.

4.30. Printing statistics.

=== test ===

   Number of wires:                 44
   Number of wire bits:            532
   Number of public wires:          30
   Number of public wire bits:     330
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 32
     $add                            6
     $dff                           15
     $mul                            2
     $mux                            6
     $scopeinfo                      3

FF init value for cell $flatten\fifo0.$procdff$35 ($dff): \fifo0.dout = 8'00000000
FF init value for cell $flatten\fifo0.$procdff$36 ($dff): \fifo0.buff1 = 8'00000000
FF init value for cell $flatten\fifo0.$procdff$37 ($dff): \fifo0.buff2 = 8'00000000
FF init value for cell $flatten\fifo1.$procdff$35 ($dff): \fifo1.dout = 8'00000000
FF init value for cell $flatten\fifo1.$procdff$36 ($dff): \fifo1.buff1 = 8'00000000
FF init value for cell $flatten\fifo1.$procdff$37 ($dff): \fifo1.buff2 = 8'00000000
FF init value for cell $flatten\inst_fltr_compute_f1.$procdff$38 ($dff): \inst_fltr_compute_f1.dout = 16'0000000000000000
FF init value for cell $flatten\inst_fltr_compute_f1.$procdff$39 ($dff): \inst_fltr_compute_f1.q1 = 17'00000000000000000
FF init value for cell $flatten\inst_fltr_compute_f1.$procdff$40 ($dff): \inst_fltr_compute_f1.q2 = 17'00000000000000000
FF init value for cell $flatten\inst_fltr_compute_f1.$procdff$41 ($dff): \inst_fltr_compute_f1.q3 = 17'00000000000000000
FF init value for cell $flatten\inst_fltr_compute_f1.$procdff$42 ($dff): \inst_fltr_compute_f1.q4 = 17'00000000000000000
FF init value for cell $flatten\inst_fltr_compute_f1.$procdff$43 ($dff): \inst_fltr_compute_f1.q5 = 17'00000000000000000
FF init value for cell $flatten\inst_fltr_compute_f1.$procdff$44 ($dff): \inst_fltr_compute_f1.q6 = 17'00000000000000000
FF init value for cell $flatten\inst_fltr_compute_f1.$procdff$45 ($dff): \inst_fltr_compute_f1.q7 = 17'00000000000000000
FF init value for cell $flatten\inst_fltr_compute_f1.$procdff$46 ($dff): \inst_fltr_compute_f1.d_out_tmp = 20'00000000000000000000

4.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.32. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

4.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

4.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.36. Executing OPT_SHARE pass.

4.37. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 1 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 2 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 3 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 4 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 5 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 6 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 7 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 8 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 9 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 10 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 11 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 12 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 13 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 14 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 15 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
Setting constant 0-bit at position 16 on $flatten\inst_fltr_compute_f1.$procdff$39 ($dff) from module test.
[#visit=11, #solve=0, #remove=17, time=0.00 sec.]

4.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.
<suppressed ~5 debug messages>

4.40. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

4.41. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.43. Executing OPT_SHARE pass.

4.44. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=10, #solve=0, #remove=0, time=0.00 sec.]

4.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 5 unused wires.
<suppressed ~2 debug messages>

4.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.47. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

4.48. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.50. Executing OPT_SHARE pass.

4.51. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=10, #solve=0, #remove=0, time=0.00 sec.]

4.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.53. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 3

4.54. Executing FSM pass (extract and optimize FSM).

4.54.1. Executing FSM_DETECT pass (finding FSMs in design).

4.54.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.54.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.54.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.54.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.54.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.54.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.54.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.55. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 20) from FF cell test.$flatten\inst_fltr_compute_f1.$procdff$46 ($dff).
Removed top 4 bits (of 17) from port Y of cell test.$flatten\inst_fltr_compute_f1.$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:44$8 ($mul).
Removed top 2 bits (of 17) from port Y of cell test.$flatten\inst_fltr_compute_f1.$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:43$7 ($mul).
Removed top 1 bits (of 20) from port Y of cell test.$flatten\inst_fltr_compute_f1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:46$14 ($add).
Removed top 4 bits (of 17) from FF cell test.$flatten\inst_fltr_compute_f1.$procdff$45 ($dff).
Removed top 2 bits (of 17) from FF cell test.$flatten\inst_fltr_compute_f1.$procdff$44 ($dff).
Removed top 5 bits (of 20) from port A of cell test.$flatten\inst_fltr_compute_f1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:46$14 ($add).
Removed top 7 bits (of 20) from port B of cell test.$flatten\inst_fltr_compute_f1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:46$14 ($add).
Removed top 3 bits (of 19) from port Y of cell test.$flatten\inst_fltr_compute_f1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:46$14 ($add).
Removed top 3 bits (of 19) from FF cell test.$flatten\inst_fltr_compute_f1.$procdff$46 ($dff).
Removed top 3 bits (of 16) from FF cell test.$flatten\inst_fltr_compute_f1.$procdff$38 ($dff).
Removed top 4 bits (of 20) from wire test.$flatten\inst_fltr_compute_f1.$0\d_out_tmp[19:0].
Removed top 2 bits (of 17) from wire test.$flatten\inst_fltr_compute_f1.$0\q6[16:0].
Removed top 4 bits (of 17) from wire test.$flatten\inst_fltr_compute_f1.$0\q7[16:0].

4.56. Executing PEEPOPT pass (run peephole optimizers).

4.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

4.58. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.59. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.60. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

4.61. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.63. Executing OPT_SHARE pass.

4.64. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\fifo1.$procdff$37 ($dff) from module test (D = \fifo1.buff1, Q = \fifo1.buff2).
Adding EN signal on $flatten\fifo1.$procdff$36 ($dff) from module test (D = \fifo0.dout, Q = \fifo1.buff1).
Adding EN signal on $flatten\fifo1.$procdff$35 ($dff) from module test (D = \fifo1.buff2, Q = \fifo1.dout).
Adding EN signal on $flatten\fifo0.$procdff$37 ($dff) from module test (D = \fifo0.buff1, Q = \fifo0.buff2).
Adding EN signal on $flatten\fifo0.$procdff$36 ($dff) from module test (D = \vidin_in, Q = \fifo0.buff1).
Adding EN signal on $flatten\fifo0.$procdff$35 ($dff) from module test (D = \fifo0.buff2, Q = \fifo0.dout).
[#visit=10, #solve=0, #remove=0, time=0.00 sec.]

4.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

4.66. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.67. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.68. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.70. Executing OPT_SHARE pass.

4.71. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=10, #solve=0, #remove=0, time=0.00 sec.]

4.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.73. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 2

4.74. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.76. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.77. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.78. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.79. Executing OPT_SHARE pass.

4.80. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=10, #solve=0, #remove=0, time=0.00 sec.]

4.81. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.82. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.83. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.84. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.85. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.86. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.88. Executing OPT_SHARE pass.

4.89. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=10, #solve=0, #remove=0, time=0.00 sec.]

4.90. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=10, #solve=97, #remove=0, time=0.02 sec.]

4.91. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.92. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.93. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 20) from wire test.$auto_53.
Removed top 2 bits (of 17) from wire test.$auto_54.
Removed top 4 bits (of 17) from wire test.$auto_55.

4.94. Executing PEEPOPT pass (run peephole optimizers).

4.95. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

4.96. Executing DEMUXMAP pass.

4.97. Executing SPLITNETS pass (splitting up multi-bit signals).

4.98. Printing statistics.

=== test ===

   Number of wires:                 33
   Number of wire bits:            374
   Number of public wires:          30
   Number of public wire bits:     330
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 16
     $add                            1
     $dff                            4
     $dffe                           6
     $mul                            2
     $scopeinfo                      3

4.99. Executing RS_DSP_MULTADD pass.

4.100. Executing WREDUCE pass (reducing word size of cells).

4.101. Executing RS_DSP_MACC pass.

4.102. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.103. Executing TECHMAP pass (map to technology primitives).

4.103.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.103.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~182 debug messages>

4.104. Printing statistics.

=== test ===

   Number of wires:                 45
   Number of wire bits:           2516
   Number of public wires:          30
   Number of public wire bits:     330
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 14
     $__RS_MUL10X9                   2
     $add                            1
     $dff                            2
     $dffe                           6
     $scopeinfo                      3

4.105. Executing TECHMAP pass (map to technology primitives).

4.105.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.105.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.106. Printing statistics.

=== test ===

   Number of wires:                 45
   Number of wire bits:           2516
   Number of public wires:          30
   Number of public wire bits:     330
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 14
     $__RS_MUL10X9                   2
     $add                            1
     $dff                            2
     $dffe                           6
     $scopeinfo                      3

4.107. Executing TECHMAP pass (map to technology primitives).

4.107.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.107.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.108. Executing TECHMAP pass (map to technology primitives).

4.108.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.108.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.109. Executing TECHMAP pass (map to technology primitives).

4.109.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

4.109.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~60 debug messages>

4.110. Executing RS_DSP_SIMD pass.
 SIMD: $flatten\inst_fltr_compute_f1.$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:43$7 (dsp_t1_10x9x32_cfg_params) + $flatten\inst_fltr_compute_f1.$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:44$8 (dsp_t1_10x9x32_cfg_params) => simd_$flatten\inst_fltr_compute_f1.$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:43$7_$flatten\inst_fltr_compute_f1.$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:44$8 (RS_DSP3)

4.111. Executing TECHMAP pass (map to technology primitives).

4.111.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

4.111.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.112. Executing TECHMAP pass (map to technology primitives).

4.112.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.112.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~33 debug messages>

4.113. Executing rs_pack_dsp_regs pass.
<suppressed ~4 debug messages>

4.114. Executing RS_DSP_IO_REGS pass.

4.115. Executing TECHMAP pass (map to technology primitives).

4.115.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Successfully finished Verilog frontend.

4.115.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~14 debug messages>

4.116. Executing TECHMAP pass (map to technology primitives).

4.116.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.116.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~27 debug messages>

4.117. Printing statistics.

=== test ===

   Number of wires:                 81
   Number of wire bits:           2871
   Number of public wires:          30
   Number of public wire bits:     330
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 13
     $add                            1
     $dff                            2
     $dffe                           6
     $scopeinfo                      3
     DSP19X2                         1

4.118. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module test:
  creating $macc model for $flatten\inst_fltr_compute_f1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:46$14 ($add).
  creating $alu model for $macc $flatten\inst_fltr_compute_f1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:46$14.
  creating $alu cell for $flatten\inst_fltr_compute_f1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/12SEPT/Validation/RTL_testcases/Benchmarking_QoR_testcases/stereovision2/./rtl/test.v:46$14: $auto_71
  created 1 $alu and 0 $macc cells.

4.119. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.120. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.121. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.122. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.123. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.124. Executing OPT_SHARE pass.

4.125. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=8, #solve=0, #remove=0, time=0.00 sec.]

4.126. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 48 unused wires.
<suppressed ~1 debug messages>

4.127. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.128. Printing statistics.

=== test ===

   Number of wires:                 35
   Number of wire bits:            416
   Number of public wires:          30
   Number of public wire bits:     330
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 13
     $alu                            1
     $dff                            2
     $dffe                           6
     $scopeinfo                      3
     DSP19X2                         1

4.129. Executing MEMORY pass.

4.129.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.129.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.129.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

4.129.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.129.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

4.129.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.129.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.129.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.129.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.129.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.130. Printing statistics.

=== test ===

   Number of wires:                 35
   Number of wire bits:            416
   Number of public wires:          30
   Number of public wire bits:     330
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 13
     $alu                            1
     $dff                            2
     $dffe                           6
     $scopeinfo                      3
     DSP19X2                         1

4.131. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.

4.132. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.133. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.134. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.135. Executing Rs_BRAM_Split pass.

4.136. Executing TECHMAP pass (map to technology primitives).

4.136.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

4.136.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

4.137. Executing TECHMAP pass (map to technology primitives).

4.137.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

4.137.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.138. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

4.139. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.140. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.141. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.142. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.143. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.144. Executing OPT_SHARE pass.

4.145. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=8, #solve=0, #remove=0, time=0.00 sec.]

4.146. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.148. Executing PMUXTREE pass.

4.149. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.

4.150. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

4.151. Executing TECHMAP pass (map to technology primitives).

4.151.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.151.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

4.151.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~324 debug messages>

4.152. Printing statistics.

=== test ===

   Number of wires:                109
   Number of wire bits:           1857
   Number of public wires:          30
   Number of public wire bits:     330
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                227
     $_AND_                         54
     $_DFFE_PP_                     48
     $_DFF_P_                       29
     $_MUX_                         16
     $_NOT_                         16
     $_OR_                          27
     $_XOR_                         33
     $scopeinfo                      3
     DSP19X2                         1

4.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.
<suppressed ~41 debug messages>

4.154. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.155. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.156. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.158. Executing OPT_SHARE pass.

4.159. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=77, #solve=0, #remove=0, time=0.00 sec.]

4.160. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 21 unused cells and 37 unused wires.
<suppressed ~22 debug messages>

4.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.162. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.163. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.165. Executing OPT_SHARE pass.

4.166. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.167. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.168. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 2

4.169. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.
<suppressed ~3 debug messages>

4.170. Executing TECHMAP pass (map to technology primitives).

4.170.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.170.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

4.171. Printing statistics.

=== test ===

   Number of wires:                 72
   Number of wire bits:            468
   Number of public wires:          30
   Number of public wire bits:     330
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                165
     $_AND_                         43
     $_DFFE_PP_                     48
     $_DFF_P_                       26
     $_OR_                          20
     $_XOR_                         24
     $scopeinfo                      3
     DSP19X2                         1

4.172. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.173. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.174. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.175. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.176. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.177. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.178. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.179. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.180. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.181. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.182. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.183. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.184. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.185. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.186. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.187. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.188. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.189. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.190. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.191. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.192. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.193. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.194. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=66, #remove=0, time=0.00 sec.]

4.195. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.196. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.197. Printing statistics.

=== test ===

   Number of wires:                 72
   Number of wire bits:            468
   Number of public wires:          30
   Number of public wire bits:     330
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                165
     $_AND_                         43
     $_DFFE_PP_                     48
     $_DFF_P_                       26
     $_OR_                          20
     $_XOR_                         24
     $scopeinfo                      3
     DSP19X2                         1

   Number of Generic REGs:          74

ABC-DFF iteration : 1

4.198. Executing ABC pass (technology mapping using ABC).

4.198.1. Summary of detected clock domains:
  3 cells in clk={ }, en={ }, arst={ }, srst={ }
  113 cells in clk=\tm3_clk_v0, en={ }, arst={ }, srst={ }
  49 cells in clk=\tm3_clk_v0, en=\vidin_new_data, arst={ }, srst={ }

  #logic partitions = 3

4.198.2. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \tm3_clk_v0
Extracted 113 gates and 141 wires to a netlist network with 28 inputs and 26 outputs (dfl=1).

4.198.2.1. Executing ABC.
[Time = 0.05 sec.]

4.198.3. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \tm3_clk_v0, enabled by \vidin_new_data
Extracted 48 gates and 56 wires to a netlist network with 8 inputs and 48 outputs (dfl=1).

4.198.3.1. Executing ABC.
[Time = 0.07 sec.]

4.198.4. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=1).
Don't call ABC as there is nothing to map.

4.199. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.200. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.201. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.202. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.203. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.204. Executing OPT_SHARE pass.

4.205. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.206. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 285 unused wires.
<suppressed ~1 debug messages>

4.207. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 2

4.208. Executing ABC pass (technology mapping using ABC).

4.208.1. Summary of detected clock domains:
  3 cells in clk={ }, en={ }, arst={ }, srst={ }
  49 cells in clk=\tm3_clk_v0, en=\vidin_new_data, arst={ }, srst={ }
  114 cells in clk=\tm3_clk_v0, en={ }, arst={ }, srst={ }

  #logic partitions = 3

4.208.2. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \tm3_clk_v0
Extracted 114 gates and 142 wires to a netlist network with 28 inputs and 26 outputs (dfl=1).

4.208.2.1. Executing ABC.
[Time = 0.05 sec.]

4.208.3. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \tm3_clk_v0, enabled by \vidin_new_data
Extracted 48 gates and 56 wires to a netlist network with 8 inputs and 48 outputs (dfl=1).

4.208.3.1. Executing ABC.
[Time = 0.04 sec.]

4.208.4. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=1).
Don't call ABC as there is nothing to map.

4.209. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.210. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.211. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.212. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.213. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.214. Executing OPT_SHARE pass.

4.215. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.216. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 333 unused wires.
<suppressed ~1 debug messages>

4.217. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

4.218. Executing ABC pass (technology mapping using ABC).

4.218.1. Summary of detected clock domains:
  3 cells in clk={ }, en={ }, arst={ }, srst={ }
  114 cells in clk=\tm3_clk_v0, en={ }, arst={ }, srst={ }
  49 cells in clk=\tm3_clk_v0, en=\vidin_new_data, arst={ }, srst={ }

  #logic partitions = 3

4.218.2. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \tm3_clk_v0
Extracted 114 gates and 142 wires to a netlist network with 28 inputs and 26 outputs (dfl=2).

4.218.2.1. Executing ABC.
[Time = 0.06 sec.]

4.218.3. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \tm3_clk_v0, enabled by \vidin_new_data
Extracted 48 gates and 56 wires to a netlist network with 8 inputs and 48 outputs (dfl=2).

4.218.3.1. Executing ABC.
[Time = 0.04 sec.]

4.218.4. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=2).
Don't call ABC as there is nothing to map.

4.219. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.220. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.221. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.222. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.223. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.224. Executing OPT_SHARE pass.

4.225. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.226. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 333 unused wires.
<suppressed ~1 debug messages>

4.227. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

4.228. Executing ABC pass (technology mapping using ABC).

4.228.1. Summary of detected clock domains:
  3 cells in clk={ }, en={ }, arst={ }, srst={ }
  49 cells in clk=\tm3_clk_v0, en=\vidin_new_data, arst={ }, srst={ }
  91 cells in clk=\tm3_clk_v0, en={ }, arst={ }, srst={ }

  #logic partitions = 3

4.228.2. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \tm3_clk_v0
Extracted 91 gates and 119 wires to a netlist network with 28 inputs and 26 outputs (dfl=2).

4.228.2.1. Executing ABC.
[Time = 0.06 sec.]

4.228.3. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \tm3_clk_v0, enabled by \vidin_new_data
Extracted 48 gates and 56 wires to a netlist network with 8 inputs and 48 outputs (dfl=2).

4.228.3.1. Executing ABC.
[Time = 0.05 sec.]

4.228.4. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=2).
Don't call ABC as there is nothing to map.

4.229. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.230. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.231. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.232. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.233. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.234. Executing OPT_SHARE pass.

4.235. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.236. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 310 unused wires.
<suppressed ~1 debug messages>

4.237. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1
select with DFL2 synthesis (thresh-logic=0.920000, thresh_dff=0.980000)

4.238. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
   Number of Generic REGs:          74

ABC-DFF iteration : 1

4.239. Executing ABC pass (technology mapping using ABC).

4.239.1. Summary of detected clock domains:
  3 cells in clk={ }, en={ }, arst={ }, srst={ }
  113 cells in clk=\tm3_clk_v0, en={ }, arst={ }, srst={ }
  49 cells in clk=\tm3_clk_v0, en=\vidin_new_data, arst={ }, srst={ }

  #logic partitions = 3

4.239.2. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \tm3_clk_v0
Extracted 113 gates and 141 wires to a netlist network with 28 inputs and 26 outputs (dfl=1).

4.239.2.1. Executing ABC.
[Time = 0.05 sec.]

4.239.3. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \tm3_clk_v0, enabled by \vidin_new_data
Extracted 48 gates and 56 wires to a netlist network with 8 inputs and 48 outputs (dfl=1).

4.239.3.1. Executing ABC.
[Time = 0.05 sec.]

4.239.4. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=1).
Don't call ABC as there is nothing to map.

4.240. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.241. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.242. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 285 unused wires.
<suppressed ~1 debug messages>

4.243. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.244. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.245. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.246. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.247. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.248. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.249. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 2

4.250. Executing ABC pass (technology mapping using ABC).

4.250.1. Summary of detected clock domains:
  3 cells in clk={ }, en={ }, arst={ }, srst={ }
  211 cells in clk=\tm3_clk_v0, en={ }, arst={ }, srst={ }

  #logic partitions = 2

4.250.2. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \tm3_clk_v0
Extracted 210 gates and 247 wires to a netlist network with 37 inputs and 74 outputs (dfl=1).

4.250.2.1. Executing ABC.
[Time = 0.07 sec.]

4.250.3. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=1).
Don't call ABC as there is nothing to map.

4.251. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.252. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.253. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 334 unused wires.
<suppressed ~1 debug messages>

4.254. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.255. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.256. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.257. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$2117$auto_2165 ($_DFF_P_) from module test (D = \vidin_in [0], Q = \fifo0.buff1 [0]).
Adding EN signal on $abc$2117$auto_2164 ($_DFF_P_) from module test (D = \vidin_in [1], Q = \fifo0.buff1 [1]).
Adding EN signal on $abc$2117$auto_2163 ($_DFF_P_) from module test (D = \vidin_in [2], Q = \fifo0.buff1 [2]).
Adding EN signal on $abc$2117$auto_2162 ($_DFF_P_) from module test (D = \vidin_in [3], Q = \fifo0.buff1 [3]).
Adding EN signal on $abc$2117$auto_2161 ($_DFF_P_) from module test (D = \vidin_in [4], Q = \fifo0.buff1 [4]).
Adding EN signal on $abc$2117$auto_2160 ($_DFF_P_) from module test (D = \vidin_in [5], Q = \fifo0.buff1 [5]).
Adding EN signal on $abc$2117$auto_2159 ($_DFF_P_) from module test (D = \vidin_in [6], Q = \fifo0.buff1 [6]).
Adding EN signal on $abc$2117$auto_2158 ($_DFF_P_) from module test (D = \vidin_in [7], Q = \fifo0.buff1 [7]).
Adding EN signal on $abc$2117$auto_2157 ($_DFF_P_) from module test (D = \fifo0.buff1 [0], Q = \fifo0.buff2 [0]).
Adding EN signal on $abc$2117$auto_2156 ($_DFF_P_) from module test (D = \fifo0.buff1 [1], Q = \fifo0.buff2 [1]).
Adding EN signal on $abc$2117$auto_2155 ($_DFF_P_) from module test (D = \fifo0.buff1 [2], Q = \fifo0.buff2 [2]).
Adding EN signal on $abc$2117$auto_2154 ($_DFF_P_) from module test (D = \fifo0.buff1 [3], Q = \fifo0.buff2 [3]).
Adding EN signal on $abc$2117$auto_2153 ($_DFF_P_) from module test (D = \fifo0.buff1 [4], Q = \fifo0.buff2 [4]).
Adding EN signal on $abc$2117$auto_2152 ($_DFF_P_) from module test (D = \fifo0.buff1 [5], Q = \fifo0.buff2 [5]).
Adding EN signal on $abc$2117$auto_2151 ($_DFF_P_) from module test (D = \fifo0.buff1 [6], Q = \fifo0.buff2 [6]).
Adding EN signal on $abc$2117$auto_2150 ($_DFF_P_) from module test (D = \fifo0.buff1 [7], Q = \fifo0.buff2 [7]).
Adding EN signal on $abc$2117$auto_2149 ($_DFF_P_) from module test (D = \fifo0.buff2 [0], Q = \fifo0.dout [0]).
Adding EN signal on $abc$2117$auto_2148 ($_DFF_P_) from module test (D = \fifo0.buff2 [1], Q = \fifo0.dout [1]).
Adding EN signal on $abc$2117$auto_2147 ($_DFF_P_) from module test (D = \fifo0.buff2 [2], Q = \fifo0.dout [2]).
Adding EN signal on $abc$2117$auto_2146 ($_DFF_P_) from module test (D = \fifo0.buff2 [3], Q = \fifo0.dout [3]).
Adding EN signal on $abc$2117$auto_2145 ($_DFF_P_) from module test (D = \fifo0.buff2 [4], Q = \fifo0.dout [4]).
Adding EN signal on $abc$2117$auto_2144 ($_DFF_P_) from module test (D = \fifo0.buff2 [5], Q = \fifo0.dout [5]).
Adding EN signal on $abc$2117$auto_2143 ($_DFF_P_) from module test (D = \fifo0.buff2 [6], Q = \fifo0.dout [6]).
Adding EN signal on $abc$2117$auto_2142 ($_DFF_P_) from module test (D = \fifo0.buff2 [7], Q = \fifo0.dout [7]).
Adding EN signal on $abc$2117$auto_2141 ($_DFF_P_) from module test (D = \fifo0.dout [0], Q = \fifo1.buff1 [0]).
Adding EN signal on $abc$2117$auto_2140 ($_DFF_P_) from module test (D = \fifo0.dout [1], Q = \fifo1.buff1 [1]).
Adding EN signal on $abc$2117$auto_2139 ($_DFF_P_) from module test (D = \fifo0.dout [2], Q = \fifo1.buff1 [2]).
Adding EN signal on $abc$2117$auto_2138 ($_DFF_P_) from module test (D = \fifo0.dout [3], Q = \fifo1.buff1 [3]).
Adding EN signal on $abc$2117$auto_2137 ($_DFF_P_) from module test (D = \fifo0.dout [4], Q = \fifo1.buff1 [4]).
Adding EN signal on $abc$2117$auto_2136 ($_DFF_P_) from module test (D = \fifo0.dout [5], Q = \fifo1.buff1 [5]).
Adding EN signal on $abc$2117$auto_2135 ($_DFF_P_) from module test (D = \fifo0.dout [6], Q = \fifo1.buff1 [6]).
Adding EN signal on $abc$2117$auto_2134 ($_DFF_P_) from module test (D = \fifo0.dout [7], Q = \fifo1.buff1 [7]).
Adding EN signal on $abc$2117$auto_2133 ($_DFF_P_) from module test (D = \fifo1.buff1 [0], Q = \fifo1.buff2 [0]).
Adding EN signal on $abc$2117$auto_2132 ($_DFF_P_) from module test (D = \fifo1.buff1 [1], Q = \fifo1.buff2 [1]).
Adding EN signal on $abc$2117$auto_2131 ($_DFF_P_) from module test (D = \fifo1.buff1 [2], Q = \fifo1.buff2 [2]).
Adding EN signal on $abc$2117$auto_2130 ($_DFF_P_) from module test (D = \fifo1.buff1 [3], Q = \fifo1.buff2 [3]).
Adding EN signal on $abc$2117$auto_2129 ($_DFF_P_) from module test (D = \fifo1.buff1 [4], Q = \fifo1.buff2 [4]).
Adding EN signal on $abc$2117$auto_2128 ($_DFF_P_) from module test (D = \fifo1.buff1 [5], Q = \fifo1.buff2 [5]).
Adding EN signal on $abc$2117$auto_2127 ($_DFF_P_) from module test (D = \fifo1.buff1 [6], Q = \fifo1.buff2 [6]).
Adding EN signal on $abc$2117$auto_2126 ($_DFF_P_) from module test (D = \fifo1.buff1 [7], Q = \fifo1.buff2 [7]).
Adding EN signal on $abc$2117$auto_2125 ($_DFF_P_) from module test (D = \fifo1.buff2 [0], Q = \fifo1.dout [0]).
Adding EN signal on $abc$2117$auto_2124 ($_DFF_P_) from module test (D = \fifo1.buff2 [1], Q = \fifo1.dout [1]).
Adding EN signal on $abc$2117$auto_2123 ($_DFF_P_) from module test (D = \fifo1.buff2 [2], Q = \fifo1.dout [2]).
Adding EN signal on $abc$2117$auto_2122 ($_DFF_P_) from module test (D = \fifo1.buff2 [3], Q = \fifo1.dout [3]).
Adding EN signal on $abc$2117$auto_2121 ($_DFF_P_) from module test (D = \fifo1.buff2 [4], Q = \fifo1.dout [4]).
Adding EN signal on $abc$2117$auto_2120 ($_DFF_P_) from module test (D = \fifo1.buff2 [5], Q = \fifo1.dout [5]).
Adding EN signal on $abc$2117$auto_2119 ($_DFF_P_) from module test (D = \fifo1.buff2 [6], Q = \fifo1.dout [6]).
Adding EN signal on $abc$2117$auto_2118 ($_DFF_P_) from module test (D = \fifo1.buff2 [7], Q = \fifo1.dout [7]).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.258. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.259. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 48 unused cells and 48 unused wires.
<suppressed ~49 debug messages>

4.260. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 3

4.261. Executing ABC pass (technology mapping using ABC).

4.261.1. Summary of detected clock domains:
  3 cells in clk={ }, en={ }, arst={ }, srst={ }
  211 cells in clk=\tm3_clk_v0, en={ }, arst={ }, srst={ }

  #logic partitions = 2

4.261.2. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \tm3_clk_v0
Extracted 210 gates and 247 wires to a netlist network with 37 inputs and 74 outputs (dfl=2).

4.261.2.1. Executing ABC.
[Time = 0.11 sec.]

4.261.3. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=2).
Don't call ABC as there is nothing to map.

4.262. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.263. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.264. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 334 unused wires.
<suppressed ~1 debug messages>

4.265. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.266. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.267. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.268. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$2560$auto_2608 ($_DFF_P_) from module test (D = \vidin_in [0], Q = \fifo0.buff1 [0]).
Adding EN signal on $abc$2560$auto_2607 ($_DFF_P_) from module test (D = \vidin_in [1], Q = \fifo0.buff1 [1]).
Adding EN signal on $abc$2560$auto_2606 ($_DFF_P_) from module test (D = \vidin_in [2], Q = \fifo0.buff1 [2]).
Adding EN signal on $abc$2560$auto_2605 ($_DFF_P_) from module test (D = \vidin_in [3], Q = \fifo0.buff1 [3]).
Adding EN signal on $abc$2560$auto_2604 ($_DFF_P_) from module test (D = \vidin_in [4], Q = \fifo0.buff1 [4]).
Adding EN signal on $abc$2560$auto_2603 ($_DFF_P_) from module test (D = \vidin_in [5], Q = \fifo0.buff1 [5]).
Adding EN signal on $abc$2560$auto_2602 ($_DFF_P_) from module test (D = \vidin_in [6], Q = \fifo0.buff1 [6]).
Adding EN signal on $abc$2560$auto_2601 ($_DFF_P_) from module test (D = \vidin_in [7], Q = \fifo0.buff1 [7]).
Adding EN signal on $abc$2560$auto_2600 ($_DFF_P_) from module test (D = \fifo0.buff1 [0], Q = \fifo0.buff2 [0]).
Adding EN signal on $abc$2560$auto_2599 ($_DFF_P_) from module test (D = \fifo0.buff1 [1], Q = \fifo0.buff2 [1]).
Adding EN signal on $abc$2560$auto_2598 ($_DFF_P_) from module test (D = \fifo0.buff1 [2], Q = \fifo0.buff2 [2]).
Adding EN signal on $abc$2560$auto_2597 ($_DFF_P_) from module test (D = \fifo0.buff1 [3], Q = \fifo0.buff2 [3]).
Adding EN signal on $abc$2560$auto_2596 ($_DFF_P_) from module test (D = \fifo0.buff1 [4], Q = \fifo0.buff2 [4]).
Adding EN signal on $abc$2560$auto_2595 ($_DFF_P_) from module test (D = \fifo0.buff1 [5], Q = \fifo0.buff2 [5]).
Adding EN signal on $abc$2560$auto_2594 ($_DFF_P_) from module test (D = \fifo0.buff1 [6], Q = \fifo0.buff2 [6]).
Adding EN signal on $abc$2560$auto_2593 ($_DFF_P_) from module test (D = \fifo0.buff1 [7], Q = \fifo0.buff2 [7]).
Adding EN signal on $abc$2560$auto_2592 ($_DFF_P_) from module test (D = \fifo0.buff2 [0], Q = \fifo0.dout [0]).
Adding EN signal on $abc$2560$auto_2591 ($_DFF_P_) from module test (D = \fifo0.buff2 [1], Q = \fifo0.dout [1]).
Adding EN signal on $abc$2560$auto_2590 ($_DFF_P_) from module test (D = \fifo0.buff2 [2], Q = \fifo0.dout [2]).
Adding EN signal on $abc$2560$auto_2589 ($_DFF_P_) from module test (D = \fifo0.buff2 [3], Q = \fifo0.dout [3]).
Adding EN signal on $abc$2560$auto_2588 ($_DFF_P_) from module test (D = \fifo0.buff2 [4], Q = \fifo0.dout [4]).
Adding EN signal on $abc$2560$auto_2587 ($_DFF_P_) from module test (D = \fifo0.buff2 [5], Q = \fifo0.dout [5]).
Adding EN signal on $abc$2560$auto_2586 ($_DFF_P_) from module test (D = \fifo0.buff2 [6], Q = \fifo0.dout [6]).
Adding EN signal on $abc$2560$auto_2585 ($_DFF_P_) from module test (D = \fifo0.buff2 [7], Q = \fifo0.dout [7]).
Adding EN signal on $abc$2560$auto_2584 ($_DFF_P_) from module test (D = \fifo0.dout [0], Q = \fifo1.buff1 [0]).
Adding EN signal on $abc$2560$auto_2583 ($_DFF_P_) from module test (D = \fifo0.dout [1], Q = \fifo1.buff1 [1]).
Adding EN signal on $abc$2560$auto_2582 ($_DFF_P_) from module test (D = \fifo0.dout [2], Q = \fifo1.buff1 [2]).
Adding EN signal on $abc$2560$auto_2581 ($_DFF_P_) from module test (D = \fifo0.dout [3], Q = \fifo1.buff1 [3]).
Adding EN signal on $abc$2560$auto_2580 ($_DFF_P_) from module test (D = \fifo0.dout [4], Q = \fifo1.buff1 [4]).
Adding EN signal on $abc$2560$auto_2579 ($_DFF_P_) from module test (D = \fifo0.dout [5], Q = \fifo1.buff1 [5]).
Adding EN signal on $abc$2560$auto_2578 ($_DFF_P_) from module test (D = \fifo0.dout [6], Q = \fifo1.buff1 [6]).
Adding EN signal on $abc$2560$auto_2577 ($_DFF_P_) from module test (D = \fifo0.dout [7], Q = \fifo1.buff1 [7]).
Adding EN signal on $abc$2560$auto_2576 ($_DFF_P_) from module test (D = \fifo1.buff1 [0], Q = \fifo1.buff2 [0]).
Adding EN signal on $abc$2560$auto_2575 ($_DFF_P_) from module test (D = \fifo1.buff1 [1], Q = \fifo1.buff2 [1]).
Adding EN signal on $abc$2560$auto_2574 ($_DFF_P_) from module test (D = \fifo1.buff1 [2], Q = \fifo1.buff2 [2]).
Adding EN signal on $abc$2560$auto_2573 ($_DFF_P_) from module test (D = \fifo1.buff1 [3], Q = \fifo1.buff2 [3]).
Adding EN signal on $abc$2560$auto_2572 ($_DFF_P_) from module test (D = \fifo1.buff1 [4], Q = \fifo1.buff2 [4]).
Adding EN signal on $abc$2560$auto_2571 ($_DFF_P_) from module test (D = \fifo1.buff1 [5], Q = \fifo1.buff2 [5]).
Adding EN signal on $abc$2560$auto_2570 ($_DFF_P_) from module test (D = \fifo1.buff1 [6], Q = \fifo1.buff2 [6]).
Adding EN signal on $abc$2560$auto_2569 ($_DFF_P_) from module test (D = \fifo1.buff1 [7], Q = \fifo1.buff2 [7]).
Adding EN signal on $abc$2560$auto_2568 ($_DFF_P_) from module test (D = \fifo1.buff2 [0], Q = \fifo1.dout [0]).
Adding EN signal on $abc$2560$auto_2567 ($_DFF_P_) from module test (D = \fifo1.buff2 [1], Q = \fifo1.dout [1]).
Adding EN signal on $abc$2560$auto_2566 ($_DFF_P_) from module test (D = \fifo1.buff2 [2], Q = \fifo1.dout [2]).
Adding EN signal on $abc$2560$auto_2565 ($_DFF_P_) from module test (D = \fifo1.buff2 [3], Q = \fifo1.dout [3]).
Adding EN signal on $abc$2560$auto_2564 ($_DFF_P_) from module test (D = \fifo1.buff2 [4], Q = \fifo1.dout [4]).
Adding EN signal on $abc$2560$auto_2563 ($_DFF_P_) from module test (D = \fifo1.buff2 [5], Q = \fifo1.dout [5]).
Adding EN signal on $abc$2560$auto_2562 ($_DFF_P_) from module test (D = \fifo1.buff2 [6], Q = \fifo1.dout [6]).
Adding EN signal on $abc$2560$auto_2561 ($_DFF_P_) from module test (D = \fifo1.buff2 [7], Q = \fifo1.dout [7]).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.269. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.270. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 48 unused cells and 48 unused wires.
<suppressed ~49 debug messages>

4.271. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 4

4.272. Executing ABC pass (technology mapping using ABC).

4.272.1. Summary of detected clock domains:
  3 cells in clk={ }, en={ }, arst={ }, srst={ }
  188 cells in clk=\tm3_clk_v0, en={ }, arst={ }, srst={ }

  #logic partitions = 2

4.272.2. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \tm3_clk_v0
Extracted 187 gates and 224 wires to a netlist network with 37 inputs and 74 outputs (dfl=2).

4.272.2.1. Executing ABC.
[Time = 0.09 sec.]

4.272.3. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=2).
Don't call ABC as there is nothing to map.

4.273. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.274. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.275. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 311 unused wires.
<suppressed ~1 debug messages>

4.276. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.277. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.278. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.279. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$2980$auto_3028 ($_DFF_P_) from module test (D = \vidin_in [0], Q = \fifo0.buff1 [0]).
Adding EN signal on $abc$2980$auto_3027 ($_DFF_P_) from module test (D = \vidin_in [1], Q = \fifo0.buff1 [1]).
Adding EN signal on $abc$2980$auto_3026 ($_DFF_P_) from module test (D = \vidin_in [2], Q = \fifo0.buff1 [2]).
Adding EN signal on $abc$2980$auto_3025 ($_DFF_P_) from module test (D = \vidin_in [3], Q = \fifo0.buff1 [3]).
Adding EN signal on $abc$2980$auto_3024 ($_DFF_P_) from module test (D = \vidin_in [4], Q = \fifo0.buff1 [4]).
Adding EN signal on $abc$2980$auto_3023 ($_DFF_P_) from module test (D = \vidin_in [5], Q = \fifo0.buff1 [5]).
Adding EN signal on $abc$2980$auto_3022 ($_DFF_P_) from module test (D = \vidin_in [6], Q = \fifo0.buff1 [6]).
Adding EN signal on $abc$2980$auto_3021 ($_DFF_P_) from module test (D = \vidin_in [7], Q = \fifo0.buff1 [7]).
Adding EN signal on $abc$2980$auto_3020 ($_DFF_P_) from module test (D = \fifo0.buff1 [0], Q = \fifo0.buff2 [0]).
Adding EN signal on $abc$2980$auto_3019 ($_DFF_P_) from module test (D = \fifo0.buff1 [1], Q = \fifo0.buff2 [1]).
Adding EN signal on $abc$2980$auto_3018 ($_DFF_P_) from module test (D = \fifo0.buff1 [2], Q = \fifo0.buff2 [2]).
Adding EN signal on $abc$2980$auto_3017 ($_DFF_P_) from module test (D = \fifo0.buff1 [3], Q = \fifo0.buff2 [3]).
Adding EN signal on $abc$2980$auto_3016 ($_DFF_P_) from module test (D = \fifo0.buff1 [4], Q = \fifo0.buff2 [4]).
Adding EN signal on $abc$2980$auto_3015 ($_DFF_P_) from module test (D = \fifo0.buff1 [5], Q = \fifo0.buff2 [5]).
Adding EN signal on $abc$2980$auto_3014 ($_DFF_P_) from module test (D = \fifo0.buff1 [6], Q = \fifo0.buff2 [6]).
Adding EN signal on $abc$2980$auto_3013 ($_DFF_P_) from module test (D = \fifo0.buff1 [7], Q = \fifo0.buff2 [7]).
Adding EN signal on $abc$2980$auto_3012 ($_DFF_P_) from module test (D = \fifo0.buff2 [0], Q = \fifo0.dout [0]).
Adding EN signal on $abc$2980$auto_3011 ($_DFF_P_) from module test (D = \fifo0.buff2 [1], Q = \fifo0.dout [1]).
Adding EN signal on $abc$2980$auto_3010 ($_DFF_P_) from module test (D = \fifo0.buff2 [2], Q = \fifo0.dout [2]).
Adding EN signal on $abc$2980$auto_3009 ($_DFF_P_) from module test (D = \fifo0.buff2 [3], Q = \fifo0.dout [3]).
Adding EN signal on $abc$2980$auto_3008 ($_DFF_P_) from module test (D = \fifo0.buff2 [4], Q = \fifo0.dout [4]).
Adding EN signal on $abc$2980$auto_3007 ($_DFF_P_) from module test (D = \fifo0.buff2 [5], Q = \fifo0.dout [5]).
Adding EN signal on $abc$2980$auto_3006 ($_DFF_P_) from module test (D = \fifo0.buff2 [6], Q = \fifo0.dout [6]).
Adding EN signal on $abc$2980$auto_3005 ($_DFF_P_) from module test (D = \fifo0.buff2 [7], Q = \fifo0.dout [7]).
Adding EN signal on $abc$2980$auto_3004 ($_DFF_P_) from module test (D = \fifo0.dout [0], Q = \fifo1.buff1 [0]).
Adding EN signal on $abc$2980$auto_3003 ($_DFF_P_) from module test (D = \fifo0.dout [1], Q = \fifo1.buff1 [1]).
Adding EN signal on $abc$2980$auto_3002 ($_DFF_P_) from module test (D = \fifo0.dout [2], Q = \fifo1.buff1 [2]).
Adding EN signal on $abc$2980$auto_3001 ($_DFF_P_) from module test (D = \fifo0.dout [3], Q = \fifo1.buff1 [3]).
Adding EN signal on $abc$2980$auto_3000 ($_DFF_P_) from module test (D = \fifo0.dout [4], Q = \fifo1.buff1 [4]).
Adding EN signal on $abc$2980$auto_2999 ($_DFF_P_) from module test (D = \fifo0.dout [5], Q = \fifo1.buff1 [5]).
Adding EN signal on $abc$2980$auto_2998 ($_DFF_P_) from module test (D = \fifo0.dout [6], Q = \fifo1.buff1 [6]).
Adding EN signal on $abc$2980$auto_2997 ($_DFF_P_) from module test (D = \fifo0.dout [7], Q = \fifo1.buff1 [7]).
Adding EN signal on $abc$2980$auto_2996 ($_DFF_P_) from module test (D = \fifo1.buff1 [0], Q = \fifo1.buff2 [0]).
Adding EN signal on $abc$2980$auto_2995 ($_DFF_P_) from module test (D = \fifo1.buff1 [1], Q = \fifo1.buff2 [1]).
Adding EN signal on $abc$2980$auto_2994 ($_DFF_P_) from module test (D = \fifo1.buff1 [2], Q = \fifo1.buff2 [2]).
Adding EN signal on $abc$2980$auto_2993 ($_DFF_P_) from module test (D = \fifo1.buff1 [3], Q = \fifo1.buff2 [3]).
Adding EN signal on $abc$2980$auto_2992 ($_DFF_P_) from module test (D = \fifo1.buff1 [4], Q = \fifo1.buff2 [4]).
Adding EN signal on $abc$2980$auto_2991 ($_DFF_P_) from module test (D = \fifo1.buff1 [5], Q = \fifo1.buff2 [5]).
Adding EN signal on $abc$2980$auto_2990 ($_DFF_P_) from module test (D = \fifo1.buff1 [6], Q = \fifo1.buff2 [6]).
Adding EN signal on $abc$2980$auto_2989 ($_DFF_P_) from module test (D = \fifo1.buff1 [7], Q = \fifo1.buff2 [7]).
Adding EN signal on $abc$2980$auto_2988 ($_DFF_P_) from module test (D = \fifo1.buff2 [0], Q = \fifo1.dout [0]).
Adding EN signal on $abc$2980$auto_2987 ($_DFF_P_) from module test (D = \fifo1.buff2 [1], Q = \fifo1.dout [1]).
Adding EN signal on $abc$2980$auto_2986 ($_DFF_P_) from module test (D = \fifo1.buff2 [2], Q = \fifo1.dout [2]).
Adding EN signal on $abc$2980$auto_2985 ($_DFF_P_) from module test (D = \fifo1.buff2 [3], Q = \fifo1.dout [3]).
Adding EN signal on $abc$2980$auto_2984 ($_DFF_P_) from module test (D = \fifo1.buff2 [4], Q = \fifo1.dout [4]).
Adding EN signal on $abc$2980$auto_2983 ($_DFF_P_) from module test (D = \fifo1.buff2 [5], Q = \fifo1.dout [5]).
Adding EN signal on $abc$2980$auto_2982 ($_DFF_P_) from module test (D = \fifo1.buff2 [6], Q = \fifo1.dout [6]).
Adding EN signal on $abc$2980$auto_2981 ($_DFF_P_) from module test (D = \fifo1.buff2 [7], Q = \fifo1.dout [7]).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.280. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.281. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 48 unused cells and 48 unused wires.
<suppressed ~49 debug messages>

4.282. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).
select with DFL2 synthesis (thresh-logic=0.920000, thresh_dff=0.980000)

4.283. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
select CE keep strategy (thresh_logic=0.920000, thresh_dff=0.980000, dfl=2)

4.284. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.285. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.286. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.287. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.288. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.289. Executing OPT_SHARE pass.

4.290. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.291. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.292. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.293. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.294. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.295. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.296. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.297. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.298. Executing OPT_SHARE pass.

4.299. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.300. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.301. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.302. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.303. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.304. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.305. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.306. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.307. Executing OPT_SHARE pass.

4.308. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.309. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=66, #remove=0, time=0.00 sec.]

4.310. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.311. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.312. Executing BMUXMAP pass.

4.313. Executing DEMUXMAP pass.

4.314. Executing SPLITNETS pass (splitting up multi-bit signals).

4.315. Executing ABC pass (technology mapping using ABC).

4.315.1. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Extracted 65 gates and 93 wires to a netlist network with 28 inputs and 13 outputs (dfl=1).

4.315.1.1. Executing ABC.
DE:   Version : 7.7
DE:   #PIs =  28  #Luts =    23  Max Lvl =   6  Avg Lvl =   4.15  [   0.05 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  28  #Luts =    33  Max Lvl =   4  Avg Lvl =   3.15  [   0.10 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   4  Avg Lvl =   3.23  [   0.17 sec. at Pass 2]{map}[6]
DE:   #PIs =  28  #Luts =    23  Max Lvl =   4  Avg Lvl =   3.38  [   0.22 sec. at Pass 3]{postMap}[12]
DE:   #PIs =  28  #Luts =    23  Max Lvl =   4  Avg Lvl =   3.38  [   0.30 sec. at Pass 4]{map}[36]
DE:   #PIs =  28  #Luts =    30  Max Lvl =   3  Avg Lvl =   2.77  [   0.60 sec. at Pass 5]{postMap}[72]
DE:   #PIs =  28  #Luts =    29  Max Lvl =   3  Avg Lvl =   2.85  [   0.67 sec. at Pass 6]{map}[100]
DE:   #PIs =  28  #Luts =    28  Max Lvl =   3  Avg Lvl =   2.85  [   0.81 sec. at Pass 7]{postMap}[100]
DE:   #PIs =  28  #Luts =    28  Max Lvl =   3  Avg Lvl =   2.85  [   0.71 sec. at Pass 8]{map}[100]
DE:   #PIs =  28  #Luts =    28  Max Lvl =   3  Avg Lvl =   2.85  [   0.89 sec. at Pass 9]{postMap}[100]
DE:   #PIs =  28  #Luts =    28  Max Lvl =   3  Avg Lvl =   2.85  [   0.73 sec. at Pass 10]{map}[100]
DE:   #PIs =  28  #Luts =    28  Max Lvl =   3  Avg Lvl =   2.85  [   0.75 sec. at Pass 11]{pushMap}[100]
DE:   #PIs =  28  #Luts =    28  Max Lvl =   3  Avg Lvl =   2.85  [   0.80 sec. at Pass 12]{pushMap}[100]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.74 sec. at Pass 12]{pushMap}[100]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.80 sec. at Pass 13]{postMap}[100]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.71 sec. at Pass 14]{map}[100]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.84 sec. at Pass 15]{postMap}[100]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.72 sec. at Pass 16]{pushMap}[100]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.72 sec. at Pass 17]{pushMap}[100]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.71 sec. at Pass 17]{pushMap}[100]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.64 sec. at Pass 18]{finalMap}[100]
DE:   
DE:   total time =   13.70 sec.
[Time = 15.76 sec.]

4.316. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.317. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.318. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.319. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.320. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.321. Executing OPT_SHARE pass.

4.322. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.323. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 93 unused wires.
<suppressed ~1 debug messages>

4.324. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.325. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

4.326. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.327. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.328. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.329. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.330. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.331. Executing OPT_SHARE pass.

4.332. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.333. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.334. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.335. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.336. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.337. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.338. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.339. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.340. Executing OPT_SHARE pass.

4.341. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=0, #remove=0, time=0.00 sec.]

4.342. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=74, #solve=66, #remove=0, time=0.01 sec.]

4.343. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.344. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.345. Printing statistics.

=== test ===

   Number of wires:                 59
   Number of wire bits:            395
   Number of public wires:          30
   Number of public wire bits:     330
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                105
     $_DFFE_PP_                     48
     $_DFF_P_                       26
     $lut                           27
     $scopeinfo                      3
     DSP19X2                         1

4.346. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.347. Executing RS_DFFSR_CONV pass.

4.348. Printing statistics.

=== test ===

   Number of wires:                 59
   Number of wire bits:            395
   Number of public wires:          30
   Number of public wire bits:     330
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                105
     $_DFFE_PP0P_                   48
     $_DFF_P_                       26
     $lut                           27
     $scopeinfo                      3
     DSP19X2                         1

4.349. Executing TECHMAP pass (map to technology primitives).

4.349.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.349.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

4.349.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~271 debug messages>

4.350. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.
<suppressed ~648 debug messages>

4.351. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.352. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.353. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
<suppressed ~663 debug messages>
Removed a total of 221 cells.

4.354. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.355. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 414 unused wires.
<suppressed ~1 debug messages>

4.356. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.
<suppressed ~18 debug messages>

4.357. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.358. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.359. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.360. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.361. Executing OPT_SHARE pass.

4.362. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.363. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.364. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.365. Executing TECHMAP pass (map to technology primitives).

4.365.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.365.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

4.366. Executing ABC pass (technology mapping using ABC).

4.366.1. Extracting gate netlist of module `\test' to `<abc-temp-dir>/input.blif'..
Extracted 178 gates and 208 wires to a netlist network with 28 inputs and 13 outputs (dfl=1).

4.366.1.1. Executing ABC.
DE:   Version : 7.7
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.07 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.18 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.15 sec. at Pass 2]{map}[6]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.24 sec. at Pass 3]{postMap}[12]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.27 sec. at Pass 4]{map}[36]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.64 sec. at Pass 5]{postMap}[72]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.55 sec. at Pass 6]{pushMap}[72]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.56 sec. at Pass 7]{pushMap}[72]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.55 sec. at Pass 7]{pushMap}[72]
DE:   #PIs =  28  #Luts =    27  Max Lvl =   3  Avg Lvl =   2.85  [   0.51 sec. at Pass 8]{finalMap}[72]
DE:   
DE:   total time =    3.97 sec.
[Time = 6.03 sec.]

4.367. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

4.368. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.369. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.370. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test.
Performed a total of 0 changes.

4.371. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test'.
Removed a total of 0 cells.

4.372. Executing OPT_SHARE pass.

4.373. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.374. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 140 unused wires.
<suppressed ~1 debug messages>

4.375. Executing OPT_EXPR pass (perform const folding).
Optimizing module test.

RUN-OPT ITERATIONS DONE : 1

4.376. Executing HIERARCHY pass (managing design hierarchy).

4.376.1. Analyzing design hierarchy..
Top module:  \test

4.376.2. Analyzing design hierarchy..
Top module:  \test
Removed 0 unused modules.

4.377. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 3 unused cells and 16 unused wires.
<suppressed ~19 debug messages>

4.378. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__IO_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.379. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Replacing existing blackbox module `\BOOT_CLOCK' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:9.1-14.10.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:24.1-31.10.
Generating RTLIL representation for module `\CARRY'.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:41.1-46.10.
Generating RTLIL representation for module `\CLK_BUF'.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:56.1-64.10.
Generating RTLIL representation for module `\DFFNRE'.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:74.1-82.10.
Generating RTLIL representation for module `\DFFRE'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:92.1-126.10.
Generating RTLIL representation for module `\DSP19X2'.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:136.1-162.10.
Generating RTLIL representation for module `\DSP38'.
Replacing existing blackbox module `\FCLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:172.1-176.10.
Generating RTLIL representation for module `\FCLK_BUF'.
Replacing existing blackbox module `\FIFO18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:186.1-233.10.
Generating RTLIL representation for module `\FIFO18KX2'.
Replacing existing blackbox module `\FIFO36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:243.1-268.10.
Generating RTLIL representation for module `\FIFO36K'.
Replacing existing blackbox module `\I_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:278.1-290.10.
Generating RTLIL representation for module `\I_BUF_DS'.
Replacing existing blackbox module `\I_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:300.1-309.10.
Generating RTLIL representation for module `\I_BUF'.
Replacing existing blackbox module `\I_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:319.1-327.10.
Generating RTLIL representation for module `\I_DDR'.
Replacing existing blackbox module `\I_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:337.1-349.10.
Generating RTLIL representation for module `\I_DELAY'.
Replacing existing blackbox module `\I_FAB' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:359.1-363.10.
Generating RTLIL representation for module `\I_FAB'.
Replacing existing blackbox module `\I_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:373.1-392.10.
Generating RTLIL representation for module `\I_SERDES'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:402.1-408.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:418.1-424.10.
Generating RTLIL representation for module `\LATCHNS'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:434.1-439.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:449.1-455.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:465.1-471.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:481.1-486.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:496.1-502.10.
Generating RTLIL representation for module `\LUT1'.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:512.1-518.10.
Generating RTLIL representation for module `\LUT2'.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:528.1-534.10.
Generating RTLIL representation for module `\LUT3'.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:544.1-550.10.
Generating RTLIL representation for module `\LUT4'.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:560.1-566.10.
Generating RTLIL representation for module `\LUT5'.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:576.1-582.10.
Generating RTLIL representation for module `\LUT6'.
Replacing existing blackbox module `\MIPI_RX' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:592.1-618.10.
Generating RTLIL representation for module `\MIPI_RX'.
Replacing existing blackbox module `\MIPI_TX' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:628.1-655.10.
Generating RTLIL representation for module `\MIPI_TX'.
Replacing existing blackbox module `\O_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:665.1-677.10.
Generating RTLIL representation for module `\O_BUF_DS'.
Replacing existing blackbox module `\O_BUFT_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:687.1-699.10.
Generating RTLIL representation for module `\O_BUFT_DS'.
Replacing existing blackbox module `\O_BUFT' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:709.1-720.10.
Generating RTLIL representation for module `\O_BUFT'.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:730.1-741.10.
Generating RTLIL representation for module `\O_BUF'.
Replacing existing blackbox module `\O_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:751.1-759.10.
Generating RTLIL representation for module `\O_DDR'.
Replacing existing blackbox module `\O_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:769.1-781.10.
Generating RTLIL representation for module `\O_DELAY'.
Replacing existing blackbox module `\O_FAB' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:791.1-795.10.
Generating RTLIL representation for module `\O_FAB'.
Replacing existing blackbox module `\O_SERDES_CLK' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:805.1-814.10.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Replacing existing blackbox module `\O_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:824.1-841.10.
Generating RTLIL representation for module `\O_SERDES'.
Replacing existing blackbox module `\PLL' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:851.1-869.10.
Generating RTLIL representation for module `\PLL'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_M' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:879.1-893.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_S' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:903.1-920.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M0' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:930.1-969.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M1' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:979.1-1018.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Replacing existing blackbox module `\SOC_FPGA_INTF_DMA' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1028.1-1034.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Replacing existing blackbox module `\SOC_FPGA_INTF_IRQ' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1044.1-1050.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Replacing existing blackbox module `\SOC_FPGA_INTF_JTAG' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1060.1-1068.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Replacing existing blackbox module `\SOC_FPGA_TEMPERATURE' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1078.1-1086.10.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1096.1-1151.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1161.1-1190.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Successfully finished Verilog frontend.
 ***************************
   Inserting Input Buffers
 ***************************
WARNING: port '\tm3_clk_v0' has no associated I_BUF
WARNING: port '\vidin_in' has no associated I_BUF
WARNING: port '\vidin_new_data' has no associated I_BUF
 ***************************
   Inserting Clock Buffers
 ***************************
INFO: inserting CLK_BUF before '$ibuf_tm3_clk_v0'
 *****************************
   Inserting Output Buffers
 *****************************
WARNING: OUTPUT port '\vidin_out_f1' has no associated O_BUF
 *****************************
   Mapping Tri-state Buffers  
 *****************************

4.380. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..

4.381. Executing TECHMAP pass (map to technology primitives).

4.381.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.381.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~32 debug messages>

4.382. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 78 unused wires.
<suppressed ~1 debug messages>

4.383. Printing statistics.

=== test ===

   Number of wires:                 48
   Number of wire bits:            236
   Number of public wires:          14
   Number of public wire bits:     144
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                129
     $lut                           27
     CLK_BUF                         1
     DFFRE                          74
     DSP19X2                         1
     I_BUF                          10
     O_BUF                          16

4.384. Executing TECHMAP pass (map to technology primitives).

4.384.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_02_2024_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.384.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~355 debug messages>

4.385. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test..
Removed 0 unused cells and 54 unused wires.
<suppressed ~1 debug messages>

4.386. Printing statistics.

=== test ===

   Number of wires:                 48
   Number of wire bits:            236
   Number of public wires:          14
   Number of public wire bits:     144
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                129
     CLK_BUF                         1
     DFFRE                          74
     DSP19X2                         1
     I_BUF                          10
     LUT2                            1
     LUT3                            2
     LUT4                            4
     LUT5                           10
     LUT6                           10
     O_BUF                          16

 *****************************
         Rewire_Obuft         
 *****************************

==========================
Post Design clean up ... 

Split to bits ... 

4.387. Executing SPLITNETS pass (splitting up multi-bit signals).

Split into bits ...     [0.00 sec.]
Building Sig2cells ...  [0.00 sec.]
Building Sig2sig ...    [0.00 sec.]
Backward clean up ...   [0.00 sec.]
Before cleanup :

4.388. Printing statistics.

=== test ===

   Number of wires:                214
   Number of wire bits:            236
   Number of public wires:         122
   Number of public wire bits:     144
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                129
     CLK_BUF                         1
     DFFRE                          74
     DSP19X2                         1
     I_BUF                          10
     LUT2                            1
     LUT3                            2
     LUT4                            4
     LUT5                           10
     LUT6                           10
     O_BUFT                         16

 --------------------------
   Removed assigns : 32
   Removed wires   : 70
   Removed cells   : 0
 --------------------------
After cleanup :

4.389. Printing statistics.

=== test ===

   Number of wires:                154
   Number of wire bits:            176
   Number of public wires:         106
   Number of public wire bits:     128
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                129
     CLK_BUF                         1
     DFFRE                          74
     DSP19X2                         1
     I_BUF                          10
     LUT2                            1
     LUT3                            2
     LUT4                            4
     LUT5                           10
     LUT6                           10
     O_BUFT                         16


Total time for 'obs_clean' ...   
 [0.00 sec.]

4.390. Executing SPLITNETS pass (splitting up multi-bit signals).

4.391. Executing HIERARCHY pass (managing design hierarchy).

4.391.1. Analyzing design hierarchy..
Top module:  \test

4.391.2. Analyzing design hierarchy..
Top module:  \test
Removed 0 unused modules.

Dumping port properties into 'netlist_info.json' file.

Inserting I_FAB/O_FAB cells ...


Inserting I_FAB/O_FAB cells done.

4.392. Printing statistics.

=== test ===

   Number of wires:                167
   Number of wire bits:            189
   Number of public wires:         106
   Number of public wire bits:     128
   Number of ports:                  4
   Number of port bits:             26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                142
     CLK_BUF                         1
     DFFRE                          74
     DSP19X2                         1
     I_BUF                          10
     LUT2                            1
     LUT3                            2
     LUT4                            4
     LUT5                           10
     LUT6                           10
     O_BUFT                         16
     O_FAB                          13

   Number of LUTs:                  27
   Number of REGs:                  74
   Number of CARRY ADDERs:           0

4.393. Executing Verilog backend.
Dumping module `\test'.

# -------------------- 
# Core Synthesis done 
# -------------------- 

4.394. Executing Verilog backend.
Dumping module `\test'.

4.394.1. Executing BLIF backend.
Extracting primitives

-- Running command `write_rtlil design.rtlil' --

4.394.2. Executing RTLIL backend.
Output filename: design.rtlil
Running SplitNets

4.394.3. Executing SPLITNETS pass (splitting up multi-bit signals).
Gathering Wires Data
Adding wires between directly connected input and output primitives
Upgrading fabric wires to ports
Handling I_BUF->Fabric->CLK_BUF
Handling Dangling outs
Deleting primitive cells and extra wires
Deleting non-primitive cells and upgrading wires to ports in interface module
Handling I_BUF->Fabric->CLK_BUF in interface module
Removing extra wires from interface module
Cleaning fabric netlist
Removing cells from wrapper module
Instantiating fabric and interface modules
Removing extra wires from wrapper module
Fixing wrapper ports
Flattening wrapper module

4.394.4. Executing FLATTEN pass (flatten design).
Deleting now unused module interface_test.
<suppressed ~1 debug messages>
Removing extra assigns from wrapper module

4.394.5. Executing Verilog backend.
Dumping module `\test'.

4.394.5.1. Executing BLIF backend.

4.394.5.2. Executing Verilog backend.
Dumping module `\test'.

4.394.5.2.1. Executing BLIF backend.
Dumping config.json
Updating sdc

4.394.5.2.2. Executing Verilog backend.
Dumping module `\fabric_test'.

4.394.5.2.2.1. Executing BLIF backend.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: a5a1e13393, CPU: user 0.96s system 0.10s, MEM: 34.86 MB peak
Yosys 0.44 (git sha1 7a4a3768c, g++ 11.2.1 -fPIC -O3)
Time spent: 99% 10x abc (429 sec), 0% 43x read_verilog (0 sec), ...
